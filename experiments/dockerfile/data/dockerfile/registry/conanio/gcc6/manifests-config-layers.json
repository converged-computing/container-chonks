{
    "manifests": {
        "1.10.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8158,
                "digest": "sha256:7490584801a6a4b2851f652dbca1661a77b5f9374259aab96c7a0833ebab7699"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 317606591,
                    "digest": "sha256:84f966cc313933d6dca19f5b45c4326b05ea9e15b01b048d401d634cbaba09be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1985,
                    "digest": "sha256:82d39b9970135a483f9ac983d6d197177807cf4c5de88425c8f837dad01e69e1"
                }
            ]
        },
        "1.10.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8178,
                "digest": "sha256:82a55d5142fb5564d48e22ee51d964f644287a29afbeaa63bb25712d557e3cb8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 317807729,
                    "digest": "sha256:6fcf83d17d9724de1565801b6a609fad00523031f22a4549eccaa7702f8a1b9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:553ba49536dc83b8afdcef27d80474375822825f63e5202d99843f5e5a39f520"
                }
            ]
        },
        "1.10.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8177,
                "digest": "sha256:f73015f0af2ef8165dc6cf353bb72ecc15824da4bfb686c360d25fcedcc646a8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 317808009,
                    "digest": "sha256:4673191f8fb39ea6189cc12a06c8247274b6b8e055bf7703af9c70603172b114"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:25b1541fbcfd72c4434d9cd813af8b002a0b67d6550512f43441763d9f39a290"
                }
            ]
        },
        "1.11.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8178,
                "digest": "sha256:45cc6eea1b907acb2a8fca1d441ef0f7f8c2403a5d753d493a342073b8a30689"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 317784497,
                    "digest": "sha256:0bbc66838fd2c33603d29ea27fc066accb310bd4cbb8294e9b315ab3e9d6f352"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:6dab7942994702f9e35f57a5c9befe8852626289792582f5fdf5755be5fde68e"
                }
            ]
        },
        "1.11.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8308,
                "digest": "sha256:c751c5bc0d5b317fd7e903cdad73afe83e0d739585482845995ba998ee3c380c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 223402228,
                    "digest": "sha256:aec26a3db815cf21ef9ff62a52c8be00aa9d117ecaa51c772a92c4f1fb40d004"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:f8b0756e79904f7bea50a225b6d73d4f3de5b9db8770fd53072e9400e15c97e2"
                }
            ]
        },
        "1.11.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8309,
                "digest": "sha256:c17b6479bdc67432e93363ad67d3bcbb85917e27438ec32a413b85cc1c848908"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 223405104,
                    "digest": "sha256:6aca333debdfcc4fa33fc8759641c19e6d34fb11be1b18592476a3738cc30d98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:9aa6b8bfa1d40a2d157d0fd4a1705d3f9c488151293fa6c6d0971a0ff25c7197"
                }
            ]
        },
        "1.12.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8306,
                "digest": "sha256:2782ce0ad095a15e162e4ffcd8c0f4baa26cf0e566373ef1c30956fde25dc9e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 223507778,
                    "digest": "sha256:ba4f954e84e7117a70e1aee2bfd011184f0394f56906e15a1b2698b0a97f67e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:2335d0acc54cf46705da0ba0c868a7dd5ddbdd9715aa0ea4185914baaab92f43"
                }
            ]
        },
        "1.12.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8309,
                "digest": "sha256:86b176cf95d90bd724a284ecb9ec63c9d0e7b14476aae632f95171cda8aff3c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226544078,
                    "digest": "sha256:a63f4c0c7b3077fdb0812ef3125b11c76078224c0ca04146e0133255056878f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:65783b3357e8cd136dee144412411a084ce36e3ea536a9a561d1bcefc0e4852b"
                }
            ]
        },
        "1.12.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8308,
                "digest": "sha256:c2b39aa8afa2bf1d151ef6a23eec4f5f29c5f123a034a07c1b15cf2a7612b5ca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226543976,
                    "digest": "sha256:0e941f7f0ea3078ea525b8ba6c3a19becd51d099d69a70fc63d1b3d7c738f858"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:4430d7678139bd2f6f2e839062145a27a05311c09d152e149f340edd88110178"
                }
            ]
        },
        "1.12.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8415,
                "digest": "sha256:78fa64b15cf362a733a59a6274f6e24c4c311e70dfd62502df660d6d41113aec"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 227233383,
                    "digest": "sha256:e342316a741ae230476dda5fab47ac559fccfd5209c0801866eabdaf793675d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:42d89ba5f57a64a475aa1c965a8a08bde3bcc662d71055db7a781a4a667c2f25"
                }
            ]
        },
        "1.13.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8412,
                "digest": "sha256:4ee2ac78ed9f30190f4349a741b8069317c2c9571734f8c05fe54fa523977b6c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 224474803,
                    "digest": "sha256:2c0fa1c897ba279b11d8a9a609a3c77be97bc856bdbf24b419c93c66000506d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:b9c0ab46a1d1af22f7e1fc4e5198727ff2768551351772735c1c8d2f56c17f81"
                }
            ]
        },
        "1.13.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8436,
                "digest": "sha256:02b86532fd11053be60187d85e960054c698e7814c70a9d1d9357a6695acdba1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225389633,
                    "digest": "sha256:6ecf1dacc1ecb401566210a74e7daeff31e620791f8df0ab28d92556c5532da7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:8e200369a8c819c3e9dfe902b10daca7cb8e5b13cd248173565b989b0ccc33ea"
                }
            ]
        },
        "1.13.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8436,
                "digest": "sha256:add525fc7c7aff68065d79cad8a6b870bfe45ce3dceb6cd5bb1bdd0f8eb43f45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225394822,
                    "digest": "sha256:ff449cd0b9534568c5a273f8c1d07ac8e0c744c35b0375dcccf6a343db3e7ac2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:74f136c13b19431caf44d1326d2a6cd694b0a346c5a406533d1f9f088632df94"
                }
            ]
        },
        "1.13.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8434,
                "digest": "sha256:0b8e4f24a2008c760748dafcd0b30c56735347c752cf5a87010a1c73db80bbf9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225395300,
                    "digest": "sha256:a072f551cea59cde7f0d972619ab6f87de6e7f50909d95256b7dde58c3512a4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:8edb579bab39c4ae7b683a55a78f9c779d76bac2af764a3f8d71cfb6705c4a87"
                }
            ]
        },
        "1.14.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8436,
                "digest": "sha256:5d30b7decfe1716c2ae66e7e941a83b07d01fd60cabea5597dcb157c56a7087c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225047031,
                    "digest": "sha256:0ec59d61b8f8bbb561f6124b1e948d541a33f297fe2260381eaf1ee5efadcf5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:d8d10d42efcabacae7c4244d8eca4e541d93dfb5115de6f600271f4a382039cd"
                }
            ]
        },
        "1.14.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8437,
                "digest": "sha256:1efadc0904d04a0dda881da19683e24acd6d5aaa399ca8ab1c59a27048d557a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225061076,
                    "digest": "sha256:5d030cb476ba67eb81646635ab106c07a75e58dafcafea1193700ea301356ac0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:7bc637812c6d74cae175d7f64d21896ca1254e4affaa62b8ccdcfb46ff74ddd4"
                }
            ]
        },
        "1.14.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8433,
                "digest": "sha256:c065cc9f7bff5cabb3229609c3f5816392fc5765a925af5f1993dcf411462d89"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225060777,
                    "digest": "sha256:3a7e2fd9cf63d3a9e224b17c37fbc17d008bc779f604126aaedd4afd96a02efb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:06c8afe7416ead3a9e48c51658f0cdb30d7f0e078c63a57f3d64025b0fa217e8"
                }
            ]
        },
        "1.14.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8434,
                "digest": "sha256:87cb73817c84f903fc7a5815d260344231391aaaaa9335bbe95e8b5c8184b950"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225060339,
                    "digest": "sha256:2133404d4d1d0d00bf9857cde66a2457ce80c9e4d75bb7ed2369e852b9ba0a56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:3c1d4ab9ef6f9c65071feb01c409463e3bedb8c80c59a705a0aee42c9202d03a"
                }
            ]
        },
        "1.14.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8374,
                "digest": "sha256:23c912924cb5b8e1f9ef5881ddbece6ab436191c3604a5f3eaac76833718b026"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225058778,
                    "digest": "sha256:cbdffab775c8f2f1cad4c7bdf132a80f4331775089b17fd049adb85d805982ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:bcee96da8639f9e1828e9eba398df178e6de6c3f428506fbd229474415383f8b"
                }
            ]
        },
        "1.14.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8375,
                "digest": "sha256:4a3486f830fac6aac07ea966ec0e1ffd5e34f405cec3a26710ec4b40b85d034d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225063701,
                    "digest": "sha256:2c4bd5cac2bd558efaa46a1b8635b5bd7e51a5acc2a293bb54da5b7cdad2609b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:87da70097d88b0427141418805127636dd87de82e3593fdbb032f978e8925f4b"
                }
            ]
        },
        "1.15.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8508,
                "digest": "sha256:6c88690d4ec7c6cee56b5fd836db4a53d6a23560c24ce24c35a16b410adb283c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225077499,
                    "digest": "sha256:646b1f556109010c79bdf92e67c264a40ac0ac3ae6e47bd93dff8625c0d56682"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:ef4b6ba071f46707f3f2b8c316b8b23ffe1b36fc8800fbcf42765b253424b3bd"
                }
            ]
        },
        "1.15.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8628,
                "digest": "sha256:b2e102fd73d8c6960380f1751a49f73830beb4046eef3fee48dfa1f1ea4bcbec"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:b8678bb718efba994de8b40fd21257f61a48c73c139cc7d2c19a91169ca33f3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225107635,
                    "digest": "sha256:695e65258731e00189e9c1d737180ac382f86e1953e3d063dc3804ebd6d26a17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:422d0e7a913f86ab56d1d1cf2e6f4280ae23f2252526e16eb12cf6897128bde3"
                }
            ]
        },
        "1.15.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8628,
                "digest": "sha256:eb8928e679360309b1a76d1378d63c9c0c23697aeb43d0148c8205dae1b5ae86"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:fcbfba13eddeadf553bcfd7ac11f4156fdc6b8ef94bca79f3f0f26664629e00a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225109306,
                    "digest": "sha256:8783f75005e57a0b2830476633e2b561d6b3d84b2394bf1fb12caafa468e8d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:ce93e6a976fc28d59a307c082340b9dcb6100d59477c375c8850be06c8e84a40"
                }
            ]
        },
        "1.16.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8608,
                "digest": "sha256:6bc823a2d40a11d8eb30185f06c41575f5d4056e6f4e336709f6a835f68a524c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:c556a9ae385d1b9e5a925153483f7e1e06d21e387447092141a0b82fe56a51dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225343128,
                    "digest": "sha256:100b8f1fbda207f06d62fe3d4173f7ae7aa4b43b705748d0a64fb41ba45ce75a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:287b96db68171dad8945c99c1cb2489ec51103675433b3c3fe8849d6506fb395"
                }
            ]
        },
        "1.16.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:c44e4594c9c55456d4cf952644558bdff6e48e435244939ce1510c20e77fb426"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:acfc58a02d75846f48309793a4ef43f20aa3821406a1a29babffa4b76e106e02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225343047,
                    "digest": "sha256:a89d6a47a0527f39d57380b2079c0216584205c5122eaf4443e3e6ea95eabb79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:bf913e63447a46d7444598ba210991b931b8a93893ad4b238d0effccf054253c"
                }
            ]
        },
        "1.17.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:e63d8cee7c6be4eb197f6e0bb03d8f545f70f0c73e485c72df058424d0a8e523"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:6cdbd31d47f1422204d38018f667cf664ea6a633e21524c91d1dbbd8f85eaafa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225356089,
                    "digest": "sha256:7ac41f9e54ec776b3c961c13b82d370d2b4b82726e35140432898a8963f7ea9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:6c854d0211a418b991c3445abf5398312e741378f4029023e8dbdf94c34a2d54"
                }
            ]
        },
        "1.17.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:c6aa4d1e6e18ace051e636513b33919e5c69f3568df249753b3042547cfe5e68"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:b695dc498e5654fd93ae53112291c5725143424cf0e757e77ace467429ffb2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225352394,
                    "digest": "sha256:2f1ae9175b058526baf082a2e5b282e8dfb7ef48707372b91e7b6881b95ecce4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:f3666dcc16308629d76396237654fbd30a4f61b7e93d2ab5d6b3665863f25fe0"
                }
            ]
        },
        "1.17.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8606,
                "digest": "sha256:a3b9778d8612383ee8c18119d4971417b9855d4fce64c63dfafcd4f9f9bb0899"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:d74650f2bf55bb705696a9cfbfac5c8f20860029a52f8d3e3ffa4389a517f424"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225407085,
                    "digest": "sha256:30aae681164c645752af21cdc0d80f35af81ad1fa9aaecbe55950375fffdbcea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:e1079a0d76772d1b3eba02ca67b452c53034a7ea4645763dee83b4342a65abc5"
                }
            ]
        },
        "1.18.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:49c200d813c5b858d7b92d9d9d96fc0ca9a56679b91238d5698e8688b4f48792"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:cff6ba9a1ff7afbc5ca5eb392f9f08b6e10f38171c8d8ef09e21d9709b99a998"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225430243,
                    "digest": "sha256:5b41cd61f4110a1ccb9ace3699f6d08bcfa4b1808fbb3d9d6548a98015242b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1977,
                    "digest": "sha256:57bcba5e7078c699b72714a4d1a51a4c0bab48f1e4fcc1cbb63f3b0c5d808063"
                }
            ]
        },
        "1.18.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:bf84a992810c59b5cf6d617140ed3fa405efc3c2c1b2507aaec91245b1a5ec7e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:ef1a4f96859949cb365d1fc0f131f5aa2590f1ad69d25263d406f89e2c50a678"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225436458,
                    "digest": "sha256:b86a066e03f45a6bd300332e602369826e957aa3de42623aba47a1eb46ab662b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:eb2e18472e1aa3f1d306d8956b518805155dba6200665869fbac43b8f9735c7f"
                }
            ]
        },
        "1.18.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8608,
                "digest": "sha256:2385bd437178b47d686414e9d7e96e04e731303f146e31f5dc821808f442e335"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302,
                    "digest": "sha256:1ed50c652c0ce10e653293571e4f5de5496dad50a5192197a6dbdf032300e4da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225451989,
                    "digest": "sha256:bfc391ea51c8d88db97c4dc7b23a3fd38afe85b49713e845958641f08a88da6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1978,
                    "digest": "sha256:cd2d7dcc9de82e066c0a24f2241b187e8cc5dd18470cd238644b98d5f2d2855f"
                }
            ]
        },
        "1.18.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:aa230ebd49af006ad530384a87f1d6e4e27199d21729cf31cad2edb38c959ae7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:4b4ec0cc076587ca4dce8d46970a810a6f4e79929bf1beb0de8c57f13b1b18ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225449649,
                    "digest": "sha256:36928592cca8ae1f0dc4b2657c7effdcc571305a47045376fa117aabbf2299fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:ab1b2d1883c14a5e90415d3ad279aa4f7bb0d3ff81f467f7dde858cc5b2847d7"
                }
            ]
        },
        "1.18.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:ab05d8201e5e329885f914522d2ebf3232e5c628ebb707d17ad4750a8fe4d663"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:c64dc3098859b63eb83a3fc19db81d08af3fbbb707064ef60bae896aa5bf4515"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225397297,
                    "digest": "sha256:3e84afbdead015dd91413878a2efeafe3b62ed4b91154fa995651d8493ad88d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:69a0c81cfffd1f3703abc679e15f41118e6322bc0093a4308ddc9dff725d45a6"
                }
            ]
        },
        "1.18.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:d36310a61e90a9d7fb1864ba5f89aa4b83ce69a3124e44509d19271e86bdb606"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303,
                    "digest": "sha256:c685c789b0e6fea71ea823fd69cfc82d3099e1308697e26bb8fcc1ba4b1f2ad3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226496871,
                    "digest": "sha256:62a104f2599a1a62d3711eec1b6b35f798cbe8c666786d46c4690eac2d773900"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:cc4ac4b96630aca8e1b4a249307a11236496d6448dde6c1693692ba1648194fc"
                }
            ]
        },
        "1.19.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:ae9da741ef61cb995729ef9a59b180159b7175e0910076ca4ebbb97580e27af1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:a665bcb43845db46b11b220b4c278f49d190d46c61f3f1dba4197ba98af8f1cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226492989,
                    "digest": "sha256:facedf356e449baad71a17957e0e26e3164e5447df6a35d45d0a9c66a676504d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:3bd5a24bb289ea803c716e3e3053e3f1caea6d024fef899bcf0b4d3f7b8f1546"
                }
            ]
        },
        "1.19.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8605,
                "digest": "sha256:cd7581c9c87a16fb4d2df01a067bea74f8838fbe2302cb9058a356ff4a1186be"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:1c073228dd9541e72a61f7c211092c8925a12d927150326af74e10c8e38c94c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226500593,
                    "digest": "sha256:d95d779e74cd4f67530f76a08f538d05b3f48ebddf243d1c3be2104204d1b239"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:fc26246bc983648f972f65f3633f2908031502321f599efceb980fad8e57b221"
                }
            ]
        },
        "1.19.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:c5b65e28b8b0156489b6d4d83ea956b058413f9e811dc271521a80bbd907f16a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302,
                    "digest": "sha256:7cc36c64a940da30a1b1ad4fc3957312ecb3fc0ae795d6c80f2ec79db5e73bc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226502897,
                    "digest": "sha256:a968459f08f1a546d93d638c129a3473f885f3f3f2764da7188db974ec0ca6c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:573aec09ff9020aab2942020dbc7546acd9adc055241fddf2f3d34f7784c431d"
                }
            ]
        },
        "1.19.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:355164e86cc1acb747a04a6cd735ba04f870ff081f8ca552976f1ca3ac9dd233"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302,
                    "digest": "sha256:b6125748affb9d42d85a59a66535bc71b090e05e92cf3571747acba4542e8efc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226502949,
                    "digest": "sha256:2116baf0b66275f073b2f04b4d7d6f55539b458aef17e9c44df8cde1eb6292a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:516a44bee9b84a71f61b5e8afb44a18a7da50c2d97c8c497507ee90c2b3d92e0"
                }
            ]
        },
        "1.20.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:e402cd301f84cb462dff7bbc0e77cdf419f1f8d4d72f47b0d974bf7a02bff8ca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:84a92e7004e3ec2cea7a9e6c078fea4a2ecaf1050535f7fcee81708e5aa0adf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226524116,
                    "digest": "sha256:b576e4d3c6401fe0a07f245a4f62a0e94ddfb33c77b6419726508f106171a230"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:138171e0e9ecb76bab4a58607f6165c94bf23d2bcd4133c34e2c85d5d31ac5ee"
                }
            ]
        },
        "1.20.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8606,
                "digest": "sha256:6ef0acbad6631a4f89f39460bf749bf88152107c9ba2322d929ebeafba214d03"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:4e5368f0d91a81dbfd76698a29819315fb0bee4f5d10d77159fe70ec441ac01e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226519191,
                    "digest": "sha256:f4f4f913df2fb7b7016952b61d87b45560ab57476ba0d3b532a7501044e22df2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:fb5429717263b8a2827f7ec52cf70822a8f45708942bd4cd3395aff7c79a7fbd"
                }
            ]
        },
        "1.20.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8607,
                "digest": "sha256:e2769ddfb2f146bea7a42e5b1bf5746047e3960b73e7c60d658d0ff0b576a08b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:e73ae0a437d40bbaaaa2a56475ce685a1f389d9d9c4a77fadedda887fbd33987"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226518835,
                    "digest": "sha256:ebaf048c5d90ce233a8043ca634119b242c9c0f2000577a78e314bcf4b271f67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1971,
                    "digest": "sha256:da7afdb7517dee35d38fb7a6d842607f5a2eaff3093ab356a0ac8d90680aa75a"
                }
            ]
        },
        "1.20.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8608,
                "digest": "sha256:54b122774a0d194e981ed27c6a77072dabaabc34bec8f87c31a934c0960d494c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302,
                    "digest": "sha256:1354d7efc35031039d3b2940dbe67a8d1040fcb29ee853d508cadd4ffa687808"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226517108,
                    "digest": "sha256:78b1933980feaf6e66e5376518e7884f190504ca195bf78e5d3b2cd3ad129bbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:d04aef114d224315bdf27cd23467bf41f5ab79342d7236a186d74f9d39364c51"
                }
            ]
        },
        "1.20.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8608,
                "digest": "sha256:97ca993b90f9ac64ea2f0f1a055e3e841264183df4f851d0c66989fec4e6dd2b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303,
                    "digest": "sha256:c1b9a30ec231138a42309941c58a30f6c3bb0dee7cce71bd78724c799768ab83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226538052,
                    "digest": "sha256:dc49d4bafa9ae989456f123dfbdaeeed7e386b65ac2c9ec650569feb96356862"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:a228f268eab27ae3602e261df0d3472f2efe92816b312e68b822576ea4c24a3a"
                }
            ]
        },
        "1.21.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8609,
                "digest": "sha256:89ec7e83c04eeab3773178b9f7815a109ad03dc4cc5e505858e4ce75c6337559"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302,
                    "digest": "sha256:4bc8760793c3e30f06f7179822b624cc6727b7b0934b456d4c29f007f0197f20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225194288,
                    "digest": "sha256:f4a33fbbe2ed85f21993d44f5e611186d6dcd5c3323f42620c2641bde85d5da6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:cd3ca752d6019701f2464628cb4970545bac6f5db94c84f0b3ac312f5b90b20b"
                }
            ]
        },
        "1.21.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8607,
                "digest": "sha256:8fced29bced5c698b95b85a3dc67290c1d09954fd04ceb7c9ff82abade01e7ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:4a184b304dc1b0b4f11ea5e3f98a4ffcb3f04df1322eacb28cc61daa224f2858"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225771261,
                    "digest": "sha256:40af09163185aa39b7c6cf114ae17b5933cd13052dc27dd9db7fcdec655c8071"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:e106667e0a8e10fffe5a982be31da0e93d2771d73d378af5db0bb4b097f20f0e"
                }
            ]
        },
        "1.22.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:0e1ff59d132ffd4cf8319c5ea64c742572db1980ea9fde9854d8d00af6798481"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:95d6883793c9eb9b5595165cc5d1ab8b5b1c48f26855ad2c17e04e5bc050ba9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225793386,
                    "digest": "sha256:e64577405e95744453e271dcc36095cfea17761fa23457e89871264b06853d43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:078fca68b7693df2ab5a1cddfdd1257795eb63bb5c14e01564496db9de79ddb0"
                }
            ]
        },
        "1.22.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:599e947af09ef3fadf488b2a7f3fe195150d0e4210ee012ca43029612b91c0bf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:e93953e6088d47d831350809eccaaeb5ae2ba1508f51cf230136416a31fd8dc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225802188,
                    "digest": "sha256:4b02c20b2f49786ff239b2a9dfb441a72fc1e96734bbcd6566494c2c5e1b023d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1978,
                    "digest": "sha256:f275d89b0d2915c9edcc85ca021a84ad572a584dd8de9b04ea48c7b878e69363"
                }
            ]
        },
        "1.22.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:e76234b28992d61e9e267d42023d3c1a05f188793ac0688c72339afe7d147e77"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301,
                    "digest": "sha256:1ca52f957ba62e4905dd8be93b0059aebafbfa30eb4f38ed93e79a380c700567"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225808164,
                    "digest": "sha256:dcc58e28b301c3bf1c49e5c06fadd823b39f468d535e10785048aaf715a59559"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:a385ee9e709c913bce847dfe69aa7cc887366af29d3b65ed691bf265c81bb5bf"
                }
            ]
        },
        "1.22.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8615,
                "digest": "sha256:398e7cb49fbae639a83654dbab9491cc602ad6c2412769060acb1933d38da40e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302,
                    "digest": "sha256:bc8b1a9e3f805f43b07f7f099941cec33465fea4b8220559c42f4744747b5dbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225828502,
                    "digest": "sha256:6bbebc9eb2d0bc0dbd0dfcd9ce80fc239e2b09e83ee384b94f339bd9ad40901f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:35f3daa8d37aa0f7b9dc207718748b90d5026da5ef2437a5e33e9bd2693771bc"
                }
            ]
        },
        "1.23.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8611,
                "digest": "sha256:05aa62f7fa67c2169aa8db3dacc033fa809f5199e4670c3c74ff45bece1d109f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302,
                    "digest": "sha256:236a50acd9814326003090a75aa32394bc4dae6f499f16f1978078b6b0758072"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225846646,
                    "digest": "sha256:9f7fb6d5a3413ac336cf6d020919c51575633901263d2f8df1c79ecc4ef2a8d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:c5dd947f131f5d28c96a114f2b1ee6eddf65f6fed741f4493f8af061744d1146"
                }
            ]
        },
        "1.24.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:8fc5ad36bb6cf54969f79efc5e672e88acd41d0b0d46cf150f7af7d882d591a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:a635a5edd90159f92a8ded50e26831d4c648cca0fda15605d0e464d1bb9573fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225840886,
                    "digest": "sha256:4d475f820b8a6f4787a1873737de607b05da62f89746a2a83febb0aa8a6846ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1948,
                    "digest": "sha256:c6ffdc9694207e97418d6a6ec89a4838e2dc3e88bb70b5e1dc57d678b44f016e"
                }
            ]
        },
        "1.24.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8615,
                "digest": "sha256:ec0153663445fd475ac293deaac0c0832df28fe2202df259252a7771f44c028b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:eb2d3a9cc31d24d9e288eeda0d9aac78ddbaad04a1664b160f31db1c431ed5b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225843300,
                    "digest": "sha256:8caece61eba6032e3b7c4d2cf783536868ec97a00b32eeab84be5d73f672ccb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:dc82faa6b898c050d2882abcf08200431c138f4ae1fe19c620985237e9b6f3e7"
                }
            ]
        },
        "1.25.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8614,
                "digest": "sha256:fdf63d3b99ed0f31679652d4424cc594b94396ffb3664754e3807d0f3d603190"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:89723d4bd7f3bce7aaaa771e010ce8dc8eba9b1e4bb79cb4e95110592b5b7c3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225896813,
                    "digest": "sha256:24ccfdda4b3347d8d378ea6157196a002864dc2131ec80584e2b821f5f166979"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:34cf4068e8a54259307df634e3d0ffad3ce8efca3e1f17117243ac1739511f6a"
                }
            ]
        },
        "1.25.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:b2a8f4fdf5dd36ddfe9a5128c031ee8f81c0e6808729eccdaeeceb1d7a71376f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:948c3ecbf1e07dc26479f9aa3202ee85ba45c63d8841c9b9565163a269cc5874"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225894967,
                    "digest": "sha256:0e7ff7d603634938f0a0cc4495f63437b1c6c5ea6fb3fb6a3c4ff8a06b9ea7e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:8592130aa73571b9222a9020407482f13fd0e05f4282747b3e0aff815164ccee"
                }
            ]
        },
        "1.26.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:2d6afa4574d02cf4be238cbce5e356ecadaa80438c595638d21ca8da4195120c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:7fcadaf4bf835ce6756ecad83b0043e9d48deafbd11d8dd94a5f28590b77ec2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225922367,
                    "digest": "sha256:cbf771ee880ada88ed5639d809af15ea7df8e2c2146a13940e815fb412016e06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:2820566057a62970b322dfb0cb82725adcf6690b59f4f2a9a781dc007f66856c"
                }
            ]
        },
        "1.27.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:1d533a012862c1993106a4548dece35efd1d7e1a8274cacaa509d9dd553d5dd1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:d6edbb100ad87eb1392dc758f9710f3735e815c5de630b1487c29335fd23a6d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225916734,
                    "digest": "sha256:f1c3dbd2735aec858bc6ad369360e0c64b4cf26c26acc549af87d86457b97c36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:66a641c6088ab560554a18427f9d8f3fb20469896b688af550473b2f58accaf8"
                }
            ]
        },
        "1.28.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:87fe46e7f66284edf68c4e3a18f917401a14398588e946d4a45dd5387d20978d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:19b9de64a99af47aade6c8280a0588e49e73e6ce6e98b2062f74990d45d1b59e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225947397,
                    "digest": "sha256:5e49c678eb013455bfca5736c6056fa9dd39f7edeaea39d295cc3a79a0554d6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1953,
                    "digest": "sha256:7d4d340bf5e0162eccd348158aefb4539d4401da412f86bb52ade2ceaff4cf53"
                }
            ]
        },
        "1.29.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:a2e04d9ed716a4c3135d4d017f6fdfc31a1e354d6a8ce12f00f8e60f931c1740"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:fcb31e77114610fedfd5790f20d43d42506eb931cd1b646a21a9c26ce0976e85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226000833,
                    "digest": "sha256:af6c153e3a9cc901c60e7cee4cf0173b4beb29b5ffc34d72aac7a464a20b72a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:e33c4f05b1dedd427ca1e897f250d8ebd796b1cc7d806d3dd594fff1545af00d"
                }
            ]
        },
        "1.29.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8618,
                "digest": "sha256:94c34a3619a636245d5660fd1a0ee72fb15095741afd40ee543d1a2d9f8056fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:19ed0fb56e4f5a8d5337c6811bc9f17484081e0238519b30830341a10f138338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225994931,
                    "digest": "sha256:9c665fe2eebfd5dd2679f13b77880adf91524c6d09c35bd67c32942e5eedd325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:db1c9f1d7737f1c0732d9dbd4fdfcf949aeb7f3b42fbe542b182deeb28aae2be"
                }
            ]
        },
        "1.30.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8617,
                "digest": "sha256:050a188fc2e6af2c73bf3df54c6847d6175f726a4a1852b7da08a5691349b273"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:5fb0a50b15b8a5252c35a650ebc4de2008e69c4363439abd9b67c39e7e0428d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225990961,
                    "digest": "sha256:a16958b9a0477ba9fd53dcc1f8b0e461b5af279b107e10bc347024fbe09601ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:2779cb1cd7590d4dcbfda3afcab611aec58873a18b78fd3055da7a9f94f019fb"
                }
            ]
        },
        "1.31.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8617,
                "digest": "sha256:143c635cb455aa3e1e89a3e24e0273f95363850b66373759d832bed9bd16f0ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:330d84d241954bad27aae613c92715b078bd98ab47a2cf7982ca7024bb73413b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226005012,
                    "digest": "sha256:d7d49fd2775fbfcf534ba3145d5bd43c4546574300afa9374c2b21bd216238d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:393dc10ed3c68677c159b6ac6828da71ac84e8fdb82bfc5d852415cb37b8d27d"
                }
            ]
        },
        "1.32.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8616,
                "digest": "sha256:028648bb38f90264a99292f09ae1b48396d947ad27e778a2665b78e5648d821e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:26c69d89977a3a8cc94cb3633d82c86ce619333eba94f373d199707e1120dd92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226039730,
                    "digest": "sha256:e3a01e59743c275c37e36ad72cd131ef69c2d2be83ed807fd3e3af1956996ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:49cab152562f0a207ee482c11fc61d1cd1b113181d8c850e854638c58759be0f"
                }
            ]
        },
        "1.32.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8947,
                "digest": "sha256:baea58f87a7b67cef7b7ee7c90f2d60667f7549af360249e30a1bd5ae23d2ca3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:5e31ca44955e0b4dc120bc237e6452d503ed1d0ff02869d690f0100c25090d0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226783192,
                    "digest": "sha256:974827612e07405f4aac00b98770f61aeb6cdc4e06883872fab2ce055086f9a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:d6596e9502c8b7a3072e7d49a8839d0b7b92657f50c1a4ecfa0e94c844e6b45d"
                }
            ]
        },
        "1.33.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9188,
                "digest": "sha256:baccce1e0db2302df77cfefade145bc5a69ad68fde712364a3fcb89cf3e2288d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 296,
                    "digest": "sha256:eba61bf7601a783d6c99c94efa88153b2043b2f575ac4903d158727cfe576cce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235599740,
                    "digest": "sha256:a6f12ca1d5cd5a1fd8958a3909a5b2cee5a8b091b60f8265910e661d78704662"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:275eb6a1d761df75bbb7b5c61dd52c18a9e56f7755a066dd201d06f0fa42a9af"
                }
            ]
        },
        "1.33.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9185,
                "digest": "sha256:094f46521d757c8b9431a7b6e5cdbdb6e5f8f58918cc0fa91212b1dcd10be128"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:f1438c453cf18e8292a77ff9daaaf1a357a2ccf29dc0ddc5d9d70ae027b358d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235722361,
                    "digest": "sha256:23702dd07b084889427a882a933a991e783121d376e435f22448e3d1ab4201c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:385f274b2c3b25b9ed8393fb0c6f85bc0588725433a9bfb34e37f71e017543fa"
                }
            ]
        },
        "1.34.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9187,
                "digest": "sha256:237d269818d880a130b49df794ccf36a9403e2d1be390c8aa8aa50915514de5e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:fa519115a26000586f4de3d53c76a669712b6de5cd5b831c783ab19a85c7efaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235761711,
                    "digest": "sha256:0ff2d2f0d3b704f37397aee6acbd35eca49d3b7b89112ad6a588ee59ee17e93d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:54a208fa502ddbd42fc90cb42f1aeafb20bf588e207ac7852d1f2aa4ebc2771d"
                }
            ]
        },
        "1.35.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9187,
                "digest": "sha256:53d42356cb430b87192a520aacf07d7fe55d7c1d6bc2d6b64f5dce569c4d02cc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:6ff43973f1aea3a4ff7d09c4427aa4bcb274547915195734295358bf9247d0b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235773713,
                    "digest": "sha256:00345c9550b777324ee9841449dabc86e1f7d2ce9ed47e36677d226bb6350f63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:2faa218467f6e0bd0e0c8a440461e07b24c497456facd0f5827abe7b526ee7d6"
                }
            ]
        },
        "1.35.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9419,
                "digest": "sha256:f17b29c12f2e7cb5aab023413115681e1d50394f5469712c49414d1f56d04fef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:b67c9d6308b62e6799a89909310e655112aacb74eb7e08ecbde29e39baf86cbc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235805456,
                    "digest": "sha256:24db7235548de1587515398e316881f235b48b40dfd24077427917fd21a98f10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:9fb15ee97cb16de4c8a8734c0f759a02f4711430a967f495d1cf8ff07779584e"
                }
            ]
        },
        "1.36.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9419,
                "digest": "sha256:b8a093b336f091000118b6442a1c032c042ade3f0fbe287459310353e82dfae1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:f18de4297419401d6711569aba175445579360d84108efdaa5072f7e4940dbd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235808040,
                    "digest": "sha256:3c9232715f8b335f8f00e16361c431f24f217612647476802bd81e75364cfb38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:b5d7ff532750125aebbe3c8714e08d3c43e7cc75345deaa53bef671437662d19"
                }
            ]
        },
        "1.37.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9418,
                "digest": "sha256:e43891ff047cb242eb3925e32bf74cb7f117aa473b06ddf47ed9415811efe136"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:d682895caa2dfaf0262aead000367d65fc3bb7704a61c774d1217fd473ba72c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235799230,
                    "digest": "sha256:0b2c588f47a09a5e470b2ef3af770bdf329f603686e2322e2417f80996840c21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:ce41a7cb718de1ead70520511f8252eeebf2be8939f149a4f61fcdda1c37aa2d"
                }
            ]
        },
        "1.37.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9419,
                "digest": "sha256:132c2e49d88fcec8fc05bacea94be87e9323cd589c723bd9cefc1e26b959db42"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:79b5c0aadc6b11fad4adf97c4611dc67232883cf6d30e53de8def881f76ecb2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235827582,
                    "digest": "sha256:6936de900710d52516a2749653fe7d4437c6e2d3cd2f3d3f51bc7b9828be4b37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:040dffcb4edd1592f69b0306b3ed0fad45788929f98e1de5ce4225d48462e9a9"
                }
            ]
        },
        "1.37.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9327,
                "digest": "sha256:b300628ecb35a302e4147f3f318f1eacfe67fa0fe84e0134df38e5dd2d016d53"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:f44ae7979490efe2e486301f62fbf96e32d5838b421e19426abaee25f629bb8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236533364,
                    "digest": "sha256:3f296425e9901ff76440061a8b3eb6b8773d0fdc56a487869653531fc0105a4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:05b145053c02eee0e630756822a16882d5163075bfc28318940150f8168977cb"
                }
            ]
        },
        "1.38.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9327,
                "digest": "sha256:764888eb382bb8f875c3afe689174f5b18d00fb9df160daed8e39bbc8beb6017"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:fdea96d33f15c0ea1b2418434962d902d0303efe44e0a1ae8f28e9e441b9b3e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236553050,
                    "digest": "sha256:808c8d583b84ad8dccca99d999b825de0c84c57027a7a4d44cf6696ebb04ca43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:d412df47bc5cce08cd43698a272d784cf66eaae06adcfbc380c1fba24f3e374c"
                }
            ]
        },
        "1.39.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9327,
                "digest": "sha256:c74fb89b4ac28bae1da99632d679f2a18bfd77815e06c3ddcc600bc195895253"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:3fa1141371c4a70baaac48d84af4f0c1726d2e6d3a3da0fc80120aed105999c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236476745,
                    "digest": "sha256:b8dd9cec7361ab0329eec0bfc84e5ed0d54e3ea9622221263f96da62e7fd82a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:f3f3fdf60d69190267301a5e8f294b3d48c071f256d2924d2b2af20213db5346"
                }
            ]
        },
        "1.40.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9327,
                "digest": "sha256:1df962dd187a63646a79a4290dc3b78f5f5ebe7396a223e6d8786ce8d5d0c281"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:6138c5304f76fab42ac0de00a5d9ea6439c9a3416a4d7776502a624576c3cdc3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236388890,
                    "digest": "sha256:75e84613fcab7d71ca3b9060a38589961b06fb40161554818b9a62f6a3bf2783"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:ff9c9da92e333be4c00a3755ed1e9bb8f2a9f7d6d797f5685257c7a03db523ac"
                }
            ]
        },
        "1.40.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9327,
                "digest": "sha256:22371383ee20de5fa6f09e86596150fce538c67528502fe3bbedcf51a989a1ef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:54dff3847f38a617188a0f43728087e2592d465ddd6ded8c55f0618627bd4e4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236446097,
                    "digest": "sha256:aaa6a04a5552cfb7fca44b01a8fe9a275dbd66b80e4e25d6e2f8572a9b1b4751"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:b35baccb6bc02995c89819057fe34532105eae70cfca24ac08eb347ac2215732"
                }
            ]
        },
        "1.40.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9325,
                "digest": "sha256:c5dd1e7caaddefa5f1a6e783505feb32c1c747d78683fca64b54483cea38fed6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:08188b8025af4174b6255ba06ad4e271c19535a248e095b249f8920d8800bec2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236447037,
                    "digest": "sha256:39ecb20c22c6bd436ea518aa611630bffac69525dd4dff135798c97bb13abb45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:4cf10c3456298e5903fb8815783b507cb5564cee625138596ef1d9501410e6d1"
                }
            ]
        },
        "1.40.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9327,
                "digest": "sha256:405bb0f7a8eb8dec0a711e84c2a2192fd0ebe73e3d6b19afac1ecf55b21ba4aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:1bcde9d428a41be04cfe50c9c1fd1839200052b4c10f60e038c83d03b96d567e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236431277,
                    "digest": "sha256:8bb5452bbb673320d8f223f04b3f76d1634c774d0836df8fd472e00e30ea6137"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:11e29463ed288f8748b2dda2fe393283ba231c0aed3f84d1a5f58f44e00df9a8"
                }
            ]
        },
        "1.40.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9329,
                "digest": "sha256:2f8063cd8aa7d3296444a59698bd8e6540ba7a32daf0274233168b9edf603bda"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:4f7dc9c755de03a1cf81713089b3917ad73fa582fe06c6cd0d9c9ca1393b9713"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236612274,
                    "digest": "sha256:fee6ea0782d93eb16bdcbe3816ed504e0f3f6262c37ef7157b81de44ca1173a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:2bdc37c52c35de111c0f860cd2ca65922044694f606182e32167995c8662a5e4"
                }
            ]
        },
        "1.41.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9328,
                "digest": "sha256:877886b8357d19fd33fcb8da8252e0315dc3a6dfb13efb498bcac0c451279676"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:0d83f51b3536c0962200c88656dcd4c3598bb42270a1876b8ffc8bec6936ab78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236210807,
                    "digest": "sha256:b27e3d63ec1150b338cbffad2a1896f567dd7eb61082deed66b4373b40b13edc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:c7da103ba6a1650f1b298011bf32de02020af55b1d84c98bfc78387a78571408"
                }
            ]
        },
        "1.42.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9328,
                "digest": "sha256:b7bd3b30c7e8bb442526086402cbade5323b1f29e2e14ba2ba3f173be9111d0a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:82fe8060a96e12c3c12d9c9de9b267b8d7c3f6877c32eb47cfb9c8388f6a109b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236211552,
                    "digest": "sha256:fd971ee55abd43d156fd3cb68acddbc74e60d51eeb222644fffb70ba45cec5c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:8b95570d92c9d5896e6c413e37834c285f63f7d286ee33ecdb5548b5b8d91505"
                }
            ]
        },
        "1.42.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9330,
                "digest": "sha256:8bfd6456838d68d011c514ee981682efe64ce19381559832b66abfb3e945fdfb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:15d01b770d7531d641d96a6de08e6fecc32f62f69d45e7c356c606f6bc96cabb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236216601,
                    "digest": "sha256:e353b198836ff3861107a71bf124186aa94eb1aad74cce6e6570a8ccce809017"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:e1e1b930c88158eb097e8af574a6eff2086d7b063a9e3ecf45405744d5d69dd3"
                }
            ]
        },
        "1.42.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9330,
                "digest": "sha256:f45b0c1adbb3cd6b1fc829c2ca79865c0d2c609e6e99db4fbcf418169a7fe7d7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:d5e88d356273ae4d2e232b4c35618a5a53e5ce2df9376b6e4958d0e914b77ef3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236223996,
                    "digest": "sha256:d09b2dd3d649e2090880bd7ec761bd3334c7d65da9fd09844b4de3d183d72f97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:502a4a32b90afb1636629cee08864ef81d7471627900f0921d18b5d9d4aba67e"
                }
            ]
        },
        "1.43.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9330,
                "digest": "sha256:d497fd95b237ed459e9ef7fa594791977b2301f38f63642dff79b67727f30066"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:4643763778cd9b459411767dbe767c3c08884c6316b3a0355ce9ef57a8196a7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236222477,
                    "digest": "sha256:4286fdb27fc69453f72b89d88b109313e2888563123ae404a13dfe8c684475ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:d9aba1ae34e570ce82d64edb8bfd684818d96c4b3434fa211b4c704ae1e5a7f8"
                }
            ]
        },
        "1.43.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9330,
                "digest": "sha256:bbd38a649d3be9ea59099e4edb8bab198a835292654f4d29b85a3b5470b61751"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:ecd293ef37e4c20f4a4d1414a1c2251ddf1c130e5f5e6d1736ac86cdba578e62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236280313,
                    "digest": "sha256:18bd8941f67f9be14ee23e8dae2dcab2d1d7493c428ad6bbd033e4ac4f88145b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:f209c19f26021623eebf001930840457cea4470bce24d39552034fbee14e83c1"
                }
            ]
        },
        "1.43.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9521,
                "digest": "sha256:50edf61f322a506d35372f7ab244090ea1ebef095e1ec2c7766a791f8cf5b211"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:2d707d83bbb449189d501e8d19a103361c0545ef835348dba9ee5858667823a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 257087464,
                    "digest": "sha256:625c520784d10e48bbcbf1adc36ede4b47f319b817ca4dbe001853c59c5cd020"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:2dd39a1347397c73f41cb658e93f1f18274916364273e8e57c15c0c5a020ceba"
                }
            ]
        },
        "1.44.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9521,
                "digest": "sha256:605579c4a1147d84db513c59d2ed160d458ba59ab136a7d53f8651fbb60e6343"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:475c13abba900b65a531d3ca0c3233cec831717ab09404740d7a56652448011b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255495969,
                    "digest": "sha256:71b96e6e83fa73beb9c83a59aed71e324a0a23cb30a6f8e18f1a873cdef4083b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:4ec935f2d89fafecedc9e336df735f3a7df9873f240a427b3979b3d5683b69fe"
                }
            ]
        },
        "1.44.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9516,
                "digest": "sha256:17439e325188e12f048c9b3407caacbd5845ab6ce376c64844eeab9107dc624f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255553216,
                    "digest": "sha256:d71349397d6fef1fac268b904ccbe2fa37a122c8b7165b54e82272cb9bc5e84c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:a483f75a6028002f0f198db98e58a84afa9021ac89dffb01ac5782211994eeb7"
                }
            ]
        },
        "1.45.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9516,
                "digest": "sha256:eb41ac9e65b7608e8a81b52c0e6cbfe734dac4f35b8f522c271eb03f6b1aae04"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255522817,
                    "digest": "sha256:0ba76470e7c73910b3adce65d0c183a14bc3da1dd4e28b90c4a31260033e516e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:1b545051ee9c5028c7adedd39930127f631b356a33ee2cd60b6d563c5379e15d"
                }
            ]
        },
        "1.46.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9516,
                "digest": "sha256:d55a5cf4df36adc76c30ba65532cb2dbcd8b25462f6455bd6a358c43cc71dd51"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255565924,
                    "digest": "sha256:500e6e8dca8d781ff43ba0b422110cf7ea02d05f0239eedbcdfe51b28f0cf781"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:ad563848f3b91eba45e896b5da6e63330750902b2acfd7a14e5d26d9cee0b658"
                }
            ]
        },
        "1.46.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9516,
                "digest": "sha256:eb81e53349ebdc42d8321800880191e1aa34153f02f5e6c961bf86b5e11678fe"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255565896,
                    "digest": "sha256:68ee27c268ab6be4542f9c5d777536a36459161880eb4706464b6cb955ec7bd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:15a88267d7ff055b2589407c545952cbb7719460f762dd44fa633659b0fdd0c7"
                }
            ]
        },
        "1.46.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9843,
                "digest": "sha256:84fb3bd6d80a6ef43c12878df7e972f07df64ddd2786c60d5288971b63f1a54b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 256727481,
                    "digest": "sha256:78a9f7c354247ed654a778a0326c9558d0a5e254541dc7724361308a61860c6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:2019efc5ca3425df912c08fbd0b9e22a2efde66fff479552a9bae08d8c08227d"
                }
            ]
        },
        "1.47.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10351,
                "digest": "sha256:fd8336d471c8681c64b91812c31a1117832a87cfd72569e01bcc7331d2a21109"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251761701,
                    "digest": "sha256:3343c687ba1c37e5007af59780f52ccb14d33870545c467479643aaf6ef2a195"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:15423f77219b8c5facd405c59dba5d6fa0797f1dd2502d30c8d380b89495ccc5"
                }
            ]
        },
        "1.48.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:895be39cca8faa965b8435f4b161ea7f0ad7bafbf023b1278645132245205d10"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251762067,
                    "digest": "sha256:838318a35449f077c8243cb6b80e1d681dd9e9bbae8e07166c2d016bedc270d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:b97b90d292533cb2535ca0631c9d27994cc141eb4fc30721ffb72a7561c06d33"
                }
            ]
        },
        "1.48.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:a796e1bb997fa4369761babcaf331463767464b9aabb3322451db8daec4e16fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251761320,
                    "digest": "sha256:367a870998d5569614a483ec2e9ba15aa6b447e6d48e88a975e56366d7011c91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:a9f6d6538646e9dc54225a975aeacbc3c14486d08d72fde2153d5f8d22c9d8f8"
                }
            ]
        },
        "1.48.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:01ef0f5ccb5e3e17bacc3241fbfbef45feeef36c65939d28cfca36e4a09d1fd4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251763024,
                    "digest": "sha256:303250fbacdefe5fd7e16f5d83ab0dfc24eb8fd68f683ef67de2d3ab77ccc3ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:2a5ed30416bdd3068af957f47bc78977f2e985e107f4a5ee749f971d542cac4b"
                }
            ]
        },
        "1.49.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10350,
                "digest": "sha256:4bc6522519e05a57f54df2ad332090ff83806961e9ce71c1cc6dc3eb2fe9c3a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252110971,
                    "digest": "sha256:15ae244d97e670d7f1d119f4cf546369594f0b0325f0057b34e506f56338b9cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:dbc8b070f295ffd5a8f9c19c95aaa071e64c02b7a846d7733bfd41f6ae0a3ac7"
                }
            ]
        },
        "1.50.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:a28d68f26a2e9b29bd7a21c3e1a383b403a73e8ba3ff73dc163ee41dd42502db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252118885,
                    "digest": "sha256:6d027b9d170da8195fec0a23f3f805309f975c9b7675ea7b76b8ca4a218684df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:db442d763d5773d279c7c9db9a6f0cd8f0e4375c3f903a81a2eb3aa63ed6618a"
                }
            ]
        },
        "1.50.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:8a1f89ebbc0a38449ffc205c75d46206275b6bea7e9fbf6a2dab8fadd83771f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252117684,
                    "digest": "sha256:79f4bbe1adc102c5e653697fc5a53da1f0f69757e47d035b95edc7af034901fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:8592d06f9a5a6bdb2428b2b54e8ef9d3246192b3e50ad93dcbf4ce7e9e988baf"
                }
            ]
        },
        "1.50.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10350,
                "digest": "sha256:139472f9dc19b352dd9300531bd137c9c9391628b84136b213f4c89d46682e34"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252118687,
                    "digest": "sha256:ff6dfccb45999c5423cf8a5da0820751ec3d32b11945416f3fbeefa59a2d8ef9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:7a6f10b6db5f2a8c0d08eceb28a85b4bcec764fbaa9355d33b409c4915d3db53"
                }
            ]
        },
        "1.51.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:f0ad1e63a807dbacef55798bf01b28c5d81844d909100591469fac1e85b7a84f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252123406,
                    "digest": "sha256:71adc210c499c795778cc90fcc3642d14c70230ddca58f62c8f50001f6b79f36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:f4598036af81f40fb1614af77ae52db30cb268f090267c10514313d6ecd846c5"
                }
            ]
        },
        "1.51.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10351,
                "digest": "sha256:baf35e24e58a1851f83b00ded8b2f8306caaa09cdc9e7307247ea7f15a0a1194"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252120815,
                    "digest": "sha256:e196f1ca3ee05f60bad6bbeb160e8c1c7aa60128dfe160e104e2ea0738121b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:ccf998752ba67a8805c4fc9f858075cee3dfce0295a07c31a9e76d2080075f75"
                }
            ]
        },
        "1.51.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:9bae3d08efda50f64d4a7eea66dcb159c4e2c63c6fe08d5244ca6d49dab15e82"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252133447,
                    "digest": "sha256:d59929182d48722d9812d53c4ca0f13de862c84c6fa665ca767d779e1db4c833"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:ea7dd905508e14642ba1a32e5beeb988d900cd94ce6a9def7f3e586972d9a402"
                }
            ]
        },
        "1.51.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:071cf24a8fcecbdb442b47391aa2698f42d57e84c083f5c55478632b0decc434"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252290891,
                    "digest": "sha256:1e57ef2e3d15d44ac22c1769f0f922fb870a5ac85d152c85aedcf4c5e5ed5e51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:c5f1e06e6601559c600b035ada3e0dfbeb339e2bf9bd689e6d90365ee149851d"
                }
            ]
        },
        "1.52.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:5470fd4725599c316c123a398812a2f06a9f4edc21e0c61acbde193a6949d507"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252294181,
                    "digest": "sha256:430a8790f0cd477d27efb150d17ab72d67be456361112dbb2b6cef9429de8245"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:f4d62d88ab3eb77f0898ce76109cb306fb4189545072f02637f7e410ff6958a5"
                }
            ]
        },
        "1.53.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10351,
                "digest": "sha256:7d65fa58d71334ea62a2867711da40beacf8dbbff55cf02befe85fb97bdbbd9a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252293182,
                    "digest": "sha256:6852cdd5138bafee57ac55098ac95c06fdcaa5c36453e0162fc7f7af4cd5642b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:0c855e17fb18109bf00594b451e9448915a21f266315423970221859c49dcce7"
                }
            ]
        },
        "1.54.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:e6336c36bec54553d7f0735c1536f49b28196213e08f9a8279341a31d9f1cf13"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252380201,
                    "digest": "sha256:01a776920b9b056c418ecf447a197b2ca1a76cded9bb2d6609493a3dc42e48c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:fa60ff614baf77251d4f200b04bc23ffa876bfeec7f42b904ced0e84d422596b"
                }
            ]
        },
        "1.55.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:3a974eb996520b83f91f196af2046855de53fca73b2186a0285986541698571d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252377182,
                    "digest": "sha256:a0624c8779a729a2ea7b5098ba3267f956f61ee8509e7cb37c13559231bf4c4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:f9e79a91d6985e5a0e3530520c2e2ea6c900f842917875b7aedae8ca9983c6bc"
                }
            ]
        },
        "1.56.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10351,
                "digest": "sha256:1826618a2a63c9c9b77a2deae7c2f82c80ca05c8b08355aeb9bad6451a62e218"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252374284,
                    "digest": "sha256:b1e327d91cf7c942c29e9fc74d1b523c4ff89ba8f01130255a0072a22277b47a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:52dd01d4026812126966d2496e723f9cfc71f57ac4580c1e437f2f14bcb101ab"
                }
            ]
        },
        "1.57.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10351,
                "digest": "sha256:030269628da923c72ce2e765755b14a0452e4875d8e4c182209e93534f1fbc99"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252381744,
                    "digest": "sha256:3474b46974f25c0f27fb4d01652ac494290c3f1c3f8df2d0f3bbc0db0331ea92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:f844d746b9ebba57dc04208b68af023082e252aae697174569012f41954ee4d7"
                }
            ]
        },
        "1.58.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:2496ddfb82cf1a3d2d10f0ee59ff23d0ae065bf36bb9143184a5c4b5346af4d2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252537840,
                    "digest": "sha256:f246fde98aa48ab3fee2a0c643b0067d90d5613d892212f86580f5ce6a66dc00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:da3424a159f248944ddbde145517edd555c7da4269796c4c4a5dc00946305055"
                }
            ]
        },
        "1.59.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:925646be98973e4d7477fed01b7a1fdd8efcb622369bdcc8fa4f27c60f2457ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252531755,
                    "digest": "sha256:4041e3820f133886ce7a9c05affb1b761e6350a7b096e9c45a1210a206475e5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:73e86b2ff72b657fe821bd1e301bc0d81e57ae66e4b8dee4166f0ae8f25e5a39"
                }
            ]
        },
        "1.9.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8158,
                "digest": "sha256:1c2e524b3aa26f72b4f9ec3c72bb168a171bd1dc9821db0f87ae4dea53048720"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 317539984,
                    "digest": "sha256:3ac6b330f751251d8da561b2b369908f72161bbe3e9afa967b5599cbc990713f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:93836450e3977103b904b89c1f89132bddf589885d6b7f1b1a5cc7650973d347"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10352,
                "digest": "sha256:925646be98973e4d7477fed01b7a1fdd8efcb622369bdcc8fa4f27c60f2457ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 40789477,
                    "digest": "sha256:4ccdce43d1e00fd03ac5438d39e731c16db3dfcf03c68390884b8e8c814221ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:c95f13c88d926e6181e0594f76953a14ab80ce002fc6dbc968084a7e18aaafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 612,
                    "digest": "sha256:82656eee95ad054e0aa75486e7c55b7666c26abbd9bf19373dd349f6e172ce9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:78ff727be57a68299558bb40b737669ca5cb9a8db948411d852ec809c14e7a1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:448bb314afa553bfb1578121328bbe92d2b5ca0f411967e7a0a200f672ade92f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:69ebf47851b1d088a68464c92aaa3cd2eaf8ea7b1dbf566578b3d3eb6c236333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252531755,
                    "digest": "sha256:4041e3820f133886ce7a9c05affb1b761e6350a7b096e9c45a1210a206475e5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:73e86b2ff72b657fe821bd1e301bc0d81e57ae66e4b8dee4166f0ae8f25e5a39"
                }
            ]
        }
    },
    "tags": [
        "1.10.0",
        "1.10.1",
        "1.10.2",
        "1.11.0",
        "1.11.1",
        "1.11.2",
        "1.12.0",
        "1.12.1",
        "1.12.2",
        "1.12.3",
        "1.13.0",
        "1.13.1",
        "1.13.2",
        "1.13.3",
        "1.14.0",
        "1.14.1",
        "1.14.2",
        "1.14.3",
        "1.14.4",
        "1.14.5",
        "1.15.0",
        "1.15.1",
        "1.15.2",
        "1.16.0",
        "1.16.1",
        "1.17.0",
        "1.17.1",
        "1.17.2",
        "1.18.0",
        "1.18.1",
        "1.18.2",
        "1.18.3",
        "1.18.4",
        "1.18.5",
        "1.19.0",
        "1.19.1",
        "1.19.2",
        "1.19.3",
        "1.20.0",
        "1.20.1",
        "1.20.2",
        "1.20.3",
        "1.20.4",
        "1.21.0",
        "1.21.1",
        "1.22.0",
        "1.22.1",
        "1.22.2",
        "1.22.3",
        "1.23.0",
        "1.24.0",
        "1.24.1",
        "1.25.0",
        "1.25.2",
        "1.26.1",
        "1.27.1",
        "1.28.1",
        "1.29.1",
        "1.29.2",
        "1.30.2",
        "1.31.2",
        "1.32.0",
        "1.32.1",
        "1.33.0",
        "1.33.1",
        "1.34.0",
        "1.35.1",
        "1.35.2",
        "1.36.0",
        "1.37.0",
        "1.37.1",
        "1.37.2",
        "1.38.0",
        "1.39.0",
        "1.40.0",
        "1.40.1",
        "1.40.2",
        "1.40.3",
        "1.40.4",
        "1.41.0",
        "1.42.0",
        "1.42.1",
        "1.42.2",
        "1.43.0",
        "1.43.1",
        "1.43.3",
        "1.44.0",
        "1.44.1",
        "1.45.0",
        "1.46.0",
        "1.46.1",
        "1.46.2",
        "1.47.0",
        "1.48.0",
        "1.48.1",
        "1.48.2",
        "1.49.0",
        "1.50.0",
        "1.50.1",
        "1.50.2",
        "1.51.0",
        "1.51.1",
        "1.51.2",
        "1.51.3",
        "1.52.0",
        "1.53.0",
        "1.54.0",
        "1.55.0",
        "1.56.0",
        "1.57.0",
        "1.58.0",
        "1.59.0",
        "1.9.2",
        "latest"
    ],
    "configs": {
        "1.10.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5347777f03cd85c4ed9a1e325df5f7c0f7d4ccd170ee7897b5c771a0a94df641",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6be5bd90c32062681c5894eb1b5dd43f2c1d0735c0d7cd181a2c297a2acb1a1a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5347777f03cd85c4ed9a1e325df5f7c0f7d4ccd170ee7897b5c771a0a94df641",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-10T09:24:34.669458903Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:19:24.901339808Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:19:25.065367974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:24:29.924370756Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        vim=2:8.0.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        valgrind=1:3.13.*        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-10T09:24:33.765730256Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:24:33.945451221Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:24:34.669458903Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:af2fff13b8ecb44f4c6b69e25deb26ae7d8b1b494f499d12fae721f69b074ff1",
                    "sha256:a2de7e62e211d1d5bbc420db666177d9953b10eecedf42eb2812d6bf35da8bce"
                ]
            }
        },
        "1.10.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:16dd2541f343bce88556cd5551929c013e12db6992b2281cd69464e3ae632f89",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "52fbf4c773bf55f067bb8da4b296996ae43ff599aa6cc2cd3ef1915ce6b51fef",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:16dd2541f343bce88556cd5551929c013e12db6992b2281cd69464e3ae632f89",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-17T11:24:35.468543606Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:20:09.476043895Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:20:09.607969228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:24:28.929350698Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        vim=2:8.0.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        valgrind=1:3.13.*        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-17T11:24:34.627959943Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:24:34.795849711Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:24:35.468543606Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:adfe5c351b1bd9c5668404947885a60775f8171b78ab5ba6e6fd0948e600f93b",
                    "sha256:819fa21d8b769a7a583fb53cf75d558c9947855042b1d2fe1a9278295928dafa"
                ]
            }
        },
        "1.10.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7355b1cae0b4671f2f6eee9dee1a28077da34247c5660f481bf16943922add63",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "88b641a94aa42c66585dc2ef070221742f21cbf07e287683fa6e8ff6a335aeaf",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7355b1cae0b4671f2f6eee9dee1a28077da34247c5660f481bf16943922add63",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-17T16:04:12.841163021Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T15:59:23.550507601Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T15:59:23.709196856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T16:04:06.350650465Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        vim=2:8.0.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        valgrind=1:3.13.*        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-17T16:04:11.99373161Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T16:04:12.177896543Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T16:04:12.841163021Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:4e763da799b2c750c6458c02ef1bd88e1d0fb50f312456d9a2e72d0b65496357",
                    "sha256:5c6f6b2e0dcd7e9eaad7785c9d0b7fee63396e805d25683160a31ca319aa0ec9"
                ]
            }
        },
        "1.11.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d94ca47e09b417a768cff960b78a50968842c6a4fa295c1373f3c6aa158b2df8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d65a5bf8f23837b4ebff1d098e81089a9d6f4835a5b1fe1f27333ae7f1d6903c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d94ca47e09b417a768cff960b78a50968842c6a4fa295c1373f3c6aa158b2df8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-19T14:21:23.980292686Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:16:47.568640436Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:16:47.713884267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:21:20.078528233Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        vim=2:8.0.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        valgrind=1:3.13.*        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-19T14:21:23.134411755Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:21:23.303976839Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:21:23.980292686Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:19c165e5c117723ca8917de0d354d028a4ecf9560a38cf65370311244c8690ca",
                    "sha256:938092e213e58c6e4d7613073a4b874c7357a37e7404bb2aec6f699c92fed539"
                ]
            }
        },
        "1.11.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb8546a2168466eddef217a64d2fd1b11b7b0e7835b5eb899afa680ff1a623f2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "687c5690a225306e2eebe3c5703be7757d6e92649c8e65658a86e3ef0b226329",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb8546a2168466eddef217a64d2fd1b11b7b0e7835b5eb899afa680ff1a623f2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-02T09:42:44.748600883Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:38:15.144581251Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:38:15.37419213Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:42:38.591308194Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-02T09:42:43.857750067Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:42:44.040289783Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:42:44.748600883Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:a5d3719f35d563d9691a860098dd743e34ab95c9909cfefd0d6c7cd882a70b2c",
                    "sha256:feb8c3be773c7f709c464f4ff21e4bbdded691ae00c690a26904e73e903894c6"
                ]
            }
        },
        "1.11.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ee36726058138de8a14cd828c0369b8dcbc712e76607b9a51020dd5a840cd9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9ae8c1f8c62a6d5c3b49d41660be793063a8d464317fe3072c7f20a531bde64c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ee36726058138de8a14cd828c0369b8dcbc712e76607b9a51020dd5a840cd9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-14T13:29:57.217524455Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:25:31.888979557Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:25:32.049016636Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:29:51.118234098Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-14T13:29:56.361624893Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:29:56.528758315Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:29:57.217524455Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:8f9902f2e14facca085690febeb7f7fd2f0dc6ae7519f2c1c3423185c47ceb40",
                    "sha256:6e9c79107b64c7fa6d3eab4c2ab4c60e2fa69d793b9106ef8f2d315cc2ad8413"
                ]
            }
        },
        "1.12.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5f68d82feed565ef785c4f012ab5b8d6532d283c018f11dd290aff43ab133fa5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ca210d362494bb3934a07aad6303e80bf081e53e21641acafa42a57726588a4e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5f68d82feed565ef785c4f012ab5b8d6532d283c018f11dd290aff43ab133fa5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-30T18:23:24.685466063Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:19:02.188794863Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:19:02.3688399Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:23:18.499602816Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-30T18:23:23.79771546Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:23:23.982923479Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:23:24.685466063Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:5542a519c485c6e9ae3216c65ea8fbc78ab5b6df7ca3825674512b0a6b4f14df",
                    "sha256:704fd8c8fe2bf6ce24434838bdd06333ec530d9805ba0ac8e0d23b7346ae12a1"
                ]
            }
        },
        "1.12.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5974037e2ebb12da8438c057ddd0c11bda57ee5de8664dada8aeedaa011e4d6d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4d3013a07dfabfddae2f40d8bcaad33266ba6d818b25984b3238f4d308d91612",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5974037e2ebb12da8438c057ddd0c11bda57ee5de8664dada8aeedaa011e4d6d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-02-05T17:12:34.619977838Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:07:55.743605763Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:07:55.939099866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:12:28.310195527Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-02-05T17:12:33.706039235Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:12:33.887266177Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:12:34.619977838Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:9f7115c374cafdbde74510fffc417abacee33a00a6b439ab9e4f7bc2fdbac4ae",
                    "sha256:8ecc7bc68901aaf4c458f73d33b0a30ab0364f749246e59a739466d49cfdc5c0"
                ]
            }
        },
        "1.12.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:971e3f021ecd650b9f64bd9ee528eb5f948784490bf065a7af3fba8a68e8841a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "de631e0f0a2407b4312822607ccb8296d73ac28e29aea37ea0afbed9a10ed285",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:971e3f021ecd650b9f64bd9ee528eb5f948784490bf065a7af3fba8a68e8841a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-02-08T15:56:21.203458073Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:51:45.019014305Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:51:45.227771863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:56:14.972858615Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-02-08T15:56:20.33570365Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:56:20.507269272Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:56:21.203458073Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:c25dce0b1f3f267fff4447ae35b73f968a644eba6b65289d5994dc34b13126f2",
                    "sha256:b4ba97dcb0b5c2269879ae4320381901e7d85b91fe9158d92cc3e0e0383de74d"
                ]
            }
        },
        "1.12.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:418f2874295600003e557741f65ce763f9e4927fd3d19082ccc202b97a89c26b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "178c7ade9854b461f23e3866599fe87d2e5dc07db4c99e1b1145efa7a9af53b5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:418f2874295600003e557741f65ce763f9e4927fd3d19082ccc202b97a89c26b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-05T14:07:30.360507792Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:03:02.734907055Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:03:02.905359249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:07:24.08078208Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-05T14:07:29.478260531Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:07:29.649874505Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:07:30.360507792Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:331f1748fea892c623a8084556a30c40e8b10fca53c3f839a7bf373d39efcfe1",
                    "sha256:0dda300ce69586c3e9f0f725676e3bf400f14bbd4e02e2fddd58eee8760113b9"
                ]
            }
        },
        "1.13.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24648211b4fb6c58ca2109de3d2991e6bdd57c74d9771a4cb047844f9ebcb8ed",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "dd65f2a5e6297016ed58fd62d56856570d10355f9122013dad9259a5735dc1c3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24648211b4fb6c58ca2109de3d2991e6bdd57c74d9771a4cb047844f9ebcb8ed",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-13T18:27:33.721539117Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:22:54.385711622Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:22:55.589114484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:27:10.593071852Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-13T18:27:30.462045391Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:27:31.74099822Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:27:33.721539117Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:961306eb89d83f2dc53da45214f5d1eb268750f00fb371f95974630132cfa6ce",
                    "sha256:1ca44363fb5317b8b40c7f3ebcb417e7cdc81efc7292de3b80634515152aafef"
                ]
            }
        },
        "1.13.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5cba85c5c808a688948141a86459d844d4b3befd3ecfa0924559a70762bf2733",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2e0e31dace8eb0dadbe622ff169507e06521821f77c61c62d8840c16349104bb",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5cba85c5c808a688948141a86459d844d4b3befd3ecfa0924559a70762bf2733",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-18T16:47:52.858731047Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:42:40.220745856Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:42:40.849220805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:47:27.803163601Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-18T16:47:49.09751175Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:47:50.491927636Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:47:52.858731047Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:8fd6b2171fc70b2c2ed082403e218720799fb77558d1da59d081c9cdab84de1e",
                    "sha256:374f1ed6fe3d627d20ced090e0fafd70f14dace42d30eb772d0233c05e5e7d56"
                ]
            }
        },
        "1.13.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b215677964abbb9128bfe179c3f88e556ae754bd24d522d32a4b2518297f259",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "91f3ae64c382263a515808e6d4e273ab9dcc2622ed1b6292f6d3bbb3accccdf5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b215677964abbb9128bfe179c3f88e556ae754bd24d522d32a4b2518297f259",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-27T14:16:23.240302293Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:11:24.067544029Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:11:24.787561814Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:16:00.16693431Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-27T14:16:19.874210311Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:16:21.152601261Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:16:23.240302293Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:a923f5fd5ad01fca22addacdf86d12c8a12339253c29c4f6a87818d05a6fdf28",
                    "sha256:abc2ab8013527a8e1d6cab969f3eb10603138668c472ee32928b7a6ac16ca638"
                ]
            }
        },
        "1.13.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9977fcb16d3d9f35b696d0cb2f54a97e82ffad532008d06a8641de9c6046f6cb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "777f78363bf0ab36be904733b86ae51c079fc0cb867a103b61dbe727389ee64a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9977fcb16d3d9f35b696d0cb2f54a97e82ffad532008d06a8641de9c6046f6cb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-27T16:42:54.695069061Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:38:06.872707514Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:38:07.55453848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:42:33.314489493Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-27T16:42:51.4383915Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:42:52.665865178Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:42:54.695069061Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:2337bde68da3258872e1cb67d0d85b87575a62ffbf5fc9d3ceef0a1966c4531a",
                    "sha256:62a79800a65302c5a9eb0aa16690d0b5fccb4e20952ea42152ee91e469ce86d0"
                ]
            }
        },
        "1.14.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afaff77655ba12a9ca1f6a670095079d17db7262660108e2cd58bb7aef623576",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "efa87dca557043da63a5b64e1a32ff2465ea9e834203887bd57888ab08ce2004",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afaff77655ba12a9ca1f6a670095079d17db7262660108e2cd58bb7aef623576",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-28T15:53:05.509938248Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:48:01.709654544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:48:02.617642053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:52:41.245813123Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-28T15:53:02.00940465Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:53:03.371012818Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:53:05.509938248Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:ac6c51fa15835ba824a8cb39a09929db5087c8eb314622bc6bca2b337faf9249",
                    "sha256:7950fa1b4322a475dc9c15c63774e7c07a5178c289e3009bd8630d0e5abcc6a7"
                ]
            }
        },
        "1.14.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab462d7c9f5f0c1ee0d6687e88298702fa20f101809c646d17b2b43e7101c40d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "025b6073774d4732ec0a0f12ff9bccb300bbc8d13dc10d787f225da42ad33ead",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab462d7c9f5f0c1ee0d6687e88298702fa20f101809c646d17b2b43e7101c40d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-01T10:29:54.076380086Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:25:13.190177156Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:25:13.736163496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:29:32.952290201Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-01T10:29:50.680513942Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:29:52.031258761Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:29:54.076380086Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:99c1dbedfa8ec926f6999a5699a01b17a250bcdd080af8a76b8c0bcc59b77593",
                    "sha256:38e35341609d49f69cc9499a80c9a8a8d355231d163afd3ac63b2856aa8d5fcf"
                ]
            }
        },
        "1.14.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:92ea395d1a8612dbb37928bb29176d02ed313d09fa1625e7f80b5e3ac3c88015",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "65d8151d057077bec81e4e7fe8df3feb1c88b349f3f6d0ea9c4c142e1fa03606",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:92ea395d1a8612dbb37928bb29176d02ed313d09fa1625e7f80b5e3ac3c88015",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-11T09:51:37.40578521Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:46:49.158842351Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:46:49.757652194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:51:12.941360097Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-11T09:51:34.186023977Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:51:35.399688384Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:51:37.40578521Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:377c116247f870caf6875a2dd20d4f406976b6f616030c0b71f9880f5fab5bb1",
                    "sha256:ef690bf56b1f6d6ef396d35336992d2c650b50212378cca29b8098366bd61e2b"
                ]
            }
        },
        "1.14.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:352019a473e8d8b1997891de0d53b97328ef3eb7a15e7ed47f74f9e8db6cfc9a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "122fc272116b22691a3d6c42a526d31c45ba3f772ebe3993a32b4d2f8de471b5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:352019a473e8d8b1997891de0d53b97328ef3eb7a15e7ed47f74f9e8db6cfc9a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-11T11:17:47.623987791Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:12:49.076572241Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:12:49.75348524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:17:24.860479138Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-11T11:17:44.310781458Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:17:45.556395361Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:17:47.623987791Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:41e0c44dadf447c8587319acb62902c14cbb26678213378116a2c030098b7466",
                    "sha256:b8eca9a5bfeda0eb54fc25d62cd8645e298b45a01537fb732c15ce2df82f171b"
                ]
            }
        },
        "1.14.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69e33436d7225494d30cd503cadd4e630788ec31be0aa502a4d2600a8b91bba1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "856fd94fc8814594d2c12e0546b779067b8124021cfac2961f7bb74500bcc3f8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69e33436d7225494d30cd503cadd4e630788ec31be0aa502a4d2600a8b91bba1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-29T07:56:44.800337826Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:52:11.315483681Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:52:12.553448629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:56:25.492832777Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-29T07:56:41.561741755Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:56:42.79293786Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:56:44.800337826Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:f022a8caa13f269dc2592d8362988f944f9e8bee0a24b95c826b3e63d8f272a5",
                    "sha256:04a684a1261d5b86ffc50271e65f7509d3533a771ec80b2691405b2867020ff2"
                ]
            }
        },
        "1.14.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b61b26149bca3c2b874b8b4e818ac3b0c44e8ac7cbb3ca8ec859486ebafa6a0a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f8a1ab8db42c32d8e21f210457abc35db7909b4cf811e30f979174e72693276f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b61b26149bca3c2b874b8b4e818ac3b0c44e8ac7cbb3ca8ec859486ebafa6a0a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-03T08:47:24.111843084Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:42:18.304525822Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:42:18.882851475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:47:01.443147438Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-03T08:47:19.676259107Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:47:21.817475198Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:47:24.111843084Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:fbabf373b56159c57d47399daef5b01c01d243fa9a9454b3bd22a29e02b2640a",
                    "sha256:911977605732dd1c87a665a1b0c95a00ada6a963d2df8560a6b56952f6ffa8ac"
                ]
            }
        },
        "1.15.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c9b7e054a8622a7f218ae8480a45cdf5cb12618357865391c9077671c6db2c03",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b5836e5b85b40bf2dbf4a6952fadbcd66c287a52057bc1f571763464d8e46ce2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c9b7e054a8622a7f218ae8480a45cdf5cb12618357865391c9077671c6db2c03",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-13T13:41:13.530794309Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:36:13.395742133Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:36:14.630735916Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:40:50.645761966Z",
                    "created_by": "/bin/sh -c sed -i -re 's/([a-z]{2}\\.)?archive.ubuntu.com|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list     && dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-13T13:41:10.313410613Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:41:11.568651329Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:41:13.530794309Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:416e4eea1ce8f5d5f78eac35ef27b3d4c348c4d26abfa716d33902717b20cd3d",
                    "sha256:7b49738a00e4402aefc2853b513c725b42ea11a03e3a2f229c3b98dced296766"
                ]
            }
        },
        "1.15.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:78f6944ba0d6193d999eb3bce475d1985557cac8b4df1f4a315c58b27ef75d0f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "03a21263e9c97f5b0354bcdaac80d7a9a64649af45e95c45175d10fe79fc7c00",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:78f6944ba0d6193d999eb3bce475d1985557cac8b4df1f4a315c58b27ef75d0f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-24T17:35:57.851045535Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:30:59.086315398Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:30:59.616064905Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:31:01.000212754Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-05-24T17:35:34.528293172Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-24T17:35:54.286897879Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:35:55.625056763Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:35:57.851045535Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:682411daf4aa7dc757339869e3c10bef7cdc89326ee70e4e73359ab6dce0eacd",
                    "sha256:8b14e74d7c70512c220b9bbf0c0b7e62063b253fda7a9e7cad4eaaf69c45df94",
                    "sha256:109c95be6da504bdd2618c3f6646fb831d2f38520c709a2f478080f01aa48567"
                ]
            }
        },
        "1.15.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d670d09d5dcf24f63506675c9bc4e0f9b1416d640653917065c33f81aa41dbed",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "aa14bd35f1e721b7765770c385c7d0cd62aa5ffdfec15335c37936191c06e72c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d670d09d5dcf24f63506675c9bc4e0f9b1416d640653917065c33f81aa41dbed",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-03T12:20:40.457038997Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:15:16.055259217Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:15:16.592866997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:15:18.000140916Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-06-03T12:20:17.414142858Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-03T12:20:37.207969548Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:20:38.537081242Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:20:40.457038997Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:a56e26ed14ac31e1f61e5f3e5b29a6a5c5c33c08df6420e5a54bcbd4eb723fcd",
                    "sha256:b1dd7f8754860e4eec25a7a5ab22e598c5ff927ac636ff7ad197b43c01aa9db9",
                    "sha256:ef16f10ffb46d2cca0e3abbd062cd4e0888ef1f346c1c91c45ff17444b7b50b5"
                ]
            }
        },
        "1.16.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98c4a73c079a68bc1f101061fb8b04377be06a79ef59506a9f83c28abea1c56f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8da8724816a502658f4bdcc6bbfa639c3c526ca14a8f9dfe7ea948e4e4236525",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:98c4a73c079a68bc1f101061fb8b04377be06a79ef59506a9f83c28abea1c56f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-05T17:58:01.812741513Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:52:13.242217155Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:52:13.796822828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:52:15.000219669Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-06-05T17:57:38.622762438Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-05T17:57:58.443174679Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:57:59.77919923Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:58:01.812741513Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:f4e1d991d608a64667e3045bf2f82a4eb1d2f74567348b9ddb8bdfe0cbc5debd",
                    "sha256:4dd080f3e3f0efeec16c3e26aa0de8d742155dad81c8027aca8450eb7f0a44f6",
                    "sha256:caf941cd24566477d03eb053bc26112dd88a3bd947622dacebd77fae3e52fb5b"
                ]
            }
        },
        "1.16.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:805ea4d8947b416c3d09c0ad79ec3a7b38645dcfdae48152910360e3e03dc48b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "78bb883043efc321365db2741edee36620f380e2417bd67f2986b53f8ec387ee",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:805ea4d8947b416c3d09c0ad79ec3a7b38645dcfdae48152910360e3e03dc48b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-14T07:35:16.393572994Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:30:26.295301412Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:30:26.833777757Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:30:28.000235288Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-06-14T07:34:53.931589165Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-14T07:35:13.113332031Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:35:14.416027662Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:35:16.393572994Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:f008f5c25064bce258273941f6b5017d2ac25f95de39993738e1484610047afe",
                    "sha256:57ce2c985d5081f5ffe48e783f9c4684449dda0b1c7b8dd9cb445554cb61799b",
                    "sha256:b626e3704af9e340539c6b63a66cc0c3d30ba2a1e8798642047d8b31c73cf386"
                ]
            }
        },
        "1.17.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ca3aad1c68ffe23e501f89ded16db12c0da6301e506642374cbde7ff475e58c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b32e4f0391c1ec5de8a0c4051aebca58b5fc765b10c6659e69ac2b8b05261c2b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9ca3aad1c68ffe23e501f89ded16db12c0da6301e506642374cbde7ff475e58c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-15T08:01:58.654566776Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T07:56:36.610659526Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T07:56:37.980877668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T07:56:39.025675186Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-07-15T08:01:35.695318419Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-15T08:01:55.108025325Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:01:56.517625518Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:01:58.654566776Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:80d9e5fb963f0d015068676fda6a7f556c1d6e92d2fb23373951fca6d8c51063",
                    "sha256:6323cc9bb7064950a6b83da3a6928c38a8d6aceab1cc3b5f86f5dfe88dca0c95",
                    "sha256:92b77ab202fa3ee14104c69aa899230458e13f33d9830041dfc78b2d5c8d8e53"
                ]
            }
        },
        "1.17.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:28e4059341e9a75748578f3c9aab78ae281dd8b7a62326d27df33747167fc14c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "83e5020d46b846455a6fc45f2655b25dea89a95b37a188836750aeb859a817e5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:28e4059341e9a75748578f3c9aab78ae281dd8b7a62326d27df33747167fc14c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-22T14:44:29.586212258Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:39:28.897945802Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:39:29.493967936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:39:31.000132016Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-07-22T14:44:06.735512056Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-22T14:44:26.066864825Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:44:27.431124375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:44:29.586212258Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:27132733bbb671b21f634cfc55ea41dda2cfc8891370e27b90ae52b5213753dd",
                    "sha256:4604d673e4bc1dba2301548a7b0f2f5427df82e8dbfff32957c5516b0cba05ce",
                    "sha256:2ac55fac190b0307e0bfcd6e00ba3e6c0863bb5728bd728cf73d53eb32a6bc00"
                ]
            }
        },
        "1.17.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65d1179acbeecdd2fb0152afc8fcaca856241f2777a5b4845d5b081b5129a1df",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1732698e37737eb444359b3f4ef6e34b63de35c40d1ff57bc62225167ba7b42e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:65d1179acbeecdd2fb0152afc8fcaca856241f2777a5b4845d5b081b5129a1df",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-25T14:40:20.805260506Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:35:29.661851336Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:35:30.54146072Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:35:32.00022537Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-07-25T14:39:58.058826086Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-25T14:40:17.64102236Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:40:18.916158953Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:40:20.805260506Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:8cee88020722d6fc6aeebbb4b52e06be9c47361a7291e785bb8c6fb63492acc1",
                    "sha256:75ef6523d90dcd0e409619435f3892079736d15720cd9e69e5eb7c0eb2cb4958",
                    "sha256:b444cd2afda89606dd243f89dc2b28e42eb9c069177630ee606bda10a5ba2a53"
                ]
            }
        },
        "1.18.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a62f249808836bef99188ab9ac46f4a4b961f67fae7d64cc659a0d6399d2bc49",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4ffd95dff4b3afa241b9878494099d295fd45a4ebc22ca80518943fc619c8939",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a62f249808836bef99188ab9ac46f4a4b961f67fae7d64cc659a0d6399d2bc49",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-30T11:52:55.688950472Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T11:48:00.078765138Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T11:48:00.638009425Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T11:48:02.000200995Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-07-30T11:52:32.575818112Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-30T11:52:52.228411617Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T11:52:53.603615574Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T11:52:55.688950472Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:2b0936f8b5bf08ed1af1f42371e02c02e5388b75938454df2c443e9fd37d9b24",
                    "sha256:13deabb4da91a18c558adc89ab0f54ab19161f6f8b1919b48012dd6e7619ca33",
                    "sha256:431a2e429f7a145062e803becf8d2f41aec68553ca0e895087c79e866c71c1c2"
                ]
            }
        },
        "1.18.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04c0bf2fc259b26dd17e8d43eba75f14a3353e5a3f94344b2856f46de23ac3c7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d2ca22376aefd547cecb9c7bef79727859b4f901013704ccfe05e197811284df",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:04c0bf2fc259b26dd17e8d43eba75f14a3353e5a3f94344b2856f46de23ac3c7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-08-19T07:23:50.293876327Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:19:00.964337442Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:19:01.520427538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:19:03.000200446Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-08-19T07:23:36.656998994Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-08-19T07:23:46.983622489Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:23:48.327333001Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:23:50.293876327Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:b17cfc42b275d2ebaea44dd1aa2943284a8c9e955a3d561461b4ba6d0d0bd3c6",
                    "sha256:07b57b29adbf7fadd51892435b1931a235712284bf230bef63bececdecd0ab00",
                    "sha256:5ae7127a4ed695e0e3b126ca9be85c593c5cc32455c38c16a7983e03a74644eb"
                ]
            }
        },
        "1.18.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f13c4364d94aaab0a0bae8ac849d856192c709f5122f44e42a88c41d104878b5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1ab282aac7e024a31b8c7e0aafa85896e36abbe7d383ebfbdade84176e1b97da",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f13c4364d94aaab0a0bae8ac849d856192c709f5122f44e42a88c41d104878b5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-08-31T20:17:00.894684996Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:11:50.61899406Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:11:51.564829273Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:11:53.000187126Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-08-31T20:16:38.732926858Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-08-31T20:16:57.378701307Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:16:58.774996623Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:17:00.894684996Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:8d1c591157be77aefc17b314aafdc7e3816788e13b60fc0a8199f2e83ee3e74c",
                    "sha256:bd568ce7085634e39761f0b219bf9a0a1c590a99cb6d7f84f6c188b6f611f85b",
                    "sha256:0f2922cf132c72c1304dfbe12de7960560ec24d283c280f1bdcc65eec17d2704"
                ]
            }
        },
        "1.18.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:511571c707bd983b36e605cc5c3795d94945d234ce0467c1ebc56d28da26eb33",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0b54c1a59e587a79c951cbff8c45512a3869cf504c6b2aa2d48bbb2af328adb3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:511571c707bd983b36e605cc5c3795d94945d234ce0467c1ebc56d28da26eb33",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-10T11:28:05.516166984Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:22:55.480341084Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:22:56.571407067Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:22:58.000148893Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-09-10T11:27:43.335972527Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-10T11:28:01.912983243Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:28:03.326845682Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:28:05.516166984Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:dbc80ed256f62117c9871677fdf259f704c277f8c2108a6858a354ff3ea00149",
                    "sha256:2c350f1f422b5068db75cdb0f32d39a4c11831e4ed81a93740e9007e9d698dfc",
                    "sha256:b724327378d9fcb2fd92d678c64ff1041959e21c3fe9577acc560ad1b0a4606a"
                ]
            }
        },
        "1.18.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b962bb71cef76a3b101f95ff20109a8a976ce4fe66fdf14724d5f8f8e54f4ce7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6f25db8e3c8586d9d03a44901f1ec5c081624e7a874687baf18bf3bd372821d4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b962bb71cef76a3b101f95ff20109a8a976ce4fe66fdf14724d5f8f8e54f4ce7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-23T12:23:23.619660378Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:17:51.284140648Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:17:51.904259285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:17:53.000196792Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-09-23T12:23:02.230064302Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-23T12:23:20.119553368Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:23:21.541642184Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:23:23.619660378Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:cb8b860857def4cb90b6fc70f8d79657bbfd0514c1f891eb6b291f77b4417b8d",
                    "sha256:ee894ebf7c18626f2b2e9f5f3ed19b08692bb3c2902ecff8c5673950c61ddbba",
                    "sha256:96693f1ebcb698712b8075bdd78b2c3b5d228a43b94d8f080e00cb339bb1c5d7"
                ]
            }
        },
        "1.18.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3062e1e97496416c626ba72001d8adad79f966a4120bee010d84909a38c6b483",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b285330a738883094a338fde16666a41bce16bc875e3916431096f916eda3039",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:3062e1e97496416c626ba72001d8adad79f966a4120bee010d84909a38c6b483",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-27T06:51:12.618500315Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:46:06.192353601Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:46:06.787097018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:46:08.000164974Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-09-27T06:50:49.919824484Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-27T06:51:09.198197562Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:51:10.558918953Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:51:12.618500315Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:4f75b12d04993e0999e143b11f9f82f285ce4e74960c79f695511001c02eebf4",
                    "sha256:94311967bcdea3f720eabbe07ab12b75e7cc62f3d3cab3753aa37f68d3e0e0e9",
                    "sha256:48a5fbbd39113fae2d82b82189680b8cbfeabcfab456143ee53081a2c32c1097"
                ]
            }
        },
        "1.19.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a0798fc8974e1e8e4092535f0a53edf3ea98f10c7e6ed9523f6083296509b52f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "bd02c12a8e3ae8bcb86552f7151cfa682e58fe1aa3741719651cce11c8269447",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a0798fc8974e1e8e4092535f0a53edf3ea98f10c7e6ed9523f6083296509b52f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-30T09:18:08.892701366Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:13:05.919127978Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:13:06.538561959Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:13:08.000203564Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-09-30T09:17:47.254359384Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-30T09:18:05.502372116Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:18:06.880527711Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:18:08.892701366Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:1a433d8096070e54d44e4564d29af2b1a4b13c0d2fec56f44d43b06e4921b119",
                    "sha256:243e499ffbdcfa5f5c9edfa724e761a3f8191c38fa3dc114b95d0deccccd8b3d",
                    "sha256:9a80dfb8617537f70c5ce99149f1cc0177003942545cf63a8fbd015f9edc8875"
                ]
            }
        },
        "1.19.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3495e3711994b883ec3d6598510e019d2e24c01c96486d320259d510d497893b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "236cf5f7a271584a907fed5b76c6bad08dedc95b10cf8cc595d099a403fbcb15",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:3495e3711994b883ec3d6598510e019d2e24c01c96486d320259d510d497893b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-03T14:12:32.65993456Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:07:28.0744923Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:07:28.614949661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:07:30.000186137Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-10-03T14:12:09.854419098Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-03T14:12:29.326154569Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:12:30.661912589Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:12:32.65993456Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:98b2ed8c98c99f67dac1bf2292aac2e3bb0be6e376a73ada85f4361c1ade6dce",
                    "sha256:4d6eac389c12ce43fc1918b41d7c47cca359d49c9dc5b8a3a22e21ced5a9f8b0",
                    "sha256:d4f74debd51b3e423d5d1fb677e33b2d4e13bf846e5cfc923bad64b07ec7b08f"
                ]
            }
        },
        "1.19.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c1924776142d4a39afc9f956dcc113c5bf6ce4b446d28e57a390f9bd7611f53",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ef7177b9ab4670824a47722b4a76c0051cf0452f74d35fdf488145387599e950",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0c1924776142d4a39afc9f956dcc113c5bf6ce4b446d28e57a390f9bd7611f53",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-29T07:15:47.136871337Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:10:48.658189543Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:10:49.540165133Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:10:51.000136954Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-10-29T07:15:18.479904865Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-29T07:15:43.790712348Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:15:45.135138941Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:15:47.136871337Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:b03cdca91233685214aad565a16f4bbe7cd43ee69b2410313740dc6b6beccdbe",
                    "sha256:37ee494a609a948b6d10e1214279ed58fcc6ecc76675b86bb1c4bf6df04c9370",
                    "sha256:813182d7c38bbdbc091e8352a1d5abd3b53ec246c98c8f34985a99ddb90b3693"
                ]
            }
        },
        "1.19.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:057ebad19da2335a4ecda4aefcea8145c0eb3ec1d67bc5b308c3a659fb1128e7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "72fe3bec58e1e8d128c2946a2469d1f43e54040d0149950b2dfc7e1752821c3c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:057ebad19da2335a4ecda4aefcea8145c0eb3ec1d67bc5b308c3a659fb1128e7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-29T13:14:50.661932255Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:09:46.176320561Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:09:46.728826809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:09:48.000236558Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-10-29T13:14:27.234877879Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-29T13:14:47.286885174Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:14:48.618992304Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:14:50.661932255Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:155c0e2e7ddddf60777d9025028995c33948d0d3cf089c99bc6e8c83512ce98b",
                    "sha256:cfa1e220d6c6a168aff3c18640ed026bb900a6c6c2a0277d18f516f69631893c",
                    "sha256:89d79f4921b5926722c2d0770389a16ac05a920178c34dabc51392dc295b3e9c"
                ]
            }
        },
        "1.20.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7228bd41412d9b7fa2fdff792a90806450f5542922de66c1073f368cd9ba5b44",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2c5d27d2d056c4a2b814c6314953404ac242dbd1df46eb3b8128430f3fb4031a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7228bd41412d9b7fa2fdff792a90806450f5542922de66c1073f368cd9ba5b44",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-04T11:19:09.310452379Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:13:01.924157497Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:13:02.702762777Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:13:04.000113912Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-11-04T11:18:41.211190418Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-04T11:19:02.865652705Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:19:05.458259866Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:19:09.310452379Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:d37950060c88d85bc48dafae1aa02e55fb35f187560e3c56bd61662580f00f6c",
                    "sha256:52d30cacc04b067fca9d0d4407cc1be1f0238519856e730278e7fefa507a8bdc",
                    "sha256:c77c221d8c887652a69eeedc5b72b6299fd5467c56592fd7c84caf2c53ccd0a7"
                ]
            }
        },
        "1.20.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bcca1e075e09f0337dfb1fc761fb3f39dfeeda5cdc9ac61c2cb8cecc5f4cc5fe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5ec8e67aa86960ed913183592e3f53d6df5ed66becf78c31632e64252840f973",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bcca1e075e09f0337dfb1fc761fb3f39dfeeda5cdc9ac61c2cb8cecc5f4cc5fe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-05T10:56:29.343052576Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T10:52:11.302873678Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T10:52:12.490119726Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T10:52:14.000104Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-11-05T10:56:08.315994297Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-05T10:56:26.396851598Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T10:56:27.572914831Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T10:56:29.343052576Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:fb291d8033686378e2e0a3ee3c911bfa1489e728a9c93de34463696e2027ddfb",
                    "sha256:7a4a4de9fa5966fa1600109db99382af790c3b434490d0c9d34ec6809f5510c9",
                    "sha256:4529fb5347b5716d86c67d7c03569c3ca5f9256301fb1b4e6b230474b16efc0f"
                ]
            }
        },
        "1.20.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09f9704c4df41d59a8e01673b000fb7f0721a4fcb289880d9d69f6a14ddb92b1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c87c4aab428204947e5769718cf8b0b8d1de91c7025ec479efccfd10db85c2e7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:09f9704c4df41d59a8e01673b000fb7f0721a4fcb289880d9d69f6a14ddb92b1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-06T09:15:59.86456625Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:10:58.194228041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:10:58.844115204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:11:00.000150939Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-11-06T09:15:35.367465781Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-06T09:15:56.275858437Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:15:57.822678048Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:15:59.86456625Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:86dd4bfce6a8c47ef97255db8663123bdfbd0fdaeb3f16718b4dec18e9b4d5f2",
                    "sha256:d0a986f0dc6f872e2ed08aba5cadf0f53d98dd4691dfc5866735f5df07bbcffb",
                    "sha256:395b5b527dc75cd711ee7227e412e21c4c01b5e8fd40663199c92e1614dd22a4"
                ]
            }
        },
        "1.20.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0f1791597d4fc5d0f1d720958a9f3cd4baf29132aa81a2c760cc6b3109e39a20",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "883104f0c20c9ae44dc6d76d53cc9829ae46f68f6b4b624ae468c502e864e840",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0f1791597d4fc5d0f1d720958a9f3cd4baf29132aa81a2c760cc6b3109e39a20",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-19T15:08:46.514021574Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:03:10.684390233Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:03:11.456842863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:03:13.000218338Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-11-19T15:08:25.802931142Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-19T15:08:43.29031761Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:08:44.551361865Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:08:46.514021574Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:3c2a6d1839a5e79e40b88f252f01b4ebeb68299aa51a22085c2c5a4272c21856",
                    "sha256:1903f6787a50c8bf9ec6b662c1a34457a363f4b6383f40b13b747a02611c0057",
                    "sha256:5ed076139ca44b794f5af69dbbbcf6f4412d007ee27602293e6fe0a7b6bb0574"
                ]
            }
        },
        "1.20.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:df2db5e67aa76c95a1e2a36f5a9641fd53349627ca6f618a4cab2687fd20af04",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0240d39d7bb539d49471f8ff1c4a5db7031bc55c8a41ae8ba0ae8c933fca6230",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:df2db5e67aa76c95a1e2a36f5a9641fd53349627ca6f618a4cab2687fd20af04",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-12-03T14:04:12.642599658Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T13:59:13.616249533Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T13:59:14.459707949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T13:59:16.000130378Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-12-03T14:03:52.512320759Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-12-03T14:04:09.599440024Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:04:10.83118774Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:04:12.642599658Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:554f84e825502dcb39bad2d8bec0e8d5df1188565d6065e38e27178a1a0f59ac",
                    "sha256:27ec1e2ef599447e47f29c0bae95b4705e0e42cfd9722cd0666fda4a18a8612b",
                    "sha256:4b415e96adcd2b75aba94130195ea73e8e8b47341bbf160c24ef0815e24cdaca"
                ]
            }
        },
        "1.21.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:94e0c8037917cbd5ec64ffd1806944c21e96ce62e76b17804eff37c94b90e339",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "23f3ca8df883a4b7b74b6de79d82f400526ea3cfed083142fc36cb3b1eda9697",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:94e0c8037917cbd5ec64ffd1806944c21e96ce62e76b17804eff37c94b90e339",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-12-10T11:13:39.389840003Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:08:43.495027326Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:08:44.487110442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:08:46.000132356Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2019-12-10T11:13:16.784797032Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-12-10T11:13:36.186036568Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:13:37.453803182Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:13:39.389840003Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:5d9a2384c833167edcb31f23ae0a065fef71d47597279e5bcdb9b5c3d1322bc6",
                    "sha256:9885f30880bebc1d213719f686fe595921683ef5ece7f824f882de3836b931a3",
                    "sha256:2fb36e9de2813f4bc8c8d60bb533ed29717b05168a64605d0265e285c8d41722"
                ]
            }
        },
        "1.21.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:46fe16c3ae92f082fc9c4d5099fedb8ede831d0b1c4e860f651e0929a0232053",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "20e90dd4acceae9204ef0db1d79f8ca6db87c657513112e8e58afa2a6093830f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:46fe16c3ae92f082fc9c4d5099fedb8ede831d0b1c4e860f651e0929a0232053",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-01-24T19:25:54.36800182Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:21:52.971551935Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:21:53.315535106Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:21:55.000130214Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-01-24T19:25:41.768294559Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.1-Linux-x86_64/* /usr     && rm -rf cmake-3.16.1-Linux-x86_64     && rm cmake-3.16.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-01-24T19:25:51.751614805Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:25:52.795073907Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:25:54.36800182Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:259e469b9df4b3ca990386c5b61475c38176bbf1ec65a5eedb181fad520ede5d",
                    "sha256:ba7cd0997a4118ac5bb80f69e25150e6c742ae599479c34fe9ff55b8eced730a",
                    "sha256:3f56a537b569e0bc667edbe1f26283ceefc492227f93087efb46893e3945d3bd"
                ]
            }
        },
        "1.22.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:932f1483a7ac8fa2a83fb3989590345be62f65e43d59bdc6b8a6d88382df5804",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1f465831aa76cb951144d7f9a3304ef2fe523e2fb06de40a2c1f7eeccfb9eec3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:932f1483a7ac8fa2a83fb3989590345be62f65e43d59bdc6b8a6d88382df5804",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-07T20:37:24.809078794Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:34:14.189049477Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:34:14.468055715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:34:16.000265552Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-02-07T20:37:14.818198348Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.1-Linux-x86_64/* /usr     && rm -rf cmake-3.16.1-Linux-x86_64     && rm cmake-3.16.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-07T20:37:22.708430115Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:37:23.565025637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:37:24.809078794Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:fd05b5cae3bc632f2648d2b3b6bdd4235edec2efbda6c1c696493250ad513329",
                    "sha256:297856498023bbc3e7c5d0130bbebaf4e2af21e0992403e7f963beef744a28a1",
                    "sha256:292f71932f47b54c1a8744f5f11c5397acf987acfdef2df0c14519b196dc0d49"
                ]
            }
        },
        "1.22.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e3b87c2de76b7a2953a719bf209e33b83bbf51fd1ca1bae28be5e310bfc4890f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0869121b1b0c0f91014a69fc7831d6a808e892047780b4230cfbc6997ee144ba",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e3b87c2de76b7a2953a719bf209e33b83bbf51fd1ca1bae28be5e310bfc4890f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-12T13:57:52.371178988Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T13:54:21.775519348Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T13:54:22.286665838Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T13:54:24.000205836Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-02-12T13:57:40.476045344Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-12T13:57:49.970887501Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T13:57:50.947320035Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T13:57:52.371178988Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:697888e8ba0e56826d2ff75c57919212becf25c86298d3d45a699ff16d5e2491",
                    "sha256:2ce933bbc18d9b980aafd197e7745a868749f898d338766281c28838008b0c17",
                    "sha256:1506dc22afc35e40d55b1a323fb57d948144da946f77554ecea47807edd89c1c"
                ]
            }
        },
        "1.22.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:056a8f8d117a3b0575b815c9c1a1a8d7b1987030b82ae636f60bc63f31824b63",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9060ec63d3b2c8b81bded778749d0664686943cc43ae9b7f371c9de281eec713",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:056a8f8d117a3b0575b815c9c1a1a8d7b1987030b82ae636f60bc63f31824b63",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-26T18:16:52.837029737Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:12:08.971644557Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:12:09.319867099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:12:11.000221336Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-02-26T18:16:40.961686001Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-26T18:16:50.192379333Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:16:51.292974615Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:16:52.837029737Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:b4db836f9e5a63f824b8b8c50949d5c82730af7cd06f3a6e88e52c9d97904776",
                    "sha256:5326e53951da76bdf4aa240e9f35520ec6af4c505f0761c5c9d71b52463358f0",
                    "sha256:6169be1905f4b1dbdc5fc914e0b53a073e5b4e671e00268fe8f386022f5a4666"
                ]
            }
        },
        "1.22.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:252ff262437f109ff9fa28f83235424c2305c6df64a9292f389d306de18304d9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "94727d0cf0c2171b7f6111f73edb2166dfd01cf9a0fc4954465a979f1db93227",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:252ff262437f109ff9fa28f83235424c2305c6df64a9292f389d306de18304d9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-03-09T21:45:19.683672864Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:41:47.09101892Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:41:47.378881204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:41:49.000170087Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-03-09T21:45:07.697365269Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-03-09T21:45:17.307856846Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:45:18.286634253Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:45:19.683672864Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:f5f5200ff27cbf49331012397e8659321e53030ae681508720eb611107c6cdf8",
                    "sha256:a517313c5bce9df52da01c31be86888d399fe02c4448b6f25621a67499cc71bc",
                    "sha256:3a39fa6790a97451c1c700005845a27d88c3acfe8fefe092607d012aadcc6e85"
                ]
            }
        },
        "1.23.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a00df913d17e13bb3e7c0da5bd13945768289bb284d84296cc60b71521042f9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "327c603cc4cd725183e0baf2137be47437b954c503fe36537954ffaf3b4316e1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a00df913d17e13bb3e7c0da5bd13945768289bb284d84296cc60b71521042f9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-03-12T17:49:08.6552782Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:44:09.579263501Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:44:10.287572505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:44:12.000144832Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5a65ec7266809cc5740bd6c1a92c096735b9d33c05500de64a3ab259bae10997 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-03-12T17:48:58.390965334Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-03-12T17:49:06.45898799Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:49:07.363427069Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:49:08.6552782Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:771e4618d733a95c8777538d144e1a09fd625de77e38dff1585a348e96e02409",
                    "sha256:1f257b5b10646bd44e8cb76c1e8967a52d9bd28fb212dc3ac7b8948f1361af04",
                    "sha256:aeec935924ce8be68bc7947a2465c9dace0127c71eea85e48f13a704a6fa56bd"
                ]
            }
        },
        "1.24.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5521c9a3a25570f0ee0a0c8799a2eb35f4147bd36870035c6257e4c31db621c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2996093c37c132fd8b3bca237b1407223e5478d441c11f8ad0dfea3bc1f2e1af",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e5521c9a3a25570f0ee0a0c8799a2eb35f4147bd36870035c6257e4c31db621c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-04-16T16:58:18.325108264Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T16:54:56.622526135Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T16:54:57.244422401Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T16:54:59.000205664Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-04-16T16:58:07.846513472Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-04-16T16:58:16.248743064Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T16:58:17.084095733Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T16:58:18.325108264Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:03de3fb4ad230849a3bfd03271d27ae2cfdce132bef0a78e5f7c5dde7c6a5613",
                    "sha256:9ad6b3c5099f53ce31899e8ff449f9a20652cb870b32f32df0f084459de5c80a",
                    "sha256:08f3521d9a88fc311f6156b298965d467e983584de31c168c8c3720d730fb768"
                ]
            }
        },
        "1.24.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9998bb2b25e58c7f9f4f245edd258ea6bf7e3ba324af202f554c668cac00b6a2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b9d090accf4e6e0f1f712a9523bf0eda2431d9d7a051d1e62d43b1615f525cd1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9998bb2b25e58c7f9f4f245edd258ea6bf7e3ba324af202f554c668cac00b6a2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-04-21T17:47:05.538186691Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:43:58.302197037Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:43:59.24669293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:44:01.000252644Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-04-21T17:46:55.466648495Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-04-21T17:47:03.629704101Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:47:04.369811314Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:47:05.538186691Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:9c083b06dbb2b8f23e01001a86e9fc5c03515d92e91b931774fd1358b6b4fd0c",
                    "sha256:6f4616ff5baec5e34f1e53958f04671578ebe4d114102573861ddbeb3e135a23",
                    "sha256:05356e549088f3c7a2b529f38a107d5175d50893ac967d85865d4b9d97b7086d"
                ]
            }
        },
        "1.25.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7cdeec3ae3feecaf1da4ab0e8e0b0d74ec1761f836c531bd7cf062b525ff62a8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "72d216dafb4704c9f4da5c04ade0ad8a01468d40598806c68fbb003c5d9f2ad9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7cdeec3ae3feecaf1da4ab0e8e0b0d74ec1761f836c531bd7cf062b525ff62a8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-08T20:02:58.343785335Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T19:58:38.73099551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T19:58:39.343106485Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T19:58:41.000198088Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-05-08T20:02:45.958598424Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-08T20:02:55.700038466Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:02:56.81047225Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:02:58.343785335Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:5d11950a6d5a6b97be8d89ec6beb789b311cd31407f4b8bd6a4d46cb644e99c0",
                    "sha256:89beadbb04e39401f70ebf57a2242b63e44279f1c59e85d8abeffe3afee38396",
                    "sha256:48e7744d8c2e8648c4da1a6c9d1a76b7f0bfec3d0f9a91158e41658836c3bb68"
                ]
            }
        },
        "1.25.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aa401845eef635194fa68939ad067e582df45c451e22678b13e77bca89aaa6d7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "00ea0d74eca4a915fad3d97d34484820f808c45472d5e24e5daed4694b50857a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:aa401845eef635194fa68939ad067e582df45c451e22678b13e77bca89aaa6d7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-19T19:58:52.802969795Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T19:55:38.998959553Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T19:55:39.258910807Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T19:55:41.000135297Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-05-19T19:58:42.094691458Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-19T19:58:50.670853249Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T19:58:51.564640467Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T19:58:52.802969795Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:f5edf2e148581bfb9509e73772a8b2d3133f7ac38c387a35436f3e29bad27820",
                    "sha256:2468f5d871dfeef610c18289fc2a2473689ef61afdc7fe0d41b79709914c38cc",
                    "sha256:883d3e6cc1d5720beced1bdab5a33953676b9a7c574a6d0170261c75044a0e3d"
                ]
            }
        },
        "1.26.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db336d85d5e84261f1529edd3b0e621215e732a0ba4a0d85af8b9e8c6fe4b608",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a70e1e2c4fc2b633c718a56a3548a4ae20f861772b84045de6bd665d11cd384b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:db336d85d5e84261f1529edd3b0e621215e732a0ba4a0d85af8b9e8c6fe4b608",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-06-23T15:53:25.776034862Z",
            "docker_version": "3.0.13+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T15:48:28.999737639Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T15:48:29.267802404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T15:48:31.000118356Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-06-23T15:53:14.025743689Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-06-23T15:53:23.616065109Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T15:53:24.492051839Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T15:53:25.776034862Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:d147ac9a737b4194823fba48cb27008ec51b9b9bf87a21d760b43f409d8d12c8",
                    "sha256:f33827edbda5a89dbd5e2a7c4bbddfe62e173654b02012df7a2f32e6436a825d",
                    "sha256:daf0898933a6ce9c534ae6a775ffc65cb29e9e1cd2b79d13172adf8b980e659b"
                ]
            }
        },
        "1.27.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db0e7d4f0009affae64f16f788191ae9125d0a7b9e81abdaedd2b87eb367625c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5d6195011b593982114ce797f70f3df6d8e6981d72affe29a9ccec48ecdb6aea",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:db0e7d4f0009affae64f16f788191ae9125d0a7b9e81abdaedd2b87eb367625c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-07-23T17:46:04.03600725Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:42:19.443943474Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:42:20.328760515Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:42:22.000230664Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-07-23T17:45:52.405219289Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-07-23T17:46:01.135878191Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:46:02.243959391Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:46:04.03600725Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:6ceb51404c7f7281b515a091793a269b42144275cc4c8a565d47ae7dce0dc0b3",
                    "sha256:1a93488a54ac106c1032adef1eac7bbb9c1525f9358c422c574d930fd33ee8e5",
                    "sha256:851a817b2090d0c92bd18ad94a2b895c8d521619c4608e0c737096e3bd33f76b"
                ]
            }
        },
        "1.28.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0ac1f6ec7ba8b2d6d29c953ad6a38745f0b341fbed029ca00171b8ccfb2bbc8f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a061973c32b60eedc448f33dc6ab69882003b5ff94108c07d06b019cb2d75909",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0ac1f6ec7ba8b2d6d29c953ad6a38745f0b341fbed029ca00171b8ccfb2bbc8f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-08-11T17:00:45.256295107Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T16:56:48.684378199Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T16:56:49.32037176Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T16:56:51.00022246Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-08-11T17:00:33.907919938Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-08-11T17:00:42.664364998Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:00:43.703813023Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:00:45.256295107Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:7977246018f3711620c92fd2f5fb4371f2d4c0f7bf98c350500c87137498f6fe",
                    "sha256:34ac04439ea8a146d0707f492e520455f3505c0d9937b6bc6fa2e70657810161",
                    "sha256:9f1bebc769e3f8d92926f8e02e4ef1b2308762e74dee07806521937c3f5c6e7e"
                ]
            }
        },
        "1.29.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:38df454f2869c7296113993a69af76d7398ec854d183859572abbd900b85c15b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4bcf6991c72ab3aa0cff6a3c2466467ac8eb9d3ff3b1e290773d82cedd91d476",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:38df454f2869c7296113993a69af76d7398ec854d183859572abbd900b85c15b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-18T15:20:32.189989034Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:16:43.28496079Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:16:44.339140299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:16:46.000202306Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-09-18T15:20:21.204618069Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-18T15:20:29.485531753Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:20:30.57327338Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:20:32.189989034Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:2931c38978d565e4a938fce621354e57988fb8a1a53ded280d2f390078f42cec",
                    "sha256:04233f1095e234743c6473bcd8f6cb7d0b506286b3e881282bf3ee7e0ddf6a31",
                    "sha256:7c718342e0dd86d8d4745e3e8e3cb2ef1b42a423be592aeba25a25984f78f6b0"
                ]
            }
        },
        "1.29.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4b87805ccf8732761859e0f418ad6945f526fd575f1e0ac6371fed7a578a523d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5995123e17af2820a796209bc8f16a2a7efca55f2b0007f0cd6fec5011defeb4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4b87805ccf8732761859e0f418ad6945f526fd575f1e0ac6371fed7a578a523d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-25T14:16:06.745497622Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:11:49.769930712Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:11:50.317898519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:11:52.000183625Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-09-25T14:15:55.807383352Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-25T14:16:04.159632374Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:16:05.185268426Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:16:06.745497622Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:7c1d50cebfc01d0898a79bd3ee6c60a6d6da4788f63ad730bed6de1192320a42",
                    "sha256:0056dfb5e5ece17f06c2a22af75d17142e34000eb1a65594fcdf0b68c88a8c95",
                    "sha256:e2ec7013ebdcc5513388f57f49a72a9ca538efcf194f3e9494751acd046e478f"
                ]
            }
        },
        "1.30.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:38ed466bb84412c6127ddc7e33e9b6e8ef9f97f6d8dea415b010a82360a533cd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "acee22616eed67f03967ae4908b7af6660844616329c2071b92913f039329626",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:38ed466bb84412c6127ddc7e33e9b6e8ef9f97f6d8dea415b010a82360a533cd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-10-19T14:39:02.324281201Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:34:50.176126326Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:34:50.523842038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:34:52.000178229Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-10-19T14:38:50.424292292Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-10-19T14:38:59.428378132Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:39:00.57402663Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:39:02.324281201Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:75f9ed0f5be8238427d16dbc42448445704ead5eb917693d65344c35d7ce46e1",
                    "sha256:e684a300c73e1606b3a6b5a28d87a48d3647c5b8b48345eb7e91ff1b89bdd690",
                    "sha256:76c4483fd12ded387f434b2bf9dd5c1003791bdfc831328c7326a3f53f050975"
                ]
            }
        },
        "1.31.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:21b0d350eaf63cba03befeb2689e1e01117d4073b28973dafa37927a3bf66cf3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "aab320a0a9f1e945ef3e63e55b14b7fae0edd6998ddf8b36a308fc2b7553dc2c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:21b0d350eaf63cba03befeb2689e1e01117d4073b28973dafa37927a3bf66cf3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-11-12T15:37:46.249762047Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:33:29.860029699Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:33:30.328922555Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:33:32.00027945Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-11-12T15:37:34.483672226Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-11-12T15:37:43.571752853Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:37:44.627993278Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:37:46.249762047Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:13a3ef254d1e71b77360c7cce55d5ca4a4ed0b10fa9892ab75b10817a59e06d0",
                    "sha256:496cfc7f30204a043050680ed2a26fb0946357778470c314aa2f17f4adf2dbb7",
                    "sha256:93b50b8d44c9d682d925df2efd018581a72196a617b70cdff189ff50f09c3a74"
                ]
            }
        },
        "1.32.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:17b017d16eb83b95b1678a943c94faa31c3445a41d4f2eb15b3cbfe1673251db",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "134ece51612b20f9291728eeb702c15e8a21598db5f4d1f792e5a9e131b318d4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:17b017d16eb83b95b1678a943c94faa31c3445a41d4f2eb15b3cbfe1673251db",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-12-15T11:37:16.596630831Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:33:16.060773151Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:33:16.356395221Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:33:18.00024658Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2020-12-15T11:37:04.191641337Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-12-15T11:37:13.932671584Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:37:15.02447019Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:37:16.596630831Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:370f01b66ae0a1de8416b5a67819d11b70fc09738c8da06c659db1dab8f9070a",
                    "sha256:4696d43a2e6dc2d17231361f26b95e2b48cd40e0e7ffff290d863f4aa91e4f2d",
                    "sha256:2dfd465324cdd2d3bfe9b0336b8fc18cc2630d449ba9cbfa93b8c3caed7847bf"
                ]
            }
        },
        "1.32.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b742aaf4603fb3b9e07938cccfad0340743bf7b6dff153680dee9a0030890898",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9cfe2b00929b0b3658b96678b77c98df738233015f5380f16969beb5c2f4395b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b742aaf4603fb3b9e07938cccfad0340743bf7b6dff153680dee9a0030890898",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-04T15:58:51.549826035Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T15:55:00.505655209Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T15:55:01.309792144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T15:55:03.000197974Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5101b80b4c7d0b09bdba7f8de7c9e6ba2c3e090eb78b866f134ed72e1ef27ff6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-01-04T15:58:39.907651752Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-04T15:58:49.049666213Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T15:58:50.081698488Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T15:58:51.549826035Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:76215e62a48f0fce526a41765542cc2b490feb2ee72f4c1ceca12aa40d486446",
                    "sha256:1f0b0658fd58e55aa315671dcb48fef23e8981c2db0827af10c3298ad0f3aee3",
                    "sha256:41314fb28757cd621a4f3ee8b06ec3d54b2c194c75c19efe870bb5622458b9b1"
                ]
            }
        },
        "1.33.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fa14fa29db358b49428b0029f85d4509a9e113b75c121e59593797a80f671bde",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "dc5ec944258f1689f98b6bfa18d98e0bc13131bdc6c3b7c644b1a4af53d3de45",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fa14fa29db358b49428b0029f85d4509a9e113b75c121e59593797a80f671bde",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-20T12:07:27.890453149Z",
            "docker_version": "19.03.14+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:03:16.113740722Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:03:16.477998877Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:03:18.000168796Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-01-20T12:07:17.878070422Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-20T12:07:25.065821159Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:07:26.198635304Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:07:27.890453149Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:aa90a2d33ebadf752ed3fa1743ef64cb49a878ee09d5aa132c9919b6aa6055c7",
                    "sha256:43f9f4bc970dfa7a5c151148e5100edc3fb7ea6d36a5a7db19664a5999ccc67f",
                    "sha256:88f137591e815d4ed8159624f085a6e4709005aee7f0f92cbef1054358e52ffc"
                ]
            }
        },
        "1.33.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6296f6054f3256a27ead0d81c98555b73c1a27b36d8eb46d5172e44e2c3e42f7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "454c90bc7c28febb4e53f82fb0b3342761a08c7ca11c9ec9703abc47fdae591b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6296f6054f3256a27ead0d81c98555b73c1a27b36d8eb46d5172e44e2c3e42f7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-02-17T17:26:50.145431893Z",
            "docker_version": "20.10.2+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:22:52.67631694Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:22:53.299595144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:22:55.00018339Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-02-17T17:26:38.402636152Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-02-17T17:26:47.726912434Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:26:48.708905169Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:26:50.145431893Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:a3143e8d157b9dd35ab49f947cc9147734656cdddf8230382ce9f3ccf202cf1b",
                    "sha256:f4cd35d0019c02a4bd3bbc9a6d9bef5d9b8af8b0965c0ec9d3b9f937991ef844",
                    "sha256:b856770f9f1153b32c14cd3a42ad85cb083b46e811140084c603dfa6b736eb69"
                ]
            }
        },
        "1.34.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bb1751b63dc903bc7d48efd05d78cc7527a8909fd11767d549a716b04e3209ab",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "cd5da5c1ed99859b0a100eb9d9b76fb5840ac9380d362331f6eebf0d82df1d9a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bb1751b63dc903bc7d48efd05d78cc7527a8909fd11767d549a716b04e3209ab",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-03-02T18:06:30.967712564Z",
            "docker_version": "20.10.3+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:20.882296582Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:21.359209097Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:23.000176547Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-03-02T18:06:19.232130567Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-03-02T18:06:28.264502543Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:06:29.351831869Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:06:30.967712564Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:d9944da438e84fe194250b78a3c5199f05420c735def3232d57947ffaed216dd",
                    "sha256:87ea21c5f5e53b9eaea47579e6d21635d61390985bf2692741a6dfad0238569a",
                    "sha256:38049dd262973e7dc37063209c8c40de541c93f24b656399919a4a744a3549d5"
                ]
            }
        },
        "1.35.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:37262910be320350cc85d257182e55ddf6815ae570a8dfa34a3e5df697f67d58",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "58eea33b017c2e0e47290a0cdfcf42d8894b0ff44cbe3b47ab09df1baa9e9510",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:37262910be320350cc85d257182e55ddf6815ae570a8dfa34a3e5df697f67d58",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-04-15T16:01:54.282644046Z",
            "docker_version": "20.10.5+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:08.130936888Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:08.414668239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:10.000265095Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-04-15T16:01:48.017057181Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-04-15T16:01:51.922618171Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:01:52.822893426Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:01:54.282644046Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:e421a093766f755f23d5fe4276bc781b4dc0a20f8f787d31a9ff11f9b5485121",
                    "sha256:12e34f16c153e692e88bd23bc78e41aa439322d310c75680bc8a16c79945b1a0",
                    "sha256:3ff188e7a297ecc188d529f4c5be2178a81130e2a44219c7f989b4760ea66b29"
                ]
            }
        },
        "1.35.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40a53e0bc73af93e742061b3c9bd370e89ebf3bf5d79b1adae8cf06379c96b34",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6ff5abb28162f4868823b5a52837f49ab11c9f6c99da56d6ab41b78eb2078ae2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.35.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:40a53e0bc73af93e742061b3c9bd370e89ebf3bf5d79b1adae8cf06379c96b34",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T21:39:57.373647594Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:36:47.877871138Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:36:48.303039296Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:36:49.296805292Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:36:51.000249869Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-05-24T21:39:53.692051026Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T21:39:54.990196401Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:39:55.914384775Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:39:57.373647594Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:0092f2e277ff22fceda1605c515fb42fa097c108b21babe9ed9dc20034a4a2b1",
                    "sha256:a4796cae130be759ba4cbf8d0457bc95674839bfbcd4eecfa61814431df15452",
                    "sha256:c331c4b8b379150702a4877225dc2ebd772067395812c7dc17fc938426072627"
                ]
            }
        },
        "1.36.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4536b6110637b8a4be83f83389d42824d2d272e2da9bc968c866e9d5b2a3a4b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9d82cb426781cea43cbf6d9fa706870e3cb36d7528ad804b975447afd8fd327c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.36.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a4536b6110637b8a4be83f83389d42824d2d272e2da9bc968c866e9d5b2a3a4b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T20:46:43.493348218Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:26.534831796Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:27.321536708Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:28.314565971Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:30.000229801Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-05-24T20:46:39.933831615Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T20:46:41.196102812Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:46:42.102566169Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:46:43.493348218Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:f7635284761df8ebe345c9b7c523283e0922df1752c579f706ac069804dd2d6f",
                    "sha256:d26d1ef31d6b87d40d5babcfffe7d3e5178d4d599fdf7a80f8ba5fac5f3b9765",
                    "sha256:7a5d05e592e1e0f189cc3f21fae3ee41899efa2383708f9878220dad48c86357"
                ]
            }
        },
        "1.37.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ce28b28db4d3c316cefffb712a7dedf20c6c121a3bcec73e747e218b231f8e3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "099c36624cb9e6466be5d93eb399bbc0e7a8d44c0cb8edb3f73e3f93bc8a9c0f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1ce28b28db4d3c316cefffb712a7dedf20c6c121a3bcec73e747e218b231f8e3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-01T18:59:14.969973248Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:55:59.371109605Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:00.318150469Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:01.286113281Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:03.00017774Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-06-01T18:59:11.419944585Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-01T18:59:12.693546593Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:59:13.589839356Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:59:14.969973248Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:41752d4ce10775504efddebc57316f74f125e98d9dd81171af78b4fb5101782a",
                    "sha256:259fd1fc5f3a0cd7cd94884661292c369911b91a386ffb510abfae5a05b0b326",
                    "sha256:2f2d27f3e9b78020683aa36757ac052ccc430f153ed14e1cbff22190e1919a76"
                ]
            }
        },
        "1.37.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1191722eead53502f6eaa6d1bcd723f4934ce12aa6a7d7ff288124d08979ceb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7af3433a16525aadffa5055f2437add09b3b31b5c8d1af036d25b6286de09fe9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a1191722eead53502f6eaa6d1bcd723f4934ce12aa6a7d7ff288124d08979ceb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-08T12:54:19.087727878Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:50:59.344273355Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:00.318884908Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:01.290971223Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:03.000159637Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-06-08T12:54:15.363872349Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-08T12:54:16.690780547Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:54:17.673286507Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:54:19.087727878Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:1130fd39512b0ded048858b5bb40e8b89961408ea002ef8b9251bb2d8a6fce2a",
                    "sha256:cd7b82152d0992c7baf7a2954d53e875166e0fae315b81e52e1d937b7b6308e8",
                    "sha256:86c3e259e2c44e5fd1e19622ea8ac125d2a62d22960dfbb0d874874e626f4b44"
                ]
            }
        },
        "1.37.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab0551606c6744721725a55d8a6637c7537482fce5f2b33245e0d9ac71862132",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e52d0fb4cd4f604ad04b066538f59bebcc050f6be0af225ac323c8b4390c9f14",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ab0551606c6744721725a55d8a6637c7537482fce5f2b33245e0d9ac71862132",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T19:27:55.444904414Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:24:14.930034924Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:24:15.326180499Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:24:16.346474833Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:24:18.000243308Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-07-07T19:27:51.537374528Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T19:27:52.877059323Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:27:53.966097861Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:27:55.444904414Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:e165ce1428c80f6a1c593d819e52da4bc4596a70ff4ae69161c45f11fcd21ea5",
                    "sha256:3bdd84f698fb3942e3c51af461cfd691d154af2645ab4dae3c8e4770e1f258ab",
                    "sha256:688c312fea907d1f929c802acea25d14c4903c4887f1e4fbcaa7ff8367a13471"
                ]
            }
        },
        "1.38.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c30cc8d3941acc1a24699d6429ec8ac61e7f79d8633e7916e4e675796172372",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "707e82bd245971cdd15fd8d4279b10bdf7d4adc675f5fb0ef91fa40ca1e83707",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.38.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1c30cc8d3941acc1a24699d6429ec8ac61e7f79d8633e7916e4e675796172372",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T20:53:39.611111568Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:49:53.818805327Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:49:54.325174553Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:49:55.313040648Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:49:57.000215872Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-07-07T20:53:35.722975392Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T20:53:37.137354658Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:53:38.140250143Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:53:39.611111568Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:5a971feb5323ad7d149288ebaab7718682988d5475958dc3bc74d6d4a8f48c07",
                    "sha256:c2a80e0af1946ae62f93893faefae06339aa8a9afe7d2e4b9e9eea77fe5fedad",
                    "sha256:963ac5a51a689bed71a863a1fff0b4b83562c0d97bd0699d90128446e9bd9872"
                ]
            }
        },
        "1.39.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:94fd3ad9a570513c78f171ebf1d2dd300a1a284346e823823c3569f9c97c8476",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2a2860d70751297f86bf6ace1537875c25b2ec94bde9bc6a7937a8292466420e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.39.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:94fd3ad9a570513c78f171ebf1d2dd300a1a284346e823823c3569f9c97c8476",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-08-04T08:02:44.019231542Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:58:51.435861222Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:58:52.340319817Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:58:53.347148026Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:58:55.000237304Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-08-04T08:02:39.962074945Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-08-04T08:02:41.443131529Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:42.499517568Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:44.019231542Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:4438887aa53a98321313f7b28a2fdc6b2e7e26115ebf3bda272d1180f9113cb1",
                    "sha256:7ec379d2e4422f1308759ad2976f43fcb166cd7da09e7bc0bd075e837586ace6",
                    "sha256:11e90e2b5a9631aa5ef3d3900c138f60d70014a5cdb79206cd3a4a544ea1e294"
                ]
            }
        },
        "1.40.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f95d01606436abead0af7f5b47a9aed498b0891ac35d62ddf4caa7d2c86a9553",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6e00c267fab88bffdd5f50a7a3ea8c51f5a2801b18762713b7e950ca18dea5b0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f95d01606436abead0af7f5b47a9aed498b0891ac35d62ddf4caa7d2c86a9553",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-09T20:53:44.150861049Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:50:29.884608852Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:50:30.193761669Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:50:31.200778036Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:50:33.000288849Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-09-09T20:53:40.945159082Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-09T20:53:42.118582893Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:53:42.917943408Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:53:44.150861049Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:0b5611a351a5a06207f6e12fcee2c3286f2d9c050dc6e5e55e386713d21ec8ca",
                    "sha256:c7e36dd94d22a4d40fd87df6f7dd043eac73db493f4dcd4da887a81adb1559da",
                    "sha256:c57b004df79d0d89e6db902d2e017ea36a20281477a25e76eaece53f541bbbf9"
                ]
            }
        },
        "1.40.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1de6419779df1adade61ff5de621f5d9590ffc7ad98f1e612ef23cf89c877af9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f2fb966d67c07f16254a18ffac6c97d59332428caa4576db34a3c235b6f168ed",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1de6419779df1adade61ff5de621f5d9590ffc7ad98f1e612ef23cf89c877af9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-28T12:22:47.995803676Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:18:31.889662544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:18:32.243926329Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:18:33.235893735Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:18:35.000315639Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-09-28T12:22:44.461763164Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-28T12:22:45.829493284Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:22:46.725528285Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:22:47.995803676Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:22d328606591bc67d1a30cae1765f31f0afe7fb834f129b976e1105db927a08b",
                    "sha256:e994594adee309193eab71fb4d38c4472db81d1973d20a13302d02cdb7f7b010",
                    "sha256:673e4d6e5dcee90767695aee4844c4ec09b03f34cb877217996b8c1badf69a69"
                ]
            }
        },
        "1.40.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8b3073aee7e65ca9ded03206e1c78a27dd8e88fd8b0cb22417471395594c1f75",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0b5f6b0d307dea1175660b976aca3599e8f6bc5346b6c219e3e1468502d2f1e5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8b3073aee7e65ca9ded03206e1c78a27dd8e88fd8b0cb22417471395594c1f75",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-29T17:31:57.317891397Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:30.163025815Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:30.35564344Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:31.196479261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:33.000350188Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-09-29T17:31:54.218770029Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-29T17:31:55.430424165Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:31:56.20649639Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:31:57.317891397Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:c9eebceb70bda0ea70e49eef3315d3f2cf8410d8c3032c06836270bf0ce410b0",
                    "sha256:f38123412599c9e26246738d55a6af0645d2c0073f3b05f74e9d8461f847c20a",
                    "sha256:1e586595b81fb09f794c7e589375b565524e85a7aaa5362f7bf0fdb558b27bae"
                ]
            }
        },
        "1.40.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98dd52ad9e1c30bd3b97f3a7a3ec75aacdb40fcf6f25953b3ffee05129446126",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0bee272f59b5f1a86346f7331ec7c6690e96cbf6b8b5af8c60fce044bf527b16",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:98dd52ad9e1c30bd3b97f3a7a3ec75aacdb40fcf6f25953b3ffee05129446126",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-07T19:50:16.056234205Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:46:36.799059254Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:46:37.268546051Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:46:38.271480748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:46:40.000063255Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-10-07T19:50:11.916022904Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-07T19:50:13.252461845Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:50:14.211486875Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:50:16.056234205Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:1af3209a8a5d6039671fb3e5ba081c461847f0e88048e7cad39ab5b5e147a079",
                    "sha256:34e59c8d494378951947ea7bd99db7739a9a9d6e92784efa4186630b8a3e50e2",
                    "sha256:6d4428f4a62a9ffc3a8ebd0b429dd268f0b4ae0ed05e691969f411d269f02df5"
                ]
            }
        },
        "1.40.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e3f0143b365c656c627310aacdba4e890ce5afd3cfa7b673744813f3e5e73f9f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "edf693471d18a997a7278afa0800adda598426f0b711ffae49f9e8e2e8af9fe7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.4",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e3f0143b365c656c627310aacdba4e890ce5afd3cfa7b673744813f3e5e73f9f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-19T13:49:41.854969733Z",
            "docker_version": "20.10.9+azure-1",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:45:42.390470785Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:45:43.244265378Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:45:44.262611968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:45:46.000195222Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-10-19T13:49:37.503451345Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-19T13:49:38.969406413Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:49:39.996767618Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:49:41.854969733Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:73631daf906f7ac2176bd080b27ebe15cadaf43b42f1c8d059d141b80341a86c",
                    "sha256:03eef89aa454d5949b28714fcd4dd4faa15b5f1603d07f18b905dae360fd3cbf",
                    "sha256:f23ee48ed6b7ff3a7188491f451be56392b975d5ce6dc2206c9c91f9b8b73989"
                ]
            }
        },
        "1.41.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:035e75f6e8a12423b679092e9948776979d980261b54ca0c16618bff846fb265",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5f5bbe21fee9f0dcf1e236defb53fd5a8f6fb062049c064b0f11fbcc260fc27a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.41.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:035e75f6e8a12423b679092e9948776979d980261b54ca0c16618bff846fb265",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T17:40:23.21707778Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:36:23.643818453Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:36:24.243723304Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:36:25.254930605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:36:27.000339982Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-11-03T17:40:19.113203564Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T17:40:20.483603194Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:21.443113627Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:23.21707778Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:5d3e4daa174389611becfc0447c4ff585d843b077c31ffc7f7cea1bb352816f8",
                    "sha256:e59c93789d287ba6e3b73d68cb926bb155ebb8a4fed1957b9516effcd9937832",
                    "sha256:e32c6a1a5abdf75812bee587044b8a33b9b7a14e5aac83294ef6b08d10d71077"
                ]
            }
        },
        "1.42.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb7e7cd3f74d1e518f33e7ef197b033cf168d345d46e40d9c969d704e33eb2ef",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6d1a26655326c281a3d9be4f2b9869673138ea85a4702da4adb84fbb74db03ce",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:eb7e7cd3f74d1e518f33e7ef197b033cf168d345d46e40d9c969d704e33eb2ef",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T18:14:12.79817815Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:10:22.458919081Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:10:23.242507207Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:10:24.227566079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:10:26.000610066Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-11-03T18:14:08.464360171Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T18:14:09.851607382Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:14:10.957899963Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:14:12.79817815Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:23144daaecad59a21813ee1fdca39854bf34631b332d93a58e9970f24f010687",
                    "sha256:b23e998eb5dc862a3c4ef1cb1737a26357b6610cb74f8e41d961c27ae9255aba",
                    "sha256:62a5d5d7e74724df15148bacd5f6072a8e0b314d35fe3fa20c126c479698558f"
                ]
            }
        },
        "1.42.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7522fa91c61358ffbbbaf60c194f33b0fdc68d54891c8bbd95262591691916a7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "79fb644cdf1a5d4039f7a0a1f3392ed4e519ea7e2cce1b52b72f69c48d7c8233",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7522fa91c61358ffbbbaf60c194f33b0fdc68d54891c8bbd95262591691916a7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-08T21:37:39.874189119Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:33:35.616668333Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:33:36.263556431Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:33:37.254905039Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:33:39.000210889Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-11-08T21:37:35.383774663Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-08T21:37:36.923485584Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:37:37.945933672Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:37:39.874189119Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:c0752f87b1b18ad25559369e45c9fe24db06256dfb2b865c9805edce157b3b59",
                    "sha256:4c090eb307bd2397ef51b50d0603e3db62c27813169a2e514f830c39e6d01c1d",
                    "sha256:a4f56959063f41e8cd6b1a321fe9144aed0920885be51b9a109dfd8400f63053"
                ]
            }
        },
        "1.42.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1b9d3f44e3fdc98a28756cb09e6ff1209c1d7cc6c40c715d354893e4cac5ece",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b34324ba4899c81a5551fa5512611dc8edd92ca26d0d5fa387795e1a751b30f6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:c1b9d3f44e3fdc98a28756cb09e6ff1209c1d7cc6c40c715d354893e4cac5ece",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-30T17:59:09.154672363Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:05.222387771Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:06.188604243Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:07.195753853Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:09.000308933Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-11-30T17:59:06.201899743Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-30T17:59:07.319667315Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:59:08.073711672Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:59:09.154672363Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:48ec421ea0e56b5a49e0af0b161657f12f948ba58f01c2ae72271beeec6a2bb8",
                    "sha256:120c8383f8af248418be9b544da18532397e8140e670554a374501e31fd0b00d",
                    "sha256:c42fe29eb3bbdd96423d5ce16f53d134afe5054f63743907960f43fa0c5bc8ce"
                ]
            }
        },
        "1.43.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:96f1465ef6db548781ac659887764dd5c5b0fa461fad98de4e2466c32e987708",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0d08752f158faac60f15931c96a0d555952db2b5d26c94a0b8352a1d0ff2baa8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:96f1465ef6db548781ac659887764dd5c5b0fa461fad98de4e2466c32e987708",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-06T09:26:39.898524556Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:22:16.745445913Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:22:17.337050162Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:22:18.328624354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:22:20.000235427Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-12-06T09:26:35.342372734Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-06T09:26:37.055479581Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:26:38.226331205Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:26:39.898524556Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:b97971eae5c822c129e36f77af120545498f307d9cfd860dc07c2478f2c534f0",
                    "sha256:f73a0085ed5457593959556fb516cccee2948dfe5ae122829519f42ea6f6e830",
                    "sha256:5764af26e8fc496bef6cf0cd12a32aa6d261b120d0809d013bb0deae5f3cefc9"
                ]
            }
        },
        "1.43.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0f4fe6b6f8d910aa293bb5c0181fe1a577fb8707c8bfecd01ba23ac54539ae20",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "fb22142b84ad6e7ee1ba0913b40094a55ac823089b34f71d4b927307804a30b3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0f4fe6b6f8d910aa293bb5c0181fe1a577fb8707c8bfecd01ba23ac54539ae20",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-30T12:32:41.872984331Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:28:52.629471046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:28:53.250403972Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:28:54.260489767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:28:56.001083579Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-12-30T12:32:37.943186589Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-6-multilib=6.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=14        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-30T12:32:39.414628278Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:32:40.439620394Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:32:41.872984331Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:e740a06caaf5c3e84aa59a098f3895aef3289feabfd068ebf96727b46ff35e13",
                    "sha256:db3175ed86888efe0cca1a20f9abd126d47d52460bf66ac63bb0bdb196046c55",
                    "sha256:d785cf443b6497e02b6efab5fd6bb967fd6d4cd2471457db0e3da6aaa7e079e3"
                ]
            }
        },
        "1.43.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aecaeea49f27ef11573ced90a41b0aa2122aee0469d5e8166c0b1afbb09aac0f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "901e8ffd9523a91a0275e15adf731c78d191dfbfa3ef7c7adac4b4bc565f976e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:aecaeea49f27ef11573ced90a41b0aa2122aee0469d5e8166c0b1afbb09aac0f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-01-28T10:38:20.925431891Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:34:21.699057482Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:34:22.23701053Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:34:23.230124448Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:34:25.000226318Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-01-28T10:38:16.93040141Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-01-28T10:38:18.48565822Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:38:19.508899234Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:38:20.925431891Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:aff9d2cb5e74b986dc5b6eaa1b63e69a286f29d55980d5b2e01bc03975a92fdb",
                    "sha256:8b6d43f41185e8a49196d89ecd408534af6696e3dbf9ab6c67e1458413dd723b",
                    "sha256:c7694eacfca2d0f336d42e45a54f50f5c96631e1fb0e0059724a18fe4b16261b"
                ]
            }
        },
        "1.44.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da8c9b22cfb14c6ed78a0a0a12909e6c86c7d6244309413424ef83088d3dfa14",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "186d00dd864612d96203325284ebf96eb39fe3e04a761e9ea54639f00e358236",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:da8c9b22cfb14c6ed78a0a0a12909e6c86c7d6244309413424ef83088d3dfa14",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-02-01T11:10:36.88027858Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:06:36.775248729Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:06:37.226957256Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:06:38.243865818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:06:40.00077583Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-02-01T11:10:33.017530085Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-02-01T11:10:34.509546335Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:10:35.479517873Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:10:36.88027858Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:96743d50c62cd61ccbb16969075c50bc0407bcf6d72a6f10ddab33dbec4b0252",
                    "sha256:e24db7737fe2217eab144a4059ae88ac1f41003de0a5cd9fa9716b3a18eb29d1",
                    "sha256:81f5b3bee2133eea30f775e952e7998bbd2572ca069c4343af849310d94e4535"
                ]
            }
        },
        "1.44.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fe19ed7884cd86c5369dede6d8ee396c08c6f938eed3c51863669e74bb8db792",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f5dd885609f6b2a0353ab587c93dafaf6d84b94c227c52523916814b116e8d92",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fe19ed7884cd86c5369dede6d8ee396c08c6f938eed3c51863669e74bb8db792",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-18T15:18:08.819498574Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-03-18T15:18:01.410023908Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-18T15:18:07.843474958Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:07.973885876Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:08.819498574Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:6b185e600eeb5211e2d4e5ac3d918a3fdeec29d29f18020aa35eac61ccab3d20",
                    "sha256:6191712d0164e28b5f0884895f2cdb5671d89d42201cbcb7907f730691059827"
                ]
            }
        },
        "1.45.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8b204757ce31ef32ecbfb8e8d578769fea1b295ba24f03c38d5d79fc98c88f26",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "afe74e5fa08259c2737001acd3f7bb01d5ad800ba4ad68db8d13c6f359bf1b30",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.45.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8b204757ce31ef32ecbfb8e8d578769fea1b295ba24f03c38d5d79fc98c88f26",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T15:55:04.615715372Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-03-31T15:54:57.214759718Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T15:55:03.686699404Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:55:03.805377393Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:55:04.615715372Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:d4048493c4cc5593430a8ba73e5574f2f8389b110be27232605c439d3a4f6ab8",
                    "sha256:9b3ce1ddd6b0ec76d4dfce33714fbf1846bd649c61ddc111bb032f0bac48e340"
                ]
            }
        },
        "1.46.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc38979879921e1716b7a1404979a58961816ced4030f0ffc0559b69578b1c8d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5c994e5d8fa6212891c438031ec5d227ed476b9d42c9d75e2a54a956306c5307",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:cc38979879921e1716b7a1404979a58961816ced4030f0ffc0559b69578b1c8d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T16:31:13.794757525Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-03-31T16:31:06.563310982Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T16:31:12.815148211Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:12.955549932Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:13.794757525Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:05e809ac61929b70b3e20ccbc6f6c1ccff14738fbd4c5e86969bed841da68fc5",
                    "sha256:25c960150101ec17656570a368dd731fba2a1d48fb235f4ccacd203dcf5d45a2"
                ]
            }
        },
        "1.46.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b4b543ac45c3798d52e2ebde924b336217d69b521a2f2e733a61d369baddacdb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7993adbc1bdafabd7d98f6d0bca812e68ad79148d8a4b8cee717866ff6414d05",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b4b543ac45c3798d52e2ebde924b336217d69b521a2f2e733a61d369baddacdb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T17:06:13.778897064Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-03-31T17:06:06.490449346Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T17:06:12.860699742Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:12.976867349Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:13.778897064Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:10c4c9756c09e1a1ef12896a3e95e0b34ca21e79f3b70c4ba73f15430f236e1a",
                    "sha256:7c4b103972619e0d0758273ad460dda5408b9cb6ef86906b9ebcca6ccc0ebcb5"
                ]
            }
        },
        "1.46.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:51f5c90e4a0c3707f908eff9d6cbb222e30e45c0cd6cdb2cd67ca22c9bc68585",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7c20981407eca80864d768f5c5a76eda256ca05dece43c56f6b1910d75fc8a54",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:51f5c90e4a0c3707f908eff9d6cbb222e30e45c0cd6cdb2cd67ca22c9bc68585",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-05-18T11:44:03.185726348Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-05-18T11:43:55.756615223Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-05-18T11:44:02.283146313Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:44:02.394927022Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:44:03.185726348Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:0f0b166fe3efa308b031c63b2c48e26a3f04bce6c4671062b03db97c01585c84",
                    "sha256:631c6033bda67296b6af644b70047d3e5c1ae6419cc8c617a9ed7a051a6e1827"
                ]
            }
        },
        "1.47.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:491d6170e18b8548a3ddb839788429365f0eecee3c8f11ee05ca5765ffc18134",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "82ca445d4ca83c33a3f0b0d2c0d496b9bb8c9947da321c227ad8177080c85f75",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.47.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:491d6170e18b8548a3ddb839788429365f0eecee3c8f11ee05ca5765ffc18134",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:05:22.038349722Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-06-29T14:05:14.87311927Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:05:21.128391974Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:21.244323675Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:22.038349722Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:739ac01110481b7f407341d5446c4926e016aa09eda8e2b8b62170fd9b41533d",
                    "sha256:b2ea8c0eeb13ea0596c5ffe984def0641813c631eb8eb4a9e74acf9e702ba6f6"
                ]
            }
        },
        "1.48.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ef1731ad8df25b27142062e0816cf83d65863899c0fdf6d5520b27f7c52a273",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d5eb2025f3c56bcd126d9126f21cc4af5e8643be0e4d201061113a11a3f87eb7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6ef1731ad8df25b27142062e0816cf83d65863899c0fdf6d5520b27f7c52a273",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:41:07.611116834Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-06-29T14:41:00.452889924Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:41:06.720091262Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:41:06.835823978Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:41:07.611116834Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:754e3c81943f4f167f8f9eb65b117039252ae7aef667d647c9b4e92f614f9490",
                    "sha256:7943100e2eae717d40a108f255c22b8c161b6ce1255cea23bad29e4f98b7266d"
                ]
            }
        },
        "1.48.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d593d0aecb12ad180dd76a869c157f335d8bf8e4d5a8fe5155ee6dcfe579614f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9206cdae181d46f07bef3701d241c828e4663c3e76531c919b316dc7641376b9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d593d0aecb12ad180dd76a869c157f335d8bf8e4d5a8fe5155ee6dcfe579614f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T15:16:12.724324074Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-06-29T15:16:05.685157681Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T15:16:11.783919796Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:16:11.912983249Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:16:12.724324074Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:ba4b44dcb58b0f4146097f925dd2840c742cc8f00514e70dfd700869fa890fb7",
                    "sha256:0dfa223e9f168f750d65732e1a73af809b72baab2f27fe1fa0126df390695562"
                ]
            }
        },
        "1.48.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:966a7073315e79c81b4497e8a805ec1b7e33326ff281b17c1e880de602742bf7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c8ce20c9fea887f5f0079012d7d08cd267cda99b7d6dcec04fddc4678da37db5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:966a7073315e79c81b4497e8a805ec1b7e33326ff281b17c1e880de602742bf7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T16:09:16.573248806Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-06-29T16:09:11.861133683Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T16:09:15.583228635Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:09:15.710167834Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:09:16.573248806Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:dc8321359f57272a2ac67acc35f1f2dd22a739e6078556c6e41c5b3ab2e35edd",
                    "sha256:2a13bd4c38e6b01096db2adfd4b579a83779356d7590c0c05c9ef1b62ddabeb7"
                ]
            }
        },
        "1.49.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c3f31c65cfda5ee7d7ca0b9e49b46eeecfe03a9c339d11eade715100aa61d6b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9c81e3fb39d9a7ef8ad7d832a2e4a51682fcf3920cbb1fbe1773c3c3bc6bca28",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.49.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0c3f31c65cfda5ee7d7ca0b9e49b46eeecfe03a9c339d11eade715100aa61d6b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:08:13.750160255Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T11:08:06.507607192Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:08:12.8120127Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:08:12.928725772Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:08:13.750160255Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:58a1528b0cdeb95a0b9a724bcd57287e319f47d47a73ad8e9790a7b4e45cb10f",
                    "sha256:35816881b5143c18ca81fe212d6220c6a7c57cca8244a3988530cd2bc672d98f"
                ]
            }
        },
        "1.50.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4471c2ae9cb911d31ae3ca6d8a1f13621c16de55e836a55d79f5f2d2ed0b5a34",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "872acaf63b86ae76646fe4025e3f555e356362796eae541c859151e27759e485",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4471c2ae9cb911d31ae3ca6d8a1f13621c16de55e836a55d79f5f2d2ed0b5a34",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:42:55.029448596Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T11:42:52.798681365Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:42:54.066029206Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:42:54.191866472Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:42:55.029448596Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:fe53e9cbc3f06887ab69b23a991b7d61ffc1571d2b1783ed09ad32f0a49042ce",
                    "sha256:a17f9815a7a636a50a1ce3bf9b9b6b109dc97e94defee666c0d41f6c8ab9d9cb"
                ]
            }
        },
        "1.50.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ea8d42928f1d0a995c2bcfeff28ee8fe6f9448dd5de5f39cb5fcc30da401b44",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1ec1195a0ef588613566669c40e918563d85ed03ed6f9e779448f7f1489b0063",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:3ea8d42928f1d0a995c2bcfeff28ee8fe6f9448dd5de5f39cb5fcc30da401b44",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T12:18:28.498948819Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T12:18:21.345601499Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T12:18:27.528570831Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:27.665994596Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:28.498948819Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:12fa29ffff31ae6f1a3915da1e6f8aab064f59d643f65fb8186743e6990d27d5",
                    "sha256:1ad187fc0c1d55e10447ea70f5a823a9daf016fbbebd7107a8ecd948788a057a"
                ]
            }
        },
        "1.50.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:334c7de65bb040bccb0dd95fe710d74d86b416d8e928ebadc292fb416bf955d7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "dfafc1c0070459ec289c2e4b20f75e9b8c28628e84d6049d6d273cb74a4539a3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:334c7de65bb040bccb0dd95fe710d74d86b416d8e928ebadc292fb416bf955d7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:09:38.95611923Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T13:09:36.246333792Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:09:37.992726046Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:38.115469927Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:38.95611923Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:a4d54b62beeed7a83030e3a2fc43433acc1dbdf893bac628af8937bc63d9e7c6",
                    "sha256:ce8ccc012610ef2e92dc1dbc58c057077b42e813215938c8a0fd9d1e7ed55c95"
                ]
            }
        },
        "1.51.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ed0fae622fe7d8be8881846842d499af7805656eea4a6eb91069a4e508a3c909",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2b856f12ec35d11011f7bf15c976a17b2fcb9fdd7485a0d1f05840ee853d07ab",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ed0fae622fe7d8be8881846842d499af7805656eea4a6eb91069a4e508a3c909",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:45:10.501052598Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T13:45:07.883798833Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:45:09.576003245Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:09.701138547Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:10.501052598Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:d0bc12dc613950a470df3966b696796eada0bc34b7c80e137c514ab4b57271ea",
                    "sha256:f60f0d5c604a15408753209b669118fb693ee876ea751fcf6837ad1a76fe8e02"
                ]
            }
        },
        "1.51.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eba0f24bfbb4f5295e5d2696c3738d05d343ce0a6ddddb1bbe6826945a365e51",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ba9d2184b4014ce0e20f9bebcf2637b4f01e988d84bffbcde0a50c46c6d40c12",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:eba0f24bfbb4f5295e5d2696c3738d05d343ce0a6ddddb1bbe6826945a365e51",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T14:20:04.533171745Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T14:19:57.27961251Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T14:20:03.606872556Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:03.728331512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:04.533171745Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:60e1c6f6d70bc59c459ef908b7d5f24946f92400f9515ad24e07f06bd8111a62",
                    "sha256:c78ce0c4d150b52256af3b6732fd20440ea719abc3a6949b2253c71c50326ff8"
                ]
            }
        },
        "1.51.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8b23990616b575542c6e6f1c2745c2ed61e39ec0cd228660372478024208a553",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "59f828cac69258829e3b773dc3400cad874405a0c74c09d870d15c2b7ace6c24",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8b23990616b575542c6e6f1c2745c2ed61e39ec0cd228660372478024208a553",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T15:14:47.975578973Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T15:14:45.090177289Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T15:14:46.914391011Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:14:47.063721326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:14:47.975578973Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:6f072d045ae0b191d73f67fb5e2b98aca5003c2cd8cda109acc1c7c08737b6dd",
                    "sha256:d6e1b3449d3230aa44679bfb371bcf29fa8d53b0c6adf9b4223c56d43bdffe65"
                ]
            }
        },
        "1.51.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9cbdcae1fef222f0bfa46ee3dbcea7f0e37d0c0f7e15072a052b44a19547c9eb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4f56a5945187490a6211d7efc6b44b7afedb21e77bf0eef8160f6fdfcb087c05",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9cbdcae1fef222f0bfa46ee3dbcea7f0e37d0c0f7e15072a052b44a19547c9eb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:16:40.573973217Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-11-30T15:16:33.062432298Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:16:39.619076721Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:39.739368333Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:40.573973217Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:f0f2ed8ebf240660de0065373d75aa21e1b552536db619296c0e8f553304c3af",
                    "sha256:326137cb67834673af69d1f58e0501862962797f1f0b059865e97ae0b64716ea"
                ]
            }
        },
        "1.52.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1a9435a7894b09cf54fe953f1883e85442950138d11b93618cb918c1b15c537e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "90911d7203b7fe7f0bf5f980cb4403785467e4dfce3e3cf3efec666a7c7e77a3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.52.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1a9435a7894b09cf54fe953f1883e85442950138d11b93618cb918c1b15c537e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:50:27.786267214Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-11-30T15:50:20.546369861Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:50:26.780772362Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:50:26.910426568Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:50:27.786267214Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:f7fb511966dbbff8fcdf4f545b6c3475b93803f5ace526ffa1b997ecf145673b",
                    "sha256:bc3f9cacbe174ef592879a67995dd58609ee0b4de0ddfa15f7169c2c8b156611"
                ]
            }
        },
        "1.53.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:061f331b01c25b14a7df32ed030c0d02dee80d6c9257762c94b2c19c33868ef3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7da56152e17b90a24355cf16dad22cd911a22d8e7c34ee27c2bb6a364164f9b9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.53.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:061f331b01c25b14a7df32ed030c0d02dee80d6c9257762c94b2c19c33868ef3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T16:28:11.650752343Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-11-30T16:28:04.216522406Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T16:28:10.621733453Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:28:10.76024988Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:28:11.650752343Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:08211a85699aced6842e0faf58430f4195c2107577fd19332ac8da455d17cc02",
                    "sha256:7bfc710a5b3dc9cab6c8d1d621704e7e1fe42b42d6c529d61569c6c95fe68548"
                ]
            }
        },
        "1.54.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24e936f8beaba693f61aa78344b967e431049f22f526ddd4ba25eb0fef27d1d4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "dda0daa824d21cc1b09bdea7ab4adfda0fffa9620bd9ee7b121f9a9cbf81b58a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.54.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:24e936f8beaba693f61aa78344b967e431049f22f526ddd4ba25eb0fef27d1d4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:08:16.543677061Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-12T07:08:09.174677696Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:08:15.592707478Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:15.710568627Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:16.543677061Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:28d887511abe570037cea29dee04bf616ccd9fac4d6e9daf58185c6f2b06d8bc",
                    "sha256:dc7d5cd77fca6b58a0a57a0cee165dd58367ace8aa7f28ab539f9a461a2c5937"
                ]
            }
        },
        "1.55.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8ece2fe8f83041318abd6d725818275e21bce1ac39702d0b1854d08e6800911e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2980e39037ff03a2493db6b69c20d37e1fab2d8a1c5be33b48f1d1e7821ee6a6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.55.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8ece2fe8f83041318abd6d725818275e21bce1ac39702d0b1854d08e6800911e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:42:30.636042243Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-12T07:42:23.150097092Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:42:29.673401657Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:42:29.791844522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:42:30.636042243Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:042514cd9c2c3db2ca3c5bcae016c19adabb12bb7564cf31291cf54109c2247d",
                    "sha256:79d961a6c65fad6979ba734fa0d6c367f6eddaf9521af3f0ca5a03b78dba1d9f"
                ]
            }
        },
        "1.56.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afbe96628a67c1b3fb84e7ada8686dc3f3fa8d76743c0f0050b3c7a2ef31b8eb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f1bf052cae60818ef967cedfa5520bb7bc376906b34602d61582eda75f5c6125",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.56.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:afbe96628a67c1b3fb84e7ada8686dc3f3fa8d76743c0f0050b3c7a2ef31b8eb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T08:17:05.755647797Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-12T08:16:58.434137556Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T08:17:04.816737937Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:17:04.94169307Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:17:05.755647797Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:557a7a704397a354e5997be1c482f4effcfaee6edd8b703b52f28a82557568a3",
                    "sha256:27d66e00451d52bc3c1cc7d98ae791eb2bab1c108b7496b05d3e95da530a37a3"
                ]
            }
        },
        "1.57.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7cd159e6072136eb1a7f3b27360bf2b67e2cde504445850c4c20a49cd1fa4d3f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "fd7dd197fb2a61e645fb1dae37ae8dfc239b319a0ee70f8fc097ae5aec0654a1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.57.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7cd159e6072136eb1a7f3b27360bf2b67e2cde504445850c4c20a49cd1fa4d3f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T09:07:16.074779733Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-12T09:07:09.949009483Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T09:07:15.15358843Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:15.265137813Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:16.074779733Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:7609d89ec143d39a1cf5414cfc052adcb317dc3a3aac99956ea257e92f5f01bf",
                    "sha256:93666095caa3bdf20ddfb9eca7c696a48c02ab852a8ebe909c4947bc2f025350"
                ]
            }
        },
        "1.58.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f2dd49aab54be043ed738027c71a8e4e786b598c51cca68fbeb099ab6b0a95fa",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0ad3cdb92475900197b5054d1a3358d6484f115b1422dd6cca18eb3d02e6233b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.58.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f2dd49aab54be043ed738027c71a8e4e786b598c51cca68fbeb099ab6b0a95fa",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-30T20:34:29.327855719Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-30T20:34:22.106154805Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-30T20:34:28.381943479Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T20:34:28.507489259Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T20:34:29.327855719Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:45428bc223416b645719a252c79fd59d695c5bc547438e95c1b27283bb3f6277",
                    "sha256:03671273d2d3ca3241acf820686574c28ed2e851fcb19a51bf45dea26b8112f0"
                ]
            }
        },
        "1.59.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6fcc971b3c47772a5d84fa77200bf4b66910e8679c2c9ce9d6d93c6a15f71457",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "fc0e2b2f13e944780dc20d69c257eab11c26e6a057a7eafe6d6ca7503c32ed20",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.59.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6fcc971b3c47772a5d84fa77200bf4b66910e8679c2c9ce9d6d93c6a15f71457",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-02-16T16:55:33.896183607Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-02-16T16:55:31.009428953Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-16T16:55:32.903714329Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:55:33.036052467Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:55:33.896183607Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:a814204bd085b14f550a6580379368f6239fc10563fc6ca0262868f645f37c10",
                    "sha256:08e4f42494df8b2d011f2b5a54becc07b065c71ebed0491b5255eef60fbffbae"
                ]
            }
        },
        "1.9.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:526ec7af66a3c767055c760f85e3d1365d633e51fc9dacee9ceec3d586cf77d8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1fa1485853a7fdb249efcdcf696c4bec1e074538199b82539a3554ea126196bf",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:526ec7af66a3c767055c760f85e3d1365d633e51fc9dacee9ceec3d586cf77d8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-04T15:55:07.500514016Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:50:09.725855916Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:50:09.908643711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:55:01.596208177Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        binutils=2.29.*        wget=1.19.*        git=1:2.14.*        vim=2:8.0.*        libc6-dev-i386=2.26-*        linux-libc-dev:i386=4.13.*        g++-6-multilib=6.4.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.26*        nasm=2.13.*        dh-autoreconf=14        valgrind=1:3.13.*        ninja-build=1.7.*        libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-2ubuntu1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-04T15:55:06.596703842Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:55:06.788580561Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:55:07.500514016Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:163cd6e016d6e8b8a7567050b710d416727c3696d1698b026b7bc625a999833b",
                    "sha256:de414ce5a2c069efea2bad71d1723e7f1cd352dc64ecab7819c63d2429c8aa9b"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6fcc971b3c47772a5d84fa77200bf4b66910e8679c2c9ce9d6d93c6a15f71457",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "fc0e2b2f13e944780dc20d69c257eab11c26e6a057a7eafe6d6ca7503c32ed20",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.59.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6fcc971b3c47772a5d84fa77200bf4b66910e8679c2c9ce9d6d93c6a15f71457",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-02-16T16:55:33.896183607Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2018-07-17T00:51:43.695850704Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3d5130b8f7f795c053d60902a67257290e689a661581dd3e63e52931b2d835e in / "
                },
                {
                    "created": "2018-07-17T00:51:44.670800332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-07-17T00:51:45.4891784Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T00:51:46.328309587Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-07-17T00:51:47.11908914Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-07-17T00:51:47.38896301Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.148147118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.325571517Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.447378827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:33.596969075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:802258de06704b41cae77b184ac2af3236de8283a7bf4030e65f6e53e0e763a6 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-02-16T16:55:31.009428953Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-6-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-6 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-6 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-6 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-6 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-6 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-16T16:55:32.903714329Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:55:33.036052467Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:55:33.896183607Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b91f8d903cf1125f78407b85f7513a427bfc69d851fff778461e53cc58acce",
                    "sha256:d5ce7f24606728e4b34df8c844ca1fad74d24fcc11c3e4a3b38d117077ed6807",
                    "sha256:5251addbe073e88088288790f450f853171ac333296b6049f694270f7544fc2f",
                    "sha256:41f50d293d3afbe39e131f402644cc586952d5075d0252776194e4b82a6411a4",
                    "sha256:b3c5147f2ed120fe124b06bb4dbb713605431d2f54b33438d08a592d6dbdc704",
                    "sha256:819547b1d6c6297de7607f052e39d50651a6f28d0d8d0e9336efaf76fb759f53",
                    "sha256:a814204bd085b14f550a6580379368f6239fc10563fc6ca0262868f645f37c10",
                    "sha256:08e4f42494df8b2d011f2b5a54becc07b065c71ebed0491b5255eef60fbffbae"
                ]
            }
        }
    }
}