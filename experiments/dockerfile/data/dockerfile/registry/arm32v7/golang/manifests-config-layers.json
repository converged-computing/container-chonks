{
    "manifests": {
        "1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ec5c62e7ec034c7d0edd33aa6cc7b85e299c03e495785cbc69b776a929f012aa",
                    "size": 2324,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm",
                        "variant": "v7"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:5ad58349cdab8f05e695c96c93f840ab90b8dba870e9def0162cbe7d7ae144ac",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T08:35:34Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ac9a7a60334785e6d459d950fa943b99ae06cd34ebb785a68151c41bc59d9a15",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:ec5c62e7ec034c7d0edd33aa6cc7b85e299c03e495785cbc69b776a929f012aa",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5e57aa99281c3ec63bca5261a1f93d77d65218521c46238add612a2b6c0377f2",
                    "size": 1923,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm",
                        "variant": "v7"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:71df6ab6f3d87c5271834ff44b0b5fb8b6d4e34f08dc7ad86f75a6394949dd44",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-29T01:38:11Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:dcdc524c6fb1376c9a25fdc7b7b00f47da12fd063092a2dcedd9d8036fca148b",
                    "size": 567,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:5e57aa99281c3ec63bca5261a1f93d77d65218521c46238add612a2b6c0377f2",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:ab17bd335212be53dac7b0337584aebac8ae0c6223d237e8ef4a1009861f0690"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122398828,
                    "digest": "sha256:d4b6fe7f7600695f567be25f8b36f1f281714557f1d7dcc73fb424f105e770ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b8793682d238c270dadb0de0e172ab82c728bddb3272aee882559782f27e7836"
                }
            ]
        },
        "1-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:69e5f6bd58d0422ac26385eba340b0db6d96fd821b4172c625c61d55e130ea4e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127883236,
                    "digest": "sha256:40d2e76b10ba0e6d3493c202eaa35896d0e4a86ab7cf4e86ae43a791bffe3cc0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:02573b5621dc2be7cb2bd55dea70e996344de853181fb2ea4f665cbd3a5dd128"
                }
            ]
        },
        "1-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5162,
                "digest": "sha256:4a431095cd91a41aa55520825b30a7028c4520d78e31a9a8029885e72cdbd8e9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2409178,
                    "digest": "sha256:420c7481a3a76d5d12df768d2745ddbe40357df0af780c756a5a7d1f2a43d288"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280082,
                    "digest": "sha256:34dc3fe42634443664e9a301e5345f499198a7049dd70e0f11435810de78c089"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:7e12d058a2d7a2c4a9a168a40af711d1e6e2eb133d02f486120163550f5b6928"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101750072,
                    "digest": "sha256:e461d13e045068e81ce4053d9e3353e951341559bf8cdc550dd8ce8cbadfc181"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:125953421e9cb224e4877eb7ae30b687246e8adaf6bbfe7eeccf7138ea30a996"
                }
            ]
        },
        "1-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5381,
                "digest": "sha256:4d8018a236253bf6e7ba2d78e6fdc92779a951ece137bec2cee821e0181b0aa8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2436506,
                    "digest": "sha256:767c1b67bc22761376676021ea5a310e7a7d1344b7a017bb8ede1a202340dbaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281062,
                    "digest": "sha256:440c874fca1bba2dea0b264c1a545cda53dfcf06c213fd1851351a0314155ce9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:d69a4cf3989e4269c03e571a2106f74c55ec0692584fa9b5a25e173f47386916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104696844,
                    "digest": "sha256:6d28e938e63f01305b9fca80d243f0e8200bfb6047164b21ddb7ab2444988116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b2e139b372b5fbd1e148aff4219d01aef61028af5c49825237cad7107cce45b7"
                }
            ]
        },
        "1-alpine3.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5257,
                "digest": "sha256:daf21c20d23be5517467d8b46a662dffe7b176d0e08ed567633e9419db837a4e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2427969,
                    "digest": "sha256:380010979fdd8a9a4b0bf397034a27ec6cabe61d36e9e6d460ea986f0ddaef38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 271083,
                    "digest": "sha256:2b7712a4d740510f627d99248ab70f5f63889ee83ef517cb5693008048fca32b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a31a65400d78fdc6476b34b5a5b527b50897c419063fc3964de65e7768542374"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111364899,
                    "digest": "sha256:df9bb38333859fe4732239b10d791994e4f36cc6e36ec3a519d0d045018a4889"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fd5800355b5d2fcca8c27b67eddc9d592790739e9af6348d4ad85665be80fb3f"
                }
            ]
        },
        "1-alpine3.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5432,
                "digest": "sha256:0337ab454da78f596af1c5d313111a4ad5941ec30cf2b074871b5f504b09ca53"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2435092,
                    "digest": "sha256:59775c20a906b1a49edcdc41a700a795998979d6ecf8f8d9cd7cbdf45e686d81"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283850,
                    "digest": "sha256:d3deee6c11dea253433f5a7fb42877f856d051cfa15eb3e4ee703146e9aef8ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:df86b0df156c3a843050fa9e04674844b0a05e5c200ecd837ac3e0b14b4462a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118396979,
                    "digest": "sha256:a4f696fed34456f37ced948104f8cb0bc0ce61a3e151155eb8c0ba1707d52a2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3dfac0393dd5713caa6d77a2b12c4bc1c6a290f9cfbe083a15b4ca4859259e1f"
                }
            ]
        },
        "1-alpine3.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5125,
                "digest": "sha256:bb95456e7307489ed589d94a9566b418e61a61cc21c5dcf996da64a21b06d0a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2420546,
                    "digest": "sha256:d378ffb313542b797defad9ec843de710c353f40e17e124e74f7e874971429ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283883,
                    "digest": "sha256:e3e09b5f906611635ae71377bb2422dcad00ded6df847985eae9078b8dac5a41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98373864,
                    "digest": "sha256:c82163747634d83d5eaa8470bbe333cee88194f6b88fa8c9ef7daf469d8f1fdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:6abaf100ef97405e9b360e9e47227b2e0c3a7a6ab9afcd9c785cf5099f68d01c"
                }
            ]
        },
        "1-alpine3.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6334,
                "digest": "sha256:abc5dfcdbecaaf165445ef62d0b47677d90812329e9e2331f99f803d42ba7624"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2869713,
                    "digest": "sha256:d4ee79c42f17f258e1c67dc32e0776c934799d208cd0a9b6264f65d60f1a26fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 285548,
                    "digest": "sha256:7c2c62ca7f5ba780c858dc20565ea76b4cade1785f8d66ef2ddc6f7cda873f95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 65764324,
                    "digest": "sha256:17bcef6fe7f3cfb78bada98faa4fe7c8101ea4c0cede930f63135eb6cc0bf249"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c176b9c960e3bd89e5e5a4bfdce97de191d71fa479564b65c4dac52449bba44c"
                }
            ]
        },
        "1-alpine3.18": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:9b7dcaa57dfad1b7fb8afd4bb920d89a1f61d58faaaa6c2cb2732809dec2bfd6",
                    "size": 1923,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm",
                        "variant": "v7"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:403fe38628345283254b3c5125336529353a53efff061f18574b72bc242f6f84",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-15T08:39:02Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:98ed1ae0dc016b6b69b2b67239b27e0f0de1347a5fa145e86daee9218731f277",
                    "size": 840,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:9b7dcaa57dfad1b7fb8afd4bb920d89a1f61d58faaaa6c2cb2732809dec2bfd6",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.19": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:20b4a52834614903826fc043859f35653a4c568098b3ac5a1e28dc85994f089c",
                    "size": 1923,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm",
                        "variant": "v7"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:ec299a7ba3c670e38642b0b62a0c779d84b249a3c889757e2b6f841433b4c6fe",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-15T08:38:19Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:e95360c59613517ad8544fbd1c9c42af4fbeb3538a4ec24c12b0ef36f22fa800",
                    "size": 840,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:20b4a52834614903826fc043859f35653a4c568098b3ac5a1e28dc85994f089c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.20": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5e57aa99281c3ec63bca5261a1f93d77d65218521c46238add612a2b6c0377f2",
                    "size": 1923,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm",
                        "variant": "v7"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:71df6ab6f3d87c5271834ff44b0b5fb8b6d4e34f08dc7ad86f75a6394949dd44",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-29T01:38:11Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:dcdc524c6fb1376c9a25fdc7b7b00f47da12fd063092a2dcedd9d8036fca148b",
                    "size": 567,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:5e57aa99281c3ec63bca5261a1f93d77d65218521c46238add612a2b6c0377f2",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:7602a701ee8d56b0d4be495cfede55ddfc825ff4246c9c9780135bd425ef5c2e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121425637,
                    "digest": "sha256:56fa0d6babd29717910e8d0265f5405f85113922e004e8ba4d06db289e06307c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:edc61fc2ac3e891f9dc834956a2f6af4c76fcf8ab755720e0bcded5e5135f80f"
                }
            ]
        },
        "1-bookworm": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ec5c62e7ec034c7d0edd33aa6cc7b85e299c03e495785cbc69b776a929f012aa",
                    "size": 2324,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm",
                        "variant": "v7"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:5ad58349cdab8f05e695c96c93f840ab90b8dba870e9def0162cbe7d7ae144ac",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T08:35:34Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:ac9a7a60334785e6d459d950fa943b99ae06cd34ebb785a68151c41bc59d9a15",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:ec5c62e7ec034c7d0edd33aa6cc7b85e299c03e495785cbc69b776a929f012aa",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b61156e2197553fdc9cc45ab5f6de9fdd982a008eda1617b49024911df848d8a",
                    "size": 2324,
                    "platform": {
                        "os": "linux",
                        "architecture": "arm",
                        "variant": "v7"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:471ff377e2c4d10a2cd5a4ec1c6fa17c5e190eba5b797233a756e29637816f71",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-15T08:37:01Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:c4df93d469171da8e8ba8ca77f161e9ae0ea88d28962d586f8be50067a18cf36",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:b61156e2197553fdc9cc45ab5f6de9fdd982a008eda1617b49024911df848d8a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7003,
                "digest": "sha256:1d13a482a7d5b02aaff2aab684cc61966c591e7ffebc275d42e2c9ca93d32b03"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45916072,
                    "digest": "sha256:51e8b9db05761e5bb6c498f0c3f479641e693e39aac9800c97e87d5c936ba9ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16211260,
                    "digest": "sha256:6d9e979674a28bf584e41acd517729c9aa3b1d14d2f629078892eba0a0734b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47369575,
                    "digest": "sha256:1a12aa3e48b11bae0356114eadd41aa4db6026b04ae8718fc1733f91b28ace73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53341598,
                    "digest": "sha256:376367986b432b6e2ec66b78eacc4f08c97071ea98e5be9f56e76ca3d95ecd23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97925715,
                    "digest": "sha256:4dea5f7614b8b0c41b60fa114937c414efe6a591029b1a517b129f2fcac9aae5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:bb433fcc29263c2a27b5bf3aead5e7354ccbfb3a89a8308f6af1388b7e11844f"
                }
            ]
        },
        "1-jessie": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5601,
                "digest": "sha256:0f740eb145c76f8b5672eb55a2043a72eb3a1cc12bf96104678bdb61e9721bcd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48691924,
                    "digest": "sha256:5e32d580a9d26e16dd26eaf656c25de16f6fc4a5e2cf51e5d73de3d0b5a0966c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18262600,
                    "digest": "sha256:b0b0ff3cefca6a7ab79bddf19e329c7af17cd3c4a66e04119fc089f584350009"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39688172,
                    "digest": "sha256:5855c033b6b2b6a6cb7639654e910055310e66f41d96d8a26b954e1f6e7742cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43917687,
                    "digest": "sha256:a4b82eb29de2b13884e7295b6957d216dec855255dff501bf90e499014474963"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77999903,
                    "digest": "sha256:a9d1cf755c964b804734a96af698fa4cefd6818aa7e1094e1df6950948070384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:e376d9b55bbf04ff824e1cc37c5aee7334536e63683a49fae13db93288c3944b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1371,
                    "digest": "sha256:bdd28028a8cef7c8a426c66c2445a63b9e22331a830c647df2d6028347234552"
                }
            ]
        },
        "1-onbuild": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6504,
                "digest": "sha256:2ac6d370dc6d1e24e4b7a9899688725ddf0dd301af898e0e03c3639edeb0b520"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48691924,
                    "digest": "sha256:5e32d580a9d26e16dd26eaf656c25de16f6fc4a5e2cf51e5d73de3d0b5a0966c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18262600,
                    "digest": "sha256:b0b0ff3cefca6a7ab79bddf19e329c7af17cd3c4a66e04119fc089f584350009"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 39688172,
                    "digest": "sha256:5855c033b6b2b6a6cb7639654e910055310e66f41d96d8a26b954e1f6e7742cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43917687,
                    "digest": "sha256:a4b82eb29de2b13884e7295b6957d216dec855255dff501bf90e499014474963"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77999903,
                    "digest": "sha256:a9d1cf755c964b804734a96af698fa4cefd6818aa7e1094e1df6950948070384"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:e376d9b55bbf04ff824e1cc37c5aee7334536e63683a49fae13db93288c3944b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1371,
                    "digest": "sha256:bdd28028a8cef7c8a426c66c2445a63b9e22331a830c647df2d6028347234552"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 135,
                    "digest": "sha256:4fbe6b7768510d1d8f92420cc4eacce281e47875236ab702a5713bda776108e9"
                }
            ]
        },
        "1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7146,
                "digest": "sha256:1f24a5c2b8cd5ab49e3a8d9cd853ed174265e6af6c2a0d035910f08fd626eb9b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42150850,
                    "digest": "sha256:cf35481e5c316d184dac1873898948d1e8108de590a2a940c32cda34173fe7c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9957097,
                    "digest": "sha256:93b740b174e94fb77095522004355bb6f430f0b25308acd5fc66d325f04f99c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921761,
                    "digest": "sha256:cf98bd2fdfbc26a0f8c12d47c32e612d01389ff5e4aafc52aa04b72381a6c823"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46128363,
                    "digest": "sha256:bf0525b8f82975354336694dce23771eb04576302410a29a334172526e5de07d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46211423,
                    "digest": "sha256:90d264cc835160ba3e2dde6730be7bf1520729f066c49fdbaf702c3a1b3ba35e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110059625,
                    "digest": "sha256:c8079fa092888489eac5e429add3765040101347b9a1df511d1548582571fc3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:916deddabeb8ce489b46b9dfa80f7eda1f4ffb6bfdbbad4bce6b2524c6b51078"
                }
            ]
        },
        "1.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ebdc569aaa27cdb892359e8a9981ecbe1402a5fcc5a573e8c7f0dd4625f2377b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:68c16ef8ce75230de5bcc24bfec38990e5ad233e3bf36cb6635407bbe500920e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5452,
                "digest": "sha256:20223f34ea060b31340a7b4c4b97feb39c6686eb44ebc4d71df6991ba15f1143"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41859666,
                    "digest": "sha256:c0518139464abb63e1069cd4c638aad760a6cb319660ae2229921b17c703441b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9824909,
                    "digest": "sha256:72be4c519488d3f9c0893c7e4aa66f806292ac98c1f509b4387b4eb8e4789e9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912530,
                    "digest": "sha256:c3e5a3e5bf5f97b01c2bf09851057f8cc68748d43fdde36477492ec435aabd55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46346480,
                    "digest": "sha256:f5727b344ba95e9bd04f25fd92a97ede236a31569adaee62ca3843b214d4d7d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45873890,
                    "digest": "sha256:536e4bd596223f84ffe5cdab6b699c8e5ce68098f47d08e6ba13d587719b5837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103002924,
                    "digest": "sha256:af3a2d76ee0d35f2ee6d541680bf93e27a9a67d562f7be7f46656cae038d892c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:eed06c8386f2bf39cd01b2983e73da7f8c8e99746f4a58771851fbdc85aca0f4"
                }
            ]
        },
        "1.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:e830c96c331bf3da0d3aade9b5a872b93ca7ae79039e88da7ce9ee5f61e0e6ac"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42086927,
                    "digest": "sha256:54d7f221ed1ab7644f6a88a953847270cd864b5ebc4f343bfa28876a2715031f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9480760,
                    "digest": "sha256:2fea5bcc599e31c6fb6e38ce89618c27f24be54ed9ac9b53f4fcbed58f9d619d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918458,
                    "digest": "sha256:586ac22707ead8a14ad6ae745a4c231538e6215c7a702ccad147b5251b3ea66c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46384822,
                    "digest": "sha256:8c5565830197f8831e23db2438cc94b7a2c5b37186bfa8adc7d45c22ef585b48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955173,
                    "digest": "sha256:132c235127591dc1fcf10d81e3fb4feff77a94c31a0763561b28fc39ddf329d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75104816,
                    "digest": "sha256:ec2abab3635082f0f38b17538eb0e3985231b7a44499d2ccf273beadb9ee7a55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:c9d92c0ee7e177aa9189b0cce10584846162f68fc58516fda7b815a4d2581088"
                }
            ]
        },
        "1.10.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7e4554b17f1b8da05062e167d0f95630e6d56aab51e99b8c80360c2318af553a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5440,
                "digest": "sha256:569ad906c2f0291321396c5a52318936cc6aa003a7e8462c9c614526ce64d738"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41857435,
                    "digest": "sha256:1296b637c2f207ccc536f8e55bad6857ee417d3b5ea4c82a92a8e8621a970f50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9824907,
                    "digest": "sha256:0e2ab5e048ba56edebae7aceececc82f4b33c46e008d392e5fd1d5ad0da0959c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912522,
                    "digest": "sha256:e1a6513627dbe58bc1e5151968379017a6d2b320b2ec9b35f6fd1235aeeadb3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46346263,
                    "digest": "sha256:397cc0ade5ea7b2621b829913376f8c421662acb370154a3d29538c8e1598c90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45893820,
                    "digest": "sha256:45538672a80314ae675c50e35dcbc57eb252134eb75382672bced4efc0908163"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102996022,
                    "digest": "sha256:657a82265f2433d4781cb5d6464d9e67dcdb3633ef248540f1c6b44baaf85f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:59883716fb60d91ae2f5e75796ffc4bd6b149d39fda990f437bcf799227f4630"
                }
            ]
        },
        "1.10.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:eff26cd589c34a159853619f5853fcdc875962311e93a26933efb5d17087a914",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5448,
                "digest": "sha256:4f627eb7b4e409e2976ad8d8d4aafcd7219d257897fef54d0c245d03a3b730b8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42063737,
                    "digest": "sha256:5483105d09166836731e940c850827dd1a4fe16b04d1921eea4d8da7c98e99bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9449717,
                    "digest": "sha256:1cb5424e9076ab96c3fbc714afcd99e7f9c4f35ecf54660ae99cf71410315613"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912466,
                    "digest": "sha256:ed44b64a3aee0cea1bad2a1954b943ef678d795d9c3ac814e5f8bbbc99a9b143"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46351415,
                    "digest": "sha256:5c52bc83323b176b9f21a75de82ef7a5e6510e896910b0d271ced3f2407c8e63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45893919,
                    "digest": "sha256:ace349cf9077dbbf652348655edb2de78703789726b16652d55bb89a818e5192"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102996703,
                    "digest": "sha256:bea8b1bbd4e1478ef859989a600784faabbbfbc30979a061cc5dbaad92376644"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4a6c2fe02ce960c6e1e17082d2062edd1b8bad4abaf9ae663199c9f39a9d0793"
                }
            ]
        },
        "1.10.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:06c5614f8af12c1a49465f21c5666dd2a563089210d5c53e5e43606b90143d85",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:a00e75166d5b761b2ca30751e08b971f0ecaf7db866227f7f76c7c09122c49cb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42063737,
                    "digest": "sha256:5483105d09166836731e940c850827dd1a4fe16b04d1921eea4d8da7c98e99bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9472475,
                    "digest": "sha256:8ed57f83cc7c78757972312a1b5a30524f861523c5390d062845f18c696f48ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912835,
                    "digest": "sha256:859203aede279201e8caf07cf2963456c56bac72a64071079dc9db6fb65ed1a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46351195,
                    "digest": "sha256:f10d0f9a54b8549a5831d24a81b301ee1e1112ba6045a85ab02050edbbeb9e96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45905970,
                    "digest": "sha256:e1eab07d1721879394032739f17915b2bc7c3e717ebaafbb354330f91c4e74b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115571902,
                    "digest": "sha256:583aaa83140c8f414fb209d3410d9effd5c0f44a44968decea019e4221161aaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c73a4fbe213c562cf3f50703a12a2d1f9d08fcb1c4fd43596c0d7f33ad103c4a"
                }
            ]
        },
        "1.10.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:683a6d7a19441379ee55f51c92f4dd9d4796067fef82fe5c346072f6c4908a12",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:778b5de6a68b92443d1b0b7c178553c09d76a6eeb4b2c825ba8296bfa5c8cb45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42060835,
                    "digest": "sha256:a92bc499a4699bc1d9bd6631daec00b7b440346221ce91af635e3460f7d4d70b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440199,
                    "digest": "sha256:d56e34dc5db45e25c590c9a353c3562d66546b06312f418f9aae4661c28ee94f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912954,
                    "digest": "sha256:948d2574fcb06c4081812a267179437a8d624eba8741a8fb5a6e3ef655c3dcff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46380475,
                    "digest": "sha256:94ced04c5b3fc619ca9252df05a702d37000cbcc3fbac10e5e485428deba85ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45923944,
                    "digest": "sha256:15b6302ebab8f482cd218939332af3eb2acc1c67052757f7b28697e14e0a13d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 115574771,
                    "digest": "sha256:b53e5376514e25f527fd16dfd1b086a20e86d44a080d553c45732c01fd4a24d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:84e737886ded1faedb6a84e29b4212390593c1280e9e5a8874319f26560283bf"
                }
            ]
        },
        "1.10.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:7993cd5fcdcb0bf7f170ac269e9782102a386741b4e0079fa410054ffb28ac0e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:4c25e1a817d48b40a119d2db8e95bf3eabe0cbc22a7759fcc8d101a1aad1d0b1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42063035,
                    "digest": "sha256:773085009f9c7f7b4310a1b0a968c0940440707f9e534ed87f0652baf279811b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440339,
                    "digest": "sha256:15973945ecf58d4573926ba8da5c9aa815d1e14bbc2c8414b0e23d51552f6f3d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3913013,
                    "digest": "sha256:4e25b539801e1d4c35f7727ce95a197418bbe4cff37e1784aad0325cdfb1673a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46379384,
                    "digest": "sha256:a84cdb78f6b06db57fe35565127be72547dac84d2cd4e813258c84f1cd421544"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927625,
                    "digest": "sha256:9d60b71afb6ecba6c4d82e1458eab5757464019a0fb95e9ee16b1a779d9c44d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75587785,
                    "digest": "sha256:bb516ac8ce67570421d5bbc349cb0815b0d11635e62488c7cf4f2465700e0971"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c2367017d524aebd3394b43f04683b1e9231a55646590fcac6a5d2a9f96948b5"
                }
            ]
        },
        "1.10.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:b02c765e964e163a9bf7a726a399d8bbe6bae8258fcd370e3e4edc080cfb40f6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:b4c0e17fd7b6e9e61d503dbc9a809afd94fd5e712ab658890c914e6b30e00180"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42076140,
                    "digest": "sha256:33dd5ae6335a66a99c6beb10708f7ff8d992b1075b6477cce3accbbe3b3a765e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440401,
                    "digest": "sha256:7353b73b294b9e3d692697431695f92c48a581f30b3295a5fad1b80854f13e5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918472,
                    "digest": "sha256:5e92165ab0bf59142c3f101750c7a81a51d559eed557c0674a209979d86fd4a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46379290,
                    "digest": "sha256:876ce4c93c1cd23dba26163faf2c97ba7d2ff4a19e9ec4f18fd0d9dbf3c3491d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955196,
                    "digest": "sha256:bda4add5024ad1b83e70e156bfc6418754f8a256e506c676d27bc4030a40e27f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75091977,
                    "digest": "sha256:7befc22e26bdaab4c7edf475985da51fff9f8c71dcea670c9675a3a6651e7a6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:98fbb4f35857336552088bb2b95c68ea6ceb680c3a36c02f432759d562711960"
                }
            ]
        },
        "1.10.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:49120df26b9f395e0ea0ae3c07c73294a7b6466a40334882a62e4d415d928970",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:42bd6a7fa416a843baaa280993e7a0077479b9930f6c74fd8da9c6cc5355c9b8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42076140,
                    "digest": "sha256:33dd5ae6335a66a99c6beb10708f7ff8d992b1075b6477cce3accbbe3b3a765e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440401,
                    "digest": "sha256:7353b73b294b9e3d692697431695f92c48a581f30b3295a5fad1b80854f13e5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918472,
                    "digest": "sha256:5e92165ab0bf59142c3f101750c7a81a51d559eed557c0674a209979d86fd4a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46379290,
                    "digest": "sha256:876ce4c93c1cd23dba26163faf2c97ba7d2ff4a19e9ec4f18fd0d9dbf3c3491d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955196,
                    "digest": "sha256:bda4add5024ad1b83e70e156bfc6418754f8a256e506c676d27bc4030a40e27f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75106600,
                    "digest": "sha256:1f5fc0ac73f0b470df53ee7376c077e6a897a12a88dd597d270dcf3d9234782a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c63f84bfd9a9ac65b94a4cf3670d6b90d01fe358fba0a3d087164ea453d857aa"
                }
            ]
        },
        "1.10.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:436b2fd068cce9409fa8c2978afbb37f45a1870a2f7cb4c0dfcce024691202bd",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:8fe0fa4df50a0e01fd2c6ad3731b1675c12f890bd7e4fd75ab2810aac62958b7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42087731,
                    "digest": "sha256:d9d6acb4f2f3e6ab798235f9f094d5e343bad5a702bac8cf38e2569dfec4e284"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9480423,
                    "digest": "sha256:aaa7b6903fc66574eed3dd94d25c8ee0c27a478c84ff3219c4ce223b0233aeba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918464,
                    "digest": "sha256:2011a5c4d9cbe6e42446717e9f145d3264c681a9a7be23834c6d1989afab2dfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46384664,
                    "digest": "sha256:c86082f3b932fde1cbab5c105aaf51102e5f988ccb1efae3a9798b8cc65d8138"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955215,
                    "digest": "sha256:dbba5c313a1f6dad1e751255e1d64d5b13210013583e1a9a18c5eba3bb8921fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75105047,
                    "digest": "sha256:993e8c68ca5867e6317eaf43434f63888cfc2e50cf0e94f661cffe5eedc3b441"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:721c3d4af830dcb34033eb029d931d259da730086d6ae085c3a6706494581638"
                }
            ]
        },
        "1.10.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ebdc569aaa27cdb892359e8a9981ecbe1402a5fcc5a573e8c7f0dd4625f2377b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:e830c96c331bf3da0d3aade9b5a872b93ca7ae79039e88da7ce9ee5f61e0e6ac"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42086927,
                    "digest": "sha256:54d7f221ed1ab7644f6a88a953847270cd864b5ebc4f343bfa28876a2715031f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9480760,
                    "digest": "sha256:2fea5bcc599e31c6fb6e38ce89618c27f24be54ed9ac9b53f4fcbed58f9d619d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918458,
                    "digest": "sha256:586ac22707ead8a14ad6ae745a4c231538e6215c7a702ccad147b5251b3ea66c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46384822,
                    "digest": "sha256:8c5565830197f8831e23db2438cc94b7a2c5b37186bfa8adc7d45c22ef585b48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955173,
                    "digest": "sha256:132c235127591dc1fcf10d81e3fb4feff77a94c31a0763561b28fc39ddf329d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75104816,
                    "digest": "sha256:ec2abab3635082f0f38b17538eb0e3985231b7a44499d2ccf273beadb9ee7a55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:c9d92c0ee7e177aa9189b0cce10584846162f68fc58516fda7b815a4d2581088"
                }
            ]
        },
        "1.10beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2003,
                    "digest": "sha256:0b9b41d0f426521cc312a92b870c5e3f8be0f15b5024674af9d70361c4e1989b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5788,
                "digest": "sha256:60486e6f05b2a207e24d9f3d853a03faee2be82bab46091a8600787d561d0ed1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41849695,
                    "digest": "sha256:0e10ef01c84000f6f5865b480436e689e2d437a4a8b63b01d5ce85532872b636"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9824565,
                    "digest": "sha256:6ed40614ea2a08dbc6237155db97d58d7051efa214bab1fd556c4414db68cb7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912457,
                    "digest": "sha256:ad0ea8727ac09b97803f430b101f4c67cbf9c7bc372a44c190f5a9719f5fb1e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46346753,
                    "digest": "sha256:facba084babd0bca1fb6e0b05f34a2bc16a042cfdb3863d620dd87910bbe902e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45875393,
                    "digest": "sha256:7518133f9a1c5b381ee53c0d58b1b9e3c78ed55a0b0c1ee8db9489858b86873b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102982211,
                    "digest": "sha256:c82047b65588665f21dd44209567055bf4f8290e90b4126d6aa0dd4617243e00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a34a648a6cb0cbc0cb131fb77d673c071180c363a69c6339655ab73305ebe4e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1373,
                    "digest": "sha256:2a1ea6b70c3a663535cbd729529279accc24f853f84e4eb85726973c44c1dda1"
                }
            ]
        },
        "1.10rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:95e5cab87120334517ceaf697a0583be20d184e936a8c231323540c71be6400d",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5452,
                "digest": "sha256:ee97eaeafeb9d76dc4c348c707f89aeb635e83c36d6b7868c99099ff2e10d85a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41849695,
                    "digest": "sha256:0e10ef01c84000f6f5865b480436e689e2d437a4a8b63b01d5ce85532872b636"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9824565,
                    "digest": "sha256:6ed40614ea2a08dbc6237155db97d58d7051efa214bab1fd556c4414db68cb7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912457,
                    "digest": "sha256:ad0ea8727ac09b97803f430b101f4c67cbf9c7bc372a44c190f5a9719f5fb1e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46346753,
                    "digest": "sha256:facba084babd0bca1fb6e0b05f34a2bc16a042cfdb3863d620dd87910bbe902e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45875393,
                    "digest": "sha256:7518133f9a1c5b381ee53c0d58b1b9e3c78ed55a0b0c1ee8db9489858b86873b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103015031,
                    "digest": "sha256:6aa78fe6fd9a9d516afb4586ec34171dc200155c10c23fb02bf2ec27ec476ec3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:92b13b9fb79c44d1ae291037f32e8b6476fb7222f55e285bb53dfe0a9e3d39ca"
                }
            ]
        },
        "1.10rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:68c16ef8ce75230de5bcc24bfec38990e5ad233e3bf36cb6635407bbe500920e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.10rc2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5452,
                "digest": "sha256:20223f34ea060b31340a7b4c4b97feb39c6686eb44ebc4d71df6991ba15f1143"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 41859666,
                    "digest": "sha256:c0518139464abb63e1069cd4c638aad760a6cb319660ae2229921b17c703441b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9824909,
                    "digest": "sha256:72be4c519488d3f9c0893c7e4aa66f806292ac98c1f509b4387b4eb8e4789e9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912530,
                    "digest": "sha256:c3e5a3e5bf5f97b01c2bf09851057f8cc68748d43fdde36477492ec435aabd55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46346480,
                    "digest": "sha256:f5727b344ba95e9bd04f25fd92a97ede236a31569adaee62ca3843b214d4d7d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45873890,
                    "digest": "sha256:536e4bd596223f84ffe5cdab6b699c8e5ce68098f47d08e6ba13d587719b5837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103002924,
                    "digest": "sha256:af3a2d76ee0d35f2ee6d541680bf93e27a9a67d562f7be7f46656cae038d892c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:eed06c8386f2bf39cd01b2983e73da7f8c8e99746f4a58771851fbdc85aca0f4"
                }
            ]
        },
        "1.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:6416a7d4f4af4e3206bd21a16f9a016a783fdefa3b2ddb6397ba8be88de1e494",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:2bf7a3ec2cd331b47bd0d5b351f2850978644e1f540b58bc839cf53df4209dbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106130447,
                    "digest": "sha256:211cb514ebe8c25b32b269e89a3400206f335b89775d2f9e5eab6b863378595f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fab8e4b9051f8ea6bc5f9847ef55e3d44c80f959d7559b9835a628dd32f71833"
                }
            ]
        },
        "1.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:2bf7a3ec2cd331b47bd0d5b351f2850978644e1f540b58bc839cf53df4209dbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106130447,
                    "digest": "sha256:211cb514ebe8c25b32b269e89a3400206f335b89775d2f9e5eab6b863378595f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fab8e4b9051f8ea6bc5f9847ef55e3d44c80f959d7559b9835a628dd32f71833"
                }
            ]
        },
        "1.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:7b7f884ddc54409c2d323e6be379777eced4a963e5647fe7df3f12b575d9af26"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106482551,
                    "digest": "sha256:0e06fc2091c49bf060b7a93901b099dcfc0a9a958a4419bd44875227705e3a9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:fe49f400d8dfb46d365750df6e7dd2b9edaa66648073314bfa56bf2a4898b2de"
                }
            ]
        },
        "1.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:2a79cac289a0bef582b3310f5297643784f68e59294fe3eeed721b2c04f29afc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45854139,
                    "digest": "sha256:4bcb33fb87fb53a079ac35f10587fb4512b5c98188fea2132d0a0f5e47dfc51b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093244,
                    "digest": "sha256:302c6e5b05015dad7c8f5cf14d06370c3484b19d42c8524db3b965aa58f61916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330254,
                    "digest": "sha256:b71efe838d31b47a74142afe2b16837c9e8936dc1c11597d065752f128bd2b04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47291160,
                    "digest": "sha256:80572d08f14fdf4cbe473930bbe48abbc9533e131862d2380a7fb56eeb9e7fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52949359,
                    "digest": "sha256:9d8e9b4738dd8ecddd4e11655e7fe65070fed5f53b94fdc876ffe9d29b738127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101055236,
                    "digest": "sha256:7f02615f93888fa244f29b3c782869dc942c83de11bfc4cd55dcab6ec6fc5fe7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:22f12428cc6bfd5b9091c76b2862b52b6a4d7026254b819a92810c36f41b5f95"
                }
            ]
        },
        "1.11-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c6e0752bada38109ec7eaf471187b1cad2c4f4941840a93738da727e23361b3b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:0c87106f33b14ae6bda2850bc9a7424309110153f21a38b0acad52e195755b45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42060835,
                    "digest": "sha256:a92bc499a4699bc1d9bd6631daec00b7b440346221ce91af635e3460f7d4d70b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440199,
                    "digest": "sha256:d56e34dc5db45e25c590c9a353c3562d66546b06312f418f9aae4661c28ee94f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912954,
                    "digest": "sha256:948d2574fcb06c4081812a267179437a8d624eba8741a8fb5a6e3ef655c3dcff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46380475,
                    "digest": "sha256:94ced04c5b3fc619ca9252df05a702d37000cbcc3fbac10e5e485428deba85ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45923944,
                    "digest": "sha256:15b6302ebab8f482cd218939332af3eb2acc1c67052757f7b28697e14e0a13d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101723277,
                    "digest": "sha256:e1d8f646a3df4e18408aad2c6d8a30c035d2d25fc47aea56366127f1781815b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a2523e09d2c551087dda53702f44e550a55bb74aea281e495aea61e212f85e9d"
                }
            ]
        },
        "1.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:7442baf100e2838fb4385b66b83e6f13e0c4d52cb250c45bf1c679b8d8f29eb5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42080380,
                    "digest": "sha256:7cd8da9bb4321742382671e40de35c00a1d68f27bb6f5c8dc885748f452a56ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9490896,
                    "digest": "sha256:88bd0369f6f10021911409e0f260fb390f5d50e60768977521b1035c15b2e291"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918698,
                    "digest": "sha256:0379859b5f37fd1c431bedcd3f8e88fe5e7e705d7d3811d146ca266da4bc3235"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389939,
                    "digest": "sha256:1866b41273a25463d9ef2c491e05a964289c351082b8166212078f3ec7827174"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46004820,
                    "digest": "sha256:54be03d33c67278a264e2aa1b17babb90a7e6e66f1e802eb572998802aed0c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101055264,
                    "digest": "sha256:8d32a93a91dcff86c14d41daac7ab83cb54e06138d6bf126e5d57e45974908d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:88b103166d99d2d2b4e708a775257e6540e65fb0c8f1ba0fc4616f3d2989e11d"
                }
            ]
        },
        "1.11.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:29eca90fc5a7f7e15e6f2a2caf574a740f32ca2ce0ee4d5b7a9615e08760c0e7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5455,
                "digest": "sha256:cf7ce8a2225b0466e16e418100c9ddf4dd2ac7eee6d6499ae3383909be6844fd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42062670,
                    "digest": "sha256:b0e52c109d408e4b15451c236c7e463334a304fd078c535edbd687b22bfde52c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440248,
                    "digest": "sha256:215164aeca718c35ec0eb0e6c0105cdcb8ceadce60d8c8ccc9c182f3b9928d32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912963,
                    "digest": "sha256:3881d6781569972fa823e9e0c4eab63be9dd636d1ae45ba90a364cfea2ed4f51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46380896,
                    "digest": "sha256:247050a5017030d16351675bb3d21d3413470130201b75e5a0688c5d20932c20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45926431,
                    "digest": "sha256:e7d4f9b9769e4dae8c8ae1b78e59ab5590824eb05729b185898d8ba66b338012"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101720970,
                    "digest": "sha256:e81c681276b348cb53cfc482a028da67e4011d934cabac46fa65610a87445452"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:acb19a6f0e76a083ca9ae83b4178452f1151c540401141f5b343bccc56f351f7"
                }
            ]
        },
        "1.11.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:faf19ab885f9d0779bbbd615eee610c5aedfdd203ac5fceefbd5fc8afd73a2ac",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:3045eae5df0a5f9f3eb6a25490b5092898eae0c75268e449c16d960d36290ab4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42063035,
                    "digest": "sha256:773085009f9c7f7b4310a1b0a968c0940440707f9e534ed87f0652baf279811b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440339,
                    "digest": "sha256:15973945ecf58d4573926ba8da5c9aa815d1e14bbc2c8414b0e23d51552f6f3d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3913013,
                    "digest": "sha256:4e25b539801e1d4c35f7727ce95a197418bbe4cff37e1784aad0325cdfb1673a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46379384,
                    "digest": "sha256:a84cdb78f6b06db57fe35565127be72547dac84d2cd4e813258c84f1cd421544"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927625,
                    "digest": "sha256:9d60b71afb6ecba6c4d82e1458eab5757464019a0fb95e9ee16b1a779d9c44d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101765793,
                    "digest": "sha256:2415913da3b03a6d51b2338314d06fd17424aac19595e398de3695f9b33daf97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4c1fc3d028e9fcc1a134ee850e2ec76d08326f8e7f6d180c45802f6b34e70446"
                }
            ]
        },
        "1.11.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:88f1fbff0b579ec0e5236c7e8a2e65e4d80dfb89da6b441486825714249e38b6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:4fbbce58afc85e5cf479cf04a0158720e0fddd215f5d124c6c348cc912f03d78"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106091444,
                    "digest": "sha256:d16fe10b3b2722a0e27954baec7f999d72e36052fc82577c84774c937a371b80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9791d50a7b8a1e7c6ea7b29d7df2b13b218294bc2376862bc667031bed65496d"
                }
            ]
        },
        "1.11.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:4fbbce58afc85e5cf479cf04a0158720e0fddd215f5d124c6c348cc912f03d78"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106091444,
                    "digest": "sha256:d16fe10b3b2722a0e27954baec7f999d72e36052fc82577c84774c937a371b80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9791d50a7b8a1e7c6ea7b29d7df2b13b218294bc2376862bc667031bed65496d"
                }
            ]
        },
        "1.11.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:de216322813d37977ac353626431a29805220903dda442639bafdd30c5853cba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42082604,
                    "digest": "sha256:f2a2fd7c1ab35cd1b5ea6fcc2b801f3877852797e2698ecdb9556e0dee3accb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9485167,
                    "digest": "sha256:047df9a92c9f7376283a8d6af526f5126d95995ba48dd7de49979ef57da3e15b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918605,
                    "digest": "sha256:ddeed4ac8d1e2c751afd6fd3517f1d154365467039353c377c8206fd5eb81d4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46387836,
                    "digest": "sha256:f87210772c4fe4ad359fb6a7030e2675f75aeb852c8ce68def62b11c2f94e847"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46001929,
                    "digest": "sha256:e98be8c9f1a89c0aeae2fbe50cb29300a4ee2854a8f8a15498672e6a64a2ab20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101043183,
                    "digest": "sha256:429bf5ed694e498da4edd908f3c7b514e8e6466baff0df692a08eae948bfe20d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:33f3bddc5eb1e9142198b6f42fcbc2db34668f81bb7bf440b79ccebaa6f002c6"
                }
            ]
        },
        "1.11.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4f4e3243c212fd15840a96329452734615063fe4236e90c048d1d74979549564",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:8e81fa4ebb825da15c85027278bd5660c32c26acc08e10a37337c8dbd280afc3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375311,
                    "digest": "sha256:fd0f3c17efd43a26a5fce1692600c9a45e087cd84f50f61df6780702cc0050fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300923,
                    "digest": "sha256:dc6a614d312be6d9892ffc22ceab48ff53c57250da1ea8815afc34674ba2e03d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:3bb84b62bcf2b0f814a4ef768d5d2b3fa0a59518b26bf510d6f387388ab719a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106127932,
                    "digest": "sha256:e327b3ca02055e960922eaf76a368dec20d0e2fc0bfe46772e66ab8eef1212a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b1694b16fb396df872180e80f508e485951604690fc2c5528fd921888d35cffb"
                }
            ]
        },
        "1.11.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:8e81fa4ebb825da15c85027278bd5660c32c26acc08e10a37337c8dbd280afc3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375311,
                    "digest": "sha256:fd0f3c17efd43a26a5fce1692600c9a45e087cd84f50f61df6780702cc0050fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300923,
                    "digest": "sha256:dc6a614d312be6d9892ffc22ceab48ff53c57250da1ea8815afc34674ba2e03d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:3bb84b62bcf2b0f814a4ef768d5d2b3fa0a59518b26bf510d6f387388ab719a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106127932,
                    "digest": "sha256:e327b3ca02055e960922eaf76a368dec20d0e2fc0bfe46772e66ab8eef1212a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b1694b16fb396df872180e80f508e485951604690fc2c5528fd921888d35cffb"
                }
            ]
        },
        "1.11.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:1696d4797e4322e8fc0261a4beecaf58274588089fe87bb886f9c39f3300cbd7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106088707,
                    "digest": "sha256:1f263148d3f6e8cd4c1d7119f3e56771b377e53bd4f9b696a005d346485e544e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:db1c2a400b8281d5b443395980025ce17aab36cd4916b9595773091fdbbc9253"
                }
            ]
        },
        "1.11.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:dd7322bc857dde99f220990e855bd1e66d60ada48056dc3e52b03a53bae60595"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42082622,
                    "digest": "sha256:162e276b1a29dfd1a4601fd55aeaeb0175b63182e9190b1b0068252e5196b015"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9485206,
                    "digest": "sha256:052e820679506cc68db5317ee3f92e7f5f520894f881940a686f7b1280ff93a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918643,
                    "digest": "sha256:4f5e84bede193d1aa79031526fbcfa99e8b6cf354b12a7cfbe5cdfe2c9acf155"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46388837,
                    "digest": "sha256:6a839ba8a519368963fe3d571588fd00f64c1dcd18fd761e52acf61455810033"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46004777,
                    "digest": "sha256:ce54d513bab2aee80cf4ede3e873df13d113058fb2add7c1272a03441ccce314"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101041324,
                    "digest": "sha256:f5f1f129940dc2e01cf57d0d84837fa00b17d5f118d6768c867046f09ec83e4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:281c644e1d6730e99ab64724f1b642fa78225e8b1805f7189bb37ea0b0543f11"
                }
            ]
        },
        "1.11.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:6c26b8aef4667728025f987a96366dffbfc412ec214b8eddd1684cc38debc0f2",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:94ca5c651578e224b2f1156cd423ee405924d17522765e294b08073acd493585"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375401,
                    "digest": "sha256:50e6a8f95d08735cf973d06f486e8d4906f0a8009fede2aa1b1d03accbda9281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300936,
                    "digest": "sha256:6c3d02882ecb3a5941237bc80f858f7493d5a32ebb3e3cef33b06f7fb05feb40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6d8183c7b99cb7aeeafee75cb572216d57844a325dc8d32fc35b962c174df3ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106124538,
                    "digest": "sha256:2077847f29e1d9fd0eefd715b53ce1bfa0177c40d0a413bc854e3cb411a690af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b524e12b07839956336adb5b1b1d821fa8c1e3be66943333b1dcffdb330b0940"
                }
            ]
        },
        "1.11.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:94ca5c651578e224b2f1156cd423ee405924d17522765e294b08073acd493585"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375401,
                    "digest": "sha256:50e6a8f95d08735cf973d06f486e8d4906f0a8009fede2aa1b1d03accbda9281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300936,
                    "digest": "sha256:6c3d02882ecb3a5941237bc80f858f7493d5a32ebb3e3cef33b06f7fb05feb40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6d8183c7b99cb7aeeafee75cb572216d57844a325dc8d32fc35b962c174df3ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106124538,
                    "digest": "sha256:2077847f29e1d9fd0eefd715b53ce1bfa0177c40d0a413bc854e3cb411a690af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b524e12b07839956336adb5b1b1d821fa8c1e3be66943333b1dcffdb330b0940"
                }
            ]
        },
        "1.11.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:adf331295af431a43af00727ccf883a0ec2851e82eadfdb14b0fffbfd2bcc2e5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106110565,
                    "digest": "sha256:9ccb25bdc1f9e49b474632d05ea2250baeab768b1e44ca3f247f909e01e0af51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:943042e61d35989bfac5ab823d4e9206b981b95c27515cabd43aeb682251b47a"
                }
            ]
        },
        "1.11.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:bed916d319fa13be9192800ef0c366154d0be4a6d5a07343cf5737d4200e1670"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45853741,
                    "digest": "sha256:755d84a203b44de4e2bc7169d5db99523b34f4101cb1ab50f606fcb6cd8d216f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093138,
                    "digest": "sha256:a0d45aafdedf04ff2db2e0952649a765ddd0b0e1169d9577ef17da53aa4fb0c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330213,
                    "digest": "sha256:dd5a38af0407b6bebd4f397e57a4b4999b0ce2faf8303e5fabb17f792b07bcf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47289285,
                    "digest": "sha256:32a7b13a520fd66a3651d850ef2c7835e38126f348b214d6ec0ac2c7bfb3ce6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52947847,
                    "digest": "sha256:bdb2f2915a775ec0156c5ff8b991b2a5fb8a64efdbd3d028f4c114ca80324261"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101050319,
                    "digest": "sha256:83987e6a0d4605962cd79e6cd46425aa6cf47b7a7842219dc83fa5d5326c3273"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b958da3d918b0007637f3a27d9cd4f58dcc8eb9e5c1ddc1a7b8351ce78151309"
                }
            ]
        },
        "1.11.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:d0235767802bfbc7003de074f111708d821e5688d8e1b07e86900bd8d85a3317"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42083055,
                    "digest": "sha256:dcb61f1d45657be196f648f75a07805b856fb8f4aebb61138c03c12e2919ee9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9490816,
                    "digest": "sha256:41835060b113803e2ca628a32805c2e1178fe441b81d3e77427749fec4de06e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918602,
                    "digest": "sha256:582caf5d2e7bf5e75a96afc2254a97f6e86ad72c8815429ada61280467cc6d6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389297,
                    "digest": "sha256:da770cd5eae6caeefe9468e318964be31036c06e729c2d983756906ede859b17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46004896,
                    "digest": "sha256:b880b30c3d715a2fec7589f1a5f85ffd9e5e4a2d96b82b3523315645aedf9b8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101050285,
                    "digest": "sha256:d60f814108a153ae31e847166d69f66f61b2f74879bae792c1333748975e8df4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7f765972c81209458854696981021741fed8483263c90d5fd7777c7a7f5397fe"
                }
            ]
        },
        "1.11.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:6416a7d4f4af4e3206bd21a16f9a016a783fdefa3b2ddb6397ba8be88de1e494",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:2bf7a3ec2cd331b47bd0d5b351f2850978644e1f540b58bc839cf53df4209dbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106130447,
                    "digest": "sha256:211cb514ebe8c25b32b269e89a3400206f335b89775d2f9e5eab6b863378595f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fab8e4b9051f8ea6bc5f9847ef55e3d44c80f959d7559b9835a628dd32f71833"
                }
            ]
        },
        "1.11.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:2bf7a3ec2cd331b47bd0d5b351f2850978644e1f540b58bc839cf53df4209dbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106130447,
                    "digest": "sha256:211cb514ebe8c25b32b269e89a3400206f335b89775d2f9e5eab6b863378595f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fab8e4b9051f8ea6bc5f9847ef55e3d44c80f959d7559b9835a628dd32f71833"
                }
            ]
        },
        "1.11.13-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:7b7f884ddc54409c2d323e6be379777eced4a963e5647fe7df3f12b575d9af26"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106482551,
                    "digest": "sha256:0e06fc2091c49bf060b7a93901b099dcfc0a9a958a4419bd44875227705e3a9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:fe49f400d8dfb46d365750df6e7dd2b9edaa66648073314bfa56bf2a4898b2de"
                }
            ]
        },
        "1.11.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:2a79cac289a0bef582b3310f5297643784f68e59294fe3eeed721b2c04f29afc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45854139,
                    "digest": "sha256:4bcb33fb87fb53a079ac35f10587fb4512b5c98188fea2132d0a0f5e47dfc51b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093244,
                    "digest": "sha256:302c6e5b05015dad7c8f5cf14d06370c3484b19d42c8524db3b965aa58f61916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330254,
                    "digest": "sha256:b71efe838d31b47a74142afe2b16837c9e8936dc1c11597d065752f128bd2b04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47291160,
                    "digest": "sha256:80572d08f14fdf4cbe473930bbe48abbc9533e131862d2380a7fb56eeb9e7fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52949359,
                    "digest": "sha256:9d8e9b4738dd8ecddd4e11655e7fe65070fed5f53b94fdc876ffe9d29b738127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101055236,
                    "digest": "sha256:7f02615f93888fa244f29b3c782869dc942c83de11bfc4cd55dcab6ec6fc5fe7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:22f12428cc6bfd5b9091c76b2862b52b6a4d7026254b819a92810c36f41b5f95"
                }
            ]
        },
        "1.11.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:7442baf100e2838fb4385b66b83e6f13e0c4d52cb250c45bf1c679b8d8f29eb5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42080380,
                    "digest": "sha256:7cd8da9bb4321742382671e40de35c00a1d68f27bb6f5c8dc885748f452a56ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9490896,
                    "digest": "sha256:88bd0369f6f10021911409e0f260fb390f5d50e60768977521b1035c15b2e291"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918698,
                    "digest": "sha256:0379859b5f37fd1c431bedcd3f8e88fe5e7e705d7d3811d146ca266da4bc3235"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389939,
                    "digest": "sha256:1866b41273a25463d9ef2c491e05a964289c351082b8166212078f3ec7827174"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46004820,
                    "digest": "sha256:54be03d33c67278a264e2aa1b17babb90a7e6e66f1e802eb572998802aed0c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101055264,
                    "digest": "sha256:8d32a93a91dcff86c14d41daac7ab83cb54e06138d6bf126e5d57e45974908d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:88b103166d99d2d2b4e708a775257e6540e65fb0c8f1ba0fc4616f3d2989e11d"
                }
            ]
        },
        "1.11.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:bc594880524c369f180c61f8bdaab96a9e98a473fd3ffdb3b4e33d9fe5410014",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:75641945523cdbed182cacdfa41927691860b9f89d518a0120128013d872ead5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42076140,
                    "digest": "sha256:33dd5ae6335a66a99c6beb10708f7ff8d992b1075b6477cce3accbbe3b3a765e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440401,
                    "digest": "sha256:7353b73b294b9e3d692697431695f92c48a581f30b3295a5fad1b80854f13e5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918472,
                    "digest": "sha256:5e92165ab0bf59142c3f101750c7a81a51d559eed557c0674a209979d86fd4a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46379290,
                    "digest": "sha256:876ce4c93c1cd23dba26163faf2c97ba7d2ff4a19e9ec4f18fd0d9dbf3c3491d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955196,
                    "digest": "sha256:bda4add5024ad1b83e70e156bfc6418754f8a256e506c676d27bc4030a40e27f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100928669,
                    "digest": "sha256:4f11d9aabd8a76aca770a3a5aa21e0bf06a7ac1ea57070b27cdd995e98e3495a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:35be501a2f43fb571726e227830c9cf48d9777ff91d0d06a775c6001d0b61021"
                }
            ]
        },
        "1.11.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e224d80d087ab267e513d0b44090fec9a9c16cbedeeac27cbd37378ee50b722c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:ddfefb8e504980ae0b03ed7dd34c253c1f92b92a99f0223cdf5b56df367cdb5e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42076140,
                    "digest": "sha256:33dd5ae6335a66a99c6beb10708f7ff8d992b1075b6477cce3accbbe3b3a765e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440401,
                    "digest": "sha256:7353b73b294b9e3d692697431695f92c48a581f30b3295a5fad1b80854f13e5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918472,
                    "digest": "sha256:5e92165ab0bf59142c3f101750c7a81a51d559eed557c0674a209979d86fd4a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46379290,
                    "digest": "sha256:876ce4c93c1cd23dba26163faf2c97ba7d2ff4a19e9ec4f18fd0d9dbf3c3491d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955196,
                    "digest": "sha256:bda4add5024ad1b83e70e156bfc6418754f8a256e506c676d27bc4030a40e27f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100947333,
                    "digest": "sha256:04a3ed0d3229a3885952c317e1f435ab2f242ef414b44ef3df4bbc50e10c2917"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:636f3e22130b072358320cecd85fcd786c3daadb6feeaa1ecce5f8b89c87b655"
                }
            ]
        },
        "1.11.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:90686a035dd894d8baac7e84341309707a5e9fb3a77acf3bc86acc5357c94da6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:fbc195ec8dc5e69a2c63f2522930c8ed5d7cd48d7d2f6dbf735af5d20d8a802f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42087731,
                    "digest": "sha256:d9d6acb4f2f3e6ab798235f9f094d5e343bad5a702bac8cf38e2569dfec4e284"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9480423,
                    "digest": "sha256:aaa7b6903fc66574eed3dd94d25c8ee0c27a478c84ff3219c4ce223b0233aeba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918464,
                    "digest": "sha256:2011a5c4d9cbe6e42446717e9f145d3264c681a9a7be23834c6d1989afab2dfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46384664,
                    "digest": "sha256:c86082f3b932fde1cbab5c105aaf51102e5f988ccb1efae3a9798b8cc65d8138"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955215,
                    "digest": "sha256:dbba5c313a1f6dad1e751255e1d64d5b13210013583e1a9a18c5eba3bb8921fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100995543,
                    "digest": "sha256:55db858faa1a734faf0f971ca7f932db7bdfd94db140ed610ed5c0d80c76db2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:732dd4657c05efc388714e1e0bd2187c85ef1f624dbda3e9e712274edd96784e"
                }
            ]
        },
        "1.11.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a32ba8a727c41967f8f35a80ccfd43ac805e2c395a2ecbfb0823937fdda62127",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:3189e7ebb886a5560d9f873245ab8654987d7b290da18f0f75c5410559af917f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106035389,
                    "digest": "sha256:4fc9cc4378a812aa5eccb3d67685114e8687d3dc2eacca793d22ce8d62fd80e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9ec8fc821f74c336318e94ebf5cfd21bfa344d7819e08621a103e4516ecbdc42"
                }
            ]
        },
        "1.11.5-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:3189e7ebb886a5560d9f873245ab8654987d7b290da18f0f75c5410559af917f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106035389,
                    "digest": "sha256:4fc9cc4378a812aa5eccb3d67685114e8687d3dc2eacca793d22ce8d62fd80e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9ec8fc821f74c336318e94ebf5cfd21bfa344d7819e08621a103e4516ecbdc42"
                }
            ]
        },
        "1.11.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:d1f2f5c299244bc38230ea4ac6ead1556b325409344de5de00c262f691143bea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075119,
                    "digest": "sha256:ec43a77fdcf3d8df75738e0d3bec016f01ad00db637d5e43eee90aa67114e127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483576,
                    "digest": "sha256:8a0128678cc4b40c9bb1ec7b0fa116a9208fd54d9337636244f099bbfedc9ca0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918633,
                    "digest": "sha256:d5b2e6712f412bb77d3968e5923bc8e9a94c1e8cdf8885e330ba02209eb30333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46388461,
                    "digest": "sha256:ddf45915d948e0432094f336547edb2d36192b5d75faa9ed87557c6376defbd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c2b2c143dc6d077869c6c9deb76474c46a5ecc5b656dcfc34d1332e021ae1d91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100999300,
                    "digest": "sha256:f8b7d09edcf04ebbf709e9e50bc9f736ca0fba5762f5d681eb54888b0e7cca0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5bb4beeb26b3210971e629742f941565eaafd204cd03bfebb2f9def8d988541a"
                }
            ]
        },
        "1.11.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4af8dfb9cf49240d4cf6b8923c675e0cc2b3968c4aed7bec7752674f3c4196a1",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:b58df24d6707c97ee876df5d12a6778b42d289b6fba91e3047c4a58f4500ccce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106079478,
                    "digest": "sha256:9cb493b4fab6e3501b38cc98c4de75d3ac93520a3b1fa2cada2e32c22b47f17a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0f080d96af4e6295e816fd70575785d3d38f4db8097aefb8e6cb9e3abc5d267f"
                }
            ]
        },
        "1.11.6-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:b58df24d6707c97ee876df5d12a6778b42d289b6fba91e3047c4a58f4500ccce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106079478,
                    "digest": "sha256:9cb493b4fab6e3501b38cc98c4de75d3ac93520a3b1fa2cada2e32c22b47f17a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0f080d96af4e6295e816fd70575785d3d38f4db8097aefb8e6cb9e3abc5d267f"
                }
            ]
        },
        "1.11.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:99e5bb7613df0c6a961914a04d3f9ef80bab0e8442f9a779f93eea813205babb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075164,
                    "digest": "sha256:f6e94265067157e7d769560dc94116366784ddea686f6d20c9f3e67ba72940f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483453,
                    "digest": "sha256:6f2fbc1f843984fcee8822e171c70d7b2ddf5233beeaf7eb422dca14e8ca0826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918606,
                    "digest": "sha256:3dcb1afece058cd63eccf185f2a039fa824964013c16f587cbf4f36552f1019a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389513,
                    "digest": "sha256:5bd852cf67320cb264474e6a781be61143a1db5e666692fb408b7228a2d51658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c014c95a2990aa655b803e6599930546f6d554ca57df6e91fa283b00f739458d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101041409,
                    "digest": "sha256:174fffe791eff6719d5c477892a083304e107697abff1280be13b430e2a42fdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:cf1df17663e5b77d23c79de3d004bb045861e43bb4a5c09f63fb105199933503"
                }
            ]
        },
        "1.11.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b5e61a3517204639f97388ff62d1db50998c72948d724dd63edde5a1fcd96de0",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:8c7dfc4aa93c505883f516842b9a9942bff4eceb99101fa806f0327f7d529937"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106470498,
                    "digest": "sha256:228b5b1a28a6bb290431685dabaf1075f784cbb93d47aad732a172bd2613fbe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:44085c2385794c97f24092a9afbb3fcfce30930eb9e1de0dbcd6a17994728d47"
                }
            ]
        },
        "1.11.7-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:8c7dfc4aa93c505883f516842b9a9942bff4eceb99101fa806f0327f7d529937"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106470498,
                    "digest": "sha256:228b5b1a28a6bb290431685dabaf1075f784cbb93d47aad732a172bd2613fbe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:44085c2385794c97f24092a9afbb3fcfce30930eb9e1de0dbcd6a17994728d47"
                }
            ]
        },
        "1.11.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:ebf3f8436feaeb09c905b0031d853c82574d5accd2db43e3ae45cbdbd707a5e0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075164,
                    "digest": "sha256:f6e94265067157e7d769560dc94116366784ddea686f6d20c9f3e67ba72940f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483453,
                    "digest": "sha256:6f2fbc1f843984fcee8822e171c70d7b2ddf5233beeaf7eb422dca14e8ca0826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918606,
                    "digest": "sha256:3dcb1afece058cd63eccf185f2a039fa824964013c16f587cbf4f36552f1019a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389513,
                    "digest": "sha256:5bd852cf67320cb264474e6a781be61143a1db5e666692fb408b7228a2d51658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c014c95a2990aa655b803e6599930546f6d554ca57df6e91fa283b00f739458d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101041133,
                    "digest": "sha256:476a3ccac38288dfb5e21ab3aedbed7d2b41037d75f518b24615a51cbe0788f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f00c2e90e8c9ad1775f88906009520d067739eaf885d716a690d8a62c8b4d471"
                }
            ]
        },
        "1.11.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:cb98b28699c9053b3efc8352dade8ec0e5d4ddfca76aa719ce9cda26f6355550",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:8502ef3b4133aeb8cd4aae88f0b24a527929db6c005da449ee2daf1292926495"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350757,
                    "digest": "sha256:c2a5cdd4aa08146b4516cc95f6b461f2994250a819b3e6f75f23fa2a8c1b1744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301011,
                    "digest": "sha256:61912a55c4015fdbde8dfe297540a2aaa429fc1293fe6c07650cc12069d87bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c38eec8ecc12484e7fbc91473d071873f9e1c850c3518bd7ef96e88e4b0dea86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106080561,
                    "digest": "sha256:06a1b7a6e4810ba1614536b29ffa772b259bc28caabb6105a5a1fbc2aa98f404"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fcced79bbf14cd2472eafc8b4b1358c6f1a4b9d7c9690d23fd0c1c177be8bd44"
                }
            ]
        },
        "1.11.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:8502ef3b4133aeb8cd4aae88f0b24a527929db6c005da449ee2daf1292926495"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350757,
                    "digest": "sha256:c2a5cdd4aa08146b4516cc95f6b461f2994250a819b3e6f75f23fa2a8c1b1744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301011,
                    "digest": "sha256:61912a55c4015fdbde8dfe297540a2aaa429fc1293fe6c07650cc12069d87bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c38eec8ecc12484e7fbc91473d071873f9e1c850c3518bd7ef96e88e4b0dea86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106080561,
                    "digest": "sha256:06a1b7a6e4810ba1614536b29ffa772b259bc28caabb6105a5a1fbc2aa98f404"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fcced79bbf14cd2472eafc8b4b1358c6f1a4b9d7c9690d23fd0c1c177be8bd44"
                }
            ]
        },
        "1.11.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:657387b4920b8910a49acf54312a3f0955a1930617eacd52465d92602402c216"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075164,
                    "digest": "sha256:f6e94265067157e7d769560dc94116366784ddea686f6d20c9f3e67ba72940f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483453,
                    "digest": "sha256:6f2fbc1f843984fcee8822e171c70d7b2ddf5233beeaf7eb422dca14e8ca0826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918606,
                    "digest": "sha256:3dcb1afece058cd63eccf185f2a039fa824964013c16f587cbf4f36552f1019a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389513,
                    "digest": "sha256:5bd852cf67320cb264474e6a781be61143a1db5e666692fb408b7228a2d51658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c014c95a2990aa655b803e6599930546f6d554ca57df6e91fa283b00f739458d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101040949,
                    "digest": "sha256:0a34c037ad907dbc6d7d5a746081e12877672267345688baa0f6f2d7f82a47e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3b4c7144ac7fcdcf07b884d8390335e9d29a6d740304614005f0679554798b72"
                }
            ]
        },
        "1.11.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1289611372f020ddb7b76bf500b56f1d6531fe7ff0122e1deba29c15f184d029",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:83394bb9b71305927c19db90fbd36dc69e18053f786054e472df701d9a701464"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350757,
                    "digest": "sha256:c2a5cdd4aa08146b4516cc95f6b461f2994250a819b3e6f75f23fa2a8c1b1744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301011,
                    "digest": "sha256:61912a55c4015fdbde8dfe297540a2aaa429fc1293fe6c07650cc12069d87bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c38eec8ecc12484e7fbc91473d071873f9e1c850c3518bd7ef96e88e4b0dea86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106077739,
                    "digest": "sha256:e9e3ef5301835bee0e26af1d3d7ef4c0b9e64d0401def6e811ea2f8052cb1e37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:c469823668408c9782703aa92c8dd51a1562e8439bdcd81582915798d9165b51"
                }
            ]
        },
        "1.11.9-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:83394bb9b71305927c19db90fbd36dc69e18053f786054e472df701d9a701464"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350757,
                    "digest": "sha256:c2a5cdd4aa08146b4516cc95f6b461f2994250a819b3e6f75f23fa2a8c1b1744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301011,
                    "digest": "sha256:61912a55c4015fdbde8dfe297540a2aaa429fc1293fe6c07650cc12069d87bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c38eec8ecc12484e7fbc91473d071873f9e1c850c3518bd7ef96e88e4b0dea86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106077739,
                    "digest": "sha256:e9e3ef5301835bee0e26af1d3d7ef4c0b9e64d0401def6e811ea2f8052cb1e37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:c469823668408c9782703aa92c8dd51a1562e8439bdcd81582915798d9165b51"
                }
            ]
        },
        "1.11.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:02623e4f8b0ee5262eecf4c638436200eef6f9e304e9183f40f252b98d1bfd80"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075164,
                    "digest": "sha256:f6e94265067157e7d769560dc94116366784ddea686f6d20c9f3e67ba72940f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483453,
                    "digest": "sha256:6f2fbc1f843984fcee8822e171c70d7b2ddf5233beeaf7eb422dca14e8ca0826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918606,
                    "digest": "sha256:3dcb1afece058cd63eccf185f2a039fa824964013c16f587cbf4f36552f1019a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389513,
                    "digest": "sha256:5bd852cf67320cb264474e6a781be61143a1db5e666692fb408b7228a2d51658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c014c95a2990aa655b803e6599930546f6d554ca57df6e91fa283b00f739458d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101041650,
                    "digest": "sha256:ff4eef91721a4fde0b45c4f1d3a8b9a9677f7be842049d77eeb0913cdd4ce56c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:7cbd094d45bdbbcb7658d29ed28de7c535e17962395f58696db48fa4fad6ea1b"
                }
            ]
        },
        "1.11beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:bd13013ef3488693b508e0aa7c71e87d8524124851e6a2f07d207823dd8b8065",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:05ebdbdd0882906109b4db0f06683a718e71d0e697de74fc7d9d67013f546896"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42060835,
                    "digest": "sha256:a92bc499a4699bc1d9bd6631daec00b7b440346221ce91af635e3460f7d4d70b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440199,
                    "digest": "sha256:d56e34dc5db45e25c590c9a353c3562d66546b06312f418f9aae4661c28ee94f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912954,
                    "digest": "sha256:948d2574fcb06c4081812a267179437a8d624eba8741a8fb5a6e3ef655c3dcff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46380475,
                    "digest": "sha256:94ced04c5b3fc619ca9252df05a702d37000cbcc3fbac10e5e485428deba85ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45923944,
                    "digest": "sha256:15b6302ebab8f482cd218939332af3eb2acc1c67052757f7b28697e14e0a13d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 143657214,
                    "digest": "sha256:4433dca279e30286a0074b50ef2f957a10b622615a27e091253d98fe3095afd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:70a2e10fcc11e2c916263f934b8d5902311cd65dc033584a000e14a986d1beb1"
                }
            ]
        },
        "1.11beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0c205298130046306f6da74934bf6e5b19979f4c489dc39ce8b17b2082a41818",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:ce75a20b67b6d0167ccb696b1c3a1eeb350d362a6488056a9b1bf1976b7b67d1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42060835,
                    "digest": "sha256:a92bc499a4699bc1d9bd6631daec00b7b440346221ce91af635e3460f7d4d70b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440199,
                    "digest": "sha256:d56e34dc5db45e25c590c9a353c3562d66546b06312f418f9aae4661c28ee94f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912954,
                    "digest": "sha256:948d2574fcb06c4081812a267179437a8d624eba8741a8fb5a6e3ef655c3dcff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46380475,
                    "digest": "sha256:94ced04c5b3fc619ca9252df05a702d37000cbcc3fbac10e5e485428deba85ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45923944,
                    "digest": "sha256:15b6302ebab8f482cd218939332af3eb2acc1c67052757f7b28697e14e0a13d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151833273,
                    "digest": "sha256:15cfcf4f67319755507c57db03083889550109c3f9fcf7d2577229882e78a55a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6fc996fd2840d08d49b1d4648898b545b8430470c93e9b0d0c687555635bccc7"
                }
            ]
        },
        "1.11beta3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:64e473ed1524911bd92f588929799a058111259096e28d5e9381af5f63ccee5b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11beta3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5468,
                "digest": "sha256:a2b4f753915c4ab557cc580e05dc6ff4178a362b4158617119244d8c25c982d0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42060835,
                    "digest": "sha256:a92bc499a4699bc1d9bd6631daec00b7b440346221ce91af635e3460f7d4d70b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440199,
                    "digest": "sha256:d56e34dc5db45e25c590c9a353c3562d66546b06312f418f9aae4661c28ee94f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912954,
                    "digest": "sha256:948d2574fcb06c4081812a267179437a8d624eba8741a8fb5a6e3ef655c3dcff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46380475,
                    "digest": "sha256:94ced04c5b3fc619ca9252df05a702d37000cbcc3fbac10e5e485428deba85ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45923944,
                    "digest": "sha256:15b6302ebab8f482cd218939332af3eb2acc1c67052757f7b28697e14e0a13d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151689883,
                    "digest": "sha256:9c6b586fa4cfa288397c0c4579493604ab477312cd6ce1c3e3c0b6172c82ec70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6b7d89719c80cb1d86a2da445874b2f369378d77a448e5e9fe57e5949e0eb091"
                }
            ]
        },
        "1.11rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8cf82ed8f86722522e14cce983571ae3216b4a25a8583a4eaca55f6285480286",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:00d7e62d0ee80e2f3ee874a16f9ba0d7c3469de1d9f32940917306936fa04ccf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42060835,
                    "digest": "sha256:a92bc499a4699bc1d9bd6631daec00b7b440346221ce91af635e3460f7d4d70b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440199,
                    "digest": "sha256:d56e34dc5db45e25c590c9a353c3562d66546b06312f418f9aae4661c28ee94f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912954,
                    "digest": "sha256:948d2574fcb06c4081812a267179437a8d624eba8741a8fb5a6e3ef655c3dcff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46380475,
                    "digest": "sha256:94ced04c5b3fc619ca9252df05a702d37000cbcc3fbac10e5e485428deba85ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45923944,
                    "digest": "sha256:15b6302ebab8f482cd218939332af3eb2acc1c67052757f7b28697e14e0a13d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 151752612,
                    "digest": "sha256:c9412cd6340cb9be4d1036f04a6e3ee1f62b24a398f0e48fce4d2718c4053a5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:933caded572d80c7d9a3954373c97c857caa524aedb11ce94e3c28fe6f826e84"
                }
            ]
        },
        "1.11rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c6e0752bada38109ec7eaf471187b1cad2c4f4941840a93738da727e23361b3b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.11rc2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:0c87106f33b14ae6bda2850bc9a7424309110153f21a38b0acad52e195755b45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42060835,
                    "digest": "sha256:a92bc499a4699bc1d9bd6631daec00b7b440346221ce91af635e3460f7d4d70b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9440199,
                    "digest": "sha256:d56e34dc5db45e25c590c9a353c3562d66546b06312f418f9aae4661c28ee94f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3912954,
                    "digest": "sha256:948d2574fcb06c4081812a267179437a8d624eba8741a8fb5a6e3ef655c3dcff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46380475,
                    "digest": "sha256:94ced04c5b3fc619ca9252df05a702d37000cbcc3fbac10e5e485428deba85ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45923944,
                    "digest": "sha256:15b6302ebab8f482cd218939332af3eb2acc1c67052757f7b28697e14e0a13d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101723277,
                    "digest": "sha256:e1d8f646a3df4e18408aad2c6d8a30c035d2d25fc47aea56366127f1781815b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a2523e09d2c551087dda53702f44e550a55bb74aea281e495aea61e212f85e9d"
                }
            ]
        },
        "1.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fadd7640e31184aeeed6782c02fc96f8ee770012d6c2b5a51a2f62587ce4c4f1",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:d43c094a8010be72db677959484e91a415dbd62239d4b2bb440ff7262f920967"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119833724,
                    "digest": "sha256:2c9446ed989424d7d285ef1d0d5d2f4ec0a52baeb8abcfa5fafe68766499452c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:09018247180362540dad15638629d5b0f7ce54947ecfacc794d5fc6d8dd4265b"
                }
            ]
        },
        "1.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:2c8f794a6c65d30e46f9b07bbc87f4ce857ef94bb4becb735c8ca1d0f5f81831"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119830447,
                    "digest": "sha256:c300345d8affecdb014b16d6093f192bbf586e0d294bbe2f42f656c67ba3925b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3a1496e58ed4a7cae2c276884cdeeea284cf71f467a1346423f4b722235f6d21"
                }
            ]
        },
        "1.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:d43c094a8010be72db677959484e91a415dbd62239d4b2bb440ff7262f920967"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119833724,
                    "digest": "sha256:2c9446ed989424d7d285ef1d0d5d2f4ec0a52baeb8abcfa5fafe68766499452c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:09018247180362540dad15638629d5b0f7ce54947ecfacc794d5fc6d8dd4265b"
                }
            ]
        },
        "1.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:5ea76ea6f21ebd834073e33a28920fac0d159b8bc831a21fcd2b7dd5e28a25aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120180146,
                    "digest": "sha256:40edd1691540def9febe589b7bf38ed2a7052bb4f9e2bf06334a69a614609f0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4531ac9421f7cec6fba0773453da9ad0b7709c46491f66bf4a5daa3041362468"
                }
            ]
        },
        "1.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:057e0cd7adb664237bb9eac4d5189d4b1ef354bfbbc3e4b84a7f3f8a7b045c71"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859700,
                    "digest": "sha256:9bbb41bca8c6254da5088d03354297b1309dc75c2ccc738416025f89709ae5ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096223,
                    "digest": "sha256:239e4acdbc2ab88c89aa359fbab11429ea6d7bd93ea589a22c6bbb833ff82b93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343278,
                    "digest": "sha256:83d6b4707a3c3aff9cb939fc058b869c5412e78c37e43eb0b653565460495537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315591,
                    "digest": "sha256:6e096c4fc8c629edca6da3ce5a9e95288512cb11e3d3d01a6e49078d19c2acca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996899,
                    "digest": "sha256:ca29eebbe47938ede4b91d684551d2cd027b2947a5aa2dffb6b64aee43fef432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105013094,
                    "digest": "sha256:df08f9897bdf8c3e4b49d59f620cce8b79772e1967a513d03cae66a69d4f0e01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6559c6ed4d796aaf268b74e9eb60c18216427927424825e5df6115bafe9bbbd7"
                }
            ]
        },
        "1.12-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c02e3aeca6507db1d13d9f3c83a3be90b7d9a05fd461cc8b2038c4c27e847c69",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:8f90f89663dc82c3b49f82c279ae97c488dc095241486a8773e9ddf8a6397b65"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42086927,
                    "digest": "sha256:54d7f221ed1ab7644f6a88a953847270cd864b5ebc4f343bfa28876a2715031f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9480760,
                    "digest": "sha256:2fea5bcc599e31c6fb6e38ce89618c27f24be54ed9ac9b53f4fcbed58f9d619d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918458,
                    "digest": "sha256:586ac22707ead8a14ad6ae745a4c231538e6215c7a702ccad147b5251b3ea66c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46384822,
                    "digest": "sha256:8c5565830197f8831e23db2438cc94b7a2c5b37186bfa8adc7d45c22ef585b48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955173,
                    "digest": "sha256:132c235127591dc1fcf10d81e3fb4feff77a94c31a0763561b28fc39ddf329d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105597721,
                    "digest": "sha256:11329309af2864d8e971ebdf07402799f5a744f5b21f996b8fe7a3f7ceaa2af6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:fcc2a8af23cbee5897a7b8018c360714e5780453feca3ed8b34bbcb184848025"
                }
            ]
        },
        "1.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:ee8622ab7c8cbc71ca9a181f72c4eec43027c2812310557b4285091619e46007"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108370,
                    "digest": "sha256:cc3b08e804cce7e88d9df954b76be506569775afe9cf36316f2fa6c5c9bf3d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498229,
                    "digest": "sha256:aa649f4f33c2131c2969e49352ff247ebe5a62a62b83498c3580f883aa35621e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918766,
                    "digest": "sha256:901c0c16dce9409a6a020f4b874b40fb3f7d302fe0b4e7a80a87a7cfbab7da04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46400091,
                    "digest": "sha256:715a264d83dc76a4a25b4110827c1ac6cc620c406edb6b2089cd1117aec271ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46026938,
                    "digest": "sha256:83537019430dd0ae1391379fd45844061c435eed7fb3492201ad8625537b4337"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105013064,
                    "digest": "sha256:ec634a29df67325b03c74273de3c6e848c40310ce0ebabb4173383d7ccd05a15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:42c7cecb00944628c2f8eca8ae4c5628a8016c696b20a39193ae84815c35c17a"
                }
            ]
        },
        "1.12.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c0ba37457f7fe4f443305bbf2aceb0e9d627f15ddf3dbfaa9c3e195c23ae5315",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3797,
                "digest": "sha256:39bbe15c015be29d7be3c4c3ed83f1d7b5689bfe23271baa34bd21b6a232e401"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120077562,
                    "digest": "sha256:5b9a1d8b8653e23e4c1b7ac5ff71ca6c26daafdf2c6d6db495bd387cc7cf8f50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3c6636e96a9376b2d00e6fd25a6c276e0f93413ef4185883fde9fbf8d217d474"
                }
            ]
        },
        "1.12.0-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3797,
                "digest": "sha256:39bbe15c015be29d7be3c4c3ed83f1d7b5689bfe23271baa34bd21b6a232e401"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120077562,
                    "digest": "sha256:5b9a1d8b8653e23e4c1b7ac5ff71ca6c26daafdf2c6d6db495bd387cc7cf8f50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3c6636e96a9376b2d00e6fd25a6c276e0f93413ef4185883fde9fbf8d217d474"
                }
            ]
        },
        "1.12.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:8bbfdfd01a066f44f80a926b3c2a3c85268b580cef4ee3705f3403a1f494b7fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075119,
                    "digest": "sha256:ec43a77fdcf3d8df75738e0d3bec016f01ad00db637d5e43eee90aa67114e127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483576,
                    "digest": "sha256:8a0128678cc4b40c9bb1ec7b0fa116a9208fd54d9337636244f099bbfedc9ca0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918633,
                    "digest": "sha256:d5b2e6712f412bb77d3968e5923bc8e9a94c1e8cdf8885e330ba02209eb30333"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46388461,
                    "digest": "sha256:ddf45915d948e0432094f336547edb2d36192b5d75faa9ed87557c6376defbd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c2b2c143dc6d077869c6c9deb76474c46a5ecc5b656dcfc34d1332e021ae1d91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105586734,
                    "digest": "sha256:6c698342e2226481fcc5ff2245fcaa355bbf661b4256231c2c38d33e9ee7fe2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:e1a5ecbdfa3c1bb922162849696a01a8aef278b2dff69dc6dce001e9573fb50f"
                }
            ]
        },
        "1.12.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7b438c0405f7f3490fb7de55d643879c7c8e4b61280491653021cb1587110299",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:ffb5c472a2f04354a2c5a90a24d25558b56a6716a00785c83fa57ff103cdff4a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120997024,
                    "digest": "sha256:371717eef3e141fc877863167be7141b2fcbfbb7ed21c7ae19447818ecb463ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:08868998dfb8a65e0c036b53702c33db076ce507e2ef97dbfb7a45b8dfb9010b"
                }
            ]
        },
        "1.12.1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:ffb5c472a2f04354a2c5a90a24d25558b56a6716a00785c83fa57ff103cdff4a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120997024,
                    "digest": "sha256:371717eef3e141fc877863167be7141b2fcbfbb7ed21c7ae19447818ecb463ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:08868998dfb8a65e0c036b53702c33db076ce507e2ef97dbfb7a45b8dfb9010b"
                }
            ]
        },
        "1.12.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:5b23707195e87c089f3ed272862493b5a7f84b8a28571072340d305ba2eb9f4b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075164,
                    "digest": "sha256:f6e94265067157e7d769560dc94116366784ddea686f6d20c9f3e67ba72940f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483453,
                    "digest": "sha256:6f2fbc1f843984fcee8822e171c70d7b2ddf5233beeaf7eb422dca14e8ca0826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918606,
                    "digest": "sha256:3dcb1afece058cd63eccf185f2a039fa824964013c16f587cbf4f36552f1019a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389513,
                    "digest": "sha256:5bd852cf67320cb264474e6a781be61143a1db5e666692fb408b7228a2d51658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c014c95a2990aa655b803e6599930546f6d554ca57df6e91fa283b00f739458d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106194281,
                    "digest": "sha256:e99f5ac16811029fac92950f7bd9ce9ecbfc643107d096acdb1ce42edee88d17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:e3c908fcca62a071dd6de571c1f2f956c982a1d557f52f04a64d54b60a19c44b"
                }
            ]
        },
        "1.12.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:9a0c04934ebdacb3fdc68e216067a824276748472605834cc5c347cab11f6d40",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:ff8c5d0210a99b6d2028c3d970f2aff1ba88e8f4b267f79f40bbf2e6b9c8b541"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121087640,
                    "digest": "sha256:8d44d9678d0300f9eec73df4fb4365fba935ab72b026b5fc9c4c9687f97aef2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:55f7ceb3e890a97b29ac47935d679c3bebf42d7b095bcf30b050c684c047fc89"
                }
            ]
        },
        "1.12.10-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:ff8c5d0210a99b6d2028c3d970f2aff1ba88e8f4b267f79f40bbf2e6b9c8b541"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121087640,
                    "digest": "sha256:8d44d9678d0300f9eec73df4fb4365fba935ab72b026b5fc9c4c9687f97aef2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:55f7ceb3e890a97b29ac47935d679c3bebf42d7b095bcf30b050c684c047fc89"
                }
            ]
        },
        "1.12.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:dab429751c21c0f238f163af214e74caacd333e45f9687e972e095fe903a756b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121425276,
                    "digest": "sha256:c1e0c041dba67204af396136a24e4c802172a5d67cedc1d9c27f93209a1a3585"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b66254498e8a9fb9d95d0d08e5a9dd35ed5a3227f9dc1bbb2a37bd1d59a76aef"
                }
            ]
        },
        "1.12.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:996fd03003460c450a3c5c35ea1b4756e1a0b3d6a6326ba4fab066e5bbc6f99c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45855452,
                    "digest": "sha256:6620cf3e4cc4c61becc7e32eae7cb55cfad3443373bb643085f2774041dd91e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7095966,
                    "digest": "sha256:a541bacc6865ac716a0c11ae0ede3faaa5b8026f347af85f3da0cda781b4e3de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343118,
                    "digest": "sha256:3c0ad6ec0696357c9f8ac700068ab32bfa97874f03732b61e3031ea24c218d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47294468,
                    "digest": "sha256:13b3f9dac3448b138d0aceb76df9ce624cfb0c10de2171befbacd0b4bfc97921"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52994500,
                    "digest": "sha256:6b53ba8bd53ec7ee28e15598eb2c83ac7fa6850f6ef954336193dc37560d6daf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106250363,
                    "digest": "sha256:e563f4210caede857dbe065989529766253cd8c5684f1805bcc3391b605c2a44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d64eac12372be4ce9f0dd601190a61ea2ece1d8bc51f87ec06430e91d23df2b0"
                }
            ]
        },
        "1.12.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:41aef9edf694142a8268896210c1fcd7d1b3eb3992993782978b30d83d80f6b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108151,
                    "digest": "sha256:e9b52de4918cdbc0754871cf4e5aa73ab93ac6740b952e2623016af227869026"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9497746,
                    "digest": "sha256:6e7a04af8dc0536b7189a33fa5ff487b98ea1924d64220af5f8c153a4bc31f2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918776,
                    "digest": "sha256:fbdb61d33b325a0cb354232f8189afe2d211757a5cb14d3ee0e8b7a23c05343c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46391369,
                    "digest": "sha256:ef2411d566c5c943358caca412032f2503b85c9c536afa3c353496b7739236b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46025450,
                    "digest": "sha256:e3ec3e66ad009dbb6b8e8598b383e86c75f650355c749ed671916d98e39b92c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106250352,
                    "digest": "sha256:2b40676cf0d47f679e9015808165bb1038b9378bb732f18a4a946de241ffeaed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:91a7721746740051b29c853a83b6d657e8e425cdcc7429d2ffa833ffce1c7126"
                }
            ]
        },
        "1.12.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d07a41bfc87c3290cac679f25f5a9a9ce620eb0192f9df2f5d027e9d79e4bb04",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:2b86bff92f5e90ef951d00017a6d331e88949a5f74f56d836e93cc9b7ae4b6f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121087923,
                    "digest": "sha256:d1e51c7eab288759e24059fdd88961001862107248255d3ab130f7b2f032bbe8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b61c006bbd91969fc844ad2a1df2150ae7f45d8cb10d9e8ba5facdf73eb0b8a8"
                }
            ]
        },
        "1.12.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:2b86bff92f5e90ef951d00017a6d331e88949a5f74f56d836e93cc9b7ae4b6f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121087923,
                    "digest": "sha256:d1e51c7eab288759e24059fdd88961001862107248255d3ab130f7b2f032bbe8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b61c006bbd91969fc844ad2a1df2150ae7f45d8cb10d9e8ba5facdf73eb0b8a8"
                }
            ]
        },
        "1.12.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:a976fc7f877b3ecad192de613a4b86618a85326ca3e97ab0898e2be33f85d5ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121424793,
                    "digest": "sha256:e998b916bc1e2d0930311cea1abf75fd6a58afbac7636c9a5711f52bf51a0582"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b4fbba53a46fee46ce2ef691bb7f1cb0a0168bcd46f768ff12cd7f45164e2a51"
                }
            ]
        },
        "1.12.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:dfe7b0f833af35fe9d54ade6b0c3b3ddd4440c57b1ad02c2c4d54d72df0ce68e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45855452,
                    "digest": "sha256:6620cf3e4cc4c61becc7e32eae7cb55cfad3443373bb643085f2774041dd91e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7095966,
                    "digest": "sha256:a541bacc6865ac716a0c11ae0ede3faaa5b8026f347af85f3da0cda781b4e3de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343118,
                    "digest": "sha256:3c0ad6ec0696357c9f8ac700068ab32bfa97874f03732b61e3031ea24c218d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47294468,
                    "digest": "sha256:13b3f9dac3448b138d0aceb76df9ce624cfb0c10de2171befbacd0b4bfc97921"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52994500,
                    "digest": "sha256:6b53ba8bd53ec7ee28e15598eb2c83ac7fa6850f6ef954336193dc37560d6daf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106251109,
                    "digest": "sha256:885b715d82fbeaeeda95130482d0e4c54bded98b64f47ac63d8a4fd0cb10d8bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:66b62837fd46e6718d64bd3894750b80f88b2287369423dacf94560164ebf210"
                }
            ]
        },
        "1.12.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:e6e0c002b686824a65b49471171bf516e31ce5145f216e92d0e8d91a3f66b1db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108151,
                    "digest": "sha256:e9b52de4918cdbc0754871cf4e5aa73ab93ac6740b952e2623016af227869026"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9497746,
                    "digest": "sha256:6e7a04af8dc0536b7189a33fa5ff487b98ea1924d64220af5f8c153a4bc31f2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918776,
                    "digest": "sha256:fbdb61d33b325a0cb354232f8189afe2d211757a5cb14d3ee0e8b7a23c05343c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46391369,
                    "digest": "sha256:ef2411d566c5c943358caca412032f2503b85c9c536afa3c353496b7739236b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46025450,
                    "digest": "sha256:e3ec3e66ad009dbb6b8e8598b383e86c75f650355c749ed671916d98e39b92c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106251101,
                    "digest": "sha256:ce6a881dfedb0b033a4bc0a404844cc029aa251f316608b9d68de45a4b3a6e26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:061b592db083894d0e9b0637206f9bbece1dcc72f61760bdcfeff0742ed2d594"
                }
            ]
        },
        "1.12.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b3689b741372704d30ce55184a3971b1e05c2427c606c20906674f34b0d2fa9f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:df99981767a9159d6ba546e349207c7eab4b7586f8a46348a1d82900332b5bbf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121087516,
                    "digest": "sha256:1c129090001887490bb2a58ec20e103513eb0cde6b54dec34b21489521897896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:029a36aaf31161ff785454976f9aed909e6782c47141b955cbe003bfb3a1f5a5"
                }
            ]
        },
        "1.12.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:df99981767a9159d6ba546e349207c7eab4b7586f8a46348a1d82900332b5bbf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121087516,
                    "digest": "sha256:1c129090001887490bb2a58ec20e103513eb0cde6b54dec34b21489521897896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:029a36aaf31161ff785454976f9aed909e6782c47141b955cbe003bfb3a1f5a5"
                }
            ]
        },
        "1.12.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:8b36c960db9d1581e8917e934a8c54825bbbcb4e0da21243c5ec6b5ab37935b7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121430004,
                    "digest": "sha256:f3f8320e3f3eb45a3e90295ed4e993848c3af508f652d0bcfa6e642e16f725ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:647b9cf583ddade6700267a74e0a7564dbcf1256d7a315a8d2f7e1866d45bfb7"
                }
            ]
        },
        "1.12.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:f6524edc438fd42a47fe6786f8f0843bae69d1d4555a31237089bb609cb1f322"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45855452,
                    "digest": "sha256:6620cf3e4cc4c61becc7e32eae7cb55cfad3443373bb643085f2774041dd91e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7095966,
                    "digest": "sha256:a541bacc6865ac716a0c11ae0ede3faaa5b8026f347af85f3da0cda781b4e3de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343118,
                    "digest": "sha256:3c0ad6ec0696357c9f8ac700068ab32bfa97874f03732b61e3031ea24c218d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47294468,
                    "digest": "sha256:13b3f9dac3448b138d0aceb76df9ce624cfb0c10de2171befbacd0b4bfc97921"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52994500,
                    "digest": "sha256:6b53ba8bd53ec7ee28e15598eb2c83ac7fa6850f6ef954336193dc37560d6daf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106252508,
                    "digest": "sha256:0a17a752e08f3331be4e37a170c099485b1b3e780033f3830de9fcf17ce3f64d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:237250feb8fb9fba4c2acd8894a52db3a85ec2203e2edf8a963b554b957d8067"
                }
            ]
        },
        "1.12.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:820109ae73e97b6fe5d0d5303f409d65605f2e7124b60fb6b3dc5dfdd6f98ff9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108151,
                    "digest": "sha256:e9b52de4918cdbc0754871cf4e5aa73ab93ac6740b952e2623016af227869026"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9497746,
                    "digest": "sha256:6e7a04af8dc0536b7189a33fa5ff487b98ea1924d64220af5f8c153a4bc31f2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918776,
                    "digest": "sha256:fbdb61d33b325a0cb354232f8189afe2d211757a5cb14d3ee0e8b7a23c05343c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46391369,
                    "digest": "sha256:ef2411d566c5c943358caca412032f2503b85c9c536afa3c353496b7739236b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46025450,
                    "digest": "sha256:e3ec3e66ad009dbb6b8e8598b383e86c75f650355c749ed671916d98e39b92c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106252506,
                    "digest": "sha256:22afb96582292b0be2ff7fe6447663665931e19f5e7717a27b6481070e99fad5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:701d588ed260a492ef519003a434a40e4bbcda87f14dd84de4315a3a07a0a964"
                }
            ]
        },
        "1.12.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:da2ef4d3c71011b0332a5ce2ab467a3f73681c11ff2f144284548f65ef817954",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:08071f7f237d083afbeba080a9f4237820f720e82f6088205d9481abaff1bf0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121085953,
                    "digest": "sha256:2454ce6ca4f0d03d03420109344e2e444726478ff4c8d9bafa9ce1249bea11c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:7a7c23dbc688262aa6a2def2dc260108b56049fc71a56b61e8e74d611360a096"
                }
            ]
        },
        "1.12.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:08071f7f237d083afbeba080a9f4237820f720e82f6088205d9481abaff1bf0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121085953,
                    "digest": "sha256:2454ce6ca4f0d03d03420109344e2e444726478ff4c8d9bafa9ce1249bea11c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:7a7c23dbc688262aa6a2def2dc260108b56049fc71a56b61e8e74d611360a096"
                }
            ]
        },
        "1.12.13-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:0f71a3807c382b21fa02b5bb3c37741655023d0da348fdf4b61c75a0b113f651"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121430289,
                    "digest": "sha256:a081c90a261b0200b2765609c2ebee4874db66ab2392c39435066f507842af95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5443a8e66ba2d434e88b26bb8477c9ff3d0691e3192f33ee3ce69a5a0b8d5ac9"
                }
            ]
        },
        "1.12.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:6f4a850daf7787bc389ddb29289a9a5fcaaf3fa9e80c8c079faab2e23431fd74"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859502,
                    "digest": "sha256:6bac76f7ec397955852a282870ca77ba8bc17beaebffc52bc9053aaa18afc45f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096035,
                    "digest": "sha256:b43968e81e0eda7d56c4e052a87cd68ef88c023cea38c51a9f30375292f9642d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343198,
                    "digest": "sha256:3ecba33550822d3a153c6be10451c2d9e738070ee19367ec3136aee9875636ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47301080,
                    "digest": "sha256:fffc58cc3ec62e27b8234a554691e44c19d566effa798a9e88bf039d3958d5d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996835,
                    "digest": "sha256:af14c6639beb68a03a1da5e709edc607d67b4af546b08fa0ae7d5eeba8acf02d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106252262,
                    "digest": "sha256:c28427e116c9153b0771b7f16e00ff6dae3080e3ed8ceb37369b4941afec3582"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:11d916c178ee428806ead1f3d42f896964e07e33944826fe8bfcbf92aa99fc27"
                }
            ]
        },
        "1.12.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5468,
                "digest": "sha256:f56bdbf6092e5248572b70edde24a358ec85b85aa1cbbac69f3c2f424ad103a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108069,
                    "digest": "sha256:fb827ed75ba2d760675c1e0dfd2cef27b5120725860abe8870ee3842dfce2a08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9497771,
                    "digest": "sha256:f6fdca0c72a7ddca7b66d2c47a5de442518d8631adef3269a541a8ee1a1faec5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918760,
                    "digest": "sha256:6508d4d51e15108ee995e92f1f1e2bbcec6c4c61ec1997ed246abe0b6504f316"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46390335,
                    "digest": "sha256:efa8056142a63015026b87069d963bff11cd0de2fc98ce2e0d265c1eae3aaede"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46026997,
                    "digest": "sha256:761ccad03a788bc0c5ed642b7aa9d3df0cabbf9d56bc9f3bb6e29470d8656db8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106252258,
                    "digest": "sha256:23433c93a3cc7f6de82c4b5f70ea0fcbea5617ffd1df331c3109dbdcb724b346"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:6be4e5a9bd0d4e1a9e83ad048c7afacae0805ac860e51126721c539abc25c650"
                }
            ]
        },
        "1.12.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8843d2990599c65583f6217f9674a2fea81bbe3a3c6b24e69ceba8df77865a89",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:c3ccfb81b5ac450f8e281b69b4929aa2b4125bb7761539d155d7735d3df9c635"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2416691,
                    "digest": "sha256:3922e475e500b2739b5e74787fc80622853325822f71f8bd3de7e5b09654d60f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300592,
                    "digest": "sha256:13d326f0bb0083bcbbdf9137bdca42666cadb5ff42ef363c9e44008c925a4993"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:e632c92f58d616e58372f6ef1f37e98e5f1b02f1f2d2296cb134fb695c2307af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119830382,
                    "digest": "sha256:1e2c62af37a21b3aa7f722701365283bab55b14413bc281d9e9bf2538835cbc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e2572ac7ff18d830659d18dad7700cef3536109635a20906bb2b326a411dd900"
                }
            ]
        },
        "1.12.14-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3837,
                "digest": "sha256:435aeceed9b42af9b8fab35febefcd64d99a63a05a7fdb8f37494a806181822e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119829578,
                    "digest": "sha256:438d3176a2d62d2a05fea7d222e7188d4794b16ffe1a5e0d5397910f7edc349b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f9bc2fc32c8dfcd87c0c641183292e6f562d06cf1db3cffdbbbcd49a731eca08"
                }
            ]
        },
        "1.12.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:c3ccfb81b5ac450f8e281b69b4929aa2b4125bb7761539d155d7735d3df9c635"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2416691,
                    "digest": "sha256:3922e475e500b2739b5e74787fc80622853325822f71f8bd3de7e5b09654d60f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300592,
                    "digest": "sha256:13d326f0bb0083bcbbdf9137bdca42666cadb5ff42ef363c9e44008c925a4993"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:e632c92f58d616e58372f6ef1f37e98e5f1b02f1f2d2296cb134fb695c2307af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119830382,
                    "digest": "sha256:1e2c62af37a21b3aa7f722701365283bab55b14413bc281d9e9bf2538835cbc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e2572ac7ff18d830659d18dad7700cef3536109635a20906bb2b326a411dd900"
                }
            ]
        },
        "1.12.14-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:5ea76ea6f21ebd834073e33a28920fac0d159b8bc831a21fcd2b7dd5e28a25aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120180146,
                    "digest": "sha256:40edd1691540def9febe589b7bf38ed2a7052bb4f9e2bf06334a69a614609f0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4531ac9421f7cec6fba0773453da9ad0b7709c46491f66bf4a5daa3041362468"
                }
            ]
        },
        "1.12.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:a29e243d58ed83e96b9ee0afe57b6aeae35c701d5a3d7901b52f493c22e1a092"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859628,
                    "digest": "sha256:760e5af4a2ec2472d42b6773d075af9d2a006e0b7725ba9992e530f561d326f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096250,
                    "digest": "sha256:93dc761fecef183bb949ae59f45d1f618cc3e8879cb25946ab48737d1d8a59b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343271,
                    "digest": "sha256:73181b0fe903be79034378988be75730f983b13ada732a04ea4f46f73b332896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315646,
                    "digest": "sha256:870abc97e939a1f3c484e5c9aec16d33497f3603c57bd4581d15915528703890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996883,
                    "digest": "sha256:82416eb37ad7180f99cbe886fd16f85d209e1609a083a98bd84b164928e02bfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105010898,
                    "digest": "sha256:0efbc9ce45e552e4758a0d5b92d51580f44909157a8031d728ecf79117eea9d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:715af770d78e4dbb210b6025247295432366ea40b4cc66b781d82049367f0320"
                }
            ]
        },
        "1.12.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:9d862336b5ab0925e79c8152ae74260e4313854f172f15b554692881ea26d760"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108124,
                    "digest": "sha256:b531ae4a39253d883a11291e842b7e1aa9dae38f9d9b77ddea55b2625ce986e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498197,
                    "digest": "sha256:22754f6fc5d5a244119c0928ebf7d851d276d7f095f07e6bf435fa7afbcab8a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918728,
                    "digest": "sha256:cb2155e4b3456accbea4b6873247312dd288feb477ec966ed48637e031aba558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46399839,
                    "digest": "sha256:fad0ae2287846b9d91f237a798b6ae550ff58e33efb804be1ca049f9fd7a480f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46027023,
                    "digest": "sha256:ea2023c29cd927acbf16637195e35e121b4b6e49b7cdf9de5cc4ae894ad9d9bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105010896,
                    "digest": "sha256:d11da3045ffe3e9a9a2e62f60d6c2fd8f48df615a68f233eb41bd693f13efa23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0961017fc056b936cc499eda01b3fe29e0603c8db998f88973a399428f87c09b"
                }
            ]
        },
        "1.12.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fe29ec4e352f9a040ab17dad30aad77042e5a6b3c00a6efcc84dda131983f752",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3837,
                "digest": "sha256:a64d37f5d091c7e1ba14b0a236af94d33ce1e047a64298c84f316304fab99cd9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119828737,
                    "digest": "sha256:f567b783ec457aed33de6a5bf64ef10e8708eb272917189c3be28f7b550da327"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:34c4deef01ebef5adf626cb0a13560532c3c9ec33fee7ee6e17cfcec4c018689"
                }
            ]
        },
        "1.12.15-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:fc276d14b343e75f92f1a34ac45e5f29ca05638bfca423edd200babd40d545f8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119829985,
                    "digest": "sha256:8f93b71fc7f5fcb1d6b65f977e4ae2de98199948d4d48c9127e6fb5e1779e238"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:138ca6c2d2051c4d0671c95948b1add37807ae0b367a10455baac20e8daeb6f1"
                }
            ]
        },
        "1.12.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3837,
                "digest": "sha256:a64d37f5d091c7e1ba14b0a236af94d33ce1e047a64298c84f316304fab99cd9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119828737,
                    "digest": "sha256:f567b783ec457aed33de6a5bf64ef10e8708eb272917189c3be28f7b550da327"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:34c4deef01ebef5adf626cb0a13560532c3c9ec33fee7ee6e17cfcec4c018689"
                }
            ]
        },
        "1.12.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:739aeff6a47b83fa17f06f2bf76e2419f6897c1e0a779f8f136978ca1ae355fb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859628,
                    "digest": "sha256:760e5af4a2ec2472d42b6773d075af9d2a006e0b7725ba9992e530f561d326f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096250,
                    "digest": "sha256:93dc761fecef183bb949ae59f45d1f618cc3e8879cb25946ab48737d1d8a59b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343271,
                    "digest": "sha256:73181b0fe903be79034378988be75730f983b13ada732a04ea4f46f73b332896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315646,
                    "digest": "sha256:870abc97e939a1f3c484e5c9aec16d33497f3603c57bd4581d15915528703890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996883,
                    "digest": "sha256:82416eb37ad7180f99cbe886fd16f85d209e1609a083a98bd84b164928e02bfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105012178,
                    "digest": "sha256:789a9d5b26a04245c03b0a63a560131833d2fee47749aa5ad0f8ca5a72ca0fe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bc0f092aa97f73ea5f7bcee35cda8147b9963c91b0369145002ee8ed98b27067"
                }
            ]
        },
        "1.12.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:5b005b0399002a883b298eb6f537ca2a7aa37ea3dfdd4454731a64d6c40def2f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108124,
                    "digest": "sha256:b531ae4a39253d883a11291e842b7e1aa9dae38f9d9b77ddea55b2625ce986e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498197,
                    "digest": "sha256:22754f6fc5d5a244119c0928ebf7d851d276d7f095f07e6bf435fa7afbcab8a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918728,
                    "digest": "sha256:cb2155e4b3456accbea4b6873247312dd288feb477ec966ed48637e031aba558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46399839,
                    "digest": "sha256:fad0ae2287846b9d91f237a798b6ae550ff58e33efb804be1ca049f9fd7a480f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46027023,
                    "digest": "sha256:ea2023c29cd927acbf16637195e35e121b4b6e49b7cdf9de5cc4ae894ad9d9bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105012044,
                    "digest": "sha256:355e3a9fa515bd9de15849c63aa3e99133ba47e15bea069d6e97f7ac8cc60c89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b6f5b86289c12e3b2cb4792fdc23c54f1a139fc7041d3586bc3a6e931395904e"
                }
            ]
        },
        "1.12.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:db65bea4faf636f5068a08b2e6d8ecf6611e4d3c1cdf72198d0bcc316853af5b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.16-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:1d3eff4039b74ac0b1b087a4fe53db487de9d4ee0bb40dcf2adb2de05d427cc9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119833008,
                    "digest": "sha256:04f1af64ccb1ecd698433e2fbe5e85eda3eb91ca9c8ba5f876af745b8de6128e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1978cd3c4fe6460eca8bb9788960e3eb256674fc511b072ec6b02499eb5d6060"
                }
            ]
        },
        "1.12.16-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:daa53e1e990750b1f6aa2d1375511d0cc6ddf5410f105e1e196c20c7a9c7cbc3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119830609,
                    "digest": "sha256:4ce55a8f74f0d48ee8604a922d2759a535ecf6e67c4adc2e73d1c3942346f356"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:04d57c4268877834ab0219fb36cec4213fd1574429675792f0c4f586e1697097"
                }
            ]
        },
        "1.12.16-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:1d3eff4039b74ac0b1b087a4fe53db487de9d4ee0bb40dcf2adb2de05d427cc9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119833008,
                    "digest": "sha256:04f1af64ccb1ecd698433e2fbe5e85eda3eb91ca9c8ba5f876af745b8de6128e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1978cd3c4fe6460eca8bb9788960e3eb256674fc511b072ec6b02499eb5d6060"
                }
            ]
        },
        "1.12.16-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:682b1b73923eea9220f72a9c3ba71c8cfb776be0195ada08f0bc30f0c443a2eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859700,
                    "digest": "sha256:9bbb41bca8c6254da5088d03354297b1309dc75c2ccc738416025f89709ae5ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096223,
                    "digest": "sha256:239e4acdbc2ab88c89aa359fbab11429ea6d7bd93ea589a22c6bbb833ff82b93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343278,
                    "digest": "sha256:83d6b4707a3c3aff9cb939fc058b869c5412e78c37e43eb0b653565460495537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315591,
                    "digest": "sha256:6e096c4fc8c629edca6da3ce5a9e95288512cb11e3d3d01a6e49078d19c2acca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996899,
                    "digest": "sha256:ca29eebbe47938ede4b91d684551d2cd027b2947a5aa2dffb6b64aee43fef432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105014718,
                    "digest": "sha256:cea9e866d965680fe2a112f35a67cbba5b2e7a8752671daa09490b13156e6a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:69e6c9d9a2b50e6d315e1137d9e864032c1f17765ff1719c95d6cd3be319cdc6"
                }
            ]
        },
        "1.12.16-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:4bc3334df8d7a77711b6eead8fa155f562bb24725bd946708dd27f4735edfb76"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108370,
                    "digest": "sha256:cc3b08e804cce7e88d9df954b76be506569775afe9cf36316f2fa6c5c9bf3d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498229,
                    "digest": "sha256:aa649f4f33c2131c2969e49352ff247ebe5a62a62b83498c3580f883aa35621e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918766,
                    "digest": "sha256:901c0c16dce9409a6a020f4b874b40fb3f7d302fe0b4e7a80a87a7cfbab7da04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46400091,
                    "digest": "sha256:715a264d83dc76a4a25b4110827c1ac6cc620c406edb6b2089cd1117aec271ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46026938,
                    "digest": "sha256:83537019430dd0ae1391379fd45844061c435eed7fb3492201ad8625537b4337"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105014611,
                    "digest": "sha256:8d6077e2a45d4396b868c4c0ded445eeb8c7fb253f6eee7791b4332f27f8e009"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ba5a6d94550fba80c751fe8d6d10d39446ef0a2ac8baed90e144f81e4d1d46cb"
                }
            ]
        },
        "1.12.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fadd7640e31184aeeed6782c02fc96f8ee770012d6c2b5a51a2f62587ce4c4f1",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.17-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:d43c094a8010be72db677959484e91a415dbd62239d4b2bb440ff7262f920967"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119833724,
                    "digest": "sha256:2c9446ed989424d7d285ef1d0d5d2f4ec0a52baeb8abcfa5fafe68766499452c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:09018247180362540dad15638629d5b0f7ce54947ecfacc794d5fc6d8dd4265b"
                }
            ]
        },
        "1.12.17-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:2c8f794a6c65d30e46f9b07bbc87f4ce857ef94bb4becb735c8ca1d0f5f81831"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119830447,
                    "digest": "sha256:c300345d8affecdb014b16d6093f192bbf586e0d294bbe2f42f656c67ba3925b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3a1496e58ed4a7cae2c276884cdeeea284cf71f467a1346423f4b722235f6d21"
                }
            ]
        },
        "1.12.17-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:d43c094a8010be72db677959484e91a415dbd62239d4b2bb440ff7262f920967"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 119833724,
                    "digest": "sha256:2c9446ed989424d7d285ef1d0d5d2f4ec0a52baeb8abcfa5fafe68766499452c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:09018247180362540dad15638629d5b0f7ce54947ecfacc794d5fc6d8dd4265b"
                }
            ]
        },
        "1.12.17-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:057e0cd7adb664237bb9eac4d5189d4b1ef354bfbbc3e4b84a7f3f8a7b045c71"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859700,
                    "digest": "sha256:9bbb41bca8c6254da5088d03354297b1309dc75c2ccc738416025f89709ae5ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096223,
                    "digest": "sha256:239e4acdbc2ab88c89aa359fbab11429ea6d7bd93ea589a22c6bbb833ff82b93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343278,
                    "digest": "sha256:83d6b4707a3c3aff9cb939fc058b869c5412e78c37e43eb0b653565460495537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315591,
                    "digest": "sha256:6e096c4fc8c629edca6da3ce5a9e95288512cb11e3d3d01a6e49078d19c2acca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996899,
                    "digest": "sha256:ca29eebbe47938ede4b91d684551d2cd027b2947a5aa2dffb6b64aee43fef432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105013094,
                    "digest": "sha256:df08f9897bdf8c3e4b49d59f620cce8b79772e1967a513d03cae66a69d4f0e01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6559c6ed4d796aaf268b74e9eb60c18216427927424825e5df6115bafe9bbbd7"
                }
            ]
        },
        "1.12.17-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:ee8622ab7c8cbc71ca9a181f72c4eec43027c2812310557b4285091619e46007"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108370,
                    "digest": "sha256:cc3b08e804cce7e88d9df954b76be506569775afe9cf36316f2fa6c5c9bf3d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498229,
                    "digest": "sha256:aa649f4f33c2131c2969e49352ff247ebe5a62a62b83498c3580f883aa35621e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918766,
                    "digest": "sha256:901c0c16dce9409a6a020f4b874b40fb3f7d302fe0b4e7a80a87a7cfbab7da04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46400091,
                    "digest": "sha256:715a264d83dc76a4a25b4110827c1ac6cc620c406edb6b2089cd1117aec271ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46026938,
                    "digest": "sha256:83537019430dd0ae1391379fd45844061c435eed7fb3492201ad8625537b4337"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105013064,
                    "digest": "sha256:ec634a29df67325b03c74273de3c6e848c40310ce0ebabb4173383d7ccd05a15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:42c7cecb00944628c2f8eca8ae4c5628a8016c696b20a39193ae84815c35c17a"
                }
            ]
        },
        "1.12.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7dffce2bbaa9cb1d874aced4c6f92ac4e4b4a2f21f2a2a4fc11c7b76768b3d36",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:7abdae71e1eeeb4361baac9b272225d1646a0b9541571ed132f58dd3bb2307ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121379548,
                    "digest": "sha256:15ddbfadee5672dc93011d6eccaf976808cb334614541d208b702a70f180d287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:255fc8548d8b5b12abaf3aecc91e870b64e248abe240d970b4808a30e3ac4b85"
                }
            ]
        },
        "1.12.2-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:7abdae71e1eeeb4361baac9b272225d1646a0b9541571ed132f58dd3bb2307ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2348580,
                    "digest": "sha256:d8d287cbc5740a5d49f37493eecadafc220fee4fd570329023344cad978c4272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301025,
                    "digest": "sha256:44eb619672c0799c599d920243b08ca71ec36eb42226684c5ca4b34d71ea3a03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:5081e7f1adf91813593bdbc6de98e6aaf6e630e2d7e1f8676263a2487fad2556"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121379548,
                    "digest": "sha256:15ddbfadee5672dc93011d6eccaf976808cb334614541d208b702a70f180d287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:255fc8548d8b5b12abaf3aecc91e870b64e248abe240d970b4808a30e3ac4b85"
                }
            ]
        },
        "1.12.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:ce454606f2101a6f7475a82fe38b93864638c14f68b9e626b3ba14e9ec85cbcf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075164,
                    "digest": "sha256:f6e94265067157e7d769560dc94116366784ddea686f6d20c9f3e67ba72940f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483453,
                    "digest": "sha256:6f2fbc1f843984fcee8822e171c70d7b2ddf5233beeaf7eb422dca14e8ca0826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918606,
                    "digest": "sha256:3dcb1afece058cd63eccf185f2a039fa824964013c16f587cbf4f36552f1019a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389513,
                    "digest": "sha256:5bd852cf67320cb264474e6a781be61143a1db5e666692fb408b7228a2d51658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c014c95a2990aa655b803e6599930546f6d554ca57df6e91fa283b00f739458d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106220600,
                    "digest": "sha256:4cc9119eb045d4878da5795014a107ec9a13295b9299cc16e17405fc1ef48463"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:52cb97ec560c004cf11f7645694a4996f0372ce424dc2188d48f65d4d14f3b36"
                }
            ]
        },
        "1.12.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:9a1c343f0b744aa98afeb0f47e414cafacf772dc5e96e40606b532c6d76a6a75",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:d175f550862975cd63e48de6483172a3940fca551f2b5ab5a6402e66dbb66f66"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350757,
                    "digest": "sha256:c2a5cdd4aa08146b4516cc95f6b461f2994250a819b3e6f75f23fa2a8c1b1744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301011,
                    "digest": "sha256:61912a55c4015fdbde8dfe297540a2aaa429fc1293fe6c07650cc12069d87bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c38eec8ecc12484e7fbc91473d071873f9e1c850c3518bd7ef96e88e4b0dea86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121009426,
                    "digest": "sha256:722b12b7198169a62f227df3590fc1fb31cb9e8b1b9232a2a239203d70a91986"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:829e52981fc55a43b40e90c2eb24d5b2e5fbae77cb090d9ade9fcf127b0d4fbd"
                }
            ]
        },
        "1.12.3-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:d175f550862975cd63e48de6483172a3940fca551f2b5ab5a6402e66dbb66f66"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350757,
                    "digest": "sha256:c2a5cdd4aa08146b4516cc95f6b461f2994250a819b3e6f75f23fa2a8c1b1744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301011,
                    "digest": "sha256:61912a55c4015fdbde8dfe297540a2aaa429fc1293fe6c07650cc12069d87bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c38eec8ecc12484e7fbc91473d071873f9e1c850c3518bd7ef96e88e4b0dea86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121009426,
                    "digest": "sha256:722b12b7198169a62f227df3590fc1fb31cb9e8b1b9232a2a239203d70a91986"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:829e52981fc55a43b40e90c2eb24d5b2e5fbae77cb090d9ade9fcf127b0d4fbd"
                }
            ]
        },
        "1.12.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:46d3f2c5209c10f32a0a20a9de7c436f59c62ea7e29b197bc4b81c82ffd63035"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075164,
                    "digest": "sha256:f6e94265067157e7d769560dc94116366784ddea686f6d20c9f3e67ba72940f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483453,
                    "digest": "sha256:6f2fbc1f843984fcee8822e171c70d7b2ddf5233beeaf7eb422dca14e8ca0826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918606,
                    "digest": "sha256:3dcb1afece058cd63eccf185f2a039fa824964013c16f587cbf4f36552f1019a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389513,
                    "digest": "sha256:5bd852cf67320cb264474e6a781be61143a1db5e666692fb408b7228a2d51658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c014c95a2990aa655b803e6599930546f6d554ca57df6e91fa283b00f739458d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106220654,
                    "digest": "sha256:0dadd81567fc39b88626187ccf5b8e9eab113942eb31ee8baae1ded18bda6894"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d35a66a732719bf68f6815413d1612fcc471132a47b7e410405db4968e780eb4"
                }
            ]
        },
        "1.12.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4b35bab95daa53526a53f90900f6c9209b689b9d077a65907752db4e69ee285b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:7869b1303a7e6ca5b1949502cf7c2ed98ee2513b46fa54401e37fecf6a5fe2ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350757,
                    "digest": "sha256:c2a5cdd4aa08146b4516cc95f6b461f2994250a819b3e6f75f23fa2a8c1b1744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301011,
                    "digest": "sha256:61912a55c4015fdbde8dfe297540a2aaa429fc1293fe6c07650cc12069d87bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c38eec8ecc12484e7fbc91473d071873f9e1c850c3518bd7ef96e88e4b0dea86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121009528,
                    "digest": "sha256:1a84f6973d502e079597c6d57005df5f347a8898a00400e99e2e6ffaac3de7c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:361acb9197b7ffb54d9227cc7ccefd5305b2bca0ca1f2a19ae85c2cd6e1b27f5"
                }
            ]
        },
        "1.12.4-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:7869b1303a7e6ca5b1949502cf7c2ed98ee2513b46fa54401e37fecf6a5fe2ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350757,
                    "digest": "sha256:c2a5cdd4aa08146b4516cc95f6b461f2994250a819b3e6f75f23fa2a8c1b1744"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301011,
                    "digest": "sha256:61912a55c4015fdbde8dfe297540a2aaa429fc1293fe6c07650cc12069d87bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c38eec8ecc12484e7fbc91473d071873f9e1c850c3518bd7ef96e88e4b0dea86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121009528,
                    "digest": "sha256:1a84f6973d502e079597c6d57005df5f347a8898a00400e99e2e6ffaac3de7c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:361acb9197b7ffb54d9227cc7ccefd5305b2bca0ca1f2a19ae85c2cd6e1b27f5"
                }
            ]
        },
        "1.12.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:39cfe0ad6d838076571080cca2c4a7afc427b92cec398704decda0af3a1f5bf5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42075164,
                    "digest": "sha256:f6e94265067157e7d769560dc94116366784ddea686f6d20c9f3e67ba72940f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9483453,
                    "digest": "sha256:6f2fbc1f843984fcee8822e171c70d7b2ddf5233beeaf7eb422dca14e8ca0826"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918606,
                    "digest": "sha256:3dcb1afece058cd63eccf185f2a039fa824964013c16f587cbf4f36552f1019a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389513,
                    "digest": "sha256:5bd852cf67320cb264474e6a781be61143a1db5e666692fb408b7228a2d51658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45971636,
                    "digest": "sha256:c014c95a2990aa655b803e6599930546f6d554ca57df6e91fa283b00f739458d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106221030,
                    "digest": "sha256:493bf9a5ead9ef31103ae3e994113f9c1cd7c6730e61d6cfb9f665e7264147ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b8fe5f08a36af113eab2a6e5f57173edec53b840b41b75e08b7f209c6e652e5e"
                }
            ]
        },
        "1.12.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0e24dec0382a38ba75c18134e3a0b7f727f5039cdd4ed980aec74001b7f5a873",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:f601a6603aee8735c1fffbc6302acd5228a59d729299e1832b98872bcc7973f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121017740,
                    "digest": "sha256:ed083874e4bfdc746dc636a6a88c950557e85a0aead3f6a10f509cec65c671a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95e3ffb64f4ddad600765b4e5e39a9639cd4fa95e1252d197f0e7c07264905ee"
                }
            ]
        },
        "1.12.5-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:f601a6603aee8735c1fffbc6302acd5228a59d729299e1832b98872bcc7973f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121017740,
                    "digest": "sha256:ed083874e4bfdc746dc636a6a88c950557e85a0aead3f6a10f509cec65c671a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95e3ffb64f4ddad600765b4e5e39a9639cd4fa95e1252d197f0e7c07264905ee"
                }
            ]
        },
        "1.12.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:d7d246b7b8295fdf9eb4b33371118a5126a8d12a6f262a10e23f3706c0dd2a2b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42082604,
                    "digest": "sha256:f2a2fd7c1ab35cd1b5ea6fcc2b801f3877852797e2698ecdb9556e0dee3accb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9485167,
                    "digest": "sha256:047df9a92c9f7376283a8d6af526f5126d95995ba48dd7de49979ef57da3e15b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918605,
                    "digest": "sha256:ddeed4ac8d1e2c751afd6fd3517f1d154365467039353c377c8206fd5eb81d4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46387836,
                    "digest": "sha256:f87210772c4fe4ad359fb6a7030e2675f75aeb852c8ce68def62b11c2f94e847"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46001929,
                    "digest": "sha256:e98be8c9f1a89c0aeae2fbe50cb29300a4ee2854a8f8a15498672e6a64a2ab20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106225640,
                    "digest": "sha256:897d7d7615a7a059f74cf68051dd13f0b973b15effbc4e7158103c8c23b93a74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:678ebb94d9dbfbf2b0d431c4483944dce30981a24e3f1e1ac5098a93619a8e9c"
                }
            ]
        },
        "1.12.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1b8cc9667392d018c26b1f2cce5325ce2dbd4fe5a1687d679238491791bc0559",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:b44a1618ae48ac3f001083559a3a423618ad13c05cfd67b3a30ce00f6e4610bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375311,
                    "digest": "sha256:fd0f3c17efd43a26a5fce1692600c9a45e087cd84f50f61df6780702cc0050fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300923,
                    "digest": "sha256:dc6a614d312be6d9892ffc22ceab48ff53c57250da1ea8815afc34674ba2e03d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:3bb84b62bcf2b0f814a4ef768d5d2b3fa0a59518b26bf510d6f387388ab719a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121035691,
                    "digest": "sha256:d926e39bb2f3b2a3e7510213b5c693d83cb6ea72d99654b9055d9f6e72719d34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:eb4db7cf2b3f84c15bd77011a456472f0c72acdfa9e4f95992cb7e42bc5337bd"
                }
            ]
        },
        "1.12.6-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:b44a1618ae48ac3f001083559a3a423618ad13c05cfd67b3a30ce00f6e4610bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375311,
                    "digest": "sha256:fd0f3c17efd43a26a5fce1692600c9a45e087cd84f50f61df6780702cc0050fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300923,
                    "digest": "sha256:dc6a614d312be6d9892ffc22ceab48ff53c57250da1ea8815afc34674ba2e03d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:3bb84b62bcf2b0f814a4ef768d5d2b3fa0a59518b26bf510d6f387388ab719a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121035691,
                    "digest": "sha256:d926e39bb2f3b2a3e7510213b5c693d83cb6ea72d99654b9055d9f6e72719d34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:eb4db7cf2b3f84c15bd77011a456472f0c72acdfa9e4f95992cb7e42bc5337bd"
                }
            ]
        },
        "1.12.6-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:40a9617a27fd73267c35c1251aa7110d4d629af87f1199e6fdd455c7b5b551c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121034639,
                    "digest": "sha256:0dfdc863c30d6bea32d839cd04a4f3e52024ecd0d1dfa73579c2d54844079cac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:55d68e9df1984001150a314efeae2f38e44c443abe4ac408a1489982cfe79d3e"
                }
            ]
        },
        "1.12.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:8f42c0d10a57ae2bda2d01964db31fdff6ab41ce5e4ef6904c227c57eb26ae60"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42082622,
                    "digest": "sha256:162e276b1a29dfd1a4601fd55aeaeb0175b63182e9190b1b0068252e5196b015"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9485206,
                    "digest": "sha256:052e820679506cc68db5317ee3f92e7f5f520894f881940a686f7b1280ff93a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918643,
                    "digest": "sha256:4f5e84bede193d1aa79031526fbcfa99e8b6cf354b12a7cfbe5cdfe2c9acf155"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46388837,
                    "digest": "sha256:6a839ba8a519368963fe3d571588fd00f64c1dcd18fd761e52acf61455810033"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46004777,
                    "digest": "sha256:ce54d513bab2aee80cf4ede3e873df13d113058fb2add7c1272a03441ccce314"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106232828,
                    "digest": "sha256:0bb813cf12e6998f39412c5fffdf9abec2bb80bf9efc4aa39064b67fb183a70a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:ee817e6a6d0ade20f9782eac170f7b5424ac05352fd8ae62af823d696660da94"
                }
            ]
        },
        "1.12.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f79f49a5e215aa07653903d04e5c4ea82e7b55eae7f10202fd7a51b04784b63c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:dd6077fe3735c7d21919f5a15ec5980cecd8eba4c25b12c3f95d6b50cbe93331"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375401,
                    "digest": "sha256:50e6a8f95d08735cf973d06f486e8d4906f0a8009fede2aa1b1d03accbda9281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300936,
                    "digest": "sha256:6c3d02882ecb3a5941237bc80f858f7493d5a32ebb3e3cef33b06f7fb05feb40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6d8183c7b99cb7aeeafee75cb572216d57844a325dc8d32fc35b962c174df3ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121085161,
                    "digest": "sha256:91ccf156980064fd9410f2b520be11bf3dbdaa93e4005f47f3f9f9841ff40248"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ee389db16dc81996bc2174c5e59531a98353d99214c0b963e6ac3935bec10704"
                }
            ]
        },
        "1.12.7-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:dd6077fe3735c7d21919f5a15ec5980cecd8eba4c25b12c3f95d6b50cbe93331"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375401,
                    "digest": "sha256:50e6a8f95d08735cf973d06f486e8d4906f0a8009fede2aa1b1d03accbda9281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300936,
                    "digest": "sha256:6c3d02882ecb3a5941237bc80f858f7493d5a32ebb3e3cef33b06f7fb05feb40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6d8183c7b99cb7aeeafee75cb572216d57844a325dc8d32fc35b962c174df3ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121085161,
                    "digest": "sha256:91ccf156980064fd9410f2b520be11bf3dbdaa93e4005f47f3f9f9841ff40248"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ee389db16dc81996bc2174c5e59531a98353d99214c0b963e6ac3935bec10704"
                }
            ]
        },
        "1.12.7-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:e2bd111183a953c5e4187b128cff15028521f3f55eb5b918e7f1cb48c00eb6f7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121023634,
                    "digest": "sha256:bb02d7c517280744959d31e60711b949f2301264ce0c1be263e6b8d43f1ec7a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:7a8c117d1e75b1b37a7a00945a79de6ccb237b4e4faf198fc42228b790034694"
                }
            ]
        },
        "1.12.7-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5454,
                "digest": "sha256:74856703bdb2b219e7518e76304850e3bc66deec52bc0a32ce9aa49f4d1914dc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45853741,
                    "digest": "sha256:755d84a203b44de4e2bc7169d5db99523b34f4101cb1ab50f606fcb6cd8d216f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093138,
                    "digest": "sha256:a0d45aafdedf04ff2db2e0952649a765ddd0b0e1169d9577ef17da53aa4fb0c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330213,
                    "digest": "sha256:dd5a38af0407b6bebd4f397e57a4b4999b0ce2faf8303e5fabb17f792b07bcf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47289285,
                    "digest": "sha256:32a7b13a520fd66a3651d850ef2c7835e38126f348b214d6ec0ac2c7bfb3ce6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52947847,
                    "digest": "sha256:bdb2f2915a775ec0156c5ff8b991b2a5fb8a64efdbd3d028f4c114ca80324261"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106247169,
                    "digest": "sha256:3ed0fffba0b8240d87f1f469df21d40c50bc5c9d1fb3666b2933664615fe6a58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6256e55820c4ee78adb53c450c260e66ce9c85437357e376e598557020835753"
                }
            ]
        },
        "1.12.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:4cea674d9c80e31cc4f43625cd2e2f0d60fbda79f67195b42c505f2ebff77439"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42083055,
                    "digest": "sha256:dcb61f1d45657be196f648f75a07805b856fb8f4aebb61138c03c12e2919ee9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9490816,
                    "digest": "sha256:41835060b113803e2ca628a32805c2e1178fe441b81d3e77427749fec4de06e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918602,
                    "digest": "sha256:582caf5d2e7bf5e75a96afc2254a97f6e86ad72c8815429ada61280467cc6d6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389297,
                    "digest": "sha256:da770cd5eae6caeefe9468e318964be31036c06e729c2d983756906ede859b17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46004896,
                    "digest": "sha256:b880b30c3d715a2fec7589f1a5f85ffd9e5e4a2d96b82b3523315645aedf9b8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106247253,
                    "digest": "sha256:e143e046c1d9605ec366754bf73831849a0d31a39143f689d6e7be556c1fcd95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:8fe305b9245cf12fb19f7803ecddff09c0bc093ee40cb8c06a15ebc53c789c27"
                }
            ]
        },
        "1.12.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:9a134f68c52c2bd186a62ae0582b11a85119dca3d3b823321bdaa3f44a97549c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:e1c28cec3808e96c90cf6199149962c3b1978e9ecbbf15346f915e69e70d75e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375401,
                    "digest": "sha256:50e6a8f95d08735cf973d06f486e8d4906f0a8009fede2aa1b1d03accbda9281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300936,
                    "digest": "sha256:6c3d02882ecb3a5941237bc80f858f7493d5a32ebb3e3cef33b06f7fb05feb40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6d8183c7b99cb7aeeafee75cb572216d57844a325dc8d32fc35b962c174df3ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121413272,
                    "digest": "sha256:a9ac15ece4da7264d6d8017b6fa45a6e1b9648183c3c1d927d1fea5b6bdc1834"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b8fb7d8ecfbb7336034ba3b790b36306951695c2f91f93a64cd7349d62a3e650"
                }
            ]
        },
        "1.12.8-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:e1c28cec3808e96c90cf6199149962c3b1978e9ecbbf15346f915e69e70d75e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375401,
                    "digest": "sha256:50e6a8f95d08735cf973d06f486e8d4906f0a8009fede2aa1b1d03accbda9281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300936,
                    "digest": "sha256:6c3d02882ecb3a5941237bc80f858f7493d5a32ebb3e3cef33b06f7fb05feb40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6d8183c7b99cb7aeeafee75cb572216d57844a325dc8d32fc35b962c174df3ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121413272,
                    "digest": "sha256:a9ac15ece4da7264d6d8017b6fa45a6e1b9648183c3c1d927d1fea5b6bdc1834"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b8fb7d8ecfbb7336034ba3b790b36306951695c2f91f93a64cd7349d62a3e650"
                }
            ]
        },
        "1.12.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:c2a0d1392d3349a86a0a658c43484aa736f8e36f469726a176078c99dea3c375"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121420799,
                    "digest": "sha256:8c128ca8ec41a5acf0090a946284ef1860208d9ee9b27a985e14791ae8c85c93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:31cf29e2fa9d1546318aea46ddda4e2ba1063f233300892ff7ee743ca6e1e967"
                }
            ]
        },
        "1.12.8-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:d0f617cc7cfaab9fb574ae26d40ced56a45f32fd64050a94ea4843b3b2b08b83"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45854139,
                    "digest": "sha256:4bcb33fb87fb53a079ac35f10587fb4512b5c98188fea2132d0a0f5e47dfc51b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093244,
                    "digest": "sha256:302c6e5b05015dad7c8f5cf14d06370c3484b19d42c8524db3b965aa58f61916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330254,
                    "digest": "sha256:b71efe838d31b47a74142afe2b16837c9e8936dc1c11597d065752f128bd2b04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47291160,
                    "digest": "sha256:80572d08f14fdf4cbe473930bbe48abbc9533e131862d2380a7fb56eeb9e7fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52949359,
                    "digest": "sha256:9d8e9b4738dd8ecddd4e11655e7fe65070fed5f53b94fdc876ffe9d29b738127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106249184,
                    "digest": "sha256:285c8d36b15568a7bb3436a776d6a79e9ef40e82176e73bc04e20c9894d67e3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:240c4287a95d536b0034e4105697bf1a580c96eddfca04b4bc2e77d823b30f27"
                }
            ]
        },
        "1.12.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:adeb976d614b8dc0afdf17c34a311c631aac0d9b59c4fa6b2be0708f3b3e6f7f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42080380,
                    "digest": "sha256:7cd8da9bb4321742382671e40de35c00a1d68f27bb6f5c8dc885748f452a56ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9490896,
                    "digest": "sha256:88bd0369f6f10021911409e0f260fb390f5d50e60768977521b1035c15b2e291"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918698,
                    "digest": "sha256:0379859b5f37fd1c431bedcd3f8e88fe5e7e705d7d3811d146ca266da4bc3235"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46389939,
                    "digest": "sha256:1866b41273a25463d9ef2c491e05a964289c351082b8166212078f3ec7827174"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46004820,
                    "digest": "sha256:54be03d33c67278a264e2aa1b17babb90a7e6e66f1e802eb572998802aed0c73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106249295,
                    "digest": "sha256:0b2b2db31262eac330a8b19bc153cd6d4b6c36c61c2a050566a4fe88e73a5d3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:978f55bba7af2c3eecd1391b6ee01aabe1c90718b984300d38e5eaa16945485b"
                }
            ]
        },
        "1.12.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7555e7f93021081e70069ce498409a20423e369e37120ac78abd44d0c061b9ab",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3800,
                "digest": "sha256:3670080b27d4c38cac53d9507a63194b2e552839841d45b331ec4bb50fd03a66"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121088755,
                    "digest": "sha256:a30f7489492d953a9aca268d4c7d6064d611345b1f050d4bc901895a7b958c08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:6d72060144c118263a41dfeee4cb2647524d3adccf59085a1c043b0489b2b7ea"
                }
            ]
        },
        "1.12.9-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3800,
                "digest": "sha256:3670080b27d4c38cac53d9507a63194b2e552839841d45b331ec4bb50fd03a66"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121088755,
                    "digest": "sha256:a30f7489492d953a9aca268d4c7d6064d611345b1f050d4bc901895a7b958c08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:6d72060144c118263a41dfeee4cb2647524d3adccf59085a1c043b0489b2b7ea"
                }
            ]
        },
        "1.12.9-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:7602a701ee8d56b0d4be495cfede55ddfc825ff4246c9c9780135bd425ef5c2e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2350666,
                    "digest": "sha256:856f4240f8dba160c5323506c1e9a4dbaaca840bf1b0c244af3b8d1b42b0f43b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301023,
                    "digest": "sha256:244bb6187057b19715bec6eba8785b00476ef37399206d6b41b5dadcb4864765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f644f99f22ce58b3e0b1a3e64558c9f0b0d402ea20857d0485c3fce77732e151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 121425637,
                    "digest": "sha256:56fa0d6babd29717910e8d0265f5405f85113922e004e8ba4d06db289e06307c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:edc61fc2ac3e891f9dc834956a2f6af4c76fcf8ab755720e0bcded5e5135f80f"
                }
            ]
        },
        "1.12.9-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:7642c86cfd68993e0ddbc08f8deb5aa1571ab7b7d939b38391cde42f71902b5c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45850867,
                    "digest": "sha256:2351e7f49dda9f3c239e4fdb69d6ab3f194fd135a0999e98adf2f6c47609ba97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093602,
                    "digest": "sha256:871d6235d8c2d6df3f25bef48572289253a1ce68d80a5ae1ba312883218dec99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9342960,
                    "digest": "sha256:bd4048754e16ea3f6faa299e14b41542b47ea8731f63760a3ecb643902188a1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47292528,
                    "digest": "sha256:26c789eac1c86ace8b2f089be161c730ee1b807180e93474f1fb2d17521a1a87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52994185,
                    "digest": "sha256:e85296c2d5bb12c220a72579c42402903b2d8d41310062a83d2135091418b4b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106251444,
                    "digest": "sha256:8e3d331ddf686d3e3f49f1b4debb2a8df4b36592a80f52a6a667956594801a33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:066a35b981d27cb430c35fe72df293bf927fe5488515e417c05ea1f96dd95747"
                }
            ]
        },
        "1.12.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:44686361b334bd001c08c42e849d9ffbdc39f12ac04042998d7ea665fa816cdc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42086900,
                    "digest": "sha256:cc2e500f6b653a645f6001c07bbf1178bf20555c9be7e0834a8c548f67a2d78e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9491460,
                    "digest": "sha256:2e6cdcabf7c2d5ae30b29b4a2d2519f5c82d063c92d8ab3444ed34cf89f2aef7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918722,
                    "digest": "sha256:2ab3d8012daa71d25fb6266944040b95fb489cb6e1aec7a71886d9d7ac269c26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46390373,
                    "digest": "sha256:6709d1823576801e09b374d72c1c9a533c59e2357651cb2ab9fb3645b18fb769"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46025345,
                    "digest": "sha256:5a767b0cf5a0361219e03814c117c53fd4cfce80a908567da7a963d1b79dd298"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106251468,
                    "digest": "sha256:230da0e97d7ac59a6b22824353fd54a67d92bfe9222a038f6f44da518148aa99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:45cf377a69d04c6c84d0e3ed391434073c1945cb34e27f92dab3299b4558aa5c"
                }
            ]
        },
        "1.12beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c0171bf6e140064d4c3df9e7a9743661a073f8439645d2beb17b75c1b6ba6874",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5474,
                "digest": "sha256:5c1ec54a97e96775809b5671c9ee4ca73a5a6c2e3777f229fa5117bc872da75f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42074583,
                    "digest": "sha256:76e424dac3ee85f0c45a60646f8b87f57bf2ed6b48b6e06522628d2d8f7e06cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9480290,
                    "digest": "sha256:c2f48ddd91eb6c0651e04903412a7878a0c6b983485404d539b5770c2df6c462"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918483,
                    "digest": "sha256:307946877196cb875cf9ce23e16058fc9525d372e0e3c6652d6f805675257c98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46384426,
                    "digest": "sha256:bbde47943bce292ffb840fa20b0cfc39c7aeccdb423a1be8455c59d7828fe717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955248,
                    "digest": "sha256:01e30269fc1de3c858d767b77d62e87aa9286fd4deae715d2ca51fc575d4aead"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103716852,
                    "digest": "sha256:043fc64267dd4190415db8aeb773b9e21c14e9945d74b0f9d532e730d6413245"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:aa52a66350fd561c9591c69d91ebeef6cc414311e5b4c5ae5fb5bb8ffa38a20a"
                }
            ]
        },
        "1.12beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a7e7e8c20f209ecf203ca23fa309932c49a4bfbca434c6b6d333807de6a023b7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5474,
                "digest": "sha256:906980ac873bfa89b1934f7e41562b08ae4edb40213c08f2fa0be48ec75b1cfc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42086927,
                    "digest": "sha256:54d7f221ed1ab7644f6a88a953847270cd864b5ebc4f343bfa28876a2715031f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9480760,
                    "digest": "sha256:2fea5bcc599e31c6fb6e38ce89618c27f24be54ed9ac9b53f4fcbed58f9d619d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918458,
                    "digest": "sha256:586ac22707ead8a14ad6ae745a4c231538e6215c7a702ccad147b5251b3ea66c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46384822,
                    "digest": "sha256:8c5565830197f8831e23db2438cc94b7a2c5b37186bfa8adc7d45c22ef585b48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955173,
                    "digest": "sha256:132c235127591dc1fcf10d81e3fb4feff77a94c31a0763561b28fc39ddf329d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105426301,
                    "digest": "sha256:03ef68dce27e8016d86e2cccae82c85ea2765f4c4d4aa57ed30db729eae3f937"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8f27a43fde3d457e7a8c6dad3c66dffd7d4e42280d592dff3cbf027b51e26e4a"
                }
            ]
        },
        "1.12rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c02e3aeca6507db1d13d9f3c83a3be90b7d9a05fd461cc8b2038c4c27e847c69",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.12rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:8f90f89663dc82c3b49f82c279ae97c488dc095241486a8773e9ddf8a6397b65"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42086927,
                    "digest": "sha256:54d7f221ed1ab7644f6a88a953847270cd864b5ebc4f343bfa28876a2715031f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9480760,
                    "digest": "sha256:2fea5bcc599e31c6fb6e38ce89618c27f24be54ed9ac9b53f4fcbed58f9d619d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918458,
                    "digest": "sha256:586ac22707ead8a14ad6ae745a4c231538e6215c7a702ccad147b5251b3ea66c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46384822,
                    "digest": "sha256:8c5565830197f8831e23db2438cc94b7a2c5b37186bfa8adc7d45c22ef585b48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45955173,
                    "digest": "sha256:132c235127591dc1fcf10d81e3fb4feff77a94c31a0763561b28fc39ddf329d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105597721,
                    "digest": "sha256:11329309af2864d8e971ebdf07402799f5a744f5b21f996b8fe7a3f7ceaa2af6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:fcc2a8af23cbee5897a7b8018c360714e5780453feca3ed8b34bbcb184848025"
                }
            ]
        },
        "1.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:8e7208e562a824225849695d616db03f2df34057d47213c70f140cd371062495",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:5fe698994ec3b14aab5c37e7404e8cac7fe3439885acd19ebe3955a0c4c13298"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122833139,
                    "digest": "sha256:1eca607500a447155f853ac7192f66fe81816c5e52bd9ea6292d1275caf07cbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:f48ddffd04ce8e638351a3c7a71a080a018011371dd612c2c4e8a3219ed448dc"
                }
            ]
        },
        "1.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:d5f814e605551623d578b4a4d795fbe8af4cbd8df0654ed282f2f7697cf3a378"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378640,
                    "digest": "sha256:ad20c94522902b824bd9ea4e65dc1cba24dca4fdadd5728ed7446c0f4550d1ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300139,
                    "digest": "sha256:073be96bf2ba1e0c0b75591efb75aa98ad5dcc4bd5d9a052c61e35e5ec429c35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c60b998e6176a079e036d669ee27737f69955c37872cadd86bae88489d3a9575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122488357,
                    "digest": "sha256:ad86603f3b15e6ed4d5811295c6fc4d994009a5df85a8484fafd0940b4cb1dc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:fb72e9df5710c8b653452b7044b00b35594aae961d3161690b5285d94b6dbaa5"
                }
            ]
        },
        "1.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:b99b4806f96f9ea11d1ee2cef58da961bd6690ecea38ec87a3c2a72784a3e502"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122483067,
                    "digest": "sha256:713ef314485ad9245d2e313dede4273508920f9f6ba4744bcab7ef2ff832a2d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:cdd21b709c61272410b8877c875b039bbfb0a4e2c4447dd9e8f81bdc157db843"
                }
            ]
        },
        "1.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:5fe698994ec3b14aab5c37e7404e8cac7fe3439885acd19ebe3955a0c4c13298"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122833139,
                    "digest": "sha256:1eca607500a447155f853ac7192f66fe81816c5e52bd9ea6292d1275caf07cbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:f48ddffd04ce8e638351a3c7a71a080a018011371dd612c2c4e8a3219ed448dc"
                }
            ]
        },
        "1.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6154,
                "digest": "sha256:af59bd7e24c87c92fba4854887c8e32025591b952106bb668a4ba47d0decd4a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98391947,
                    "digest": "sha256:4b840d2b3581a3eab2674d547cd8a999487aed6e1b92e777444a4cd142470cb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b097bed325cbe523302634d93b88e5e7f1c2867f862a6781ba24ac003fc3359d"
                }
            ]
        },
        "1.13-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:d810f361b0a0eee06dca998750515159a889bd420360ae9393eb86e84187e76a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:a904ae3254ddb2fb554911783b36bd14f2cfe4ba18ee4a05624aaf907c9dfae0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122366850,
                    "digest": "sha256:37c464ba810616ea00c4e8bddb8dba5086827a37aaf3d243441282902293d20f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:acc2ea15180be5ab7cd0e7ad5bd30125304186d40734ceaed5d74df36b53069b"
                }
            ]
        },
        "1.13-rc-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:a904ae3254ddb2fb554911783b36bd14f2cfe4ba18ee4a05624aaf907c9dfae0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122366850,
                    "digest": "sha256:37c464ba810616ea00c4e8bddb8dba5086827a37aaf3d243441282902293d20f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:acc2ea15180be5ab7cd0e7ad5bd30125304186d40734ceaed5d74df36b53069b"
                }
            ]
        },
        "1.13-rc-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:76247805eb4e4d924f4577980be8743505aab6c9e041e578df187db210b4c7b9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45854139,
                    "digest": "sha256:4bcb33fb87fb53a079ac35f10587fb4512b5c98188fea2132d0a0f5e47dfc51b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093244,
                    "digest": "sha256:302c6e5b05015dad7c8f5cf14d06370c3484b19d42c8524db3b965aa58f61916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330254,
                    "digest": "sha256:b71efe838d31b47a74142afe2b16837c9e8936dc1c11597d065752f128bd2b04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47291160,
                    "digest": "sha256:80572d08f14fdf4cbe473930bbe48abbc9533e131862d2380a7fb56eeb9e7fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52949359,
                    "digest": "sha256:9d8e9b4738dd8ecddd4e11655e7fe65070fed5f53b94fdc876ffe9d29b738127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98270968,
                    "digest": "sha256:5e2386d136c782f524b8b7c66a26114374e99f010240cbe140026395fe08a708"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ab9abb0d928bc9e018f9de8385496f4401a1b96f25aebf242ab9b4f5856599c7"
                }
            ]
        },
        "1.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6161,
                "digest": "sha256:f6e2f05a92fd4b4dd67e5099c1e4a20d44e455c3737001703f45caf204ba16f3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111382,
                    "digest": "sha256:323178d00ec2c5eb5ffb9cb696a52eaf8683dcf2eb605c742da2953556f06e37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443881,
                    "digest": "sha256:a7b4e15a79453f6ae10815d79c8f4590aef2f1ac2979c192ff7f1ed0fbf04e60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918490,
                    "digest": "sha256:caf9cb1ef704caf3af8a2ed43dc12884b4f74ac867ce95f60bd8996f51fde770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46415465,
                    "digest": "sha256:a3ae4cf51f1ae7af0566bc381b7fdc344ae6a916df2554156029039b4925d30c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090847,
                    "digest": "sha256:128797a1aa794ca62cfffc928723ecde348b31a22dc1c199c8655a3c2f595866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98391964,
                    "digest": "sha256:03f68ad551cffef925b9ff1f874ee34426e682d3138f9c80d190cebe059c0c3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:06e0cc97b34050d0dec829c5390e69acb249de4b475bad1440f71f7a770eb830"
                }
            ]
        },
        "1.13.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:7ac4a05d1397e554abe67e4b4b0482396aa29b7471a0c355255eb0811030a004",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3797,
                "digest": "sha256:3de3d714e2e34711efb8888b9722efbfba7a91bdc8566fc446f0877638def6d4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122366425,
                    "digest": "sha256:f6b30af423379fda89d1d25f1e4ee33d676a6d81398f091fed0fca5ada4497ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8dbe3293991b24253940e400976200b4f15b488bfca8769dec71db3063385c35"
                }
            ]
        },
        "1.13.0-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3797,
                "digest": "sha256:3de3d714e2e34711efb8888b9722efbfba7a91bdc8566fc446f0877638def6d4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122366425,
                    "digest": "sha256:f6b30af423379fda89d1d25f1e4ee33d676a6d81398f091fed0fca5ada4497ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8dbe3293991b24253940e400976200b4f15b488bfca8769dec71db3063385c35"
                }
            ]
        },
        "1.13.0-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5451,
                "digest": "sha256:6dc6728483f0aae4beefbe052f7625c633df8933ff4a7bf234293d99974cdfc0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45850867,
                    "digest": "sha256:2351e7f49dda9f3c239e4fdb69d6ab3f194fd135a0999e98adf2f6c47609ba97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093602,
                    "digest": "sha256:871d6235d8c2d6df3f25bef48572289253a1ce68d80a5ae1ba312883218dec99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9342960,
                    "digest": "sha256:bd4048754e16ea3f6faa299e14b41542b47ea8731f63760a3ecb643902188a1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47292528,
                    "digest": "sha256:26c789eac1c86ace8b2f089be161c730ee1b807180e93474f1fb2d17521a1a87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52994185,
                    "digest": "sha256:e85296c2d5bb12c220a72579c42402903b2d8d41310062a83d2135091418b4b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98272241,
                    "digest": "sha256:c49862ce8b98a7a1b18c04a99e5a25440dbf9577de8a63b1227a3064b5c618a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:0fd245506a23510eac4b7149d8881003fc1fee69f4ae63f6b613b2baf28de9f2"
                }
            ]
        },
        "1.13.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:a9fdf933876e9c865ed452677fc06e9373165368dcb15b86ee85e89e5bf32cc5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42086900,
                    "digest": "sha256:cc2e500f6b653a645f6001c07bbf1178bf20555c9be7e0834a8c548f67a2d78e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9491460,
                    "digest": "sha256:2e6cdcabf7c2d5ae30b29b4a2d2519f5c82d063c92d8ab3444ed34cf89f2aef7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918722,
                    "digest": "sha256:2ab3d8012daa71d25fb6266944040b95fb489cb6e1aec7a71886d9d7ac269c26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46390373,
                    "digest": "sha256:6709d1823576801e09b374d72c1c9a533c59e2357651cb2ab9fb3645b18fb769"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46025345,
                    "digest": "sha256:5a767b0cf5a0361219e03814c117c53fd4cfce80a908567da7a963d1b79dd298"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98272240,
                    "digest": "sha256:a3979ac3989ab5e412e3e2561cd151c6c15b53d2080bb56e530154a84681cd19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f440cff7bbd1e337d10ca0c8b00a1c1a107298d2efb12d8e1480ccea2a9dbf88"
                }
            ]
        },
        "1.13.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:488278d36e0668fac263d448a3ca97b84405427269a226918030b94789ef728f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:869393b1b3812dacdc2104bfb93e73a1977c204f49afe4b19d69bfaf5d4a0de2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122365085,
                    "digest": "sha256:e4fa29022f459b38d4fd446f4c71a15665822017cb902b53c500686a8ac35ae9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:98318c651d56e5b113135d73b04c8f0baadba49579005c451ad1cf8a7a91bea3"
                }
            ]
        },
        "1.13.1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:869393b1b3812dacdc2104bfb93e73a1977c204f49afe4b19d69bfaf5d4a0de2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122365085,
                    "digest": "sha256:e4fa29022f459b38d4fd446f4c71a15665822017cb902b53c500686a8ac35ae9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:98318c651d56e5b113135d73b04c8f0baadba49579005c451ad1cf8a7a91bea3"
                }
            ]
        },
        "1.13.1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5455,
                "digest": "sha256:02e041e5aa4ac3923c304a45d5583a4e35006d91ae3e2d9a3da74514d01b91fe"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45855452,
                    "digest": "sha256:6620cf3e4cc4c61becc7e32eae7cb55cfad3443373bb643085f2774041dd91e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7095966,
                    "digest": "sha256:a541bacc6865ac716a0c11ae0ede3faaa5b8026f347af85f3da0cda781b4e3de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343118,
                    "digest": "sha256:3c0ad6ec0696357c9f8ac700068ab32bfa97874f03732b61e3031ea24c218d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47294468,
                    "digest": "sha256:13b3f9dac3448b138d0aceb76df9ce624cfb0c10de2171befbacd0b4bfc97921"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52994500,
                    "digest": "sha256:6b53ba8bd53ec7ee28e15598eb2c83ac7fa6850f6ef954336193dc37560d6daf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98272508,
                    "digest": "sha256:141f8842e23dba4f7a09cb715a379606667099a945a96a6d7fccb09c32bc765a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ee869a37bab77df80b9c7b262a43209f411c0f06fc40233218a01c7390ee8408"
                }
            ]
        },
        "1.13.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:0482fd231d50a0573b49e60c3a9d0ed42acfd7ad01ad89cda75242d1ffbaac34"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108151,
                    "digest": "sha256:e9b52de4918cdbc0754871cf4e5aa73ab93ac6740b952e2623016af227869026"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9497746,
                    "digest": "sha256:6e7a04af8dc0536b7189a33fa5ff487b98ea1924d64220af5f8c153a4bc31f2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918776,
                    "digest": "sha256:fbdb61d33b325a0cb354232f8189afe2d211757a5cb14d3ee0e8b7a23c05343c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46391369,
                    "digest": "sha256:ef2411d566c5c943358caca412032f2503b85c9c536afa3c353496b7739236b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46025450,
                    "digest": "sha256:e3ec3e66ad009dbb6b8e8598b383e86c75f650355c749ed671916d98e39b92c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98272505,
                    "digest": "sha256:d1123f4a1145c9308e6c8b34712e5e97eacdfe009c0732bbd80d91b09a3b79c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d308268e8cef239f91bfc5d636c2bb684511d27ee9b2c323c9b070dc89acc3d8"
                }
            ]
        },
        "1.13.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:a929ebd325f80f11e0ecec77223d6722ec8979b67c9e6190340266c58ee65399",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:496127a105c414326744bb094034a8db007886d9459d5248e2f2a42c10c9be9c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122480859,
                    "digest": "sha256:2d2ac8be3155e58329c440d75ec6aa40475ef6471e02db1190d4c85fb32b5283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c2b52d03a7e46dd1645dd166a518e41cf644e50c6670f90c01db8a4783af7557"
                }
            ]
        },
        "1.13.10-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:c23f311191396feae14b88644bff99d71a71873fe894475b77b08b06139168f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378640,
                    "digest": "sha256:ad20c94522902b824bd9ea4e65dc1cba24dca4fdadd5728ed7446c0f4550d1ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300139,
                    "digest": "sha256:073be96bf2ba1e0c0b75591efb75aa98ad5dcc4bd5d9a052c61e35e5ec429c35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c60b998e6176a079e036d669ee27737f69955c37872cadd86bae88489d3a9575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122490264,
                    "digest": "sha256:98c3f63cd81c9ad27257dd16ae2fbf983cb0d1757f4e9c101e7255fc6a8363d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9b21751b91dcf0a8383fe76da403e0edd1e2968049fc83c9ac43838a21d38833"
                }
            ]
        },
        "1.13.10-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:496127a105c414326744bb094034a8db007886d9459d5248e2f2a42c10c9be9c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122480859,
                    "digest": "sha256:2d2ac8be3155e58329c440d75ec6aa40475ef6471e02db1190d4c85fb32b5283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c2b52d03a7e46dd1645dd166a518e41cf644e50c6670f90c01db8a4783af7557"
                }
            ]
        },
        "1.13.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:b0eb4f8c54ee8e1ad6a63b5d73d2b4f79074ee366b8a195704f97aa455ebd054"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45864280,
                    "digest": "sha256:cb6703531d2fa1d357cdd21991ae844400ecd207dba47fdd9afad54cdd9ce65a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096585,
                    "digest": "sha256:cfdc86c4352df3ac4c13ca4ce79924328408ad32ad3ca32fc8b264e8f6988e7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343325,
                    "digest": "sha256:7a4dd8c9abb1148c2fa5d4b85b1125efedc4ade033de3fab02d2591844f8edf0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47357139,
                    "digest": "sha256:ecc2b159da9e1c38efe967b03bb5f74e84377be266117339a6b8f0494590a1f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53077561,
                    "digest": "sha256:dbba517e60ebb03e95bd583d57c89e376eac87f1fffaea6a514dd133bb72e47c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98370912,
                    "digest": "sha256:2c8cd8fd2e3e78811e32efbce99bacd57455b2c8c1a5b3b5d8b2975be605a2de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c2eca44f3682c3347cc14d21fe6e602a2b61058b1d905720f3d6df76962c7aba"
                }
            ]
        },
        "1.13.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:c0cc4c63b35375a17d15046f8d12b72ff60096f06daf6d965bcfd8a1757e0a4e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42101192,
                    "digest": "sha256:4168e46f368afa15fa660f5197fb2946df81a85078c82e37a76d2610fb3999f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498287,
                    "digest": "sha256:a9bc0e3bfcb00266e5034f08dae24b7862a41a069b0db0c68beb50e66983e602"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918722,
                    "digest": "sha256:3461f3bce5656c429f5d3faee144de5778a7f01ecd08241211c4badd34a7197b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413077,
                    "digest": "sha256:1a2c88136aac9941bfddb6eed51d8f03cc96ee12d1164f9edf450f6ff914e414"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059762,
                    "digest": "sha256:fc4652115632b0b140c402df2da0cf7c138160eeac5b2d393dce42441abacac0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98370940,
                    "digest": "sha256:46470abddc739e82c1c3656a6ff50b3e183563c77b66e6d552633c3e4c6f21b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:59f2902ab256fda5cbbba43b787f56092459c0d80d9b326acd0b46107224a472"
                }
            ]
        },
        "1.13.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:0bcc0fa2f58b85996eb815f1dab9e10bc85d843d0f0a40bd1669f4e366a83134",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:6cfebc7c6c2db0ee38ff89b626a4aaab2fa593df20347f540178dbf11e120a0f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122480756,
                    "digest": "sha256:714416035628a98daf6f066ee3c4252919b3af4da3a042f50dd2fc21c0af0dd8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b9358dc9393a0a25321027ef407750470fdc275da10a2915def13fe24f724ae1"
                }
            ]
        },
        "1.13.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:d5f814e605551623d578b4a4d795fbe8af4cbd8df0654ed282f2f7697cf3a378"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378640,
                    "digest": "sha256:ad20c94522902b824bd9ea4e65dc1cba24dca4fdadd5728ed7446c0f4550d1ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300139,
                    "digest": "sha256:073be96bf2ba1e0c0b75591efb75aa98ad5dcc4bd5d9a052c61e35e5ec429c35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:c60b998e6176a079e036d669ee27737f69955c37872cadd86bae88489d3a9575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122488357,
                    "digest": "sha256:ad86603f3b15e6ed4d5811295c6fc4d994009a5df85a8484fafd0940b4cb1dc2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:fb72e9df5710c8b653452b7044b00b35594aae961d3161690b5285d94b6dbaa5"
                }
            ]
        },
        "1.13.11-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:6cfebc7c6c2db0ee38ff89b626a4aaab2fa593df20347f540178dbf11e120a0f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122480756,
                    "digest": "sha256:714416035628a98daf6f066ee3c4252919b3af4da3a042f50dd2fc21c0af0dd8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b9358dc9393a0a25321027ef407750470fdc275da10a2915def13fe24f724ae1"
                }
            ]
        },
        "1.13.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:03d59029209fa882155e7d41c5bc0b47ed010b7efc06375c9c61d0dc89aab8e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45868629,
                    "digest": "sha256:33f1e205e6f963868048d05375e218b5a53592240c265ac49b4860e141d25c66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096812,
                    "digest": "sha256:83963556ddab1d93e22197bee7fc0d66da2f25f8ae77f4147c0ebee63db933e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343333,
                    "digest": "sha256:e52e6e35f16ed7d977f73bf736fe9e27ba863d03fa402e68e53f187ae3c43123"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355661,
                    "digest": "sha256:cf172e11e265992a6dffd35b590fb6e71abfee19640961a4b80f8e7f8280ce8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53110740,
                    "digest": "sha256:3399fbea07f3daef2e1a3276f68a459c8b516d3438a5a5743754e85f0832380b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98370504,
                    "digest": "sha256:e63737031f1b08eb0bc8eade8f40c71d1ac6edfd9e42036919081fe60b1f47db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ea9566167c42afcda013196ab01dce385116cb253546c40a7d84078fb86dd852"
                }
            ]
        },
        "1.13.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:a7c8b33c58ef39b50c2449b863f1765b785a063d6fc718c0bc22e41cf97777a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42104346,
                    "digest": "sha256:11acdea2de14253903f5970d63a2076ff08912929430d1c33afe617c9fa6bf8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498344,
                    "digest": "sha256:99452f66748f5df5d89d2287e42b5c3d87c9d5e1e20c16ef729e87d463840cf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918713,
                    "digest": "sha256:2cef06b7abe4487657829b47c97bd2992f14a34349e0bcf60a47de9c647bd3fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413310,
                    "digest": "sha256:c542e1b5d6ef8c44b0708c5d2d73da1f5269186501aaee2b172d32a8b50d86c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059889,
                    "digest": "sha256:04e0669792f2bafc58162fb1fe98159b1566e12b5f32e9b9a9e58c6ddb814096"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98370525,
                    "digest": "sha256:715ad7d75f5bae9e54be3b67d1d487fe7a0102e32040f8c4803fd14df5887d1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a72f26b4ac1a9ea99b5039dc5037d32f7a8782f49533455ad55421458bb7c895"
                }
            ]
        },
        "1.13.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:8cd82866787210050f27ea9fe11031888169c82bf781653ac093e2751a489b75",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:5fc1bc6d4ad9e8f7b405c9a3b21bb3031d4cb72a0a43e7f388347510024d3403"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122460418,
                    "digest": "sha256:8b474d731ea8ee373b0a1efccb4030e96513d06a13ea937cf5fe23c9a100a5a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0700a65eb29165726cfe73d386147c7889b2c376d03b50d21f8a7f10fc61ad4c"
                }
            ]
        },
        "1.13.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:fcccd6716d18aebb79ebea72e2a65735745cde9ddb6f5689e822247964871d46"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122480753,
                    "digest": "sha256:f3a462bf8c7367b2f462b15c5929849d53e9384892a7f3efa861063e90f16a8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:aa8bb1e4a30c6501e3da63076cfcdebec830dcc935b0b93c0b085a5c1346c298"
                }
            ]
        },
        "1.13.12-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:5fc1bc6d4ad9e8f7b405c9a3b21bb3031d4cb72a0a43e7f388347510024d3403"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122460418,
                    "digest": "sha256:8b474d731ea8ee373b0a1efccb4030e96513d06a13ea937cf5fe23c9a100a5a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0700a65eb29165726cfe73d386147c7889b2c376d03b50d21f8a7f10fc61ad4c"
                }
            ]
        },
        "1.13.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6190,
                "digest": "sha256:3b0d04c4465f70ba17d0092adf27d66fc6cd0282bd3e4e52e40856cd2bba208c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45868949,
                    "digest": "sha256:cff0731da2e4f4a0ae8329840eb7fed7ea6aac11aecbfa15c6e684caec03920d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097860,
                    "digest": "sha256:3bbeb0ded58d68be17265763fda36a4e1a520234a291d66f370d98a3e0d6e591"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343524,
                    "digest": "sha256:d6159fbed770bb99a219eae06828da55caaa649879843c0b9df18ddda9b698b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356467,
                    "digest": "sha256:7ba732bafeb6b1467fd6908c64c6e8d10ffb27e44e3a25ab4c6c38e8f753baa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53110939,
                    "digest": "sha256:10fbc5ac1d2a89d2b9d45778fc9215409db3c14b82290c3f4bb4afff39a8687f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98376824,
                    "digest": "sha256:302f9f93ab36a2df05c5eed572fdc50851e1f53b301f8f2962793188c36d0015"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a459292aecf6e0ed1b00c0971d215d291b5d7ea409ce7993ff50849e2a7ea594"
                }
            ]
        },
        "1.13.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6192,
                "digest": "sha256:f3dbc4185793c9809b35120835c5b7f39c22634046763473313020310bdba9bf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42102504,
                    "digest": "sha256:2566ca784846d2d0d4f9105084d94d68d8ea1a82a06a76c5bcd991ce5a10cda1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443335,
                    "digest": "sha256:c3f976b5a12722f5e6e115157695654d36452b713c7fa64a860f8c9e14859402"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918433,
                    "digest": "sha256:e35142ef6ea6c722cd0397799ab151e5da354eabc784b3acef29def7fa34e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46412697,
                    "digest": "sha256:7773eda6b7a8801a6f09bd4ce443b7e88397ed16265ecd37f55af57db56c4658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059557,
                    "digest": "sha256:148541d4f7791fc2097ecd9226985afe692a5cbc0a0fe7dd9cc20f11701fce5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98376863,
                    "digest": "sha256:2d9394ec038c1fe2f337ce7bf05320c348d073f7ef5955f7279f8b74417b0456"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:309592dfcf6b1856d4a5f51b501d35ee678e70901ec1eec813f9e47d658ea3c4"
                }
            ]
        },
        "1.13.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f7b3f74694764b30cc45ba2866f6b0fd50719884189407698eeac691cbdac482",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:1d7aba5693a63839f2a8f78a12aafd808266a0f58f22fbe80f52a60eb3edeeea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122830870,
                    "digest": "sha256:6ae111d320df6fa0be3bc6798121f9f2cd8f168a30462a7518a2661d4328235b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:20603bebf36e65d491cd15e253dcd312bd871dca23fb84056c50580ef09aa62b"
                }
            ]
        },
        "1.13.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:b1c9f6a840b0d45b812db68e3d27912460efc6f8627df8b57d97bd3611b607bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122484944,
                    "digest": "sha256:4cee5f0c066cb465e27eba5459ca5504535eb62ce9be0388b2f7ccac92782287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:22f1cbabae41aa3d0e2d07bc8f987296b48daced3fb1c5a5c1116523c6312d29"
                }
            ]
        },
        "1.13.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:1d7aba5693a63839f2a8f78a12aafd808266a0f58f22fbe80f52a60eb3edeeea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122830870,
                    "digest": "sha256:6ae111d320df6fa0be3bc6798121f9f2cd8f168a30462a7518a2661d4328235b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:20603bebf36e65d491cd15e253dcd312bd871dca23fb84056c50580ef09aa62b"
                }
            ]
        },
        "1.13.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6190,
                "digest": "sha256:c84f9554245c4d24bb6a898d48f11aceaa7ccb43610149531652e2c93c7752e3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45868949,
                    "digest": "sha256:cff0731da2e4f4a0ae8329840eb7fed7ea6aac11aecbfa15c6e684caec03920d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097860,
                    "digest": "sha256:3bbeb0ded58d68be17265763fda36a4e1a520234a291d66f370d98a3e0d6e591"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343524,
                    "digest": "sha256:d6159fbed770bb99a219eae06828da55caaa649879843c0b9df18ddda9b698b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356467,
                    "digest": "sha256:7ba732bafeb6b1467fd6908c64c6e8d10ffb27e44e3a25ab4c6c38e8f753baa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53110939,
                    "digest": "sha256:10fbc5ac1d2a89d2b9d45778fc9215409db3c14b82290c3f4bb4afff39a8687f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98386771,
                    "digest": "sha256:d44f558df33a1bfb3d0fdd0702c310ba3a741711be431aaa30b2fb30dc0e72da"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:898a31fb379acbe597bec903b61f0c522bae6acef967633852d457bc30323ebc"
                }
            ]
        },
        "1.13.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6195,
                "digest": "sha256:f2797a9a2a0ea98cb0056c79bbcdf9ce237757909da2311a34ba73aa37943018"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42102504,
                    "digest": "sha256:2566ca784846d2d0d4f9105084d94d68d8ea1a82a06a76c5bcd991ce5a10cda1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443335,
                    "digest": "sha256:c3f976b5a12722f5e6e115157695654d36452b713c7fa64a860f8c9e14859402"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918433,
                    "digest": "sha256:e35142ef6ea6c722cd0397799ab151e5da354eabc784b3acef29def7fa34e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46412697,
                    "digest": "sha256:7773eda6b7a8801a6f09bd4ce443b7e88397ed16265ecd37f55af57db56c4658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059557,
                    "digest": "sha256:148541d4f7791fc2097ecd9226985afe692a5cbc0a0fe7dd9cc20f11701fce5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98386742,
                    "digest": "sha256:ee285310ddd534cd709555c0034a8678943943c765d2579882e8af688f7fa049"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e993b233f03891bec113c7fe82ee0bc9631b1f84be98325ba3afb4f4c622828e"
                }
            ]
        },
        "1.13.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1c76b01f34559e6d00ab783b57578eb46ddd47c12b463d7fb3be8aabf078d725",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:5d00fa0b143ba359d8f93ac2904d83a25b02b724daf4e2973348ff6ac06d0cc9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122831740,
                    "digest": "sha256:b3e6057b7e3cce5965e2aae5250a443a034109d3128a306a52e9511dad73d92a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7bde9a5cbed28d518eb2daac04418723e37109cccd1603b0d84784ec709ad683"
                }
            ]
        },
        "1.13.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:b0972a17d728afa87b307c343625101d88b244688dfa2d819c5506b61b6e7842"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122480674,
                    "digest": "sha256:f57e08434dc2c6fd432cab5d1f548aaca88ce69b8a2f9f65085d63a2f1fad4b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d33508ddb9117f708bf4a4582d87f8a228afbd38b47ff559af793b29b69be61d"
                }
            ]
        },
        "1.13.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:5d00fa0b143ba359d8f93ac2904d83a25b02b724daf4e2973348ff6ac06d0cc9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122831740,
                    "digest": "sha256:b3e6057b7e3cce5965e2aae5250a443a034109d3128a306a52e9511dad73d92a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7bde9a5cbed28d518eb2daac04418723e37109cccd1603b0d84784ec709ad683"
                }
            ]
        },
        "1.13.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6154,
                "digest": "sha256:f7d7cb2f7e9901271eef9a4246ffda880f2f34c153ddaccfaaaa802e0f66919e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98389548,
                    "digest": "sha256:9b2631ee9e898a4ba35b7b456c06885d36fba7ded492cfcde8b5854878f2b1f4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f5d1f7b51452a1f32268ca9bedf8091fca7231baea181d10e82f015b3a1f739b"
                }
            ]
        },
        "1.13.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6162,
                "digest": "sha256:81a69a9e6759b47fbb20578bdfb531d922765c284daa965134530b9201cc6037"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111382,
                    "digest": "sha256:323178d00ec2c5eb5ffb9cb696a52eaf8683dcf2eb605c742da2953556f06e37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443881,
                    "digest": "sha256:a7b4e15a79453f6ae10815d79c8f4590aef2f1ac2979c192ff7f1ed0fbf04e60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918490,
                    "digest": "sha256:caf9cb1ef704caf3af8a2ed43dc12884b4f74ac867ce95f60bd8996f51fde770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46415465,
                    "digest": "sha256:a3ae4cf51f1ae7af0566bc381b7fdc344ae6a916df2554156029039b4925d30c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090847,
                    "digest": "sha256:128797a1aa794ca62cfffc928723ecde348b31a22dc1c199c8655a3c2f595866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98389630,
                    "digest": "sha256:c8c054b08401da4336012663d1eb06be59964a25a784ea9f50689228d81360c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:790e9e239b18b08154d6327dd85ec6334a3f730d4dd3cb2cb102d0663e9da967"
                }
            ]
        },
        "1.13.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:8e7208e562a824225849695d616db03f2df34057d47213c70f140cd371062495",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:5fe698994ec3b14aab5c37e7404e8cac7fe3439885acd19ebe3955a0c4c13298"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122833139,
                    "digest": "sha256:1eca607500a447155f853ac7192f66fe81816c5e52bd9ea6292d1275caf07cbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:f48ddffd04ce8e638351a3c7a71a080a018011371dd612c2c4e8a3219ed448dc"
                }
            ]
        },
        "1.13.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:b99b4806f96f9ea11d1ee2cef58da961bd6690ecea38ec87a3c2a72784a3e502"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122483067,
                    "digest": "sha256:713ef314485ad9245d2e313dede4273508920f9f6ba4744bcab7ef2ff832a2d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:cdd21b709c61272410b8877c875b039bbfb0a4e2c4447dd9e8f81bdc157db843"
                }
            ]
        },
        "1.13.15-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:5fe698994ec3b14aab5c37e7404e8cac7fe3439885acd19ebe3955a0c4c13298"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122833139,
                    "digest": "sha256:1eca607500a447155f853ac7192f66fe81816c5e52bd9ea6292d1275caf07cbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:f48ddffd04ce8e638351a3c7a71a080a018011371dd612c2c4e8a3219ed448dc"
                }
            ]
        },
        "1.13.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6154,
                "digest": "sha256:af59bd7e24c87c92fba4854887c8e32025591b952106bb668a4ba47d0decd4a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98391947,
                    "digest": "sha256:4b840d2b3581a3eab2674d547cd8a999487aed6e1b92e777444a4cd142470cb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b097bed325cbe523302634d93b88e5e7f1c2867f862a6781ba24ac003fc3359d"
                }
            ]
        },
        "1.13.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6161,
                "digest": "sha256:f6e2f05a92fd4b4dd67e5099c1e4a20d44e455c3737001703f45caf204ba16f3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111382,
                    "digest": "sha256:323178d00ec2c5eb5ffb9cb696a52eaf8683dcf2eb605c742da2953556f06e37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443881,
                    "digest": "sha256:a7b4e15a79453f6ae10815d79c8f4590aef2f1ac2979c192ff7f1ed0fbf04e60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918490,
                    "digest": "sha256:caf9cb1ef704caf3af8a2ed43dc12884b4f74ac867ce95f60bd8996f51fde770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46415465,
                    "digest": "sha256:a3ae4cf51f1ae7af0566bc381b7fdc344ae6a916df2554156029039b4925d30c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090847,
                    "digest": "sha256:128797a1aa794ca62cfffc928723ecde348b31a22dc1c199c8655a3c2f595866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98391964,
                    "digest": "sha256:03f68ad551cffef925b9ff1f874ee34426e682d3138f9c80d190cebe059c0c3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:06e0cc97b34050d0dec829c5390e69acb249de4b475bad1440f71f7a770eb830"
                }
            ]
        },
        "1.13.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:3f4f0fb04436a53870f88f6a5e21e4590e8d1bf1888a9a32e078e4c1d1da415f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:303609a6c5ac116d408f7680bb56b061afc1bbe3f9e63adf2d977e8632ba5039"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122363586,
                    "digest": "sha256:4f044a5ac0fe7a1d5725ec83cb3075c90cac832c7d8bad30c44b6f3abf2e01e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:d31247b39eb036009334f6340f252590c0748af5302d0ad44915827ab5ff04f9"
                }
            ]
        },
        "1.13.2-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:303609a6c5ac116d408f7680bb56b061afc1bbe3f9e63adf2d977e8632ba5039"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122363586,
                    "digest": "sha256:4f044a5ac0fe7a1d5725ec83cb3075c90cac832c7d8bad30c44b6f3abf2e01e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:d31247b39eb036009334f6340f252590c0748af5302d0ad44915827ab5ff04f9"
                }
            ]
        },
        "1.13.2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5451,
                "digest": "sha256:ef156ea374037beb16666197e5167e34d04ca223cb9c3bd11a38d8088f4cd706"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45855452,
                    "digest": "sha256:6620cf3e4cc4c61becc7e32eae7cb55cfad3443373bb643085f2774041dd91e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7095966,
                    "digest": "sha256:a541bacc6865ac716a0c11ae0ede3faaa5b8026f347af85f3da0cda781b4e3de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343118,
                    "digest": "sha256:3c0ad6ec0696357c9f8ac700068ab32bfa97874f03732b61e3031ea24c218d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47294468,
                    "digest": "sha256:13b3f9dac3448b138d0aceb76df9ce624cfb0c10de2171befbacd0b4bfc97921"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52994500,
                    "digest": "sha256:6b53ba8bd53ec7ee28e15598eb2c83ac7fa6850f6ef954336193dc37560d6daf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98272332,
                    "digest": "sha256:2c8fb20484a2f91e5dbb9b645dc2051bb0e688d87de84b4b6c1cdf3d504b4fa8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:bbd3aa6d85a568b3c9eefb9c875e924f5a067dcb4ca4a599f1d4de6604d7fa18"
                }
            ]
        },
        "1.13.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:8586ab12f66cec223ccbbc5467138d24a3e021cf1738242c283b8920cb0e125c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108151,
                    "digest": "sha256:e9b52de4918cdbc0754871cf4e5aa73ab93ac6740b952e2623016af227869026"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9497746,
                    "digest": "sha256:6e7a04af8dc0536b7189a33fa5ff487b98ea1924d64220af5f8c153a4bc31f2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918776,
                    "digest": "sha256:fbdb61d33b325a0cb354232f8189afe2d211757a5cb14d3ee0e8b7a23c05343c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46391369,
                    "digest": "sha256:ef2411d566c5c943358caca412032f2503b85c9c536afa3c353496b7739236b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46025450,
                    "digest": "sha256:e3ec3e66ad009dbb6b8e8598b383e86c75f650355c749ed671916d98e39b92c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98272324,
                    "digest": "sha256:08203f46d100143f0e1a42f76b4ef5cfd83c0bc40bdaff2da0176611897abfbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:5bcb050ae0a99a1c44ff1eddb15b50e41c8d08ddff89217e8f970b7460496b1a"
                }
            ]
        },
        "1.13.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:b1d6964acd9cf243be53fcf9d096f9331d7c5b79773a27e0ab0c33db42b4c3a7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:304d8b6bb24fe46b06bf3201bae74f63c6f81882fd6ef21718d1a4d2b328a24f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122366295,
                    "digest": "sha256:af5c0f98f761b9914f8d8db015f625a43807dedc3fcc3404fb2704d467eb99d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4078f38de2c0291e9856580505f3a9f88229c658bea187e8e8732b1417e48f7f"
                }
            ]
        },
        "1.13.3-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:304d8b6bb24fe46b06bf3201bae74f63c6f81882fd6ef21718d1a4d2b328a24f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122366295,
                    "digest": "sha256:af5c0f98f761b9914f8d8db015f625a43807dedc3fcc3404fb2704d467eb99d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4078f38de2c0291e9856580505f3a9f88229c658bea187e8e8732b1417e48f7f"
                }
            ]
        },
        "1.13.3-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5454,
                "digest": "sha256:e2a32002a0a28c63768f3848f4f9118cc93fd8e83bb77b087556d3780e805316"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45855452,
                    "digest": "sha256:6620cf3e4cc4c61becc7e32eae7cb55cfad3443373bb643085f2774041dd91e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7095966,
                    "digest": "sha256:a541bacc6865ac716a0c11ae0ede3faaa5b8026f347af85f3da0cda781b4e3de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343118,
                    "digest": "sha256:3c0ad6ec0696357c9f8ac700068ab32bfa97874f03732b61e3031ea24c218d99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47294468,
                    "digest": "sha256:13b3f9dac3448b138d0aceb76df9ce624cfb0c10de2171befbacd0b4bfc97921"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52994500,
                    "digest": "sha256:6b53ba8bd53ec7ee28e15598eb2c83ac7fa6850f6ef954336193dc37560d6daf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98271170,
                    "digest": "sha256:f9373cb40a427bcb8ef60b082975fd996ab92e245c2e11f5c77ba29445d8adf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:a2607704592198ada743b7797c33e7de44fc7960f4a4ebf426884e8f06aba453"
                }
            ]
        },
        "1.13.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:203e5d060a531a54cb5805153973eeeb7c6d2f1047560d787faec12b6ad5b70e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108151,
                    "digest": "sha256:e9b52de4918cdbc0754871cf4e5aa73ab93ac6740b952e2623016af227869026"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9497746,
                    "digest": "sha256:6e7a04af8dc0536b7189a33fa5ff487b98ea1924d64220af5f8c153a4bc31f2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918776,
                    "digest": "sha256:fbdb61d33b325a0cb354232f8189afe2d211757a5cb14d3ee0e8b7a23c05343c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46391369,
                    "digest": "sha256:ef2411d566c5c943358caca412032f2503b85c9c536afa3c353496b7739236b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46025450,
                    "digest": "sha256:e3ec3e66ad009dbb6b8e8598b383e86c75f650355c749ed671916d98e39b92c2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98271202,
                    "digest": "sha256:467bd296ca2668584f31c0c88747d89a2a5fc8505eff27e40a2652d69c59e7b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:34668ea9a100fd625f04de06d225fae0fe2943890b455f13ea415c8948a06c96"
                }
            ]
        },
        "1.13.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:666b81455a82cf94d354ee6706dac2601718045ed4f19d8d670690a8b7368771",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:6a83a6459979e44c6342cb9407cfedcf577c68c620cb328e921dbc3574df6c11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122367546,
                    "digest": "sha256:b112ac95595db64c2d52c16e459b03c3e215ccafd706c1d9c63ba65e8313109e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:68f5acd55ec0ca1ed05a946c96cb4cac9d4b652678aca39daae2eca3e1bac0cd"
                }
            ]
        },
        "1.13.4-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:6a83a6459979e44c6342cb9407cfedcf577c68c620cb328e921dbc3574df6c11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122367546,
                    "digest": "sha256:b112ac95595db64c2d52c16e459b03c3e215ccafd706c1d9c63ba65e8313109e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:68f5acd55ec0ca1ed05a946c96cb4cac9d4b652678aca39daae2eca3e1bac0cd"
                }
            ]
        },
        "1.13.4-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:19643ce633cc34c104f82885f8cf157a182e5612577affb1da74cace0af15731"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859502,
                    "digest": "sha256:6bac76f7ec397955852a282870ca77ba8bc17beaebffc52bc9053aaa18afc45f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096035,
                    "digest": "sha256:b43968e81e0eda7d56c4e052a87cd68ef88c023cea38c51a9f30375292f9642d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343198,
                    "digest": "sha256:3ecba33550822d3a153c6be10451c2d9e738070ee19367ec3136aee9875636ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47301080,
                    "digest": "sha256:fffc58cc3ec62e27b8234a554691e44c19d566effa798a9e88bf039d3958d5d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996835,
                    "digest": "sha256:af14c6639beb68a03a1da5e709edc607d67b4af546b08fa0ae7d5eeba8acf02d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98272372,
                    "digest": "sha256:56bdc487233eba3c521b1126ac67406803d8717315dd2278d9a2200435d509af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:d63afab32d61f15dc7b1efcf4cf1171c132a1124dc0881ec74447fe7c6a0b158"
                }
            ]
        },
        "1.13.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:b77eb77ed523d20b2bc2f11c8986c07e28a811b706faa18e1b444661572cb1fb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108069,
                    "digest": "sha256:fb827ed75ba2d760675c1e0dfd2cef27b5120725860abe8870ee3842dfce2a08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9497771,
                    "digest": "sha256:f6fdca0c72a7ddca7b66d2c47a5de442518d8631adef3269a541a8ee1a1faec5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918760,
                    "digest": "sha256:6508d4d51e15108ee995e92f1f1e2bbcec6c4c61ec1997ed246abe0b6504f316"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46390335,
                    "digest": "sha256:efa8056142a63015026b87069d963bff11cd0de2fc98ce2e0d265c1eae3aaede"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46026997,
                    "digest": "sha256:761ccad03a788bc0c5ed642b7aa9d3df0cabbf9d56bc9f3bb6e29470d8656db8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98272412,
                    "digest": "sha256:1f2a2bd462811d7a9f8283b02f4a7475667ab394c5700eb5c711c925b9cf68ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0828f28ecdce1d0326afbdd2487d792ba701b2fe0406d2577988c9fc36b6a9ae"
                }
            ]
        },
        "1.13.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c8e846d71e1fc3b199a3de8ae713c0d6b2e6512afbf9d88a1df4b804f96f6ee2",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:9cb8915aadf6983565049a1aa1c4f10510c9a63329473c7362506ddff2437a22"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2416691,
                    "digest": "sha256:3922e475e500b2739b5e74787fc80622853325822f71f8bd3de7e5b09654d60f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300592,
                    "digest": "sha256:13d326f0bb0083bcbbdf9137bdca42666cadb5ff42ef363c9e44008c925a4993"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:e632c92f58d616e58372f6ef1f37e98e5f1b02f1f2d2296cb134fb695c2307af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122390147,
                    "digest": "sha256:54d2dd2db852bf362adeedef7ca3b6713834dfdfc9ac20f86e4086a8a5b2216d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:622f7ac0685d0afe0e67dc4d590acd275d4de52f93b3f2c1a55571f13a951997"
                }
            ]
        },
        "1.13.5-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:36a3943948d6204eb6ab2638ab1b37c7f7d351ab281ed8240ae76238a3b7d361"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122394765,
                    "digest": "sha256:fdfffe1e10ee29c56ecb97e87066db889a892b6c5f6ea7327be8a976861f8171"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:257a091243b14d1c1c572681dc7ac36c3708528bac5c5c904305deaf871fcb13"
                }
            ]
        },
        "1.13.5-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:9cb8915aadf6983565049a1aa1c4f10510c9a63329473c7362506ddff2437a22"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2416691,
                    "digest": "sha256:3922e475e500b2739b5e74787fc80622853325822f71f8bd3de7e5b09654d60f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300592,
                    "digest": "sha256:13d326f0bb0083bcbbdf9137bdca42666cadb5ff42ef363c9e44008c925a4993"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:e632c92f58d616e58372f6ef1f37e98e5f1b02f1f2d2296cb134fb695c2307af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122390147,
                    "digest": "sha256:54d2dd2db852bf362adeedef7ca3b6713834dfdfc9ac20f86e4086a8a5b2216d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:622f7ac0685d0afe0e67dc4d590acd275d4de52f93b3f2c1a55571f13a951997"
                }
            ]
        },
        "1.13.5-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:f2ac9f4a88061e0dd4dfa3452980778b11386863ae7813f0fdd78fa052c00e1e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859628,
                    "digest": "sha256:760e5af4a2ec2472d42b6773d075af9d2a006e0b7725ba9992e530f561d326f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096250,
                    "digest": "sha256:93dc761fecef183bb949ae59f45d1f618cc3e8879cb25946ab48737d1d8a59b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343271,
                    "digest": "sha256:73181b0fe903be79034378988be75730f983b13ada732a04ea4f46f73b332896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315646,
                    "digest": "sha256:870abc97e939a1f3c484e5c9aec16d33497f3603c57bd4581d15915528703890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996883,
                    "digest": "sha256:82416eb37ad7180f99cbe886fd16f85d209e1609a083a98bd84b164928e02bfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98280343,
                    "digest": "sha256:2bc4b5cd35a386593980a0ebf26ef4d6041cec74d965531904dddb5f7519727b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:0365a092ed4c0b9c4ff989b86f11307e850a727e38e18197f8ba3d0f56a63927"
                }
            ]
        },
        "1.13.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:6884377792b84e19dd3c86e259e00a3a40d11c5c122d5da23c6e7186108885fd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108124,
                    "digest": "sha256:b531ae4a39253d883a11291e842b7e1aa9dae38f9d9b77ddea55b2625ce986e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498197,
                    "digest": "sha256:22754f6fc5d5a244119c0928ebf7d851d276d7f095f07e6bf435fa7afbcab8a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918728,
                    "digest": "sha256:cb2155e4b3456accbea4b6873247312dd288feb477ec966ed48637e031aba558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46399839,
                    "digest": "sha256:fad0ae2287846b9d91f237a798b6ae550ff58e33efb804be1ca049f9fd7a480f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46027023,
                    "digest": "sha256:ea2023c29cd927acbf16637195e35e121b4b6e49b7cdf9de5cc4ae894ad9d9bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98280366,
                    "digest": "sha256:4b062b0f9bd28f45ee02dd8144a356d03ebfafffa3633bdd08873c256c706956"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3694c86ca2c879a42258cd559522bbac2714cdb8c98b30e6e61b9d024226e54b"
                }
            ]
        },
        "1.13.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:07f20903687b43a07c1eabbb2cbdf8867893484d3fb8dd88c376ce6db79d773a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:00bf7a652e02e5323f708ee6b9c45c0d6eadef082a98975874c611b80e9a06ec"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122395048,
                    "digest": "sha256:fa62c3c4d6d780ab1002d178271a948e49ae531545f1a0b0fc36e45b0fed6952"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8d52e51e79f4c340f4b4b18c0ca27cc8e8b4dc46e03033c029d3d650ea63da6a"
                }
            ]
        },
        "1.13.6-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:add0aeaef4327a873b2a7fc44f3c225190e3a126870c3be5bfb36dcbe774bc1b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122397175,
                    "digest": "sha256:4875297c2b27d3ec54f57a5180d200bf2ae64ef5e5607bd8f89b2c52be2ef48d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ed5b05fe9a2871dab34eb5f82ef406211253a77782c99ff8cd1871cd31b4135a"
                }
            ]
        },
        "1.13.6-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:00bf7a652e02e5323f708ee6b9c45c0d6eadef082a98975874c611b80e9a06ec"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122395048,
                    "digest": "sha256:fa62c3c4d6d780ab1002d178271a948e49ae531545f1a0b0fc36e45b0fed6952"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8d52e51e79f4c340f4b4b18c0ca27cc8e8b4dc46e03033c029d3d650ea63da6a"
                }
            ]
        },
        "1.13.6-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:dba8269e9adfa536e528fb824f57666b98357f301768db43ee28c691d4e2bf53"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859628,
                    "digest": "sha256:760e5af4a2ec2472d42b6773d075af9d2a006e0b7725ba9992e530f561d326f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096250,
                    "digest": "sha256:93dc761fecef183bb949ae59f45d1f618cc3e8879cb25946ab48737d1d8a59b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343271,
                    "digest": "sha256:73181b0fe903be79034378988be75730f983b13ada732a04ea4f46f73b332896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315646,
                    "digest": "sha256:870abc97e939a1f3c484e5c9aec16d33497f3603c57bd4581d15915528703890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996883,
                    "digest": "sha256:82416eb37ad7180f99cbe886fd16f85d209e1609a083a98bd84b164928e02bfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98280581,
                    "digest": "sha256:9aa7cccbe7bac6cc9ef8bc8acc3be1150aea75aa967e5920e1910248bcde2f5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:de55db89cb375a721f98cda854efe68328b10465dc3818fa387db9e797733fd4"
                }
            ]
        },
        "1.13.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:539e9387cfd62280a550fecb487e574ac9c70fca8055799830434ef58950600c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108124,
                    "digest": "sha256:b531ae4a39253d883a11291e842b7e1aa9dae38f9d9b77ddea55b2625ce986e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498197,
                    "digest": "sha256:22754f6fc5d5a244119c0928ebf7d851d276d7f095f07e6bf435fa7afbcab8a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918728,
                    "digest": "sha256:cb2155e4b3456accbea4b6873247312dd288feb477ec966ed48637e031aba558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46399839,
                    "digest": "sha256:fad0ae2287846b9d91f237a798b6ae550ff58e33efb804be1ca049f9fd7a480f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46027023,
                    "digest": "sha256:ea2023c29cd927acbf16637195e35e121b4b6e49b7cdf9de5cc4ae894ad9d9bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98280601,
                    "digest": "sha256:62b8e005f9f8afca10f049d828a1aaf5044359be086b3e8f6a22556f2033467c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:883fe0e2092ac92a6cb2be3d95835343c483b91c57d3e84d0cbce6d28a43fdac"
                }
            ]
        },
        "1.13.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:aebb0b5f2c05fc84e9d85ac2dbd7ab5f33c8cd96cc4679983fa1d648f3ef3552",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3830,
                "digest": "sha256:56d8850264881dd79fe6f115709a8e6bffdc5aa05251a3fa516ae99e5ca6c653"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122394992,
                    "digest": "sha256:d1c2e7e4e00c18dba2c994b78425ba017044971061923eec36c6811f40066b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:84410b566d060dadeecfcd17a9eeefd471904fe73cd5fcc5236f45efe5334031"
                }
            ]
        },
        "1.13.7-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:a049cb7b0a34a023ca01a0aac0a4d4e618eb138c9bbedeeea4e8e0ff2e81e960"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122398714,
                    "digest": "sha256:ac603dcad2804226c8701b9b7df7fae0d391d603cfc680ecc1b77101ab02b60d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c765c2552a8a123d43a23aabc36874183358a5d042eb0e753095cc96b8505296"
                }
            ]
        },
        "1.13.7-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3830,
                "digest": "sha256:56d8850264881dd79fe6f115709a8e6bffdc5aa05251a3fa516ae99e5ca6c653"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122394992,
                    "digest": "sha256:d1c2e7e4e00c18dba2c994b78425ba017044971061923eec36c6811f40066b1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:84410b566d060dadeecfcd17a9eeefd471904fe73cd5fcc5236f45efe5334031"
                }
            ]
        },
        "1.13.7-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5454,
                "digest": "sha256:eff95a4d9ee8a0764b11f613ef29111caa20dfa6d98ab0c575d76b3966d2d762"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859700,
                    "digest": "sha256:9bbb41bca8c6254da5088d03354297b1309dc75c2ccc738416025f89709ae5ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096223,
                    "digest": "sha256:239e4acdbc2ab88c89aa359fbab11429ea6d7bd93ea589a22c6bbb833ff82b93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343278,
                    "digest": "sha256:83d6b4707a3c3aff9cb939fc058b869c5412e78c37e43eb0b653565460495537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315591,
                    "digest": "sha256:6e096c4fc8c629edca6da3ce5a9e95288512cb11e3d3d01a6e49078d19c2acca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996899,
                    "digest": "sha256:ca29eebbe47938ede4b91d684551d2cd027b2947a5aa2dffb6b64aee43fef432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98278703,
                    "digest": "sha256:fbb3c15f7e76349485d4f980e9b65860b92306642d38210416d9b28b8ae473c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:c5c74ee39cb6c1d776c4efe55dc3de5f6dbbadcabfd572a29b6201de42fef3e8"
                }
            ]
        },
        "1.13.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:ebec40f20802941da443a87488b773dbeb78ff6aa0e9e16f583b554f175862ba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108370,
                    "digest": "sha256:cc3b08e804cce7e88d9df954b76be506569775afe9cf36316f2fa6c5c9bf3d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498229,
                    "digest": "sha256:aa649f4f33c2131c2969e49352ff247ebe5a62a62b83498c3580f883aa35621e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918766,
                    "digest": "sha256:901c0c16dce9409a6a020f4b874b40fb3f7d302fe0b4e7a80a87a7cfbab7da04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46400091,
                    "digest": "sha256:715a264d83dc76a4a25b4110827c1ac6cc620c406edb6b2089cd1117aec271ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46026938,
                    "digest": "sha256:83537019430dd0ae1391379fd45844061c435eed7fb3492201ad8625537b4337"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98278768,
                    "digest": "sha256:6bf275b2480bf8e89a49897181c83cfe541be301ba3e50a914bc53121bc655e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1165a984d17d7ac5caddebd7e1fb6b3739500c81f858a14af2ff18a14f2ac25d"
                }
            ]
        },
        "1.13.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:6720fe5f87ee0fcaa4e4126de2ee2f098c3960f8f1a63abfac5a5257cc3723b8",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:429b5a4ae436ea5071fa52c4211bca31bb96f8a28720a39280d8a96b2fcb4636"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122395751,
                    "digest": "sha256:e216db8684ed3f0ab076af4337ce059c5f535c182506d8f56649d71e82df2522"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8cbb3f7b21e62e36ee260cb92f389c18f4d644ea73fa0eec99f70ae3bc95bc8b"
                }
            ]
        },
        "1.13.8-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:ab17bd335212be53dac7b0337584aebac8ae0c6223d237e8ef4a1009861f0690"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122398828,
                    "digest": "sha256:d4b6fe7f7600695f567be25f8b36f1f281714557f1d7dcc73fb424f105e770ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b8793682d238c270dadb0de0e172ab82c728bddb3272aee882559782f27e7836"
                }
            ]
        },
        "1.13.8-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:429b5a4ae436ea5071fa52c4211bca31bb96f8a28720a39280d8a96b2fcb4636"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122395751,
                    "digest": "sha256:e216db8684ed3f0ab076af4337ce059c5f535c182506d8f56649d71e82df2522"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8cbb3f7b21e62e36ee260cb92f389c18f4d644ea73fa0eec99f70ae3bc95bc8b"
                }
            ]
        },
        "1.13.8-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5452,
                "digest": "sha256:c89504c6e8756ed8b167750f4876ffc5edcb424f03d0026da0e9f7f2a202c864"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45862691,
                    "digest": "sha256:3182cf45068cd9734abd8e38dedbb9930ede35ee8c11376ca2684e86f9a1aa85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096560,
                    "digest": "sha256:1b727ab99a6a790544e023dbba8625605266dd84b3a69acaa541144ad632f4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343152,
                    "digest": "sha256:eab9435f7cf0c46bc6621020fd229e7de8baa61f71059cb9a34b9f681caed9aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315030,
                    "digest": "sha256:4f2ad791c8431e9b6624239d0b1fee2523df27584a263ec1d8d525201bb44087"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53077536,
                    "digest": "sha256:1a879613e63b581fbc31eac1107e244caddc95346001501421594071d0c92b42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98280884,
                    "digest": "sha256:ea436256305c180d8b2bb711037cc750bab0f3dc9c675aabd985f8cd6d5a234c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c8235e2331ce9f4fe90758203e58280eb8da569dbf6de846a85add46bf245557"
                }
            ]
        },
        "1.13.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:45afbcdf5eb8b9f34d6f6eafc44e46bfcf41c87a161af0cbb17add5d787deeba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42100335,
                    "digest": "sha256:2478a2ed882cb5fbb5e4e92c9f580da9ca52f5fc78b8bb439ecbf3ac18023caa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498391,
                    "digest": "sha256:2c541086e0dffa72464d4077dcc60504a1c08a73ecec554c159269786ba08fed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918781,
                    "digest": "sha256:edf0f97b070f73118badb36d21af3459f8317d4ac6d45aec680092cc962f1c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46391794,
                    "digest": "sha256:d620eb05d9fd9184b8f200537b866a27af44aa6d7ef4dd6113bf1b51421d4795"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059915,
                    "digest": "sha256:d7a2067727afdbc6fec672a4dc4bbeb79782a065fcaf5c10239554a242cd53a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98280834,
                    "digest": "sha256:a425ad3c2e7ecbdaa62bde8e9db95803fcef075b52fd8a7c624560f5f059290e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:dab41cb10e1c2a690c141f34befd1631e23faefc7c87c30a7bb4a27f892b8d94"
                }
            ]
        },
        "1.13.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:bbfe9083b0e6fd39a48250b157830b007401305eb4a1943e08157a720bcf0e95",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3830,
                "digest": "sha256:198ccccf10eb02ba9a9e61a80f89400015b38e24150ef600fe7a91b1a71341a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2420493,
                    "digest": "sha256:d9bf605ce3d4449f4b90035c3e21d691806324781d43a5287b1da25a01779d6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300602,
                    "digest": "sha256:2a0c66f8509bb56e1ead748baf3433dcad3c1fa170146d5d7d06506b9a80f367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:baf5f16b98b20e6e4f07e24e93de1018e88310a49963dc147c370d360a02fdbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122461918,
                    "digest": "sha256:cf81013b2b378fd7524e089a425c87adf126368af70d6a08978ec256523fbf3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bc59762a929495d5b5c4fd7158c590c03b20086763466041baec0ebec8df2733"
                }
            ]
        },
        "1.13.9-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3830,
                "digest": "sha256:3de689cd59c07a7f6e220d1a421b4150efdb228e97964c4e817b7c3772c2bd32"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378408,
                    "digest": "sha256:4e972d957a606327b0b6c2e8aa4a6045c263b7496a536298aaebf690e9d85f1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300937,
                    "digest": "sha256:decd0a2880d8a9ff569c68abd2c600aae26eb788f1bf54bba678014f28bb698a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:93bdcd9b07248ee824ffbd3b34659c5c84faaf2a00151c7ea120314b15bee7b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122469590,
                    "digest": "sha256:16abb705e062204dc9d9dc8ed9043f8d4882a85acb7ef7c7a5e33bcc5ff33962"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:5d938fe01e9f2c9ead1bd38727c0b6fa1ff9bd3ae8593866c8d3b0da04f4a0c0"
                }
            ]
        },
        "1.13.9-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3830,
                "digest": "sha256:198ccccf10eb02ba9a9e61a80f89400015b38e24150ef600fe7a91b1a71341a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2420493,
                    "digest": "sha256:d9bf605ce3d4449f4b90035c3e21d691806324781d43a5287b1da25a01779d6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300602,
                    "digest": "sha256:2a0c66f8509bb56e1ead748baf3433dcad3c1fa170146d5d7d06506b9a80f367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:baf5f16b98b20e6e4f07e24e93de1018e88310a49963dc147c370d360a02fdbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122461918,
                    "digest": "sha256:cf81013b2b378fd7524e089a425c87adf126368af70d6a08978ec256523fbf3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bc59762a929495d5b5c4fd7158c590c03b20086763466041baec0ebec8df2733"
                }
            ]
        },
        "1.13.9-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5453,
                "digest": "sha256:17f32bb361a02c33e41a1845daa23edad30089feddcc4c0a5065fa3fb1a0f2d6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45862803,
                    "digest": "sha256:a893843c75627d21c8a132a2b8559c62371e185dc82e30169102b547264b4f20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096554,
                    "digest": "sha256:3dc1ccae1d4101dbc423377c1f13fb143fc7f5f566816f142268a0b9eede632c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343329,
                    "digest": "sha256:a1d70cde97b6034a1ace45418fd5089f2085511e27ce09ceecf11de34da5f286"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315564,
                    "digest": "sha256:0366079d8c5e32134b3904853bf6d4d06f84f999018179add69b5cc225bf6194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53077538,
                    "digest": "sha256:b7903ddca99025dc06952cb0afca92366b99882c07cf824dd3174600587ff646"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98350054,
                    "digest": "sha256:d2aff1ffa304267820fa1ed7bfcc190c197c1e7f3c59e08fcf1b43dcfc54dbdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:2d0338c09fb2b89a3641796ba0da00d5829e3050286db3cefb7e81d77c28bfb9"
                }
            ]
        },
        "1.13.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:1d4be236700ebedf54878724c6fb91987229fb573bbbcef4b7c39b20362648ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42100090,
                    "digest": "sha256:eb3768893937e6b455f98cd8db65949a6aa5c54ebd94fca3039af9833187ce10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498284,
                    "digest": "sha256:69eb68590923b075c8f49c4470341451f9d874afc84c5fc916278815a1064243"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918805,
                    "digest": "sha256:743981b4cf60d4ed8ddd6610e4d1d75256ddb63a7d83d540a96e1faf8ba8a315"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46392996,
                    "digest": "sha256:4b83e2473a635025de9a80900fb966143db79eafc6c7fad950a2ce7e54fc1764"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059870,
                    "digest": "sha256:7094bdb11e89e503ae46ef14fea1ecd374424112dc99dbb8258fecb352a9e74a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98349908,
                    "digest": "sha256:2a239dd83386e310caeb8fbb01bda232fa17b37762879d1bf258ebf5dc5613cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:30b7d1ae6efd44a4b60b54263ce3e6f9108a151c13df6bb336bf13cde5a51362"
                }
            ]
        },
        "1.13beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:bbafb13ff3abc199cc12a5c1072dd0d37960186742708b560da5854e5e70f86c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3811,
                "digest": "sha256:2464fc63de2fded220eca0ebe42afbe7fc870216ffa4f813c9832a02b60f73b2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122344587,
                    "digest": "sha256:3eb5879812fd253cafc62789f1897f39431b17d473b0ec96898f02323def1d94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:af8c933ca946aa1f74ed6c363f6be1b94d701cda50262774536a84b5addcf23f"
                }
            ]
        },
        "1.13beta1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3811,
                "digest": "sha256:2464fc63de2fded220eca0ebe42afbe7fc870216ffa4f813c9832a02b60f73b2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122344587,
                    "digest": "sha256:3eb5879812fd253cafc62789f1897f39431b17d473b0ec96898f02323def1d94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:af8c933ca946aa1f74ed6c363f6be1b94d701cda50262774536a84b5addcf23f"
                }
            ]
        },
        "1.13beta1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:28e32cd0486aaa114f39f3835c2718307f3869cd82b9fca136885fe5cd9e2b88"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45854139,
                    "digest": "sha256:4bcb33fb87fb53a079ac35f10587fb4512b5c98188fea2132d0a0f5e47dfc51b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093244,
                    "digest": "sha256:302c6e5b05015dad7c8f5cf14d06370c3484b19d42c8524db3b965aa58f61916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330254,
                    "digest": "sha256:b71efe838d31b47a74142afe2b16837c9e8936dc1c11597d065752f128bd2b04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47291160,
                    "digest": "sha256:80572d08f14fdf4cbe473930bbe48abbc9533e131862d2380a7fb56eeb9e7fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52949359,
                    "digest": "sha256:9d8e9b4738dd8ecddd4e11655e7fe65070fed5f53b94fdc876ffe9d29b738127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98241303,
                    "digest": "sha256:2fc92a8328e55b869325e53b1d71fb338837e069b6257bfec52d1e93a9ec5dd3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:245713d7d5a32b95ef538fb028181dff514ad50ab1605b704dd0871661398f64"
                }
            ]
        },
        "1.13rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:86992e1c28953a042162601b94bde22ee3f0428a15fa1f3ee00e7f9b32bc4cc9",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:7d1aebbf454a22a314e84602903c86313e143254729b146985ba27dbcd0d3d2d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122330955,
                    "digest": "sha256:1f4892cb5df78bc4299c9ecd7fae800ad1861b31dc5d3ce9220d7559681f2d22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:d480c1985ac40be064aca7b5eb310e02d07e938ef4b7ec308cfbde1b456bddad"
                }
            ]
        },
        "1.13rc1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:7d1aebbf454a22a314e84602903c86313e143254729b146985ba27dbcd0d3d2d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122330955,
                    "digest": "sha256:1f4892cb5df78bc4299c9ecd7fae800ad1861b31dc5d3ce9220d7559681f2d22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:d480c1985ac40be064aca7b5eb310e02d07e938ef4b7ec308cfbde1b456bddad"
                }
            ]
        },
        "1.13rc1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:7f6e687a08c0753daf57bc632fdd3ac846f4ed62c996f1f3dd8ef202fab03488"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45854139,
                    "digest": "sha256:4bcb33fb87fb53a079ac35f10587fb4512b5c98188fea2132d0a0f5e47dfc51b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093244,
                    "digest": "sha256:302c6e5b05015dad7c8f5cf14d06370c3484b19d42c8524db3b965aa58f61916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330254,
                    "digest": "sha256:b71efe838d31b47a74142afe2b16837c9e8936dc1c11597d065752f128bd2b04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47291160,
                    "digest": "sha256:80572d08f14fdf4cbe473930bbe48abbc9533e131862d2380a7fb56eeb9e7fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52949359,
                    "digest": "sha256:9d8e9b4738dd8ecddd4e11655e7fe65070fed5f53b94fdc876ffe9d29b738127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98254769,
                    "digest": "sha256:ab423c39982ef7875c1c01dbaa7ef0943a3f2d5f0fb918ba5efb047480c2f0ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:dfdfb695f7e0d44c39e4536472927ceee25a1f2460955bad81a923479279c12c"
                }
            ]
        },
        "1.13rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:d810f361b0a0eee06dca998750515159a889bd420360ae9393eb86e84187e76a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.13rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:a904ae3254ddb2fb554911783b36bd14f2cfe4ba18ee4a05624aaf907c9dfae0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122366850,
                    "digest": "sha256:37c464ba810616ea00c4e8bddb8dba5086827a37aaf3d243441282902293d20f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:acc2ea15180be5ab7cd0e7ad5bd30125304186d40734ceaed5d74df36b53069b"
                }
            ]
        },
        "1.13rc2-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:a904ae3254ddb2fb554911783b36bd14f2cfe4ba18ee4a05624aaf907c9dfae0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2375481,
                    "digest": "sha256:33b18ff7f9b776f4049934d6f7e29a4dc7b45b42e5e686425c7673b2bbfec7de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:765cd5513c385982be9ffa1d1b510d824352690f3b446be4073937654730c80e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:d907c75dee6d7a524b1276d441b59b170db549f88d1790ff3d1e818ebae5269c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122366850,
                    "digest": "sha256:37c464ba810616ea00c4e8bddb8dba5086827a37aaf3d243441282902293d20f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:acc2ea15180be5ab7cd0e7ad5bd30125304186d40734ceaed5d74df36b53069b"
                }
            ]
        },
        "1.13rc2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:76247805eb4e4d924f4577980be8743505aab6c9e041e578df187db210b4c7b9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45854139,
                    "digest": "sha256:4bcb33fb87fb53a079ac35f10587fb4512b5c98188fea2132d0a0f5e47dfc51b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7093244,
                    "digest": "sha256:302c6e5b05015dad7c8f5cf14d06370c3484b19d42c8524db3b965aa58f61916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9330254,
                    "digest": "sha256:b71efe838d31b47a74142afe2b16837c9e8936dc1c11597d065752f128bd2b04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47291160,
                    "digest": "sha256:80572d08f14fdf4cbe473930bbe48abbc9533e131862d2380a7fb56eeb9e7fba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52949359,
                    "digest": "sha256:9d8e9b4738dd8ecddd4e11655e7fe65070fed5f53b94fdc876ffe9d29b738127"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 98270968,
                    "digest": "sha256:5e2386d136c782f524b8b7c66a26114374e99f010240cbe140026395fe08a708"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ab9abb0d928bc9e018f9de8385496f4401a1b96f25aebf242ab9b4f5856599c7"
                }
            ]
        },
        "1.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:13c3845d39ed8fcb5a8382d719b1621c261031c45c468279e5cbb8288e767a8e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:8c323b3d13b3b6b95764b2bfbd31cea12374a92bb0ea4636e08a28e48b8788f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2423559,
                    "digest": "sha256:9b1db703a337d301b1d50292acfbabd5fb3796511b962410c554420b85cd78dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280531,
                    "digest": "sha256:9aafb3c0a5bfdb5db9a33cbe41dbde03af33309430a41506052f7e47a1a21e6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6cf89e3bec494ebb8111c0fedde0817f7d6b1a7234148ee0a8e2d0210b346382"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103375699,
                    "digest": "sha256:7c24fcadd0393d5541a2ea47456574f1fd387c3bf259edde0f7e16e2a32bba8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:db99b9f58396dd380de39ee61e1ea6039a2948b6909c76a0b5abf832a957c202"
                }
            ]
        },
        "1.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:fcfd4330b5ddba91ea3d36fc581d7862ec1241befd8619bbede93a6466ee974a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422964,
                    "digest": "sha256:71728559ce1f58d5e0ef30be5b1d7628ff967d4038f9202818dd3d8c76feb8ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 298847,
                    "digest": "sha256:f3f1e1c694cf01b382326be8c400fc264e4c1187522339e854c24819d1d9b6fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b9b6f31664231384259b5d3103b6f8e1009f9a48361483ce8bb18b98efc461c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103417622,
                    "digest": "sha256:ee81c67c567359ae25e6ae1ec65a3aad4b55528a42ebaf168dacf2de781c1f25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:edab66cf832f38f40e1ec0921175520b67aef45da25a4ea31d02a407e1242c86"
                }
            ]
        },
        "1.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4612,
                "digest": "sha256:97b7f3c7b7bd4a3cedd97ff8d8aaad502729694c727f1a635ff6841e78f30efc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2407555,
                    "digest": "sha256:c58e8a26a8407acc3ead776f6526efa889fda03270a8d05109208d9f59159420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280060,
                    "digest": "sha256:dbe0ca5f7e7e39c37c9f0a26160a742edda20ab73836336395e0b0aeded33776"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6490e713d90e3419a99e20463b25f536cd4a3aa5b97dc06f62e6dbdc4f826435"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103396786,
                    "digest": "sha256:5fb0082d945585981bace9528441e5e6bc3168c8c030395bad9010fbbc075413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:866147a3d6cb4d97f1ae40bc468f8447f88d1d5fe1923981aed1e53bb5d19061"
                }
            ]
        },
        "1.14-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:8c323b3d13b3b6b95764b2bfbd31cea12374a92bb0ea4636e08a28e48b8788f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2423559,
                    "digest": "sha256:9b1db703a337d301b1d50292acfbabd5fb3796511b962410c554420b85cd78dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280531,
                    "digest": "sha256:9aafb3c0a5bfdb5db9a33cbe41dbde03af33309430a41506052f7e47a1a21e6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6cf89e3bec494ebb8111c0fedde0817f7d6b1a7234148ee0a8e2d0210b346382"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103375699,
                    "digest": "sha256:7c24fcadd0393d5541a2ea47456574f1fd387c3bf259edde0f7e16e2a32bba8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:db99b9f58396dd380de39ee61e1ea6039a2948b6909c76a0b5abf832a957c202"
                }
            ]
        },
        "1.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7027,
                "digest": "sha256:62219402adc20b49b912fedeac49b373c0df9d1e1264acf40bc2501829c89f3c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45867053,
                    "digest": "sha256:4c2a0a79594a20b9c2f0bfbd535f875ca1b079625052cdd801afb1cc0362d6d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7123173,
                    "digest": "sha256:06c11c595f6421f88e1b10286a766ae8db88f67c2c0f41cedd170640aee498ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343495,
                    "digest": "sha256:47cb22b679409f00e04b8d645444df7181f05cb2967ed73f1a377e7f774b6873"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355624,
                    "digest": "sha256:5e90d4e143c069feee70f90eea83d55b7b0761c67fbbfb7f3734c16c0811ac13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53192766,
                    "digest": "sha256:589feef49f1bc31f79ce239cc8c07cba582e35acd49a69908014769a9e87fd72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102148866,
                    "digest": "sha256:f165fa89fa3846c54b0bb7d76b67f8a4fca5fd2845fc3295a1428e5bbc4b0b51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b0977c6223cfae3ff9d1805183a1ebf6c0f539dbada53876c0d48ed7d13cfb9b"
                }
            ]
        },
        "1.14-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fedc38a6a2f72254a3fd0e9ad55f4c54f78e0f69b54414f6512cf909b6a88e21",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:71245e323c3d20bbd53cf312b9ac487494190313b96b90c6be96dd54d483e2bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127672697,
                    "digest": "sha256:60ae58fbe1c8062c994ea31d7a667688b975f61505de8e8fd430da4eeeba7c5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5efe4c9c597f30794438f12597804b0032a302528e39eb3b4db34a984eb5357a"
                }
            ]
        },
        "1.14-rc-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3810,
                "digest": "sha256:d979b565cd6a81f62d946775c708938929ece007b431f8e42aae2d9e169fc82a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127192067,
                    "digest": "sha256:b5faee289be172f5b2f99f7b58fb999ad98c36e558042ae81af6e94a814b0329"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e2c8eb30ea3f1b8dfe6e9ee2d67f102021a5b61ab0ad12acbc5e7164596065f9"
                }
            ]
        },
        "1.14-rc-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:71245e323c3d20bbd53cf312b9ac487494190313b96b90c6be96dd54d483e2bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127672697,
                    "digest": "sha256:60ae58fbe1c8062c994ea31d7a667688b975f61505de8e8fd430da4eeeba7c5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5efe4c9c597f30794438f12597804b0032a302528e39eb3b4db34a984eb5357a"
                }
            ]
        },
        "1.14-rc-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:6cbfc9fa38b3e0d39a13bc9651ecc0554903c644a7392233173a29be476f6a2a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859700,
                    "digest": "sha256:9bbb41bca8c6254da5088d03354297b1309dc75c2ccc738416025f89709ae5ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096223,
                    "digest": "sha256:239e4acdbc2ab88c89aa359fbab11429ea6d7bd93ea589a22c6bbb833ff82b93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343278,
                    "digest": "sha256:83d6b4707a3c3aff9cb939fc058b869c5412e78c37e43eb0b653565460495537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315591,
                    "digest": "sha256:6e096c4fc8c629edca6da3ce5a9e95288512cb11e3d3d01a6e49078d19c2acca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996899,
                    "digest": "sha256:ca29eebbe47938ede4b91d684551d2cd027b2947a5aa2dffb6b64aee43fef432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101664762,
                    "digest": "sha256:484bc6c7846d4e8a4f750cb73fc9cc4e086cc81a2d67f5a9929f969e54939413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bfb18321ce4e5e0c8d5b563982e189855c1f5d5431566cfc5dc2d159f8b3b628"
                }
            ]
        },
        "1.14-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:ba80efb999dbbb3d3533cec5504b8e3d19e5e120c5f2cd6d65b1a0e52f0aa617"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108370,
                    "digest": "sha256:cc3b08e804cce7e88d9df954b76be506569775afe9cf36316f2fa6c5c9bf3d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498229,
                    "digest": "sha256:aa649f4f33c2131c2969e49352ff247ebe5a62a62b83498c3580f883aa35621e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918766,
                    "digest": "sha256:901c0c16dce9409a6a020f4b874b40fb3f7d302fe0b4e7a80a87a7cfbab7da04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46400091,
                    "digest": "sha256:715a264d83dc76a4a25b4110827c1ac6cc620c406edb6b2089cd1117aec271ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46026938,
                    "digest": "sha256:83537019430dd0ae1391379fd45844061c435eed7fb3492201ad8625537b4337"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101664816,
                    "digest": "sha256:0ec88b6d34ad0fd72e3152eee3ba55a7b33cfd01814238984f3cc2b463a79c20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b9ef6f36f2f89fc7b63a1d22c6a77400eedb3e68d41dca68327965d454e079e5"
                }
            ]
        },
        "1.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7059,
                "digest": "sha256:a66a456e825c13861687d9f86a40624c90ed71ff54fdc92f21895b49837690b9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42119892,
                    "digest": "sha256:5275c778c803ce7d82407c77cfad4fb07fd1ec80fc99ba94cef475a92e4d090c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9913736,
                    "digest": "sha256:aae60b5ed65c5d76acc7c0baf6fe0549a03f324c20d1882c25d60b44aaacaeba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921069,
                    "digest": "sha256:a99de29c3c448a06c87fa2f84824e9e1d0e9a9c7d7aebb93fce0ca22b55b6c9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46121959,
                    "digest": "sha256:0218d3a084ad8951d29ac2b647d325959e28ea7dd339a851356a9e6ba934cfb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46150301,
                    "digest": "sha256:76fad22a8c0c5738f77c6f0ffd47b7600411118b3edc42ddefacae04fa843a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102148868,
                    "digest": "sha256:ff8cbfed15e430b62dfda84a3d7d59ece30f3c7680bb4142404f0022386086ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:82f4ffb04d581835b90d62d1da19ae46f7f2f06c0f348a8839eae6681f60a863"
                }
            ]
        },
        "1.14.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f21086d6d97214e2997d927a8f131b0eb520f935e7a092abc1730edeafd02255",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3824,
                "digest": "sha256:ecc39879693c48f307cda43ac418aba9a14b3e94591b9e6128d2a7c8f50aab25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127642843,
                    "digest": "sha256:82308e42e706438fe5cf0fdefa43877436d522bed873bc61ddbe212138fb1e45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b5d6fc528998a80d9cdbfcdf71b11630a7a59397920a7e779732cd0b0a0c76da"
                }
            ]
        },
        "1.14.0-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3824,
                "digest": "sha256:ecc39879693c48f307cda43ac418aba9a14b3e94591b9e6128d2a7c8f50aab25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127642843,
                    "digest": "sha256:82308e42e706438fe5cf0fdefa43877436d522bed873bc61ddbe212138fb1e45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b5d6fc528998a80d9cdbfcdf71b11630a7a59397920a7e779732cd0b0a0c76da"
                }
            ]
        },
        "1.14.0-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5445,
                "digest": "sha256:dbd528040736c502ad63d0ea25d78674b26f53fd0ee2805c9318c14c24aea32c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45862691,
                    "digest": "sha256:3182cf45068cd9734abd8e38dedbb9930ede35ee8c11376ca2684e86f9a1aa85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096560,
                    "digest": "sha256:1b727ab99a6a790544e023dbba8625605266dd84b3a69acaa541144ad632f4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343152,
                    "digest": "sha256:eab9435f7cf0c46bc6621020fd229e7de8baa61f71059cb9a34b9f681caed9aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315030,
                    "digest": "sha256:4f2ad791c8431e9b6624239d0b1fee2523df27584a263ec1d8d525201bb44087"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53077536,
                    "digest": "sha256:1a879613e63b581fbc31eac1107e244caddc95346001501421594071d0c92b42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101668902,
                    "digest": "sha256:b2de35f8fafe33997a98991002a9f1401f32a015f95fd83fcd50c8851494f151"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f41479b8b145b82ec920e8b18bc9bffa93188b3df23e5a48c8654681be1e3c60"
                }
            ]
        },
        "1.14.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5455,
                "digest": "sha256:332a5edffa5d3c24d77a9efdf801c710d877c34df8e57667e5ffac69e43f8cd2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42100335,
                    "digest": "sha256:2478a2ed882cb5fbb5e4e92c9f580da9ca52f5fc78b8bb439ecbf3ac18023caa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498391,
                    "digest": "sha256:2c541086e0dffa72464d4077dcc60504a1c08a73ecec554c159269786ba08fed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918781,
                    "digest": "sha256:edf0f97b070f73118badb36d21af3459f8317d4ac6d45aec680092cc962f1c47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46391794,
                    "digest": "sha256:d620eb05d9fd9184b8f200537b866a27af44aa6d7ef4dd6113bf1b51421d4795"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059915,
                    "digest": "sha256:d7a2067727afdbc6fec672a4dc4bbeb79782a065fcaf5c10239554a242cd53a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101668982,
                    "digest": "sha256:5913b3f658f18fb68c908cc11012eefd728cde7a5e026f1df44d99c44b80bb10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:53a439bdd83956a3bd26a0d056daabc024c5c22c9fd000e1c5402770dfa07e14"
                }
            ]
        },
        "1.14.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7fa32efd17cc0eba7b1dfdee3cf1b06421a5d14e68e3031e4e2845867f9dcd5c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3829,
                "digest": "sha256:e480d1e4bcd0b6d8da9a3d9d6d3ebe5a490fd1323680af9c124f621103704413"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2420493,
                    "digest": "sha256:d9bf605ce3d4449f4b90035c3e21d691806324781d43a5287b1da25a01779d6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300602,
                    "digest": "sha256:2a0c66f8509bb56e1ead748baf3433dcad3c1fa170146d5d7d06506b9a80f367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:baf5f16b98b20e6e4f07e24e93de1018e88310a49963dc147c370d360a02fdbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127712071,
                    "digest": "sha256:cd392aa27395bf9a3a748b4cc2f1fbe77e85dce158ff5ca16feab20b23f42645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:be78ff84649510fa2232e5c3a9fb630876b1528e0563944cebd7819d2e97b291"
                }
            ]
        },
        "1.14.1-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3829,
                "digest": "sha256:e480d1e4bcd0b6d8da9a3d9d6d3ebe5a490fd1323680af9c124f621103704413"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2420493,
                    "digest": "sha256:d9bf605ce3d4449f4b90035c3e21d691806324781d43a5287b1da25a01779d6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300602,
                    "digest": "sha256:2a0c66f8509bb56e1ead748baf3433dcad3c1fa170146d5d7d06506b9a80f367"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:baf5f16b98b20e6e4f07e24e93de1018e88310a49963dc147c370d360a02fdbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127712071,
                    "digest": "sha256:cd392aa27395bf9a3a748b4cc2f1fbe77e85dce158ff5ca16feab20b23f42645"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:be78ff84649510fa2232e5c3a9fb630876b1528e0563944cebd7819d2e97b291"
                }
            ]
        },
        "1.14.1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5453,
                "digest": "sha256:a7a78fe457d1dbb6cedddf66f19a228dd3bcaaf3311f39b173bf281d3c629ada"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45862803,
                    "digest": "sha256:a893843c75627d21c8a132a2b8559c62371e185dc82e30169102b547264b4f20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096554,
                    "digest": "sha256:3dc1ccae1d4101dbc423377c1f13fb143fc7f5f566816f142268a0b9eede632c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343329,
                    "digest": "sha256:a1d70cde97b6034a1ace45418fd5089f2085511e27ce09ceecf11de34da5f286"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315564,
                    "digest": "sha256:0366079d8c5e32134b3904853bf6d4d06f84f999018179add69b5cc225bf6194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53077538,
                    "digest": "sha256:b7903ddca99025dc06952cb0afca92366b99882c07cf824dd3174600587ff646"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101729987,
                    "digest": "sha256:5aa9d66d93ac81e222548fc8ad5b4f51753a91131238d56a131510e398a5cb4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6a6d502fcf1500b43564814fa73d4a4b646d51f6bfc04e3e9649681b33fb2bde"
                }
            ]
        },
        "1.14.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:a61a2910275cd3898c3402efc6fe5a10c54e317329845962eee0721bef84e98f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42100090,
                    "digest": "sha256:eb3768893937e6b455f98cd8db65949a6aa5c54ebd94fca3039af9833187ce10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498284,
                    "digest": "sha256:69eb68590923b075c8f49c4470341451f9d874afc84c5fc916278815a1064243"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918805,
                    "digest": "sha256:743981b4cf60d4ed8ddd6610e4d1d75256ddb63a7d83d540a96e1faf8ba8a315"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46392996,
                    "digest": "sha256:4b83e2473a635025de9a80900fb966143db79eafc6c7fad950a2ce7e54fc1764"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059870,
                    "digest": "sha256:7094bdb11e89e503ae46ef14fea1ecd374424112dc99dbb8258fecb352a9e74a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101729815,
                    "digest": "sha256:76ee7413bf1785936a18f527471d44766f0f05173ec6ee2d12ae5def3a279868"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f4266994932daf5d57291dd46a9d5e2bd2bd93fb470d4cdcbfc0a90d61daff8e"
                }
            ]
        },
        "1.14.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d6700db5fb766c1bb773122e183771954925aa0a1fee7d777e52e1bf04dfa6fc",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:06c57e2cd22b5a9d753f9435a79784dfd06827626224a37fdbb9547d8ed76530"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2405675,
                    "digest": "sha256:5f2023fd85a4e68f37fe41421fd89f30e69b98a645613521c57c01317561eee3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280084,
                    "digest": "sha256:3b753cfc04fdce9640aac1e7a4b3e7ce15fa60b8e357376e42f294f463a6e890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:0e90c422e5e4668cb4140aadb622d734faa93c81cc1e283da9b08bbbc65c45c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103097599,
                    "digest": "sha256:1981ecd0c1e29cfd4c996e12394b7429dfb7c7ead2a7311ab429881bd0479be6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ed1d000205aa12c72541870f9b48bf4217d2d79ff76cee1d70172df25ab469f3"
                }
            ]
        },
        "1.14.10-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4653,
                "digest": "sha256:5346ed17eb40e554398d0bb0c8ed76031f4c3740fa94767088ff1b4cfe3d352f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103112184,
                    "digest": "sha256:3c4b18b67a3ab5529f8ba0d33e7c8ce4f326612f3925c2235ac5b68656db1ca6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:c4ddb44b63d90ead2dde1a53ab08ba4bdc0fd2ab4c567641cfa05be123f49ac6"
                }
            ]
        },
        "1.14.10-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:06c57e2cd22b5a9d753f9435a79784dfd06827626224a37fdbb9547d8ed76530"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2405675,
                    "digest": "sha256:5f2023fd85a4e68f37fe41421fd89f30e69b98a645613521c57c01317561eee3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280084,
                    "digest": "sha256:3b753cfc04fdce9640aac1e7a4b3e7ce15fa60b8e357376e42f294f463a6e890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:0e90c422e5e4668cb4140aadb622d734faa93c81cc1e283da9b08bbbc65c45c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103097599,
                    "digest": "sha256:1981ecd0c1e29cfd4c996e12394b7429dfb7c7ead2a7311ab429881bd0479be6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ed1d000205aa12c72541870f9b48bf4217d2d79ff76cee1d70172df25ab469f3"
                }
            ]
        },
        "1.14.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7036,
                "digest": "sha256:0d741203ba033ddc31155fb66ad76586268e7cd782ca661d0a68e7edcd336c43"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869258,
                    "digest": "sha256:5c0fdcca2cbb5e316a288f39c8c2006f45544568ea04623c036e0b1faa066bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097763,
                    "digest": "sha256:8216e147de931a74896e75f60d0a331dd1438bc1ae4b2d4c29c8017548e8dcbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343130,
                    "digest": "sha256:baf6642121709e17d1419901978da7d29b673d5f936e42ec3241b7d7157e9541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355626,
                    "digest": "sha256:5754411f60ee27fceb92d6380a748ae6d60239063cfa8165419be0ebf9de5834"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53157865,
                    "digest": "sha256:a8771f21930318372521f18351173851be5905de53c0c8a17cb705232d3f5eaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101846240,
                    "digest": "sha256:91c493a58b1e36e10c158868d78558a2e536c72bc9d660c074d788254f67c5a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7184197274c6a9031af4be438692dc54116ed8ad4f1fe7ae11868afa98fb2df3"
                }
            ]
        },
        "1.14.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7043,
                "digest": "sha256:027ba00ffd5e50fecd7feafb9493219e6690a47ee4f1ea88752c021f407e59fd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111286,
                    "digest": "sha256:1b636fdf37230c276ff1507a9f2b0067182f369cd669d1852bf5b9f5ba3a43bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443957,
                    "digest": "sha256:9be3bc01c2e26b6c110cf55ed7833949511463f13387c8e708aec5a5c076fd83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3919858,
                    "digest": "sha256:5e1b23b3e38f06003a13d520ed3ec7eee0eafb5efe4a72d5508b3c2b2a7e3393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413093,
                    "digest": "sha256:f7ccd0aac82f54618d633ffdb095508b701c4fb50e0454f7591fb2d91a3a8577"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090797,
                    "digest": "sha256:5485e957cc6df5c401d8bdabc40c7ab3bdf8a056423db46acdfff3c9afe2447a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101846278,
                    "digest": "sha256:7a628f8ff6316a88181cf2d0fe8e81b5842579d50c569837ea92cfab5f4d0e90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:f066675427ba3762f8ad0159390de30735e5695fbc49d20fb6948d19ebc93c53"
                }
            ]
        },
        "1.14.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f7bc6da5304c6e651219a1f3ce6268111302069f828ef83e7100d5b4da54c393",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:964996de728de9c7c39f1e97b146b4bc317ef25a570f2b996fe247cfd0e5b9db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2405675,
                    "digest": "sha256:5f2023fd85a4e68f37fe41421fd89f30e69b98a645613521c57c01317561eee3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280084,
                    "digest": "sha256:3b753cfc04fdce9640aac1e7a4b3e7ce15fa60b8e357376e42f294f463a6e890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:0e90c422e5e4668cb4140aadb622d734faa93c81cc1e283da9b08bbbc65c45c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103279793,
                    "digest": "sha256:bd774dd42f20c72b2335aa86df0dcc76905d1a383bde3112f60f378ed6d5723c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:87040eea28146abacdfa46238d6cf7ef9ec51038c04f53bdc9796a19455a82bf"
                }
            ]
        },
        "1.14.11-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4653,
                "digest": "sha256:db74ca480fa83a6952a011e6260d83b08bef9ae64daadf03ea64043325946338"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103295008,
                    "digest": "sha256:fe44d6d6efff03c32aeac15cfcb53ab28c30dddfe8dfef38ffcef247e7287d78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c225aa08c6005692840ac5255534c914e7dca44ac909cf12bc70ba73299b91f1"
                }
            ]
        },
        "1.14.11-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:964996de728de9c7c39f1e97b146b4bc317ef25a570f2b996fe247cfd0e5b9db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2405675,
                    "digest": "sha256:5f2023fd85a4e68f37fe41421fd89f30e69b98a645613521c57c01317561eee3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280084,
                    "digest": "sha256:3b753cfc04fdce9640aac1e7a4b3e7ce15fa60b8e357376e42f294f463a6e890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:0e90c422e5e4668cb4140aadb622d734faa93c81cc1e283da9b08bbbc65c45c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103279793,
                    "digest": "sha256:bd774dd42f20c72b2335aa86df0dcc76905d1a383bde3112f60f378ed6d5723c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:87040eea28146abacdfa46238d6cf7ef9ec51038c04f53bdc9796a19455a82bf"
                }
            ]
        },
        "1.14.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7034,
                "digest": "sha256:b5e095c6c2697750031162ae0463c0fea26da31eae4dae51c045621f05dcb709"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869258,
                    "digest": "sha256:5c0fdcca2cbb5e316a288f39c8c2006f45544568ea04623c036e0b1faa066bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097763,
                    "digest": "sha256:8216e147de931a74896e75f60d0a331dd1438bc1ae4b2d4c29c8017548e8dcbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343130,
                    "digest": "sha256:baf6642121709e17d1419901978da7d29b673d5f936e42ec3241b7d7157e9541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355626,
                    "digest": "sha256:5754411f60ee27fceb92d6380a748ae6d60239063cfa8165419be0ebf9de5834"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53157865,
                    "digest": "sha256:a8771f21930318372521f18351173851be5905de53c0c8a17cb705232d3f5eaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102051479,
                    "digest": "sha256:f9859bad92348764465eeab0e726fc93476d79d91538a1c8cca62a8c21b9d060"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:2758893be728564a856ac63563e9ec598292be75bc7b7eca2e3a1b2aba2cf0b3"
                }
            ]
        },
        "1.14.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7043,
                "digest": "sha256:fb61f844b59404368ffc456f1b94b30b993b8375e726c3de13bb03fe8d3c3a99"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111286,
                    "digest": "sha256:1b636fdf37230c276ff1507a9f2b0067182f369cd669d1852bf5b9f5ba3a43bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443957,
                    "digest": "sha256:9be3bc01c2e26b6c110cf55ed7833949511463f13387c8e708aec5a5c076fd83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3919858,
                    "digest": "sha256:5e1b23b3e38f06003a13d520ed3ec7eee0eafb5efe4a72d5508b3c2b2a7e3393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413093,
                    "digest": "sha256:f7ccd0aac82f54618d633ffdb095508b701c4fb50e0454f7591fb2d91a3a8577"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090797,
                    "digest": "sha256:5485e957cc6df5c401d8bdabc40c7ab3bdf8a056423db46acdfff3c9afe2447a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102051484,
                    "digest": "sha256:536eec8dbbcbd55d12ff6b45976e23e3681da3856e4449f1d3c29798c8279d1c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8590f9b41ce45504792113111940a6594d4996950a49cd2b978e03226590d48c"
                }
            ]
        },
        "1.14.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4cf290925b91f75947990361f140dc4747c373722f8f232bf9ecfccb23e2c700",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:60ebbfa3ac6cf0c9505ec47a83298d3f49eab664f66d9ec8ba4533e09be7bae5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2405675,
                    "digest": "sha256:5f2023fd85a4e68f37fe41421fd89f30e69b98a645613521c57c01317561eee3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280084,
                    "digest": "sha256:3b753cfc04fdce9640aac1e7a4b3e7ce15fa60b8e357376e42f294f463a6e890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:0e90c422e5e4668cb4140aadb622d734faa93c81cc1e283da9b08bbbc65c45c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103281863,
                    "digest": "sha256:4e090351f28a97a43a8ff573a9c0fc20bfb7aaef0fe50e287b251b0f341bf274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:f874544d16a8e12bbfde307bc26f2e5667aa5582380f02e3f42d9cf4c39313b9"
                }
            ]
        },
        "1.14.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4653,
                "digest": "sha256:2d9faf2f342b4883ceae01cb713509f9b6ee2b1ee563da880c4ca60e5011ad22"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103295683,
                    "digest": "sha256:19dc9d9455b2952d25e3afc2084b2f5ab4a934e827f55eeccd48a1901ed4569a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a00486d1f319f06ac405c3c6f49a7f5a3c759b07cfcd9ddd53ae0fdcf6831812"
                }
            ]
        },
        "1.14.12-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:60ebbfa3ac6cf0c9505ec47a83298d3f49eab664f66d9ec8ba4533e09be7bae5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2405675,
                    "digest": "sha256:5f2023fd85a4e68f37fe41421fd89f30e69b98a645613521c57c01317561eee3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280084,
                    "digest": "sha256:3b753cfc04fdce9640aac1e7a4b3e7ce15fa60b8e357376e42f294f463a6e890"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:0e90c422e5e4668cb4140aadb622d734faa93c81cc1e283da9b08bbbc65c45c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103281863,
                    "digest": "sha256:4e090351f28a97a43a8ff573a9c0fc20bfb7aaef0fe50e287b251b0f341bf274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:f874544d16a8e12bbfde307bc26f2e5667aa5582380f02e3f42d9cf4c39313b9"
                }
            ]
        },
        "1.14.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7037,
                "digest": "sha256:a248e5a7bfb491d5ad54d7b6aa0ce9b8d99fcb0a4989b4d7bb7af2da58cb3b24"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45868212,
                    "digest": "sha256:ebde10b2510128140d24e66909ceb0c80e00656af313829f82d31ae8cf08bcf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7098267,
                    "digest": "sha256:05478d2a9ec4daaef33a6c87d057451c262677d02e4d9c61125bbb68bc56a601"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343289,
                    "digest": "sha256:39c5f002cc82f5d62a78100714f451edb33a717fbf6795e309e0b1768712c093"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356208,
                    "digest": "sha256:3d327c3810299006837433575844fea13af679784a13df32d477f1207e94ea8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53161364,
                    "digest": "sha256:efda51cf91bd5d8ef8b1c5eab51f707c642b0f784e98b40499ecec4cfdc1804c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102043312,
                    "digest": "sha256:d7f8b141300839f71381a4306cd593726a97aaa456b0b5e499dbd1411a485930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d8f720485f2c0d5c08c53e0cd061ea4eb8ab1fd55aa8cd8241daa48239808487"
                }
            ]
        },
        "1.14.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7044,
                "digest": "sha256:9951badec2dfd9c1e94f451e01a283da6bad5754d5ce0018ee03b90fa3cfe51a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42117734,
                    "digest": "sha256:cfc77fa15d772230821249f78cfbb69a8fc6596f6867601b9dad16aedb424325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9444101,
                    "digest": "sha256:6c1d24dbd0f85452f20a934ea14ebc3dadfdd8493317dfe8f7f2aa1772937953"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3919908,
                    "digest": "sha256:90255e5a0a934b36df89ac1c1842d07d8d7ed4b3531898af64fdab8372662e3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413067,
                    "digest": "sha256:55d3541348c25cd4a2346df5fa88cd6a4eef94c72fab598b9b2ae20afac1ca4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46144697,
                    "digest": "sha256:38ece4f6c543815d76526096d61327b89a2e89b3faf36866626e6440d2ed3049"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102043314,
                    "digest": "sha256:e1c4a565f539b9a0d07b8e91b85ad2ab8e38d88b2d736b3b78a7e10c42e9ee72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f02591e6d868754c44502bf95ef0446d256fa9bf9257720543f2c07178507190"
                }
            ]
        },
        "1.14.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:10918677fdb72bc93380ae276ca015414f67aec76e8f3c01d0c9535fb775fe19",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:6efb6c9cd7065169df66aa3e88a569de97e662f4414eb80bfbd500462a44f1dd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422744,
                    "digest": "sha256:0f34ce5da94097b8c334f6b2065a010aced9855c3532e4462e9bd1b0a4c4b3f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280535,
                    "digest": "sha256:cc7080c4e9b37c27695262d3a55b2123a6aa03ea7bc84325acdb59d191cbf8c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:aaa4c313f1145eca236e84580c343eb89f2ce209bcd337db611f572726b2a165"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103642933,
                    "digest": "sha256:440de7e6b611635f8b10899cb03fd88ae3e7584c34ab9ef310cd0d29363d28e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:2dc3e39cd5cb6c1c07bbe7aa7fc8c594c23a0733b920f3443bb84843e4c444f9"
                }
            ]
        },
        "1.14.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:6984f7396628d1f5437995670fd7059ee9ecc74bb6837c7b6a19f18d37f904ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422964,
                    "digest": "sha256:71728559ce1f58d5e0ef30be5b1d7628ff967d4038f9202818dd3d8c76feb8ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 298847,
                    "digest": "sha256:f3f1e1c694cf01b382326be8c400fc264e4c1187522339e854c24819d1d9b6fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b9b6f31664231384259b5d3103b6f8e1009f9a48361483ce8bb18b98efc461c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103306474,
                    "digest": "sha256:3eed2ec609926e3cc9288d58654e4b1eae023f254caa7f47228b39b0d3a722fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:a93ed9f298c7a68c2feb7d2926b3ebd54b3ee06c98f3f679b47cd35c0e83c27b"
                }
            ]
        },
        "1.14.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:32105da0eaf7d77140c7fb25e7ba9d1ab659f51f2481652c7e83fd4ca5ceb82c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2407555,
                    "digest": "sha256:c58e8a26a8407acc3ead776f6526efa889fda03270a8d05109208d9f59159420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280060,
                    "digest": "sha256:dbe0ca5f7e7e39c37c9f0a26160a742edda20ab73836336395e0b0aeded33776"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6490e713d90e3419a99e20463b25f536cd4a3aa5b97dc06f62e6dbdc4f826435"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103281058,
                    "digest": "sha256:a8c5885bcb797e7661011c3a84399811f7d3c67a4a87363dc4d9d9bf0629cfe7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8d30a8e4d6d7e3e90017399d14ed31d16bfbb81206229b9acef8c67583b15828"
                }
            ]
        },
        "1.14.13-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:6efb6c9cd7065169df66aa3e88a569de97e662f4414eb80bfbd500462a44f1dd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422744,
                    "digest": "sha256:0f34ce5da94097b8c334f6b2065a010aced9855c3532e4462e9bd1b0a4c4b3f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280535,
                    "digest": "sha256:cc7080c4e9b37c27695262d3a55b2123a6aa03ea7bc84325acdb59d191cbf8c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:aaa4c313f1145eca236e84580c343eb89f2ce209bcd337db611f572726b2a165"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103642933,
                    "digest": "sha256:440de7e6b611635f8b10899cb03fd88ae3e7584c34ab9ef310cd0d29363d28e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:2dc3e39cd5cb6c1c07bbe7aa7fc8c594c23a0733b920f3443bb84843e4c444f9"
                }
            ]
        },
        "1.14.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7029,
                "digest": "sha256:9e8fd72e10229e42b8ad374fbc57ef14f25e03ca22eb2b191558feccfcd609f6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45870031,
                    "digest": "sha256:d8925d905dadf63fa0ff74be912443a1cf8cd72ea5543317b0e22067d39ef948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7099141,
                    "digest": "sha256:abd9c5a6d77413d17345fcf1f89b9dde2f3d9d6157bd070d4093cfef30107add"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343447,
                    "digest": "sha256:22e1f8e87a65e3a71764ea79b951f915c90a885dfd516f61e57d81745acaf272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355871,
                    "digest": "sha256:d43213eb5a44e08394e2dfcfb96a0577df6dea9ae20ef636053cf840a14d7cad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53177068,
                    "digest": "sha256:e230a9dc5b7d6af1fad8076c109e8ff819f32761931cd9ddef1356053f6ed3db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102044310,
                    "digest": "sha256:8590ba5515f46e912dce781178d2c45f9aff2023355dc89aeeba4883fb4ddbce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:2b5d95db60f32873067833688ab5e33a07a6786cdaa80386413d2c09fdb4c40f"
                }
            ]
        },
        "1.14.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7036,
                "digest": "sha256:06cd3fad38e986011d246e4673ea562122f49f0c8eb13659f15cd0004a45521b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42119951,
                    "digest": "sha256:f5de2649c1cd9091872f81b8ceb6a67890124f113d9fce9c52bf60d5a6e19f43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9446203,
                    "digest": "sha256:23cae60aac6e598935e2b14216dc4265434ba03d17c82f622b18abb712577d2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3919958,
                    "digest": "sha256:db9694e28a75917ff08caeaee5ed8729a2f12d2110bf203781d578006a0ef2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413245,
                    "digest": "sha256:49da7baaa533b2272938593647e65b46d3fd7a5df2211e746229f18c95ea81fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46149991,
                    "digest": "sha256:a7d691f15408a83ccf5ba56c2e1b894994dc29ff31a10700c203eec3bd3cad88"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102044328,
                    "digest": "sha256:9eb86b6f149ae43a7999ee24a054b4d20dfb7dfed699c67390e6aff1ea8af825"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3dbd9825cb16dcc3475d658acb41423e0bc105672d9aca9266913b8bade84083"
                }
            ]
        },
        "1.14.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:dbc5afb2a285a76d4f811be65228b0b73c815dd082e56480a844374750c9ca34",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:3ae68e19c3ef4eba6abae1e76a794f0abc80f38ab074415fd5a4eeecc68825aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2423559,
                    "digest": "sha256:9b1db703a337d301b1d50292acfbabd5fb3796511b962410c554420b85cd78dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280531,
                    "digest": "sha256:9aafb3c0a5bfdb5db9a33cbe41dbde03af33309430a41506052f7e47a1a21e6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6cf89e3bec494ebb8111c0fedde0817f7d6b1a7234148ee0a8e2d0210b346382"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103347402,
                    "digest": "sha256:ec7d79e523b6f42c77e9daa864d6cd1cce5309a19d103504960056ab519a874e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:05cb68c7a6ebbfad48320f17dd6c47eb70cbe7db2fcf756a622b854ba560b70e"
                }
            ]
        },
        "1.14.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:cdc89a7674d33932b83d77ae104669592f18c80bf4ea7213c009dbd9e926779a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422964,
                    "digest": "sha256:71728559ce1f58d5e0ef30be5b1d7628ff967d4038f9202818dd3d8c76feb8ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 298847,
                    "digest": "sha256:f3f1e1c694cf01b382326be8c400fc264e4c1187522339e854c24819d1d9b6fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b9b6f31664231384259b5d3103b6f8e1009f9a48361483ce8bb18b98efc461c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103374640,
                    "digest": "sha256:0ff980ed8514a119b9adc6d9f12bd94e7b930f8dbe561864f7a7eacf9f680cc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3a47fe14f9a09404b6adf48bd05c278dfafd32dd7ccb9339cd55667161909f59"
                }
            ]
        },
        "1.14.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:63537851f7abcae6d812b5305e11241580fe7999ee8e93e34deaea8a2692d0c9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2407555,
                    "digest": "sha256:c58e8a26a8407acc3ead776f6526efa889fda03270a8d05109208d9f59159420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280060,
                    "digest": "sha256:dbe0ca5f7e7e39c37c9f0a26160a742edda20ab73836336395e0b0aeded33776"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6490e713d90e3419a99e20463b25f536cd4a3aa5b97dc06f62e6dbdc4f826435"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103358450,
                    "digest": "sha256:38434f32714edeb55080a8a40237f2eb01c0d0e94560ee61222c79031a168c99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:324a97927eba49edd7268f3314d168ca45ca490ed2d9ae95c953857ffa6fa555"
                }
            ]
        },
        "1.14.14-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:3ae68e19c3ef4eba6abae1e76a794f0abc80f38ab074415fd5a4eeecc68825aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2423559,
                    "digest": "sha256:9b1db703a337d301b1d50292acfbabd5fb3796511b962410c554420b85cd78dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280531,
                    "digest": "sha256:9aafb3c0a5bfdb5db9a33cbe41dbde03af33309430a41506052f7e47a1a21e6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6cf89e3bec494ebb8111c0fedde0817f7d6b1a7234148ee0a8e2d0210b346382"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103347402,
                    "digest": "sha256:ec7d79e523b6f42c77e9daa864d6cd1cce5309a19d103504960056ab519a874e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:05cb68c7a6ebbfad48320f17dd6c47eb70cbe7db2fcf756a622b854ba560b70e"
                }
            ]
        },
        "1.14.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7026,
                "digest": "sha256:a3e4572c640768d296d9dd261c6970dc35272a27072d9cee1c6d455cf327b21a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45870031,
                    "digest": "sha256:d8925d905dadf63fa0ff74be912443a1cf8cd72ea5543317b0e22067d39ef948"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7099141,
                    "digest": "sha256:abd9c5a6d77413d17345fcf1f89b9dde2f3d9d6157bd070d4093cfef30107add"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343447,
                    "digest": "sha256:22e1f8e87a65e3a71764ea79b951f915c90a885dfd516f61e57d81745acaf272"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355871,
                    "digest": "sha256:d43213eb5a44e08394e2dfcfb96a0577df6dea9ae20ef636053cf840a14d7cad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53177068,
                    "digest": "sha256:e230a9dc5b7d6af1fad8076c109e8ff819f32761931cd9ddef1356053f6ed3db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102126497,
                    "digest": "sha256:39693b984eb06da90e411a8870c734f8c1ebf1394f4cefbc56d1f0d26dddbc64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9bcd49fd596f041d07ba0bfc9a1ebe5c8e302b859b4d880c7218a510c10f7be9"
                }
            ]
        },
        "1.14.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7038,
                "digest": "sha256:c207f3397f974af269a98e03e652fef913b91b585cea12589c20a3f27540f276"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42119951,
                    "digest": "sha256:f5de2649c1cd9091872f81b8ceb6a67890124f113d9fce9c52bf60d5a6e19f43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9446203,
                    "digest": "sha256:23cae60aac6e598935e2b14216dc4265434ba03d17c82f622b18abb712577d2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3919958,
                    "digest": "sha256:db9694e28a75917ff08caeaee5ed8729a2f12d2110bf203781d578006a0ef2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413245,
                    "digest": "sha256:49da7baaa533b2272938593647e65b46d3fd7a5df2211e746229f18c95ea81fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46149991,
                    "digest": "sha256:a7d691f15408a83ccf5ba56c2e1b894994dc29ff31a10700c203eec3bd3cad88"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102126525,
                    "digest": "sha256:51d6a94df80d27bba9815a3808acbab48f59e83a0a21a4edecc712955d7e9558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:75280a9e6c2f96802ea51fb256b171616e74417ab4f27be8ad34871c4da2bf88"
                }
            ]
        },
        "1.14.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:13c3845d39ed8fcb5a8382d719b1621c261031c45c468279e5cbb8288e767a8e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:8c323b3d13b3b6b95764b2bfbd31cea12374a92bb0ea4636e08a28e48b8788f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2423559,
                    "digest": "sha256:9b1db703a337d301b1d50292acfbabd5fb3796511b962410c554420b85cd78dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280531,
                    "digest": "sha256:9aafb3c0a5bfdb5db9a33cbe41dbde03af33309430a41506052f7e47a1a21e6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6cf89e3bec494ebb8111c0fedde0817f7d6b1a7234148ee0a8e2d0210b346382"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103375699,
                    "digest": "sha256:7c24fcadd0393d5541a2ea47456574f1fd387c3bf259edde0f7e16e2a32bba8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:db99b9f58396dd380de39ee61e1ea6039a2948b6909c76a0b5abf832a957c202"
                }
            ]
        },
        "1.14.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:fcfd4330b5ddba91ea3d36fc581d7862ec1241befd8619bbede93a6466ee974a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422964,
                    "digest": "sha256:71728559ce1f58d5e0ef30be5b1d7628ff967d4038f9202818dd3d8c76feb8ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 298847,
                    "digest": "sha256:f3f1e1c694cf01b382326be8c400fc264e4c1187522339e854c24819d1d9b6fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b9b6f31664231384259b5d3103b6f8e1009f9a48361483ce8bb18b98efc461c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103417622,
                    "digest": "sha256:ee81c67c567359ae25e6ae1ec65a3aad4b55528a42ebaf168dacf2de781c1f25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:edab66cf832f38f40e1ec0921175520b67aef45da25a4ea31d02a407e1242c86"
                }
            ]
        },
        "1.14.15-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4612,
                "digest": "sha256:97b7f3c7b7bd4a3cedd97ff8d8aaad502729694c727f1a635ff6841e78f30efc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2407555,
                    "digest": "sha256:c58e8a26a8407acc3ead776f6526efa889fda03270a8d05109208d9f59159420"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280060,
                    "digest": "sha256:dbe0ca5f7e7e39c37c9f0a26160a742edda20ab73836336395e0b0aeded33776"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6490e713d90e3419a99e20463b25f536cd4a3aa5b97dc06f62e6dbdc4f826435"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103396786,
                    "digest": "sha256:5fb0082d945585981bace9528441e5e6bc3168c8c030395bad9010fbbc075413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:866147a3d6cb4d97f1ae40bc468f8447f88d1d5fe1923981aed1e53bb5d19061"
                }
            ]
        },
        "1.14.15-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:8c323b3d13b3b6b95764b2bfbd31cea12374a92bb0ea4636e08a28e48b8788f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2423559,
                    "digest": "sha256:9b1db703a337d301b1d50292acfbabd5fb3796511b962410c554420b85cd78dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280531,
                    "digest": "sha256:9aafb3c0a5bfdb5db9a33cbe41dbde03af33309430a41506052f7e47a1a21e6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:6cf89e3bec494ebb8111c0fedde0817f7d6b1a7234148ee0a8e2d0210b346382"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103375699,
                    "digest": "sha256:7c24fcadd0393d5541a2ea47456574f1fd387c3bf259edde0f7e16e2a32bba8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:db99b9f58396dd380de39ee61e1ea6039a2948b6909c76a0b5abf832a957c202"
                }
            ]
        },
        "1.14.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7027,
                "digest": "sha256:62219402adc20b49b912fedeac49b373c0df9d1e1264acf40bc2501829c89f3c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45867053,
                    "digest": "sha256:4c2a0a79594a20b9c2f0bfbd535f875ca1b079625052cdd801afb1cc0362d6d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7123173,
                    "digest": "sha256:06c11c595f6421f88e1b10286a766ae8db88f67c2c0f41cedd170640aee498ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343495,
                    "digest": "sha256:47cb22b679409f00e04b8d645444df7181f05cb2967ed73f1a377e7f774b6873"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355624,
                    "digest": "sha256:5e90d4e143c069feee70f90eea83d55b7b0761c67fbbfb7f3734c16c0811ac13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53192766,
                    "digest": "sha256:589feef49f1bc31f79ce239cc8c07cba582e35acd49a69908014769a9e87fd72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102148866,
                    "digest": "sha256:f165fa89fa3846c54b0bb7d76b67f8a4fca5fd2845fc3295a1428e5bbc4b0b51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b0977c6223cfae3ff9d1805183a1ebf6c0f539dbada53876c0d48ed7d13cfb9b"
                }
            ]
        },
        "1.14.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7059,
                "digest": "sha256:a66a456e825c13861687d9f86a40624c90ed71ff54fdc92f21895b49837690b9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42119892,
                    "digest": "sha256:5275c778c803ce7d82407c77cfad4fb07fd1ec80fc99ba94cef475a92e4d090c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9913736,
                    "digest": "sha256:aae60b5ed65c5d76acc7c0baf6fe0549a03f324c20d1882c25d60b44aaacaeba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921069,
                    "digest": "sha256:a99de29c3c448a06c87fa2f84824e9e1d0e9a9c7d7aebb93fce0ca22b55b6c9b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46121959,
                    "digest": "sha256:0218d3a084ad8951d29ac2b647d325959e28ea7dd339a851356a9e6ba934cfb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46150301,
                    "digest": "sha256:76fad22a8c0c5738f77c6f0ffd47b7600411118b3edc42ddefacae04fa843a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102148868,
                    "digest": "sha256:ff8cbfed15e430b62dfda84a3d7d59ece30f3c7680bb4142404f0022386086ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:82f4ffb04d581835b90d62d1da19ae46f7f2f06c0f348a8839eae6681f60a863"
                }
            ]
        },
        "1.14.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8fcd23ee5d727daadee59cb8f1f751b957cd827e335ace4661eee0db5a63424e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:c17b11e50a3f9f831c2750cb27b8b0f86abfd68f0fc93e8ff87ab6c66e1d5abf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127774622,
                    "digest": "sha256:2cf1fed1fc5ff3647312ce126e166e23fb9f96e28f38884ea9873d7f8a316b53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3f8d529407ee4680924c260b8b273f91677815c3930ac19883af92083ca1a780"
                }
            ]
        },
        "1.14.2-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:c17b11e50a3f9f831c2750cb27b8b0f86abfd68f0fc93e8ff87ab6c66e1d5abf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127774622,
                    "digest": "sha256:2cf1fed1fc5ff3647312ce126e166e23fb9f96e28f38884ea9873d7f8a316b53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3f8d529407ee4680924c260b8b273f91677815c3930ac19883af92083ca1a780"
                }
            ]
        },
        "1.14.2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5454,
                "digest": "sha256:db51ab1902f27d4e5aa162fbb4e5cdcad612733153d219c62cd328075f9093f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45864280,
                    "digest": "sha256:cb6703531d2fa1d357cdd21991ae844400ecd207dba47fdd9afad54cdd9ce65a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096585,
                    "digest": "sha256:cfdc86c4352df3ac4c13ca4ce79924328408ad32ad3ca32fc8b264e8f6988e7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343325,
                    "digest": "sha256:7a4dd8c9abb1148c2fa5d4b85b1125efedc4ade033de3fab02d2591844f8edf0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47357139,
                    "digest": "sha256:ecc2b159da9e1c38efe967b03bb5f74e84377be266117339a6b8f0494590a1f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53077561,
                    "digest": "sha256:dbba517e60ebb03e95bd583d57c89e376eac87f1fffaea6a514dd133bb72e47c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101771294,
                    "digest": "sha256:b531804f938033fac782b29db0ca68dc3607fc7fb4492911656ce282ae910577"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b1925ee2aaf2b1d276923475af46ffd91211b3d0bd6361ef4c182be4e732f9e5"
                }
            ]
        },
        "1.14.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:ffdf4bb671405eb7f50fc599d35392000c4610ef0799f7adfe3e90c63b9f9b7c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42101192,
                    "digest": "sha256:4168e46f368afa15fa660f5197fb2946df81a85078c82e37a76d2610fb3999f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498287,
                    "digest": "sha256:a9bc0e3bfcb00266e5034f08dae24b7862a41a069b0db0c68beb50e66983e602"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918722,
                    "digest": "sha256:3461f3bce5656c429f5d3faee144de5778a7f01ecd08241211c4badd34a7197b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413077,
                    "digest": "sha256:1a2c88136aac9941bfddb6eed51d8f03cc96ee12d1164f9edf450f6ff914e414"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059762,
                    "digest": "sha256:fc4652115632b0b140c402df2da0cf7c138160eeac5b2d393dce42441abacac0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101771351,
                    "digest": "sha256:6e8efc893c24c356245d05833671f626958171f477a2cb314d8f7ce3cc2e859c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6f7f3951cecedb16bc0fad1819efcb1494a041ff034bce16c1a67f91c5e002ef"
                }
            ]
        },
        "1.14.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:242c5df23752973c111cdedf6e13413d0507a9a697a8232fdda5a2e8eb385a24",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3827,
                "digest": "sha256:5c9d700783a4f2a8c9075d6fc990f328db87ec647d399c11a6469c4bcdac90d1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127843769,
                    "digest": "sha256:888e8edf526a315ecceea6785f665113ffce2e1e0c8617daaf91786d53f6fb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ecbf78654cd341d4acd2a92217585b18547f1b6afc166ac4334420966a2065e4"
                }
            ]
        },
        "1.14.3-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3827,
                "digest": "sha256:5c9d700783a4f2a8c9075d6fc990f328db87ec647d399c11a6469c4bcdac90d1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127843769,
                    "digest": "sha256:888e8edf526a315ecceea6785f665113ffce2e1e0c8617daaf91786d53f6fb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ecbf78654cd341d4acd2a92217585b18547f1b6afc166ac4334420966a2065e4"
                }
            ]
        },
        "1.14.3-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5451,
                "digest": "sha256:9eb21329dc9b7aa6798d5b97541044f8748244b38343a4199168c177f0a7e9b0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45868629,
                    "digest": "sha256:33f1e205e6f963868048d05375e218b5a53592240c265ac49b4860e141d25c66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096812,
                    "digest": "sha256:83963556ddab1d93e22197bee7fc0d66da2f25f8ae77f4147c0ebee63db933e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343333,
                    "digest": "sha256:e52e6e35f16ed7d977f73bf736fe9e27ba863d03fa402e68e53f187ae3c43123"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355661,
                    "digest": "sha256:cf172e11e265992a6dffd35b590fb6e71abfee19640961a4b80f8e7f8280ce8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53110740,
                    "digest": "sha256:3399fbea07f3daef2e1a3276f68a459c8b516d3438a5a5743754e85f0832380b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101790054,
                    "digest": "sha256:6b64006c8754ee74aa7c01e35a8111b0089935f4d44114497c9a204d2a0c8070"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:98108a9c68869895be691826020f64de688cde1aaae943f55a4fe10742b98e8e"
                }
            ]
        },
        "1.14.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:ecdb413791e2cc697dd4826a02961b5f91680035474447d7eb30e59045bdbe11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42104346,
                    "digest": "sha256:11acdea2de14253903f5970d63a2076ff08912929430d1c33afe617c9fa6bf8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498344,
                    "digest": "sha256:99452f66748f5df5d89d2287e42b5c3d87c9d5e1e20c16ef729e87d463840cf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918713,
                    "digest": "sha256:2cef06b7abe4487657829b47c97bd2992f14a34349e0bcf60a47de9c647bd3fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413310,
                    "digest": "sha256:c542e1b5d6ef8c44b0708c5d2d73da1f5269186501aaee2b172d32a8b50d86c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059889,
                    "digest": "sha256:04e0669792f2bafc58162fb1fe98159b1566e12b5f32e9b9a9e58c6ddb814096"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101790100,
                    "digest": "sha256:e1b432308bb3bd9576cd1e4c54e6a455bbc2f182b95efa3e3a3f1a6fb288d8f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:dd5563b4a627ae7a541afa86ca4ddd2836f1eb7d0c47d7613699e986f50fc6f4"
                }
            ]
        },
        "1.14.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:192ac62fcc68673a7a793c80d0da5cbf1daba1e429623bbcd1710eafcfe2ddaf",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:435db915ee7af5da81bc3e3dae84d3f9af075b9d139510ec5252749587100b50"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127846663,
                    "digest": "sha256:754691c4bcf20eb06087104e5fc82d340991d9bf26c21cae6979f36e3bd38ca7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:63238be1b74c86ab98841c3959a33d79a903d58ac50518d4fa65b2ea8c6a75ba"
                }
            ]
        },
        "1.14.4-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:1a464cb17cb7c57e2cfcadc22286d8833c49528e66e6f6900916bf6744345dd0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127859153,
                    "digest": "sha256:3f154a497a43d3932627d4ed19f8a725b92bc6ff032696fd7d02c923aabfdfcd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:356485fde635696dcdacee878dba8a58e09b58537b064b5f1661e5bbede500c1"
                }
            ]
        },
        "1.14.4-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:435db915ee7af5da81bc3e3dae84d3f9af075b9d139510ec5252749587100b50"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127846663,
                    "digest": "sha256:754691c4bcf20eb06087104e5fc82d340991d9bf26c21cae6979f36e3bd38ca7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:63238be1b74c86ab98841c3959a33d79a903d58ac50518d4fa65b2ea8c6a75ba"
                }
            ]
        },
        "1.14.4-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6187,
                "digest": "sha256:9f02342c813e5472ded5de33bd8e08eec1d73f6d5bd81f0ff7f1a775d70e5629"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45868949,
                    "digest": "sha256:cff0731da2e4f4a0ae8329840eb7fed7ea6aac11aecbfa15c6e684caec03920d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097860,
                    "digest": "sha256:3bbeb0ded58d68be17265763fda36a4e1a520234a291d66f370d98a3e0d6e591"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343524,
                    "digest": "sha256:d6159fbed770bb99a219eae06828da55caaa649879843c0b9df18ddda9b698b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356467,
                    "digest": "sha256:7ba732bafeb6b1467fd6908c64c6e8d10ffb27e44e3a25ab4c6c38e8f753baa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53110939,
                    "digest": "sha256:10fbc5ac1d2a89d2b9d45778fc9215409db3c14b82290c3f4bb4afff39a8687f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101795076,
                    "digest": "sha256:8d6b73f04ae66a1f7e61b120c507850cce7129359c9ebe078d698fb2debc63e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:adbdb5728b5478325ba36d54bbc9ba50ad5a1f4f3895d2b500ec1635a2567b95"
                }
            ]
        },
        "1.14.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6192,
                "digest": "sha256:6261d3998a207f751a3ec6930b21df174291bc8c569c3e5460cec821c1809da2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42102504,
                    "digest": "sha256:2566ca784846d2d0d4f9105084d94d68d8ea1a82a06a76c5bcd991ce5a10cda1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443335,
                    "digest": "sha256:c3f976b5a12722f5e6e115157695654d36452b713c7fa64a860f8c9e14859402"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918433,
                    "digest": "sha256:e35142ef6ea6c722cd0397799ab151e5da354eabc784b3acef29def7fa34e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46412697,
                    "digest": "sha256:7773eda6b7a8801a6f09bd4ce443b7e88397ed16265ecd37f55af57db56c4658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059557,
                    "digest": "sha256:148541d4f7791fc2097ecd9226985afe692a5cbc0a0fe7dd9cc20f11701fce5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101795066,
                    "digest": "sha256:344d1c5d9bfbef2aeb751cd6a6b676cb41acf58fd6ae0b1c2f2563faee00aace"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:598f61b7c46568371c49189c565bf6abd0406330f4290fd10ce586536f9ad45c"
                }
            ]
        },
        "1.14.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:ed839b600e9b0f6f9c4dacd895355fa56e02652f01e873029c6fb997842bd7f4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3830,
                "digest": "sha256:9a80c1fd3a87060f722d943c406da1e44673ac1a3b1ca825370307c145f7fef5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128182109,
                    "digest": "sha256:d6f82be5bf601cf8b3ce3831f415f8e4057942f012533eaff2a58504716e691a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3ba0c03e33b6ad6744dd6d0d95b528b643575969ef43d8ee7ed376c414852d6e"
                }
            ]
        },
        "1.14.5-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:c3bd4f8650e67949dfe9dd0bdfb5e31f384e3d536a29a0d1b3f7374272f97292"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127851605,
                    "digest": "sha256:350c4f8dc82db8d2cee66cebd0c439f027013cb1302335aa92b215acb4d1001f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:452007a8f22a5e140803eb78c2313065252af23a37b11c7fa4d6302495e0cdc7"
                }
            ]
        },
        "1.14.5-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3830,
                "digest": "sha256:9a80c1fd3a87060f722d943c406da1e44673ac1a3b1ca825370307c145f7fef5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128182109,
                    "digest": "sha256:d6f82be5bf601cf8b3ce3831f415f8e4057942f012533eaff2a58504716e691a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3ba0c03e33b6ad6744dd6d0d95b528b643575969ef43d8ee7ed376c414852d6e"
                }
            ]
        },
        "1.14.5-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6188,
                "digest": "sha256:8353c5924d937531e1615870a53fb1e20902c2a18a72ad9d6e42d91c070662da"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45868949,
                    "digest": "sha256:cff0731da2e4f4a0ae8329840eb7fed7ea6aac11aecbfa15c6e684caec03920d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097860,
                    "digest": "sha256:3bbeb0ded58d68be17265763fda36a4e1a520234a291d66f370d98a3e0d6e591"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343524,
                    "digest": "sha256:d6159fbed770bb99a219eae06828da55caaa649879843c0b9df18ddda9b698b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356467,
                    "digest": "sha256:7ba732bafeb6b1467fd6908c64c6e8d10ffb27e44e3a25ab4c6c38e8f753baa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53110939,
                    "digest": "sha256:10fbc5ac1d2a89d2b9d45778fc9215409db3c14b82290c3f4bb4afff39a8687f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101793432,
                    "digest": "sha256:c2e196757e90fce40204463d306020446fd893278c8144de1ce518525ec1373e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:c36afc03dc31ef9a92ab8ffa0a0f6b6c9e5c4369fba13f1bdb28d580e32089b7"
                }
            ]
        },
        "1.14.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6193,
                "digest": "sha256:4698251bd62cead9d646f33336580767723060d894fc176ee199e4dd9ca9d3af"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42102504,
                    "digest": "sha256:2566ca784846d2d0d4f9105084d94d68d8ea1a82a06a76c5bcd991ce5a10cda1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443335,
                    "digest": "sha256:c3f976b5a12722f5e6e115157695654d36452b713c7fa64a860f8c9e14859402"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918433,
                    "digest": "sha256:e35142ef6ea6c722cd0397799ab151e5da354eabc784b3acef29def7fa34e9bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46412697,
                    "digest": "sha256:7773eda6b7a8801a6f09bd4ce443b7e88397ed16265ecd37f55af57db56c4658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46059557,
                    "digest": "sha256:148541d4f7791fc2097ecd9226985afe692a5cbc0a0fe7dd9cc20f11701fce5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101793414,
                    "digest": "sha256:fd793e636c87c50da11cb098228976973c79c0ec569f18569352db5b0ebb73a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:23a44b3f1e7e5818fe66cfbc3318eb2e6475c48eade4e6355c6f3f59422d6744"
                }
            ]
        },
        "1.14.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:445821340b24ac580eadc4fd33afc5ccdb0aa25d7b80e46e13d799d90948ebc4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3829,
                "digest": "sha256:708b6bc7ec1ede4bcf0a75ea648a78fa4df70d75fa60fb2779f954ce550dd4c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128214215,
                    "digest": "sha256:386f5cddb797a50b33d215c68e6963c492ce158f4acb6321f10327d11cdf464c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:a7d87c93a7694e8c03415e48886a81f26a4fd10467755ef509e37ab78593adfe"
                }
            ]
        },
        "1.14.6-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3829,
                "digest": "sha256:21f06cdc78c2e8f63eb2f9578238b7359a21607709d7937b0656ba8b0cf6ba82"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127883276,
                    "digest": "sha256:d8027aa82981c680f1f9373799592b3c6aff155e3478933d0d6f9b27a4ef097e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:f8c34e967bd96d1dc8ef7be2c7daaab3c55e298406c59579212d4ef39764541b"
                }
            ]
        },
        "1.14.6-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3829,
                "digest": "sha256:708b6bc7ec1ede4bcf0a75ea648a78fa4df70d75fa60fb2779f954ce550dd4c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128214215,
                    "digest": "sha256:386f5cddb797a50b33d215c68e6963c492ce158f4acb6321f10327d11cdf464c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:a7d87c93a7694e8c03415e48886a81f26a4fd10467755ef509e37ab78593adfe"
                }
            ]
        },
        "1.14.6-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6151,
                "digest": "sha256:62032e02fc06af57d6aed70ba54d9a7e347a8d29e938535a57cf428639a37342"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101814730,
                    "digest": "sha256:2dd3b3146ce0d451e9d13d836660979e1470296bdd854f73a7f09c99a861d0fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:75cdea084a29191b471d4b9374f09fadd523223060ab98f7fb35139ac01acc71"
                }
            ]
        },
        "1.14.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6158,
                "digest": "sha256:eddea6a5888e79c3aad3c9953828cabfe299530122e5907b5abe16b3c469ffd2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111382,
                    "digest": "sha256:323178d00ec2c5eb5ffb9cb696a52eaf8683dcf2eb605c742da2953556f06e37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443881,
                    "digest": "sha256:a7b4e15a79453f6ae10815d79c8f4590aef2f1ac2979c192ff7f1ed0fbf04e60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918490,
                    "digest": "sha256:caf9cb1ef704caf3af8a2ed43dc12884b4f74ac867ce95f60bd8996f51fde770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46415465,
                    "digest": "sha256:a3ae4cf51f1ae7af0566bc381b7fdc344ae6a916df2554156029039b4925d30c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090847,
                    "digest": "sha256:128797a1aa794ca62cfffc928723ecde348b31a22dc1c199c8655a3c2f595866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101814743,
                    "digest": "sha256:865a74e4bd66a0c0012667370951cc00f7ce4e6bd89f1505750d91aeb3c427a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b6a6e7d3786645579556cefe34d7e2e423963d88a639d687134875c636414393"
                }
            ]
        },
        "1.14.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:cb0ab81cbc6e7d0bbbab97f9cf0f80f8c989cbb068ae5a0418efab0770569403",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4626,
                "digest": "sha256:04747854dc13efd424b896754342e0e9b259a2da9e44954f63577a08e572a4e3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103426096,
                    "digest": "sha256:439393a192aa43a36accfc32581760498de3c87f86ab80c381bd20b7af1ac065"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:93fe841a9bb03ceccf299e354aa99da0916a79e383d251475d6a14ece5ae06ce"
                }
            ]
        },
        "1.14.7-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4627,
                "digest": "sha256:9fbbf35af8ad4bbae5238809efa5ecf4362e983b794f3d77e5a71481bf7d25cb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103077093,
                    "digest": "sha256:13464dfd9d2834557f48055f0002be6e3222466d3ce4e98395055ea9569e0e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fa13955f1adfbab93f2776ea7ecf66fe23f7b52a26689a6c75f738c03ffc0857"
                }
            ]
        },
        "1.14.7-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4626,
                "digest": "sha256:04747854dc13efd424b896754342e0e9b259a2da9e44954f63577a08e572a4e3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103426096,
                    "digest": "sha256:439393a192aa43a36accfc32581760498de3c87f86ab80c381bd20b7af1ac065"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:93fe841a9bb03ceccf299e354aa99da0916a79e383d251475d6a14ece5ae06ce"
                }
            ]
        },
        "1.14.7-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7001,
                "digest": "sha256:1da72e7b75c8446c5f1b150391936337535c6037920eec35683e1ad0360c0425"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101813075,
                    "digest": "sha256:e3aefb8ced7e5dc8902b05a4e981d5c52860664857e93cd20eeb9a6a9f893bdf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:19245e1c804ce394d02ea0a265f1991044b1c3b7da1a2a9a3cc49fb2bc4e941c"
                }
            ]
        },
        "1.14.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7009,
                "digest": "sha256:3488004d8fc940aa1d41d1cb4ff2252e38dad51ec49c1bbe304bfbc261bbf67d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111382,
                    "digest": "sha256:323178d00ec2c5eb5ffb9cb696a52eaf8683dcf2eb605c742da2953556f06e37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443881,
                    "digest": "sha256:a7b4e15a79453f6ae10815d79c8f4590aef2f1ac2979c192ff7f1ed0fbf04e60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918490,
                    "digest": "sha256:caf9cb1ef704caf3af8a2ed43dc12884b4f74ac867ce95f60bd8996f51fde770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46415465,
                    "digest": "sha256:a3ae4cf51f1ae7af0566bc381b7fdc344ae6a916df2554156029039b4925d30c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090847,
                    "digest": "sha256:128797a1aa794ca62cfffc928723ecde348b31a22dc1c199c8655a3c2f595866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101813052,
                    "digest": "sha256:de6d87bfbd634eb22ddb4102790ae3bda8ed44d60312adf8ab39c911de5f011c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6fb1fe2e9d9990198a72df7a7c5e7f74aa0ddfbf476bacde256f461cf851842e"
                }
            ]
        },
        "1.14.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:6299fa1694bdde8d07a960a7d4da07edfc712a96f846d79ddf2b086d21cce2cd",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4626,
                "digest": "sha256:180a9fed3e2eb92a08b1368f54a52b5ddb4a88911f59e5ae1a67fc205428068a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103425137,
                    "digest": "sha256:ccafdd70e65ad98952807d42e06e048856f0c083e2978115ab4a4dde9205d7e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7cd1514ccf0f746c697082d73324febe490c127c7642ef083de4a32136a3939c"
                }
            ]
        },
        "1.14.8-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4625,
                "digest": "sha256:e6187cc64cb1014b35099de863b296e6a59546aef541a465dfdfd5c05f8f28bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103084275,
                    "digest": "sha256:7fbe4bfaeb9a94c4c2b1f875658d9ce6a46d695dc6107373367a87317929727c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:db440defc003a79af5c165b105b77a08fc8b2ded3d5f4b9d227f92f9a55c9833"
                }
            ]
        },
        "1.14.8-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4626,
                "digest": "sha256:180a9fed3e2eb92a08b1368f54a52b5ddb4a88911f59e5ae1a67fc205428068a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103425137,
                    "digest": "sha256:ccafdd70e65ad98952807d42e06e048856f0c083e2978115ab4a4dde9205d7e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7cd1514ccf0f746c697082d73324febe490c127c7642ef083de4a32136a3939c"
                }
            ]
        },
        "1.14.8-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7003,
                "digest": "sha256:33653f18406387c7bca4ea11026519e80ab4034ded9a07043965c23a24aa36a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101814416,
                    "digest": "sha256:2a95dabd1962b43403af535fc30416e3ffce951f848e149f7915f30ad8cd7a47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a52a477a2296e0ec893132934b028fc71bb9f9efa31aa4aef0223d3e48b37814"
                }
            ]
        },
        "1.14.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7013,
                "digest": "sha256:aa2d1999cc15ff214e5fbb85b5a7e8fd185b10f0440ac52ce69d8822ad3897c5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111382,
                    "digest": "sha256:323178d00ec2c5eb5ffb9cb696a52eaf8683dcf2eb605c742da2953556f06e37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443881,
                    "digest": "sha256:a7b4e15a79453f6ae10815d79c8f4590aef2f1ac2979c192ff7f1ed0fbf04e60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918490,
                    "digest": "sha256:caf9cb1ef704caf3af8a2ed43dc12884b4f74ac867ce95f60bd8996f51fde770"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46415465,
                    "digest": "sha256:a3ae4cf51f1ae7af0566bc381b7fdc344ae6a916df2554156029039b4925d30c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090847,
                    "digest": "sha256:128797a1aa794ca62cfffc928723ecde348b31a22dc1c199c8655a3c2f595866"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101814364,
                    "digest": "sha256:276be56a54b814d024686579ec8384aa3e5675920cd57553af1db613ce30529f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:4154ca255fba246980e197c646fc54f4ae4892ffcb3d62e764f758e493bc5a1b"
                }
            ]
        },
        "1.14.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1793bf08664a17125e467d420b62948067511129f4ed350333f4d49f5a82e9be",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4649,
                "digest": "sha256:7ef6149a859e02792524f471c6a10e48e8b85494d313b30162983a4bd1ac07c0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103462777,
                    "digest": "sha256:189358c25ed3947ca4fd93936880bae2e9a32a62f75d865d03db0ce536130f63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:47a5f301bfa0a4263c5e4fd043d781161d2579b6d5ac42d3a18287f1452e4194"
                }
            ]
        },
        "1.14.9-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4649,
                "digest": "sha256:c58086be13b6cab4d63b60cb7d74fdcf4646a8521e321d3830b44ca4ecd93b1a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2422063,
                    "digest": "sha256:3cfb62949d9d8613854db4d5fe502a9219c2b55a153043500078a64e880ae234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300593,
                    "digest": "sha256:d1a35d9f7887ef683587262c6f5ed88364f59775ff882c71bde03cc59f382ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3ce21b09ea3d1107df35d9f41a664183faabfc461b8f093ab8e9a34d91e8e71b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103127638,
                    "digest": "sha256:540c97617e5e90f4cd2c0418081bc94756a9e8f2cbdfb77adb67ec82d30df0a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4a8c50a730c8dd57d0b57261b343dc63216d94b33b993f7dc8c72741b576b97a"
                }
            ]
        },
        "1.14.9-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4649,
                "digest": "sha256:7ef6149a859e02792524f471c6a10e48e8b85494d313b30162983a4bd1ac07c0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103462777,
                    "digest": "sha256:189358c25ed3947ca4fd93936880bae2e9a32a62f75d865d03db0ce536130f63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:47a5f301bfa0a4263c5e4fd043d781161d2579b6d5ac42d3a18287f1452e4194"
                }
            ]
        },
        "1.14.9-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7025,
                "digest": "sha256:d297896c3d4a6abbd1e9f765be2aed693397c3e689f9c2e4361fefb52bc927de"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869258,
                    "digest": "sha256:5c0fdcca2cbb5e316a288f39c8c2006f45544568ea04623c036e0b1faa066bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097763,
                    "digest": "sha256:8216e147de931a74896e75f60d0a331dd1438bc1ae4b2d4c29c8017548e8dcbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343130,
                    "digest": "sha256:baf6642121709e17d1419901978da7d29b673d5f936e42ec3241b7d7157e9541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355626,
                    "digest": "sha256:5754411f60ee27fceb92d6380a748ae6d60239063cfa8165419be0ebf9de5834"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53157865,
                    "digest": "sha256:a8771f21930318372521f18351173851be5905de53c0c8a17cb705232d3f5eaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101861483,
                    "digest": "sha256:cba93652a1154faf4bc1fbc72d7d8119e30a53b1a7ba96b1a377ec824ce85fdc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:280ab7d637bc0114e9ee3104a71d800a7d33d48e5c7cf0976bdb55a3c3e6f18d"
                }
            ]
        },
        "1.14.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7033,
                "digest": "sha256:a6bda78b5074fb33329e2c566f4befe8c7aa42ae4565ac7b3ba82fb22af2791e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42111286,
                    "digest": "sha256:1b636fdf37230c276ff1507a9f2b0067182f369cd669d1852bf5b9f5ba3a43bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9443957,
                    "digest": "sha256:9be3bc01c2e26b6c110cf55ed7833949511463f13387c8e708aec5a5c076fd83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3919858,
                    "digest": "sha256:5e1b23b3e38f06003a13d520ed3ec7eee0eafb5efe4a72d5508b3c2b2a7e3393"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46413093,
                    "digest": "sha256:f7ccd0aac82f54618d633ffdb095508b701c4fb50e0454f7591fb2d91a3a8577"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46090797,
                    "digest": "sha256:5485e957cc6df5c401d8bdabc40c7ab3bdf8a056423db46acdfff3c9afe2447a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101861500,
                    "digest": "sha256:70d62b5ffea1029b0a22b3efc0cdf5110f37460ba6848d2b633e886bf318dfe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e255e410125e929ea9f189366b3a08cc39a27b8d8619975c0fdc2e7a4a1375a9"
                }
            ]
        },
        "1.14beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5231c7a00908bf7d44ceb90d3e9ba09c903a2590a8204c92d4e90a6097cfa7a7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3842,
                "digest": "sha256:ce080b72f626870825f62f8a3f0f1b8b25f74eabae87531d05dddd1eadd8cd41"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127188296,
                    "digest": "sha256:1d74c3e922ab9e5b4db86415a07a374be67db8269b7d34237530b64273c964fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:220de316fab22504f517d332a5a35f2c1d8a3c419b0f0036bbece7d56cf624cb"
                }
            ]
        },
        "1.14beta1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3810,
                "digest": "sha256:d979b565cd6a81f62d946775c708938929ece007b431f8e42aae2d9e169fc82a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2378437,
                    "digest": "sha256:99fc70ac0b64db67086f98ceb3942600816eed98046abd6be5ad66f4614a9ca2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300946,
                    "digest": "sha256:a417fcb3850a7455af93e93458e59d7f95bdbb16f1857e99d901142c8d2095eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:a5a6ddf38e7cc67bd2f493ebb023839b57b404cc2299f2326c1771c3d559deda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127192067,
                    "digest": "sha256:b5faee289be172f5b2f99f7b58fb999ad98c36e558042ae81af6e94a814b0329"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e2c8eb30ea3f1b8dfe6e9ee2d67f102021a5b61ab0ad12acbc5e7164596065f9"
                }
            ]
        },
        "1.14beta1-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3842,
                "digest": "sha256:ce080b72f626870825f62f8a3f0f1b8b25f74eabae87531d05dddd1eadd8cd41"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127188296,
                    "digest": "sha256:1d74c3e922ab9e5b4db86415a07a374be67db8269b7d34237530b64273c964fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:220de316fab22504f517d332a5a35f2c1d8a3c419b0f0036bbece7d56cf624cb"
                }
            ]
        },
        "1.14beta1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:43e748bbfc978b1da796b353d8237d8fb824bab7a58977700933d4116298d97d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859700,
                    "digest": "sha256:9bbb41bca8c6254da5088d03354297b1309dc75c2ccc738416025f89709ae5ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096223,
                    "digest": "sha256:239e4acdbc2ab88c89aa359fbab11429ea6d7bd93ea589a22c6bbb833ff82b93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343278,
                    "digest": "sha256:83d6b4707a3c3aff9cb939fc058b869c5412e78c37e43eb0b653565460495537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315591,
                    "digest": "sha256:6e096c4fc8c629edca6da3ce5a9e95288512cb11e3d3d01a6e49078d19c2acca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996899,
                    "digest": "sha256:ca29eebbe47938ede4b91d684551d2cd027b2947a5aa2dffb6b64aee43fef432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101358817,
                    "digest": "sha256:18a0510b8d33d4a2d9c0e1e3fe5d9b28662f0ce40392a47ba93c4f5dd9040b78"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:ec728f3b4051b7ba61c4bb11b95a42249248cbce540ec1edad0412c42df25e1b"
                }
            ]
        },
        "1.14rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fedc38a6a2f72254a3fd0e9ad55f4c54f78e0f69b54414f6512cf909b6a88e21",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.14rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:71245e323c3d20bbd53cf312b9ac487494190313b96b90c6be96dd54d483e2bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127672697,
                    "digest": "sha256:60ae58fbe1c8062c994ea31d7a667688b975f61505de8e8fd430da4eeeba7c5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5efe4c9c597f30794438f12597804b0032a302528e39eb3b4db34a984eb5357a"
                }
            ]
        },
        "1.14rc1-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:71245e323c3d20bbd53cf312b9ac487494190313b96b90c6be96dd54d483e2bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2419554,
                    "digest": "sha256:3a2c5e3c37b2e3d749405512ef3793aa45a2f5c11615d9e9efa80179262cdf27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300566,
                    "digest": "sha256:67cc1a5632a818a23b346143b68a5f38c687431e4c6752c1c065fd45e4eb4cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:321c622e107dd32aa9f0a955846018aa4ff6d211da03fb554cb91f1166eca153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127672697,
                    "digest": "sha256:60ae58fbe1c8062c994ea31d7a667688b975f61505de8e8fd430da4eeeba7c5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5efe4c9c597f30794438f12597804b0032a302528e39eb3b4db34a984eb5357a"
                }
            ]
        },
        "1.14rc1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:6cbfc9fa38b3e0d39a13bc9651ecc0554903c644a7392233173a29be476f6a2a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45859700,
                    "digest": "sha256:9bbb41bca8c6254da5088d03354297b1309dc75c2ccc738416025f89709ae5ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7096223,
                    "digest": "sha256:239e4acdbc2ab88c89aa359fbab11429ea6d7bd93ea589a22c6bbb833ff82b93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343278,
                    "digest": "sha256:83d6b4707a3c3aff9cb939fc058b869c5412e78c37e43eb0b653565460495537"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47315591,
                    "digest": "sha256:6e096c4fc8c629edca6da3ce5a9e95288512cb11e3d3d01a6e49078d19c2acca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52996899,
                    "digest": "sha256:ca29eebbe47938ede4b91d684551d2cd027b2947a5aa2dffb6b64aee43fef432"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101664762,
                    "digest": "sha256:484bc6c7846d4e8a4f750cb73fc9cc4e086cc81a2d67f5a9929f969e54939413"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:bfb18321ce4e5e0c8d5b563982e189855c1f5d5431566cfc5dc2d159f8b3b628"
                }
            ]
        },
        "1.14rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:ba80efb999dbbb3d3533cec5504b8e3d19e5e120c5f2cd6d65b1a0e52f0aa617"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42108370,
                    "digest": "sha256:cc3b08e804cce7e88d9df954b76be506569775afe9cf36316f2fa6c5c9bf3d5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9498229,
                    "digest": "sha256:aa649f4f33c2131c2969e49352ff247ebe5a62a62b83498c3580f883aa35621e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3918766,
                    "digest": "sha256:901c0c16dce9409a6a020f4b874b40fb3f7d302fe0b4e7a80a87a7cfbab7da04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46400091,
                    "digest": "sha256:715a264d83dc76a4a25b4110827c1ac6cc620c406edb6b2089cd1117aec271ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46026938,
                    "digest": "sha256:83537019430dd0ae1391379fd45844061c435eed7fb3492201ad8625537b4337"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 101664816,
                    "digest": "sha256:0ec88b6d34ad0fd72e3152eee3ba55a7b33cfd01814238984f3cc2b463a79c20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b9ef6f36f2f89fc7b63a1d22c6a77400eedb3e68d41dca68327965d454e079e5"
                }
            ]
        },
        "1.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:620e8835c7490027c9cec7f3b74ccc2983e982e67fd183f1ab06f240aff145a7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5145,
                "digest": "sha256:458bd357894f5152518b2e5a4cd09457d868a8ee6dd55076c13031cb581e1798"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2429359,
                    "digest": "sha256:4ee0caa23b369b04827640a4be298bf4ff7bacd030c77e915f5d7fb8f987594a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280814,
                    "digest": "sha256:adc7b26480300ed9c6eddb3c4eb897051a740425806a7edff4973e09fae2bb8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:edba13042e2b42dba9e7f0e57a60855dff15f2890b8d942f61fbdc4852a43854"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102555601,
                    "digest": "sha256:569f61b980fa6c17347bdd52b8f4f66dacf589cdb6f84571808390093f2a7222"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:41b30219dd768cb71a21579edfe4a34d452fe2c5d8ccfb2833a72d7faea2b71b"
                }
            ]
        },
        "1.15-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5160,
                "digest": "sha256:8a51a96b61eb4ae3c92c853443ba04d89ef1fb79f1b1f08077ac3fa716c3d378"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2409178,
                    "digest": "sha256:420c7481a3a76d5d12df768d2745ddbe40357df0af780c756a5a7d1f2a43d288"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280082,
                    "digest": "sha256:34dc3fe42634443664e9a301e5345f499198a7049dd70e0f11435810de78c089"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:7e12d058a2d7a2c4a9a168a40af711d1e6e2eb133d02f486120163550f5b6928"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102489654,
                    "digest": "sha256:f7a2fd674bf4f7cb7f1214cc4234976d6c77bda305274163e1aa8eb0c7e698d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7684b593538f4e4412259a11e8925d2b56d3493b3a4b07cfb8f8f353f663bdd7"
                }
            ]
        },
        "1.15-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4875,
                "digest": "sha256:3e128beee6639733433ec43341d8f31d57e95f201fe411688ffc8b8781b4a6f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2424145,
                    "digest": "sha256:e160e00eb35d5bc2373770873fbc9c8f5706045b0b06bfd1c364fcf69f02e9fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280535,
                    "digest": "sha256:c73bdfb79e2ecf7b6527a878b9929f003e95d3c47c3c719e35ca7cdbe13aaf58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:63d8dc16cb49794633062ae112036c0b892afe49ae5310169c008441c0228397"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102856933,
                    "digest": "sha256:377991ac08f992340c4f54e866fec4f19c36e7fbec81372ef8ef2dd87e87636d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:490a023aa54f2b64934eb9b9316c85da4f4256b4a7359476e51e98bec36c59ea"
                }
            ]
        },
        "1.15-alpine3.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5145,
                "digest": "sha256:458bd357894f5152518b2e5a4cd09457d868a8ee6dd55076c13031cb581e1798"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2429359,
                    "digest": "sha256:4ee0caa23b369b04827640a4be298bf4ff7bacd030c77e915f5d7fb8f987594a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280814,
                    "digest": "sha256:adc7b26480300ed9c6eddb3c4eb897051a740425806a7edff4973e09fae2bb8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:edba13042e2b42dba9e7f0e57a60855dff15f2890b8d942f61fbdc4852a43854"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102555601,
                    "digest": "sha256:569f61b980fa6c17347bdd52b8f4f66dacf589cdb6f84571808390093f2a7222"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:41b30219dd768cb71a21579edfe4a34d452fe2c5d8ccfb2833a72d7faea2b71b"
                }
            ]
        },
        "1.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7012,
                "digest": "sha256:7ee80a8eae2d12f7219fd9870abcabbab360a62163bb95bd940c8f48394eb2ee"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45917250,
                    "digest": "sha256:ff16e408fd8b8191145782047ebc0c76176550d844743a679143d53a164bea21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7124233,
                    "digest": "sha256:7701a3a4dc54422c371762f5416afea6835e02e9db10fd686f73159ec84ec2f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343793,
                    "digest": "sha256:b8651c1854c791264fe60acc8ab39e9b914dc3258a9aa42509f1c35ce32a880d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356980,
                    "digest": "sha256:f14bda9bdbd404cfcf13425f9c6273b254196ada60d6315690312688674624a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53222447,
                    "digest": "sha256:554e943d351eb3a69051efb53627557f7db7ba465d51dd6cdec7b91c291f379a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97990301,
                    "digest": "sha256:6f29f886683ca688a3da2bf0fcbfcfda50601ee3e76610cfc18c0517d88c4d33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:cbf61c290857f67f3be8f77f8d5bce3607f16df52c37caee397a5c87bbfa52ac"
                }
            ]
        },
        "1.15-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:47ef947e476bcd81b3581a9e40cb0306a14ccabde8434ff8d93c595f9006bfef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.15-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:9a3797aa3458bb0733fd2f6a002c7a688d7f2ec8af338c2247edcea84b7db505"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128212279,
                    "digest": "sha256:905b6bc0cd667c0cec2e8d5a9386f745e83dd870a3312bbcb21817d5cee78e99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:78fe4958217fe4fceaa0854e279530077ce2ec74fee8a786dcb3e9b58a8bb2d2"
                }
            ]
        },
        "1.15-rc-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:9a3797aa3458bb0733fd2f6a002c7a688d7f2ec8af338c2247edcea84b7db505"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128212279,
                    "digest": "sha256:905b6bc0cd667c0cec2e8d5a9386f745e83dd870a3312bbcb21817d5cee78e99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:78fe4958217fe4fceaa0854e279530077ce2ec74fee8a786dcb3e9b58a8bb2d2"
                }
            ]
        },
        "1.15-rc-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6153,
                "digest": "sha256:0e32b4a4edf0ac36fe597966c2b739ed61a54bb79886dfffd18cf4cf097f4853"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97967933,
                    "digest": "sha256:89aafea0748830cc72686faf57d95552211d3be3371dd71e2d6b96db90990e18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:de32b2986a8e65591c32def1f8bc925dba0ee8096a11cac4998bb0293cdd44bd"
                }
            ]
        },
        "1.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7043,
                "digest": "sha256:2eadaabdb3e6c374ee24db13b85c40d9d8e153e0cdcf4e01e2f61bc3233110f8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42120108,
                    "digest": "sha256:b3cc5e47308fe8ded537d7ffdcaba46fcdf803cfe9878bd9264754a50eaa128b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9950872,
                    "digest": "sha256:dcf69efd3b547fe4dc472fd34a54c466b82ce51b7f04957779206b5ea0ef9160"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921255,
                    "digest": "sha256:fb7430ae4c6b93ca669cc72566a38f952b74dece32c5897c46e51a5907bd5a0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46125851,
                    "digest": "sha256:ef5849792410ce49abbe1ff9b523687c9a52997076c1137a38ade9efa2c1e2a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46178649,
                    "digest": "sha256:e88cd8c8de08355d769340f25487b502b62783eea468cccab657973ad636ae33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97990276,
                    "digest": "sha256:a78b9c16c6a56390dba633292bd446fc09e17838e3f8d8fd23ce6789b81528a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d9678d96207c64644e9cf72cf2b05c71ff79dfe5dc699009538d219e9a7b880e"
                }
            ]
        },
        "1.15.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:bb0a61f031fa93071776210dfcec3fae18c29e17963785037275348b2b06165b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.15.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4618,
                "digest": "sha256:76e28a814f43882333589cd07111312c9daf89e9a60ebebb11eb2b3690a97def"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102839012,
                    "digest": "sha256:ad3de4c8f84a1194767d1652bd8f81db1c456ac5b318f7e87a59cd1a43f1da4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:975320f14d75857f63355ec115063f0207b3a3e673ce48b44cd3ab688f9731db"
                }
            ]
        },
        "1.15.0-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4618,
                "digest": "sha256:76e28a814f43882333589cd07111312c9daf89e9a60ebebb11eb2b3690a97def"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102839012,
                    "digest": "sha256:ad3de4c8f84a1194767d1652bd8f81db1c456ac5b318f7e87a59cd1a43f1da4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:975320f14d75857f63355ec115063f0207b3a3e673ce48b44cd3ab688f9731db"
                }
            ]
        },
        "1.15.0-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6982,
                "digest": "sha256:8326323820864a3b9d8c523d8e85568f889e61f4d2ad7b872385d6802bfe04bb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97968470,
                    "digest": "sha256:7807cad51ce740efd2a8ab6852ce6cd4e2136c023969386991a48c05f47318d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3218a749a06d9e355ccdf4a570c59dc93665b15ff8ebc78669c269d4f4875de9"
                }
            ]
        },
        "1.15.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c177b29a68872d832c881ea236a641af29c51d191bd074e10f760b9023e7789b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.15.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4626,
                "digest": "sha256:99ce430b7657a31c08a263e9e3aa87b140f9ce2113b97487c59936f24d0dc7f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102840820,
                    "digest": "sha256:85596d578f4ae570939137365cf1f3d94960e3af202a8c142c7f1ffa7e432b89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c7334a346aceab07469b5dfe6f95ccfc097ff3b9f6a4297fd3433abbd79ea413"
                }
            ]
        },
        "1.15.1-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4626,
                "digest": "sha256:99ce430b7657a31c08a263e9e3aa87b140f9ce2113b97487c59936f24d0dc7f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2406763,
                    "digest": "sha256:52278dd8e57993669c5b72a9620e89bebdc098f2af2379caaa8945f7403f77a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281892,
                    "digest": "sha256:8512c25ce227edddad11326504a9bab47e83f8b61c090c9dc95882452984ac62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:87928ee7e6c788309b46621e351321410e4dde5374869ffa75f404b19e0e0c12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102840820,
                    "digest": "sha256:85596d578f4ae570939137365cf1f3d94960e3af202a8c142c7f1ffa7e432b89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c7334a346aceab07469b5dfe6f95ccfc097ff3b9f6a4297fd3433abbd79ea413"
                }
            ]
        },
        "1.15.1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7005,
                "digest": "sha256:0b349506b9ce8781762edc540063e112edb7490760634e3d87eb867316f9ea87"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45869261,
                    "digest": "sha256:e7cf402ee4b1ba67e92813d50297a082bbdbdd4d47f6aeb62f2316b81d5dc843"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7097820,
                    "digest": "sha256:cff6bd4a89fc21d80ca6924320f86708f35ddea71c7aa34a408a5b64257c764e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343353,
                    "digest": "sha256:e48f5852a753b7731e5d374567ae9b64e309805758f336c76d5f13bb67c94e20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47355829,
                    "digest": "sha256:e58a93b33dd4d533cc1e04eab8045940d69cb287134aa90c982e3d248739044e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53140891,
                    "digest": "sha256:0fb05471d9930e275bf9cac0b1bb0b93b8dde80ac8dd073dcb65c384d6d9e2ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97964440,
                    "digest": "sha256:ba5d0e47544895e4669c2e095d62b6fbfeeb29a1025eeaec8c086beea96645e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ef9666373ee20cebcc2e0270572e3b3e2b7dd7363c9912c0503576dccdf61745"
                }
            ]
        },
        "1.15.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:27c4d8072caa52a9213090e096cc25086352c3f61ad2de308de5c556394a7c00",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.15.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5173,
                "digest": "sha256:35e576ad731a1e4f622d884d5c271cd44e159cbe1a735102d8100cee817c64d5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2424108,
                    "digest": "sha256:07389e51ea05e1c9a3cb0ef92d31181f2afa1e445207ad99ffd8a94d6d6af295"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280526,
                    "digest": "sha256:a60891e1263b2984a8f23c01f468bc717e4ed53012265c3d898ebdde9178b3f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:cd9c885d816d12af70fab6cfcb656be2aaec3481f10aa9b8381e4c8b1ddb8c2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102445514,
                    "digest": "sha256:8086377df255ef208b761c16a7feedd48309013fcca45f689614ecf9afab61af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8715c00614c3ba157ddf9dc180c8ec02c2e4a5ff4892be1e0dec4b20ff9c2865"
                }
            ]
        },
        "1.15.10-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5173,
                "digest": "sha256:f46971c04b14edcb5be333b1a7468730fb96dfa5a0271737fccfc7ee8686b469"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2408269,
                    "digest": "sha256:b04429a2165487924dcbfedfff74fa262e6828327d04bb4b1c6a477096f5010e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280073,
                    "digest": "sha256:d0b725919da0175e4c01c41441c29fff6f5ec6c0c4e37417f70120f08f96acfc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3ad1f51d8714e34d5e746102b7176e77e8142ecf71f4c68d82354285a0bd6d16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102462580,
                    "digest": "sha256:d5d9a84aba5c985724e2f9d0049434534ed654c74b46945f50cc2af08567b9b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:bc655d7de77ca2ce887998caba1ec52a0bd3f8aa5453bb583ba83449613e96c5"
                }
            ]
        },
        "1.15.10-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5173,
                "digest": "sha256:35e576ad731a1e4f622d884d5c271cd44e159cbe1a735102d8100cee817c64d5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2424108,
                    "digest": "sha256:07389e51ea05e1c9a3cb0ef92d31181f2afa1e445207ad99ffd8a94d6d6af295"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280526,
                    "digest": "sha256:a60891e1263b2984a8f23c01f468bc717e4ed53012265c3d898ebdde9178b3f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:cd9c885d816d12af70fab6cfcb656be2aaec3481f10aa9b8381e4c8b1ddb8c2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102445514,
                    "digest": "sha256:8086377df255ef208b761c16a7feedd48309013fcca45f689614ecf9afab61af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8715c00614c3ba157ddf9dc180c8ec02c2e4a5ff4892be1e0dec4b20ff9c2865"
                }
            ]
        },
        "1.15.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7097,
                "digest": "sha256:99a3bda8b2155bd29764a281a1cd81b583da24f6df68ddf51dbe7b124a668a4e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45915428,
                    "digest": "sha256:0bf0c5f21d801f530938b2464483aaad40947de697c29cedece44096ead1522c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7123902,
                    "digest": "sha256:6ec8c35c4e8e932b85e0233ff1c20dcdd8bc13a0238128bcfcde181c0b04b037"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343731,
                    "digest": "sha256:08d88df2bbeddb232fbd4bf0ffd8efd62285f56f8eb6e2007c1a89ecfdc0f3ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356820,
                    "digest": "sha256:f670f49de9ae76f27610a984da50b932e5dc0d3fecb1935aea3c51a2714e828f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53205204,
                    "digest": "sha256:e35812d0a2aaaa69aad36acada0085eebcccbe88c61eb0f85cfbb8cf50f8587b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97947348,
                    "digest": "sha256:2788d44a948da9d71f62248e9dc807c21b14a52f04efcf762e12a2af9647a613"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6f952e828dec94a9e57c9effddab7454a3f09c05849c244a392ca80fa630ef77"
                }
            ]
        },
        "1.15.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7128,
                "digest": "sha256:e4b7248fae6d325b52c9d3981450df2a9e793ae2a919f056dfc4321c15ef91b3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42120250,
                    "digest": "sha256:80ad3ae4821828f32ce9b3e0f76c3c8f157a7f111e64ffad3ba40287904dfc63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9939722,
                    "digest": "sha256:24b448d9cdc0300784b14c4a254300d86c316aca568d8b068cdc585ff456ccca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921214,
                    "digest": "sha256:3845e857248fe8de10609204e4eb4db8efcbb33c6a2f9e10b7d3efe4c3c625be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46127566,
                    "digest": "sha256:2026eb34d858c1a9d59647eb6a6d3c28cd258eaa588cf3b99b35ac0d590fab2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46161269,
                    "digest": "sha256:0d37c2242c90d8e377be6369d94029ccdea2a32d84d0ec7d3906ca755748888c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97947331,
                    "digest": "sha256:932eaea3b917dcb880164aba5660fc30a7f9a740fc29548e4579180b632c3d62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:09ee84beb9a7dd3388527f2297f89ebe6ae39902506de1d4ac20da306c911be3"
                }
            ]
        },
        "1.15.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c474091d5853e6bf97605151adff4d736d7ceb0d6513f2f0ac314bd605ae1998",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.15.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5158,
                "digest": "sha256:33d9655caf28379c11033c35d7975485116aa4ab30983fcd6e446635aa676621"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2424145,
                    "digest": "sha256:e160e00eb35d5bc2373770873fbc9c8f5706045b0b06bfd1c364fcf69f02e9fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280532,
                    "digest": "sha256:dfb6bd423db0b63fdc83c72eae7ef401cb2fb9eaa63961c71a867ff26bfe422f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:835b667ae68ff940439602ffbabae6e923c687cb56c62a793f23ddca67584049"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102449355,
                    "digest": "sha256:1a7cbf0faf43a24e46df047b7826c71454578c4d8f703d817394840826ef6e69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:51e9033208f210ec2148d9c9c2e33bcbe3951888c5d1973b392ffc9d3b69cfa1"
                }
            ]
        },
        "1.15.11-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5158,
                "digest": "sha256:2dd34081c532cdf7efc5b365be7a67f8e460a18a6a852e5fb5f6f66628bc87ee"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2409178,
                    "digest": "sha256:420c7481a3a76d5d12df768d2745ddbe40357df0af780c756a5a7d1f2a43d288"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280078,
                    "digest": "sha256:a884c3a8500725e0f08f924091ec61ae3e3acee3b0ffe5839b06f874ee63dc08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:71f87f08a98de1e7cb636267b626d4e644775ff7962ea1ff9b4813f740b89e67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102463625,
                    "digest": "sha256:bb3614d078ad2d67578cb4131bea8bb072eda53e4e74ba793487c69d7d25cc4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:c017d4f59359669e8455fb6a3089560624b070dbdbaed19aadec34cd8a4ebf01"
                }
            ]
        },
        "1.15.11-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5158,
                "digest": "sha256:33d9655caf28379c11033c35d7975485116aa4ab30983fcd6e446635aa676621"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2424145,
                    "digest": "sha256:e160e00eb35d5bc2373770873fbc9c8f5706045b0b06bfd1c364fcf69f02e9fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280532,
                    "digest": "sha256:dfb6bd423db0b63fdc83c72eae7ef401cb2fb9eaa63961c71a867ff26bfe422f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:835b667ae68ff940439602ffbabae6e923c687cb56c62a793f23ddca67584049"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102449355,
                    "digest": "sha256:1a7cbf0faf43a24e46df047b7826c71454578c4d8f703d817394840826ef6e69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:51e9033208f210ec2148d9c9c2e33bcbe3951888c5d1973b392ffc9d3b69cfa1"
                }
            ]
        },
        "1.15.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7003,
                "digest": "sha256:c16502de1a33122f1f0fb5b880db534eda3b300652b010d96ce872ec9aa2d69d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45915598,
                    "digest": "sha256:de0ca59eb81518ffd92fbcd386251018f950dc16b1bd8ad2e642184db76be2a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7124181,
                    "digest": "sha256:ed23bfa8aaeab64a1ca00d3bead680f790be28326d14305705b2ee5227b4f2b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343784,
                    "digest": "sha256:20a12824e68a5072613049fad15fc8f0d209526ddd9d85787cc60d1b0d5073c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356313,
                    "digest": "sha256:da73a12ad465a34e484807c20e78927bd0dbd29a487e06024dbf3a1e21ba8a39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53205297,
                    "digest": "sha256:e2edff18c3f8654da2fb892bb50883c5f5f205d704da1723f1d4e6d8a2bc8042"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97965517,
                    "digest": "sha256:91a346baaacbd0063ca96d9ce6920ab352016a0c22ded3c8eb5f1ab97e50b564"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:20785746fa90ea8c0ded89e2aeae315419d62dfa21331814ccf185e9bd4cde2f"
                }
            ]
        },
        "1.15.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7037,
                "digest": "sha256:f1f54c461e1b2ebd14b5d1661eb45adb1dcdad1afc00b98fa528caeea612c93f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42120304,
                    "digest": "sha256:533b099902e847172558070703785f6c70f0c6912fefcfd283f3b0e3ebc306c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9939854,
                    "digest": "sha256:0ba1eda48434fdafc900e072c3d26755397eb33edd3403430befc06bf5ebfe0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921286,
                    "digest": "sha256:a436419ab83cc68fde8e9c3d51a90fcb8c9874db9093ff594532fd4f5f4e54b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46127498,
                    "digest": "sha256:74799456f267bce926877994b8951d39cba1f44f7784ba0eabc57c0eaf514db7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46161473,
                    "digest": "sha256:c78327977c1ea85eeefcbe3e401661c86a718c6ad6e83fa5d18a576beac33015"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97965516,
                    "digest": "sha256:6c66378b4295686e0a8d1cf20ea200b7145b9cc50b2a9fb36b57f93cbd949100"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:77bc47c46543b5bff77a982bcd2d4f8b0c76fc25f150440963c63d2987b6b52d"
                }
            ]
        },
        "1.15.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:4856d5b1585ecf01a3d48017273f1403202b41e737eeebcc6866980316ab7e36",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.15.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5159,
                "digest": "sha256:e91857633eacc5b505b1674cfa3ec2533952528a7f4c90ca4ecd9f4e7e53ff6f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2424145,
                    "digest": "sha256:e160e00eb35d5bc2373770873fbc9c8f5706045b0b06bfd1c364fcf69f02e9fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280537,
                    "digest": "sha256:7339ea1d6bf57b602a207a1e2f24e2f2d6d0fef53ac31afc17a550368c53e63b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c586fedb7a1526f50c1bb5ccadd41167254abbdf9cc445264c5a2cda55bff7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102473184,
                    "digest": "sha256:a8125ba9ca7097db538652c7ee63c7e809bff9269a2a10756afde64d3695cda8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7ce464823dd133b47bf37a67036062328c011e0258a81d63d1e71b6243f93dca"
                }
            ]
        },
        "1.15.12-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5157,
                "digest": "sha256:364f0bdd60b4b47885e98a458fad566ab00fcb273d459e04372a619416896c56"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2409178,
                    "digest": "sha256:420c7481a3a76d5d12df768d2745ddbe40357df0af780c756a5a7d1f2a43d288"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280079,
                    "digest": "sha256:73ab4a5418648c6773cb5cf767263feab5cf1fa07373a09a69f446dd7aaa539b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:6deabb5f1fcb454ad8c41d861ec0a41200d384f180ca61119f9fab681ed68250"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102482383,
                    "digest": "sha256:80781d6859f7f61af72b1f225e296969e51eff172ad4b0cb9c6c6235f6c96786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d755a61372cdd978528e6579427e9c69be5c760e82fd5f8504283d9562377dda"
                }
            ]
        },
        "1.15.12-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5159,
                "digest": "sha256:e91857633eacc5b505b1674cfa3ec2533952528a7f4c90ca4ecd9f4e7e53ff6f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2424145,
                    "digest": "sha256:e160e00eb35d5bc2373770873fbc9c8f5706045b0b06bfd1c364fcf69f02e9fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280537,
                    "digest": "sha256:7339ea1d6bf57b602a207a1e2f24e2f2d6d0fef53ac31afc17a550368c53e63b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c586fedb7a1526f50c1bb5ccadd41167254abbdf9cc445264c5a2cda55bff7f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102473184,
                    "digest": "sha256:a8125ba9ca7097db538652c7ee63c7e809bff9269a2a10756afde64d3695cda8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7ce464823dd133b47bf37a67036062328c011e0258a81d63d1e71b6243f93dca"
                }
            ]
        },
        "1.15.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7005,
                "digest": "sha256:7ad54f4f4daeb1531d8ef30a8a70e58565a1314013db06fd5c14d82c60642281"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45916922,
                    "digest": "sha256:89475607b1df9fc7eec7efe2fa845738a16cee3e92c1bb864c1f5a93b8303bc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7124249,
                    "digest": "sha256:88447de5eb3eca4a1d96b6980b44d82ac19d121f6b77b826989f8d611fd001b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9343721,
                    "digest": "sha256:b25b14665fd0185f2f3b90a8d1825fc8ef9f330e1aea452f60fd70cdcfe99bf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 47356403,
                    "digest": "sha256:ba65a331625e51ba8f0e1af07dcb97c0583204dda094b5da79672fdf554129c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 53205162,
                    "digest": "sha256:e28c817b2d28b5d681af2625b1d016403efdb2680145a772baa567b9668da9f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97971252,
                    "digest": "sha256:fa494cbffd773955e9a6d26d291cc08f286ac9e91322605aca76651f0d589a82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:81c7832dbcf3f4f3123ae06c8b2450c35a170fc9f3d84b96eb78e6e1104c5dfa"
                }
            ]
        },
        "1.15.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7034,
                "digest": "sha256:8128f6e3091336e07555bb5928d1f2e238029ba2b3a9751d54f5a4dbf47256fb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42120307,
                    "digest": "sha256:55b9a6b6b2552c5b2eac0a316e75a7bc18092819ee25c4f1d4d54700bcc1d3dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9950803,
                    "digest": "sha256:6ba756a0ca8996787a145d62543ecf7cec523a638705be132f442d2013655149"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3921169,
                    "digest": "sha256:c61945aef6a8fee06fbe4dccead7cbad9da46ba174cee1eae1f813541ddb76b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46125973,
                    "digest": "sha256:0ad0df1f1fa0c631401a3729be99927a3afcaa022e4dd89e0acc026805d6fd2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46161293,
                    "digest": "sha256:f715490688df009fde145956077633ac3ba88d28e792c423c27e175c0b286abb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 97971235,
                    "digest": "sha256:39ff6ca0aa21d2493e5e5670fa9de820b5e4994ec17bd7cbcf48376760280ae7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:67716e4fe6c3017b2f4553fd5b4e6880e5e70d987e7f5609ad4cd9879bd90e12"
                }
            ]
        },
        "1.15.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:30f0ea705d7fcb3c94199ca37339f04634d402033ada408bd201f886281cb873",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                }
            ]
        },
        "1.15.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5134,
                "digest": "sha256:e917d356c0c261f977214ff35cc536d7509de7a0e406fa49d6a2e1235033d8d0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2427917,
                    "digest": "sha256:136482bf81d1fa351b424ebb8c7e34d15f2c5ed3fc0b66b544b8312bda3d52d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280816,
                    "digest": "sha256:d6b6a653704b1a4485c078013594b13c6802997d9ee3aaadab95a9f5537d90fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1d159d413b624554c6f7f204b6631e5e0ffa0d8dcaecc7c187ee02b1a3046c8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102549049,
                    "digest": "sha256:eed3670bafc025989d8e039e521bcd4b8830bef18491e7ae8ebce779d3c8b487"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b968039e5dd59171a3b67bf927a9b06e1f633da90040c4dbc22610c7ce8bc12a"
                }
            ]
        },
        "1.15.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5160,
                "digest": "sha256:8a51a96b61eb4ae3c92c853443ba04d89ef1fb79f1b1f08077ac3fa716c3d378"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2409178,
                    "digest": "sha256:420c7481a3a76d5d12df768d2745ddbe40357df0af780c756a5a7d1f2a43d288"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280082,
                    "digest": "sha256:34dc3fe42634443664e9a301e5345f499198a7049dd70e0f11435810de78c089"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:7e12d058a2d7a2c4a9a168a40af711d1e6e2eb133d02f486120163550f5b6928"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102489654,
                    "digest": "sha256:f7a2fd674bf4f7cb7f1214cc4234976d6c77bda305274163e1aa8eb0c7e698d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7684b593538f4e4412259a11e8925d2b56d3493b3a4b07cfb8f8f353f663bdd7"
                }
            ]
        }
    },
    "tags": [
        "1",
        "1-alpine",
        "1-alpine3.10",
        "1-alpine3.11",
        "1-alpine3.12",
        "1-alpine3.13",
        "1-alpine3.14",
        "1-alpine3.15",
        "1-alpine3.16",
        "1-alpine3.17",
        "1-alpine3.18",
        "1-alpine3.19",
        "1-alpine3.20",
        "1-alpine3.9",
        "1-bookworm",
        "1-bullseye",
        "1-buster",
        "1-jessie",
        "1-onbuild",
        "1-stretch",
        "1.10",
        "1.10-rc",
        "1.10-rc-stretch",
        "1.10-stretch",
        "1.10.0",
        "1.10.0-stretch",
        "1.10.1",
        "1.10.1-stretch",
        "1.10.2",
        "1.10.2-stretch",
        "1.10.3",
        "1.10.3-stretch",
        "1.10.4",
        "1.10.4-stretch",
        "1.10.5",
        "1.10.5-stretch",
        "1.10.6",
        "1.10.6-stretch",
        "1.10.7",
        "1.10.7-stretch",
        "1.10.8",
        "1.10.8-stretch",
        "1.10beta2",
        "1.10beta2-stretch",
        "1.10rc1",
        "1.10rc1-stretch",
        "1.10rc2",
        "1.10rc2-stretch",
        "1.11",
        "1.11-alpine",
        "1.11-alpine3.10",
        "1.11-alpine3.9",
        "1.11-buster",
        "1.11-rc",
        "1.11-rc-stretch",
        "1.11-stretch",
        "1.11.0",
        "1.11.0-stretch",
        "1.11.1",
        "1.11.1-stretch",
        "1.11.10",
        "1.11.10-alpine",
        "1.11.10-alpine3.9",
        "1.11.10-stretch",
        "1.11.11",
        "1.11.11-alpine",
        "1.11.11-alpine3.10",
        "1.11.11-alpine3.9",
        "1.11.11-stretch",
        "1.11.12",
        "1.11.12-alpine",
        "1.11.12-alpine3.10",
        "1.11.12-alpine3.9",
        "1.11.12-buster",
        "1.11.12-stretch",
        "1.11.13",
        "1.11.13-alpine",
        "1.11.13-alpine3.10",
        "1.11.13-alpine3.9",
        "1.11.13-buster",
        "1.11.13-stretch",
        "1.11.2",
        "1.11.2-stretch",
        "1.11.3",
        "1.11.3-stretch",
        "1.11.4",
        "1.11.4-stretch",
        "1.11.5",
        "1.11.5-alpine",
        "1.11.5-alpine3.9",
        "1.11.5-stretch",
        "1.11.6",
        "1.11.6-alpine",
        "1.11.6-alpine3.9",
        "1.11.6-stretch",
        "1.11.7",
        "1.11.7-alpine",
        "1.11.7-alpine3.9",
        "1.11.7-stretch",
        "1.11.8",
        "1.11.8-alpine",
        "1.11.8-alpine3.9",
        "1.11.8-stretch",
        "1.11.9",
        "1.11.9-alpine",
        "1.11.9-alpine3.9",
        "1.11.9-stretch",
        "1.11beta1",
        "1.11beta1-stretch",
        "1.11beta2",
        "1.11beta2-stretch",
        "1.11beta3",
        "1.11beta3-stretch",
        "1.11rc1",
        "1.11rc1-stretch",
        "1.11rc2",
        "1.11rc2-stretch",
        "1.12",
        "1.12-alpine",
        "1.12-alpine3.10",
        "1.12-alpine3.11",
        "1.12-alpine3.9",
        "1.12-buster",
        "1.12-rc",
        "1.12-rc-stretch",
        "1.12-stretch",
        "1.12.0",
        "1.12.0-alpine",
        "1.12.0-alpine3.9",
        "1.12.0-stretch",
        "1.12.1",
        "1.12.1-alpine",
        "1.12.1-alpine3.9",
        "1.12.1-stretch",
        "1.12.10",
        "1.12.10-alpine",
        "1.12.10-alpine3.10",
        "1.12.10-alpine3.9",
        "1.12.10-buster",
        "1.12.10-stretch",
        "1.12.11",
        "1.12.11-alpine",
        "1.12.11-alpine3.10",
        "1.12.11-alpine3.9",
        "1.12.11-buster",
        "1.12.11-stretch",
        "1.12.12",
        "1.12.12-alpine",
        "1.12.12-alpine3.10",
        "1.12.12-alpine3.9",
        "1.12.12-buster",
        "1.12.12-stretch",
        "1.12.13",
        "1.12.13-alpine",
        "1.12.13-alpine3.10",
        "1.12.13-alpine3.9",
        "1.12.13-buster",
        "1.12.13-stretch",
        "1.12.14",
        "1.12.14-alpine",
        "1.12.14-alpine3.10",
        "1.12.14-alpine3.11",
        "1.12.14-alpine3.9",
        "1.12.14-buster",
        "1.12.14-stretch",
        "1.12.15",
        "1.12.15-alpine",
        "1.12.15-alpine3.10",
        "1.12.15-alpine3.11",
        "1.12.15-buster",
        "1.12.15-stretch",
        "1.12.16",
        "1.12.16-alpine",
        "1.12.16-alpine3.10",
        "1.12.16-alpine3.11",
        "1.12.16-buster",
        "1.12.16-stretch",
        "1.12.17",
        "1.12.17-alpine",
        "1.12.17-alpine3.10",
        "1.12.17-alpine3.11",
        "1.12.17-buster",
        "1.12.17-stretch",
        "1.12.2",
        "1.12.2-alpine",
        "1.12.2-alpine3.9",
        "1.12.2-stretch",
        "1.12.3",
        "1.12.3-alpine",
        "1.12.3-alpine3.9",
        "1.12.3-stretch",
        "1.12.4",
        "1.12.4-alpine",
        "1.12.4-alpine3.9",
        "1.12.4-stretch",
        "1.12.5",
        "1.12.5-alpine",
        "1.12.5-alpine3.9",
        "1.12.5-stretch",
        "1.12.6",
        "1.12.6-alpine",
        "1.12.6-alpine3.10",
        "1.12.6-alpine3.9",
        "1.12.6-stretch",
        "1.12.7",
        "1.12.7-alpine",
        "1.12.7-alpine3.10",
        "1.12.7-alpine3.9",
        "1.12.7-buster",
        "1.12.7-stretch",
        "1.12.8",
        "1.12.8-alpine",
        "1.12.8-alpine3.10",
        "1.12.8-alpine3.9",
        "1.12.8-buster",
        "1.12.8-stretch",
        "1.12.9",
        "1.12.9-alpine",
        "1.12.9-alpine3.10",
        "1.12.9-alpine3.9",
        "1.12.9-buster",
        "1.12.9-stretch",
        "1.12beta1",
        "1.12beta1-stretch",
        "1.12beta2",
        "1.12beta2-stretch",
        "1.12rc1",
        "1.12rc1-stretch",
        "1.13",
        "1.13-alpine",
        "1.13-alpine3.10",
        "1.13-alpine3.11",
        "1.13-alpine3.12",
        "1.13-buster",
        "1.13-rc",
        "1.13-rc-alpine",
        "1.13-rc-alpine3.10",
        "1.13-rc-buster",
        "1.13-stretch",
        "1.13.0",
        "1.13.0-alpine",
        "1.13.0-alpine3.10",
        "1.13.0-buster",
        "1.13.0-stretch",
        "1.13.1",
        "1.13.1-alpine",
        "1.13.1-alpine3.10",
        "1.13.1-buster",
        "1.13.1-stretch",
        "1.13.10",
        "1.13.10-alpine",
        "1.13.10-alpine3.10",
        "1.13.10-alpine3.11",
        "1.13.10-buster",
        "1.13.10-stretch",
        "1.13.11",
        "1.13.11-alpine",
        "1.13.11-alpine3.10",
        "1.13.11-alpine3.11",
        "1.13.11-buster",
        "1.13.11-stretch",
        "1.13.12",
        "1.13.12-alpine",
        "1.13.12-alpine3.11",
        "1.13.12-alpine3.12",
        "1.13.12-buster",
        "1.13.12-stretch",
        "1.13.13",
        "1.13.13-alpine",
        "1.13.13-alpine3.11",
        "1.13.13-alpine3.12",
        "1.13.13-buster",
        "1.13.13-stretch",
        "1.13.14",
        "1.13.14-alpine",
        "1.13.14-alpine3.11",
        "1.13.14-alpine3.12",
        "1.13.14-buster",
        "1.13.14-stretch",
        "1.13.15",
        "1.13.15-alpine",
        "1.13.15-alpine3.11",
        "1.13.15-alpine3.12",
        "1.13.15-buster",
        "1.13.15-stretch",
        "1.13.2",
        "1.13.2-alpine",
        "1.13.2-alpine3.10",
        "1.13.2-buster",
        "1.13.2-stretch",
        "1.13.3",
        "1.13.3-alpine",
        "1.13.3-alpine3.10",
        "1.13.3-buster",
        "1.13.3-stretch",
        "1.13.4",
        "1.13.4-alpine",
        "1.13.4-alpine3.10",
        "1.13.4-buster",
        "1.13.4-stretch",
        "1.13.5",
        "1.13.5-alpine",
        "1.13.5-alpine3.10",
        "1.13.5-alpine3.11",
        "1.13.5-buster",
        "1.13.5-stretch",
        "1.13.6",
        "1.13.6-alpine",
        "1.13.6-alpine3.10",
        "1.13.6-alpine3.11",
        "1.13.6-buster",
        "1.13.6-stretch",
        "1.13.7",
        "1.13.7-alpine",
        "1.13.7-alpine3.10",
        "1.13.7-alpine3.11",
        "1.13.7-buster",
        "1.13.7-stretch",
        "1.13.8",
        "1.13.8-alpine",
        "1.13.8-alpine3.10",
        "1.13.8-alpine3.11",
        "1.13.8-buster",
        "1.13.8-stretch",
        "1.13.9",
        "1.13.9-alpine",
        "1.13.9-alpine3.10",
        "1.13.9-alpine3.11",
        "1.13.9-buster",
        "1.13.9-stretch",
        "1.13beta1",
        "1.13beta1-alpine",
        "1.13beta1-alpine3.10",
        "1.13beta1-buster",
        "1.13rc1",
        "1.13rc1-alpine",
        "1.13rc1-alpine3.10",
        "1.13rc1-buster",
        "1.13rc2",
        "1.13rc2-alpine",
        "1.13rc2-alpine3.10",
        "1.13rc2-buster",
        "1.14",
        "1.14-alpine",
        "1.14-alpine3.11",
        "1.14-alpine3.12",
        "1.14-alpine3.13",
        "1.14-buster",
        "1.14-rc",
        "1.14-rc-alpine",
        "1.14-rc-alpine3.10",
        "1.14-rc-alpine3.11",
        "1.14-rc-buster",
        "1.14-rc-stretch",
        "1.14-stretch",
        "1.14.0",
        "1.14.0-alpine",
        "1.14.0-alpine3.11",
        "1.14.0-buster",
        "1.14.0-stretch",
        "1.14.1",
        "1.14.1-alpine",
        "1.14.1-alpine3.11",
        "1.14.1-buster",
        "1.14.1-stretch",
        "1.14.10",
        "1.14.10-alpine",
        "1.14.10-alpine3.11",
        "1.14.10-alpine3.12",
        "1.14.10-buster",
        "1.14.10-stretch",
        "1.14.11",
        "1.14.11-alpine",
        "1.14.11-alpine3.11",
        "1.14.11-alpine3.12",
        "1.14.11-buster",
        "1.14.11-stretch",
        "1.14.12",
        "1.14.12-alpine",
        "1.14.12-alpine3.11",
        "1.14.12-alpine3.12",
        "1.14.12-buster",
        "1.14.12-stretch",
        "1.14.13",
        "1.14.13-alpine",
        "1.14.13-alpine3.11",
        "1.14.13-alpine3.12",
        "1.14.13-alpine3.13",
        "1.14.13-buster",
        "1.14.13-stretch",
        "1.14.14",
        "1.14.14-alpine",
        "1.14.14-alpine3.11",
        "1.14.14-alpine3.12",
        "1.14.14-alpine3.13",
        "1.14.14-buster",
        "1.14.14-stretch",
        "1.14.15",
        "1.14.15-alpine",
        "1.14.15-alpine3.11",
        "1.14.15-alpine3.12",
        "1.14.15-alpine3.13",
        "1.14.15-buster",
        "1.14.15-stretch",
        "1.14.2",
        "1.14.2-alpine",
        "1.14.2-alpine3.11",
        "1.14.2-buster",
        "1.14.2-stretch",
        "1.14.3",
        "1.14.3-alpine",
        "1.14.3-alpine3.11",
        "1.14.3-buster",
        "1.14.3-stretch",
        "1.14.4",
        "1.14.4-alpine",
        "1.14.4-alpine3.11",
        "1.14.4-alpine3.12",
        "1.14.4-buster",
        "1.14.4-stretch",
        "1.14.5",
        "1.14.5-alpine",
        "1.14.5-alpine3.11",
        "1.14.5-alpine3.12",
        "1.14.5-buster",
        "1.14.5-stretch",
        "1.14.6",
        "1.14.6-alpine",
        "1.14.6-alpine3.11",
        "1.14.6-alpine3.12",
        "1.14.6-buster",
        "1.14.6-stretch",
        "1.14.7",
        "1.14.7-alpine",
        "1.14.7-alpine3.11",
        "1.14.7-alpine3.12",
        "1.14.7-buster",
        "1.14.7-stretch",
        "1.14.8",
        "1.14.8-alpine",
        "1.14.8-alpine3.11",
        "1.14.8-alpine3.12",
        "1.14.8-buster",
        "1.14.8-stretch",
        "1.14.9",
        "1.14.9-alpine",
        "1.14.9-alpine3.11",
        "1.14.9-alpine3.12",
        "1.14.9-buster",
        "1.14.9-stretch",
        "1.14beta1",
        "1.14beta1-alpine",
        "1.14beta1-alpine3.10",
        "1.14beta1-alpine3.11",
        "1.14beta1-buster",
        "1.14rc1",
        "1.14rc1-alpine",
        "1.14rc1-alpine3.11",
        "1.14rc1-buster",
        "1.14rc1-stretch",
        "1.15",
        "1.15-alpine",
        "1.15-alpine3.12",
        "1.15-alpine3.13",
        "1.15-alpine3.14",
        "1.15-buster",
        "1.15-rc",
        "1.15-rc-alpine",
        "1.15-rc-alpine3.12",
        "1.15-rc-buster",
        "1.15-stretch",
        "1.15.0",
        "1.15.0-alpine",
        "1.15.0-alpine3.12",
        "1.15.0-buster",
        "1.15.1",
        "1.15.1-alpine",
        "1.15.1-alpine3.12",
        "1.15.1-buster",
        "1.15.10",
        "1.15.10-alpine",
        "1.15.10-alpine3.12",
        "1.15.10-alpine3.13",
        "1.15.10-buster",
        "1.15.10-stretch",
        "1.15.11",
        "1.15.11-alpine",
        "1.15.11-alpine3.12",
        "1.15.11-alpine3.13",
        "1.15.11-buster",
        "1.15.11-stretch",
        "1.15.12",
        "1.15.12-alpine",
        "1.15.12-alpine3.12",
        "1.15.12-alpine3.13",
        "1.15.12-buster",
        "1.15.12-stretch",
        "1.15.13",
        "1.15.13-alpine",
        "1.15.13-alpine3.12"
    ],
    "configs": {
        "1-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1724af2f8c6bfe7f5b9771825118557df091e02c5c2a5dca56774e1f10ce37c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7e574e68ebe00f885d3103fa8eb85e3ce88f51b7c8bdf2e063e0900e069b5df6",
            "container_config": {
                "Hostname": "7e574e68ebe0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1724af2f8c6bfe7f5b9771825118557df091e02c5c2a5dca56774e1f10ce37c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:15:46.969522907Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:13:22.227221112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:15:39.783643724Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:15:43.861394298Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:15:44.480081948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:15:46.339654777Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:15:46.969522907Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:af129d96ba87438590f0c3b252c5585aced1975f0800946887fc3a5303051721",
                    "sha256:0e18b85db3a62e12294c354f81e8644baa1bac293476ca7779f6af7a79ae1c05"
                ]
            }
        },
        "1-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:73a297f7c69f922dfc8f83b618070cc3731ba68bedfad11232a7f067fc30790e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3afb86d390e41a1cb1ccf33dfe4859249508b286d592771e78b1dff4a7ac6306",
            "container_config": {
                "Hostname": "3afb86d390e4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:73a297f7c69f922dfc8f83b618070cc3731ba68bedfad11232a7f067fc30790e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T03:14:43.178845036Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T02:20:08.191103124Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:14:35.979647248Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T03:14:39.326842049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:14:40.122889788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:14:42.388317748Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T03:14:43.178845036Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:bcbd4cbf3aa41d688911071bdfeddb5c605818f324e3a044738022445610f148",
                    "sha256:970c2d81df7dae8bdfa0b898f06d1c536e5aae7b9dbfef05c21ce8baca301fb4"
                ]
            }
        },
        "1-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:fe0574010b70c62e1d74b1690ce117a0d59818c8840715226532dac7344ad3d5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f696958d900641fcf7b0beb5053845642da2319b20c86ebfcb74ec960164a396",
            "container_config": {
                "Hostname": "f696958d9006",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:fe0574010b70c62e1d74b1690ce117a0d59818c8840715226532dac7344ad3d5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-16T11:30:52.367578266Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-06-15T23:15:24.829163828Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d844cc7b5e00fb62be39d903a2fb4a08f700e75112c8eef1f31101e846ed010d in / "
                },
                {
                    "created": "2021-06-15T23:15:25.156291082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:22:37.859158736Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-06-16T11:22:38.638344309Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-06-16T11:22:38.826205451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:28:36.736144943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:30:50.450557963Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.16.5.src.tar.gz'; \tsha256='7bfa7e5908c7cc9e75da5ddf3066d7cbcf3fd9fa51945851325eebc17f50ba80'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-06-16T11:30:51.167472469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:30:51.390033293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:30:52.147287324Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-06-16T11:30:52.367578266Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a8925b2335ff0b7938966250274c51afa56fbf8c367f94ea4704919c2abbb9c6",
                    "sha256:2bdfbacdf97e1f47f77762291dafc53b17e19649034640276dadc1ea6053a6b7",
                    "sha256:7aa88935c2932ee04fa5bfa7e6c8cdee3fdb16b27841076f503f5726d1db4f89",
                    "sha256:06395ceca37f2c308d505f41c8fa108e3d4c80158f4b84dc88ac3da50a3a55bd",
                    "sha256:ad0a0b458aa5f38bc10af82a9480953119e612110ade6ab6abaf276f7e42b0e2"
                ]
            }
        },
        "1-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:8bd69bdea8f3869e055c9e4b2ef8b98ab99e4c4cc1422589932c14752dc9d6c3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "85a9c1d8501cc838b4779c71d6f2c0539edb69571a46250355a39856ebf4fc60",
            "container_config": {
                "Hostname": "85a9c1d8501c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:8bd69bdea8f3869e055c9e4b2ef8b98ab99e4c4cc1422589932c14752dc9d6c3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-13T11:27:38.395728649Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T16:57:54.396607324Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a13993855beba2267575c54a0c6707ddda85d238e697a81046a8b1c1a34df054 in / "
                },
                {
                    "created": "2021-11-12T16:57:54.870490581Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:24:25.006422724Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2021-11-13T11:24:26.564438547Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-11-13T11:24:26.995470363Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:24:27.446806136Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:27:34.073585893Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.17.3.src.tar.gz'; \t\tsha256='705c64251e5b25d5d55ede1039c6aa22bea40a7a931d14c370339853643c3df0'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ -n \"${GO386:-}\" ]; then \t\t\t\tGO386= ./bootstrap.bash; \t\t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\t\tfi; \t\t\t./make.bash; \t\t\tif [ -n \"${GO386:-}\" ]; then \t\t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\t\tfi; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2021-11-13T11:27:35.901663377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:27:36.327983631Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T11:27:37.917357572Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-11-13T11:27:38.395728649Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8abefb9dd6e88aecc18c39d7924140d1905b71b831899093d2d7156106136b6c",
                    "sha256:3d31ce94a5097f2ac0f6e5870e92c837693bd34be52e0a24499658547918dd42",
                    "sha256:7d2face9f824e5d6aca7bd1db7e4ed307ec3ff073d322845288ae249680872ac",
                    "sha256:17c1f65c171f521ba47cbaec7640e41bc1fbb06a001dbb33197b8949c30c0ae9",
                    "sha256:aa923c0e5d668ae39923013510eb74b472012270b93e8e075e62b54a1ff97abe"
                ]
            },
            "variant": "v7"
        },
        "1-alpine3.14": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:223209e4d6b1de65d5ec97d80bcdf427dd12b589164eda0e5e201f77d08b2fdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c64c26c896a6af6b3864b7b8216310c1f9a8bf5a13e623af3328f0c9daa5c19",
            "container_config": {
                "Hostname": "8c64c26c896a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:223209e4d6b1de65d5ec97d80bcdf427dd12b589164eda0e5e201f77d08b2fdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-11T00:21:32.379758041Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-04T23:57:52.268805302Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97f7b59ed0e40e7771daab294820763a7bb86c843317be55725baf1cab39aa12 in / "
                },
                {
                    "created": "2022-04-04T23:57:52.698324143Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T09:24:05.467785837Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2022-04-05T09:24:06.865762462Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2022-04-05T09:24:07.291910997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T00:18:00.680380629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T00:21:28.202664977Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.18.2.src.tar.gz'; \t\tsha256='2c44d03ea2c34092137ab919ba602f2c261a038d08eb468528a3f3a28e5667e2'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2022-05-11T00:21:30.108480374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T00:21:30.536459394Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T00:21:31.973671737Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-11T00:21:32.379758041Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ab891bfdc6314ac7bdde3e90c12864ee6c963bd5c6172da4cfe3a09070d3f351",
                    "sha256:35eb29d487b200564257c1c6c451538bc86609112ebbe709ab0a884166963801",
                    "sha256:f22e93bcbe30002c176ff6f39c227dfc74f58ecbc92ae7de6f4403507b9e538b",
                    "sha256:ce330c6541d08785ee856585bb2297ab0a37bb6146ba101449ac903e1f8de9eb",
                    "sha256:733cf41366605a9a7113e87a0acd411588fc4564055153d00bcf2584435172f7"
                ]
            },
            "variant": "v7"
        },
        "1-alpine3.15": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:17413a86645bfcef60203f30c1116c00511772f896db0f03fd96724022381e84",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a798629787c65a7beb56b2d379fa68dfb4d0c2884bd58b44ef5d129ea869279",
            "container_config": {
                "Hostname": "6a798629787c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:17413a86645bfcef60203f30c1116c00511772f896db0f03fd96724022381e84",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-11-16T20:35:09.910492843Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-11-10T19:57:41.013855043Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0bd18306f21937a9572e68c768f05f4a9d8341b40c2379a7bfcb857c77734a14 in / "
                },
                {
                    "created": "2022-11-10T19:57:41.136036712Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-11T06:39:08.161508003Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2022-11-16T20:33:10.507126165Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -e /etc/nsswitch.conf ]; then \t\tgrep '^hosts: files dns' /etc/nsswitch.conf; \telse \t\techo 'hosts: files dns' > /etc/nsswitch.conf; \tfi"
                },
                {
                    "created": "2022-11-16T20:33:10.616131478Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:33:10.710425717Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.19.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:35:07.399539274Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.19.3.src.tar.gz'; \t\tsha256='18ac263e39210bcf68d85f4370e97fb1734166995a1f63fb38b4f6e07d90d212'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2022-11-16T20:35:09.172690103Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:35:09.269470353Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:35:09.805271229Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-11-16T20:35:09.910492843Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:999096a4312a93ca8223a2885a1b982e5a161e55dc73bc8e953af0fd26ab7fbe",
                    "sha256:626912af60c2f53035e5f8d74aee677719a6331de5ac733e3b0dcda450cca32f",
                    "sha256:0a302a3b632491f26ecebf419f3e498b119e1ac37811ea262ec570faa53ef079",
                    "sha256:4f389bcd83c07d7d9912fa8a6d008b504997555ca27a5a33eae2af8477917365",
                    "sha256:edd3c926ad2947276c4bf1e16012dc739e9aa53ed1c551fb6dcb787fddc4a3b7"
                ]
            },
            "variant": "v7"
        },
        "1-alpine3.16": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:cc6a82f5ad3c866b13ed09dc02c7c706d3872e06355a215dbf0b52b1fd753452",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f760069b113fc7fa32b4e1dbaa6b58b4e7a114e3e7baaf8f9ec024407615158d",
            "container_config": {
                "Hostname": "f760069b113f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cc6a82f5ad3c866b13ed09dc02c7c706d3872e06355a215dbf0b52b1fd753452",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-05-02T18:43:01.195973542Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:04:21.130091563Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:68992157dbe7c3a454c26656c7bcb497794c1008ead5e078b2928ce165cd65cd in / "
                },
                {
                    "created": "2023-03-29T18:04:21.222633549Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:18:21.208392715Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-03-30T01:18:21.299579476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:40:42.663569322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:42:57.947584893Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.4.src.tar.gz'; \t\tsha256='9f34ace128764b7a3a4b238b805856cc1b2184304df9e5690825b0710f4202d6'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-05-02T18:43:00.090602062Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:43:00.248779525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:43:01.055570823Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-05-02T18:43:01.195973542Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ddc9e441212a2586fd634811434d9501a570b71d1b020da1aaae3ea5a28d6090",
                    "sha256:fcf4e4d8ef8c491d4c87a5618295ad21ae81979414b2f080488b4910896b4005",
                    "sha256:4eb52dd56acaf54ae60b41b796618f6517cdf6451bc1c71b495734fda6ebce57",
                    "sha256:7105287c4ec4cc4532a9e3478f66cf4db1e834a243fbc521188b80bb4f1d7535"
                ]
            },
            "variant": "v7"
        },
        "1-alpine3.17": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.5",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:4d55564a6149a71034032658bc6516412c89d51ff101195424703bbe4082dfe2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bbdd903489b9cbd112bd824001d93819201c3d8f9aff6922d767e8e5109bf52b",
            "container_config": {
                "Hostname": "bbdd903489b9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.5",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:4d55564a6149a71034032658bc6516412c89d51ff101195424703bbe4082dfe2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-12-05T20:58:35.792747742Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-11-30T22:49:34.433591066Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:02a6ccbee2a71a547141a8480f3a3912c7bb0934df31124f4a4720204d326698 in / "
                },
                {
                    "created": "2023-11-30T22:49:34.560852509Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T08:45:16.598064448Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-12-01T08:45:16.723001209Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:58:21.198729814Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.21.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:58:33.684259375Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-amd64.tar.gz'; \t\t\tsha256='e2bc0b3e4b64111ec117295c088bde5f00eeed1567999ff77bc859d7df70078e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-armv6l.tar.gz'; \t\t\tsha256='837f4bf4e22fcdf920ffeaa4abf3d02d1314e03725431065f4d44c46a01b42fe'; \t\t\t;; \t\t'armv7') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-armv6l.tar.gz'; \t\t\tsha256='837f4bf4e22fcdf920ffeaa4abf3d02d1314e03725431065f4d44c46a01b42fe'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-arm64.tar.gz'; \t\t\tsha256='841cced7ecda9b2014f139f5bab5ae31785f35399f236b8b3e75dff2a2978d96'; \t\t\t;; \t\t'x86') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-386.tar.gz'; \t\t\tsha256='8f4dba9cf5c61757bbd7e9ebdb93b6a30a1b03f4a636a1ba0cc2f27b907ab8e1'; \t\t\t;; \t\t'ppc64le') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-ppc64le.tar.gz'; \t\t\tsha256='907b8c6ec4be9b184952e5d3493be66b1746442394a8bc78556c56834cd7c38b'; \t\t\t;; \t\t'riscv64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-riscv64.tar.gz'; \t\t\tsha256='984d8f999f5019d15527a1a0e6b0c3ef879833e26dcd422ab0ef4d81ac486b96'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-s390x.tar.gz'; \t\t\tsha256='9c4a81b72ebe44368813cd03684e1080a818bf915d84163abae2ed325a1b2dc0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.21.5.src.tar.gz'; \t\tsha256='285cbbdf4b6e6e62ed58f370f3f6d8c30825d6e56c5853c66d3c23bcdb09db19'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-12-05T20:58:35.016512934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOTOOLCHAIN=local",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:58:35.104838211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:58:35.19323748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:58:35.6998743Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-12-05T20:58:35.792747742Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1818ec6f1d66d7b3c0ae8220b1529d6acf2fdd51c864cbcb2d398b2d0e9e34e6",
                    "sha256:5c9aac668601cdee64d6faa84480c1e84a81f852c34b0b438083685ac19ceb41",
                    "sha256:0c8056ca1122f0f74792eccba85f0ba973e1de9179005b5b5047af499475e2ae",
                    "sha256:a637db18c11242cc479322ad9437fbf2c024b0b85be700db5e3fa4778d56bd09"
                ]
            },
            "variant": "v7"
        },
        "1-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d924c176e0e4a27a95d23028c3ab1f1a82ba42ae711e2334078d979af86d973b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "27831e61d83ff6cedc619070165d581e8907878ca741a796f1b5225c1d786606",
            "container_config": {
                "Hostname": "27831e61d83f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d924c176e0e4a27a95d23028c3ab1f1a82ba42ae711e2334078d979af86d973b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-16T20:55:34.851025512Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-16T20:53:05.848021651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:55:30.626366306Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-16T20:55:32.157539354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:55:32.655135919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:55:34.348964167Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-16T20:55:34.851025512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:a192e8d90e8ea4684f568b77565d68403bceecbf411a96fe5b3db02b89e799c0",
                    "sha256:1e0913f9bf435dbd0423b0e84a30eeb7576ee1a24208c8bb659d9cd878b5b012"
                ]
            }
        },
        "1-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:68430f9ee67d0f6fcb5f3810fd2aa13f4290bc58281d94742a787a0692e0481e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e5a17bb77d0f1844d1fa3efdc3d116c505ebe3ad0ed0aa636ad529b549316d7c",
            "container_config": {
                "Hostname": "e5a17bb77d0f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:68430f9ee67d0f6fcb5f3810fd2aa13f4290bc58281d94742a787a0692e0481e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-13T23:59:01.72093379Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-06-12T23:59:02.873299247Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3ae258462983c32de8d633c17dcc414087b5ccd8fd76f708981c7f20c7e86a4 in / "
                },
                {
                    "created": "2023-06-12T23:59:03.993396171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T04:58:02.713049852Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T04:58:27.573776538Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T23:58:46.883359413Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T23:58:47.330192284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T23:58:47.415978426Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T23:58:59.474229097Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-amd64.tar.gz'; \t\t\tsha256='d7ec48cde0d3d2be2c69203bc3e0a44de8660b9c09a6e85c4732a3f7dc442612'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-armv6l.tar.gz'; \t\t\tsha256='79d8210efd4390569912274a98dffc16eb85993cccdeef4d704e9b0dfd50743a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-arm64.tar.gz'; \t\t\tsha256='aa2fab0a7da20213ff975fa7876a66d47b48351558d98851b87d1cfef4360d09'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-386.tar.gz'; \t\t\tsha256='d394ac8fecf66812c78ffba7fb9a265bb1b9917564c7fd77f0edb0df6d5777a1'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-ppc64le.tar.gz'; \t\t\tsha256='049b8ab07d34077b90c0642138e10207f6db14bdd1743ea994a21e228f8ca53d'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-s390x.tar.gz'; \t\t\tsha256='bac14667f1217ccce1d2ef4e204687fe6191e6dc19a8870cfb81a41f78b04e48'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.5.src.tar.gz'; \t\tsha256='9a15c133ba2cfafe79652f4815b62e7cfc267f68df1b9454c6ab2a3ca8b96a88'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t( \t\t\t. /etc/os-release; \t\t\techo \"deb https://deb.debian.org/debian $VERSION_CODENAME-backports main\" > /etc/apt/sources.list.d/backports.list; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends -t \"$VERSION_CODENAME-backports\" golang-go; \t\t); \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-06-13T23:59:01.016555555Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T23:59:01.106192211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T23:59:01.630136804Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-06-13T23:59:01.72093379Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:adfac9977e0afbdd53bd6e1e64d9d5b61ad5a69f25cf1a3d9369ae88486a81d8",
                    "sha256:d0b512281693954320997c708f3cd256a2cbf6675c2462276a032e4e5214b034",
                    "sha256:29563db70c80dfdda0dc7eb7b6d3fa3d85baaa4711aa6a3eb7b90e417ce31d74",
                    "sha256:7ddb0c16833eae9e4585ea0b69d579ca0f0a7ed78617d7a1a70d039e8e9cf3ef",
                    "sha256:7fe219d03e6546fa89bb78c7a02f2597a1a6d9f6e2a904dadb0dc2ba39de95e8",
                    "sha256:547b51879d3060e131bc5d32f0b8bd599a44303c94c17032129d7c7f30042b63"
                ]
            },
            "variant": "v7"
        },
        "1-jessie": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f1f3eef158e9e49a17549f595fb3626d7cd78bcbcf494f34e351c4c8f627688",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5def1ec314d82a386c2f1a431b68f62244ae400c6fb9f75d36a41c662b1e1f19",
            "container_config": {
                "Hostname": "5def1ec314d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f1f3eef158e9e49a17549f595fb3626d7cd78bcbcf494f34e351c4c8f627688",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-08-22T23:24:54.493616969Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2017-07-25T12:47:49.877342594Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0448b2cd9da7d0c40fa8f3ee9ac6db219379c4631011ee1495ec8ad66be4f52e in / "
                },
                {
                    "created": "2017-07-25T12:47:52.19969763Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-11T17:06:17.303156051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-08-11T17:06:19.401704747Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-11T17:12:03.050916103Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-08-22T23:23:45.52168937Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-08-22T23:23:46.932167401Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:24:41.561211023Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1862f4c3d3907e59b04a757cfda0ea7aa9ef39274af99a784f5be843c80c6772' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c30a3e24736ca776fc6314e5092fb8584bd3a4a2c2fa7307ae779ba2735e668' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ff4895eb68fb1daaec41c540602e8bb4c1e8bb2f0e7017367171913fc9995ed2' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e5fb00adfc7291e657f1f3d31c09e74890b5328e6f991a3f395ca72a8c4dc0b3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e2ec3e7c293701b57ca1f32b37977ac9968f57b3df034f2cc2d531e80671e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='5f5dea2447e7dcfdc50fa6b94c512e58bfba5673c039259fd843f68829d99fa6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-08-22T23:24:43.62502172Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:24:45.603248884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:24:50.060486706Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-08-22T23:24:52.320229439Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:24:54.493616969Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1c02769ddfd9e90bcf5b64236421d528322821f78af3094322f594da865eefb6",
                    "sha256:9ca175bebd6ea37c4a38f095de0ee9041a3cb2e0a78cc1501e4243c46ae14d0e",
                    "sha256:05ebe69972ab719145a06f5ff856598977d6eeccc054cd434ddf975b1bee3cc6",
                    "sha256:86d863535c184e77c1e332bbf4208c23328c1f1e7dcf3192fb8281b93f45f30b",
                    "sha256:3edf417f5bf68dd2855c4f209b789823655e77c479ffda93dd84ad00fd6bb8dd",
                    "sha256:e4cbba8db29cc9f5ec51aebfa969112754d0af1c4016ed47fad55bcbb36b75e8",
                    "sha256:1a6077a9cd75a40c597d2fe9cf83e2f8d6e69317fd7d26ff43b77f60dd3842c7"
                ]
            }
        },
        "1-onbuild": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "go-wrapper",
                    "run"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5575ca0f1d3f68a1f9d9797097097aadb663a135c3e2910d536646208712ef16",
                "Volumes": null,
                "WorkingDir": "/go/src/app",
                "Entrypoint": null,
                "OnBuild": [
                    "COPY . /go/src/app",
                    "RUN go-wrapper download",
                    "RUN go-wrapper install"
                ],
                "Labels": null
            },
            "container": "23488cda732d581656c7156c717c8453cdad441cd8400f1b0975f640bdbcf733",
            "container_config": {
                "Hostname": "23488cda732d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ONBUILD RUN go-wrapper install"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5575ca0f1d3f68a1f9d9797097097aadb663a135c3e2910d536646208712ef16",
                "Volumes": null,
                "WorkingDir": "/go/src/app",
                "Entrypoint": null,
                "OnBuild": [
                    "COPY . /go/src/app",
                    "RUN go-wrapper download",
                    "RUN go-wrapper install"
                ],
                "Labels": {}
            },
            "created": "2017-08-22T23:25:25.867253927Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2017-07-25T12:47:49.877342594Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0448b2cd9da7d0c40fa8f3ee9ac6db219379c4631011ee1495ec8ad66be4f52e in / "
                },
                {
                    "created": "2017-07-25T12:47:52.19969763Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-11T17:06:17.303156051Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-08-11T17:06:19.401704747Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-11T17:12:03.050916103Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-08-22T23:23:45.52168937Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-08-22T23:23:46.932167401Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:24:41.561211023Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1862f4c3d3907e59b04a757cfda0ea7aa9ef39274af99a784f5be843c80c6772' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c30a3e24736ca776fc6314e5092fb8584bd3a4a2c2fa7307ae779ba2735e668' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ff4895eb68fb1daaec41c540602e8bb4c1e8bb2f0e7017367171913fc9995ed2' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e5fb00adfc7291e657f1f3d31c09e74890b5328e6f991a3f395ca72a8c4dc0b3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e2ec3e7c293701b57ca1f32b37977ac9968f57b3df034f2cc2d531e80671e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='5f5dea2447e7dcfdc50fa6b94c512e58bfba5673c039259fd843f68829d99fa6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-08-22T23:24:43.62502172Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:24:45.603248884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:24:50.060486706Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-08-22T23:24:52.320229439Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:24:54.493616969Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                },
                {
                    "created": "2017-08-22T23:25:21.477729447Z",
                    "created_by": "/bin/sh -c mkdir -p /go/src/app"
                },
                {
                    "created": "2017-08-22T23:25:22.260896219Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go/src/app",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:25:23.000659827Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"go-wrapper\" \"run\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:25:23.756436961Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD COPY . /go/src/app",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:25:24.691049932Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD RUN go-wrapper download",
                    "empty_layer": true
                },
                {
                    "created": "2017-08-22T23:25:25.867253927Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD RUN go-wrapper install",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1c02769ddfd9e90bcf5b64236421d528322821f78af3094322f594da865eefb6",
                    "sha256:9ca175bebd6ea37c4a38f095de0ee9041a3cb2e0a78cc1501e4243c46ae14d0e",
                    "sha256:05ebe69972ab719145a06f5ff856598977d6eeccc054cd434ddf975b1bee3cc6",
                    "sha256:86d863535c184e77c1e332bbf4208c23328c1f1e7dcf3192fb8281b93f45f30b",
                    "sha256:3edf417f5bf68dd2855c4f209b789823655e77c479ffda93dd84ad00fd6bb8dd",
                    "sha256:e4cbba8db29cc9f5ec51aebfa969112754d0af1c4016ed47fad55bcbb36b75e8",
                    "sha256:1a6077a9cd75a40c597d2fe9cf83e2f8d6e69317fd7d26ff43b77f60dd3842c7",
                    "sha256:826df1497244c7a967fa74f1d7f44287deaaf61f60f93f1b9a4e37b4e4d64aab"
                ]
            }
        },
        "1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cdb79affea2d54dc1a9807e9d93e52ee0ba2481f5987adc62388f05b76cd62f6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bf66cfa251aa45a2fd462ee1d99c672ac44123085eae081388263cc0fb6171c8",
            "container_config": {
                "Hostname": "bf66cfa251aa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cdb79affea2d54dc1a9807e9d93e52ee0ba2481f5987adc62388f05b76cd62f6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-24T19:31:07.13556514Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-23T01:05:04.860698579Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f45aa06c6a1c011e41ff7e4685f05d91970973768fc88ff3e825c5ac4fd6058 in / "
                },
                {
                    "created": "2022-06-23T01:05:05.860583099Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T01:58:31.089050931Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T01:58:43.032378667Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T01:59:36.52617777Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-24T19:26:54.656902018Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-24T19:26:55.547898802Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-24T19:30:22.680450917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-24T19:31:02.281632552Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-amd64.tar.gz'; \t\t\tsha256='956f8507b302ab0bb747613695cdae10af99bbd39a90cae522b7c0302cc27245'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-armv6l.tar.gz'; \t\t\tsha256='b8f0b5db24114388d5dcba7ca0698510ea05228b0402fcbeb0881f74ae9cb83b'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-arm64.tar.gz'; \t\t\tsha256='beacbe1441bee4d7978b900136d1d6a71d150f0a9bb77e9d50c822065623a35a'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-386.tar.gz'; \t\t\tsha256='72b73da021397a3a1ce182c19d2a890a5346bfe80885d9dd7d1ff04ce6597938'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-ppc64le.tar.gz'; \t\t\tsha256='5d42bd252e7af9f854df92e46bb2e88be7b2fb310cc937c0fe091afd8c4f2016'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-s390x.tar.gz'; \t\t\tsha256='ebb4efddec5bbd22bdd9c87137cb3dd59e874b5dfcf93d00bef351c60d2c7401'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.18.3.src.tar.gz'; \t\tsha256='0012386ddcbb5f3350e407c679923811dbd283fcdc421724931614a842ecbc2d'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-24T19:31:04.356580193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-24T19:31:04.796939195Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-24T19:31:06.56154105Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-24T19:31:07.13556514Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcf373643da7a7fa026733cc23d26e9315b02f345dc32113a61072dd500d56f5",
                    "sha256:df63453f0cbced9283aa8ff9a1905f92c86a17ed3dc74d3e0e1d5f80b4b7bb3a",
                    "sha256:867ebbcab3918a95bd63f25f87b10745e22d10e2fe84c4c1bdbe5acd33caf405",
                    "sha256:10d67a9607fad862bd53c93a6a7c8e46166e895e2c04346a9f37b48fa0bf5d03",
                    "sha256:e067e052136bdea20ef734ccbcb0b9b340697d9162876dff8225f7f0f1b97544",
                    "sha256:7082d12851f427af02f2b313c92635a5aac741d7dbe8ee550537f9e917546919",
                    "sha256:7a123e653014465ff4544e460e15e28a14de0c48092c822b3feda2700b326bde"
                ]
            },
            "variant": "v7"
        },
        "1.10-rc-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5404b581f1afe316a9a37db75cf3869771cd993a4f417f7ba87c44e35e304f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "83afe9782e4fc221b1c0de9bb1ff101b44f0fa0f6f966030e86dd26b11cfb035",
            "container_config": {
                "Hostname": "83afe9782e4f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5404b581f1afe316a9a37db75cf3869771cd993a4f417f7ba87c44e35e304f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-15T18:17:54.875221239Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T13:30:55.881774969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:58c4e4829c3db6bdb6063ee3ca04776b696772f592f70cb29d5196788c3608da in / "
                },
                {
                    "created": "2018-02-15T13:30:56.385011287Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T14:14:18.124549067Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T14:14:30.418671009Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T14:15:08.347314459Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T18:16:33.730257427Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T18:16:35.328017838Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T18:17:44.825709492Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-15T18:17:48.912496361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T18:17:49.564603787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T18:17:54.058267987Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-15T18:17:54.875221239Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:38cf3b8c8e9b3505beaa76bab833b270000f5504ef667a2247051482848beeae",
                    "sha256:50528950d6c7f572f79c38626ae384b1a3923b828eabc000aa9ec2eae2636310",
                    "sha256:9cb818a3fb6bb6b4ea90de1774e1b4c8e06a263fafc04a8c9ef3d6fd9ed5c3d0",
                    "sha256:e29e87bf8ae11538ba2573cba4c3b2642b35f636a8e5f069a9464558ae86cb06",
                    "sha256:cda75f074923dac6c691f4a5b92d2bf7404efd163d9c10e2112e100d3c921eae",
                    "sha256:57f91dfbc498fa56ded1c2c23e73f6e6533ddaf4b70944c0530cb9740cca7f40",
                    "sha256:0d5cb8d351fd1f7a06deeb938d7ebb734cfb6120dd3fa279c62b2ce2ddd62dcd"
                ]
            }
        },
        "1.10-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:23b47f3f07331035bc66d1277efcba139fd5702ac70137c39d47051e3e6307da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b804086daad7ca44fe36731c1a975db08cbfd092ce448b159705666f56ae9ec2",
            "container_config": {
                "Hostname": "b804086daad7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:23b47f3f07331035bc66d1277efcba139fd5702ac70137c39d47051e3e6307da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-07T18:32:32.157265407Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-07T13:03:09.707883002Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fd4dfb0a59a763b52fd5588a8f4c35f596b133e00275b1cc485a71cf088b31a in / "
                },
                {
                    "created": "2019-02-07T13:03:10.749979676Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T15:37:43.623870365Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T15:37:52.397773112Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-07T15:38:25.375924594Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T18:30:56.527209234Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T18:32:06.48532418Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:32:27.648364856Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-07T18:32:29.779193692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:32:30.22434676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:32:31.71706934Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-07T18:32:32.157265407Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2d885fdf40bcc2cc1d9f2185a318dd8d96fea868600125ba7dd758b62f60b56e",
                    "sha256:a91d99d71dcdf8745cd6e0d355878d73c8ed44e842f8971fca16630a4c48123a",
                    "sha256:c6dbf05815e68a56df5794c62238ad290e8c14e37f8d43b73509dc93a15cecbf",
                    "sha256:e1a905a52780351be90d092f857a1a0e092ef8e4c135f0c876cacf1f0d288a90",
                    "sha256:4f2680cfce740a76020a765f0c7f35a138d5fc09cb76e8e90d1b62640229f904",
                    "sha256:09a55755459759114ba2963f78814127dca0829768ff786e7be0610cc1f39418",
                    "sha256:b2b48503b2d36220a4d6d133ba43cb70075e928a269a5ba72dfb7765008b3bd0"
                ]
            }
        },
        "1.10.0-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61a2064b0427e91df04a5082bf0b5a3af4e9e29a87c4ecd14cce237ff9f70f30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ce99135f0efafd02bf32597c7a340c17d759797ac96ddb2116c51f663e84b433",
            "container_config": {
                "Hostname": "ce99135f0efa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61a2064b0427e91df04a5082bf0b5a3af4e9e29a87c4ecd14cce237ff9f70f30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-03-14T16:17:09.39865927Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-03-14T12:32:32.697034245Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48681cb8186079633f55084b5ecf518e0c50f24cfb6eb56bd42bca88f26e28d in / "
                },
                {
                    "created": "2018-03-14T12:32:33.384895475Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T13:19:10.129464317Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-14T13:19:17.547964833Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-03-14T13:19:59.219126188Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-14T16:16:48.860714773Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-14T16:16:49.365114732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T16:17:06.621642096Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6ff665a9ab61240cf9f11a07e03e6819e452a618a32ea05bbb2c80182f838f4f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='efb47e5c0e020b180291379ab625c6ec1c2e9e9b289336bc7169e6aa1da43fd8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2d26a9f41fd80eeb445cc454c2ba6b3d0db2fc732c53d7d0427a9f605bfc55a1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1e22e2fbcb3e551e0bf59d0f8aeb4b3f2df86714f09d2acd260c6597c43beee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='71cde197e50afe17f097f81153edb450f880267699f22453272d184e0f4681d7' ;; \t\t*) goRelArch='src'; goRelSha256='f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-03-14T16:17:07.432893863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T16:17:07.72904842Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T16:17:08.922595953Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-03-14T16:17:09.39865927Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a57167fe33130ba569b151b3b30db146a9b6bca0c531c64234996546d0c21f6c",
                    "sha256:ff070e455674a2113b0be8a71894184c06fcb7a3ad7074696cd33555b38a6208",
                    "sha256:afc28c213b9246b9c890739fea388323e4f0088b493b838ec0f29e7c51ab8b58",
                    "sha256:800fccc372a1b73958fedd60f993331b3510e86f77e676d297673978fb484118",
                    "sha256:b95b9354064fdf424dc0b12b77a1f682cf1d35a2e55054979a1ec4ebfc9a09c6",
                    "sha256:f3d165c2afeb87b3f4c1694f021bbf6536d584b991478f3fccfb7c98cf307063",
                    "sha256:28f3fe7cf6b98a0e6200e54d9ce4f28ad31989ef991e9755bf07606670fe152f"
                ]
            }
        },
        "1.10.1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ec3090c0ce7e8ab96ce1c3d078360d885fde5e6132a8a838343de1c7eef29b6e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "22f4dc22a475135fab3c999568310913829959a52b11a1708b3acc9349ffab0e",
            "container_config": {
                "Hostname": "22f4dc22a475",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ec3090c0ce7e8ab96ce1c3d078360d885fde5e6132a8a838343de1c7eef29b6e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-28T16:31:25.029309191Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T12:04:18.771602687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c7fba27b02c4bda63faef7eb30156a55feb4c0e9ecd529a24dd8d62942c2f83c in / "
                },
                {
                    "created": "2018-04-28T12:04:19.393141183Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T12:42:32.765828378Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-28T12:42:39.730157415Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-04-28T12:43:19.587058135Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-28T16:31:02.795148833Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-28T16:31:03.30072353Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T16:31:22.511351197Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='72d820dec546752e5a8303b33b009079c15c2390ce76d67cf514991646c6127b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='feca4e920d5ca25001dc0823390df79bc7ea5b5b8c03483e5a2c54f164654936' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1e07a159414b5090d31166d1a06ee501762076ef21140dcd54cdcbe4e68a9c9b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acbe19d56123549faf747b4f61b730008b185a0e2145d220527d2383627dfe69' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='91d0026bbed601c4aad332473ed02f9a460b31437cbc6f2a37a88c0376fc3a65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e211a5abdacf843e16ac33a309d554403beb63959f96f9db70051f303035434b' ;; \t\t*) goRelArch='src'; goRelSha256='589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-04-28T16:31:23.289300201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T16:31:23.629063563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T16:31:24.725820236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-04-28T16:31:25.029309191Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2e9c4696ffa4bcfc38009be882e6c466b8716b0f48b041ea045aae2dc208f621",
                    "sha256:956ec9ef4e7dad7e9373b61c92280a2bf0fcc85b6ba5dc8815891febbb86cef0",
                    "sha256:c31cf61b6b4028d0b60390617d9ec822f9cb77764266723d36a46919d06e273b",
                    "sha256:0bcfc105dadd750cd0de1d96a484a03f87449d5c2c54a226b543574815d64239",
                    "sha256:8021c3e83bb41eeb6e0c2ce7a7628fdaf20793275e663d23a258ddc6e1c049fb",
                    "sha256:5c2cdc64bb665569d7960020bbd6c404e0d98d14998576cb0e851c8cb31c468f",
                    "sha256:90588f9aed01b4e09eeb7d4db89899506f4b9fc4316659fd15bbb656769acc49"
                ]
            }
        },
        "1.10.2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a529d67bc8645ccc4d69cc30638ab4647da3b68e10351f8e90500a0b4ae202c0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4277b7c99ffe0f2691b87d1a4037de1ee2e103ebaf76325b404ec4294e1ed92c",
            "container_config": {
                "Hostname": "4277b7c99ffe",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a529d67bc8645ccc4d69cc30638ab4647da3b68e10351f8e90500a0b4ae202c0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-05T15:01:39.480950104Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T12:04:18.771602687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c7fba27b02c4bda63faef7eb30156a55feb4c0e9ecd529a24dd8d62942c2f83c in / "
                },
                {
                    "created": "2018-04-28T12:04:19.393141183Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T12:13:49.551472541Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-05T12:13:58.070030777Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-05-05T12:14:39.265808629Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-05T15:01:01.871988596Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-05T15:01:02.380600349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T15:01:22.537602183Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4b677d698c65370afa33757b6954ade60347aaca310ea92a63ed717d7cb0c2ff' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='529a16b531d4561572db6ba9d357215b58a1953437a63e76dc0c597be9e25dd2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d6af66c71b12d63c754d5bf49c3007dc1c9821eb1a945118bfd5a539a327c4c8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ea4caddf76b86ed5d101a61bc9a273be5b24d81f0567270bb4d5beaaded9b567' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f0748502c90e9784b6368937f1d157913d18acdae72ac75add50e5c0c9efc85c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2266b7ebdbca13c21a1f6039c9f6887cd2c01617d1e2716ff4595307a0da1d46' ;; \t\t*) goRelArch='src'; goRelSha256='6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-05T15:01:30.46505857Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T15:01:37.925163047Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T15:01:39.209254899Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-05T15:01:39.480950104Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2e9c4696ffa4bcfc38009be882e6c466b8716b0f48b041ea045aae2dc208f621",
                    "sha256:d39599b4c2f7a9d41f06db632bc02aff81b41655e47b81e0e7591f9f595e2786",
                    "sha256:5faea76c9b83388251bf4a7c12d43018cd41e81129866a3a2419380889d66696",
                    "sha256:97ac7517a3ebfc4ba72f35b2c966c43e9f5b8179f5d089e0eaed8965e3e8db71",
                    "sha256:62654e02809f3430de5006ccb035efb951bb252619d57356ebdeeaadaf6b667a",
                    "sha256:59e83bd60c25c0452a02fd96adec8ccead1bdd9c773a13f0082af0027191818d",
                    "sha256:d5fec1ebeaeb7555404694f5625cb6428347b3a6b9a58b5a8f27197d2bdf7921"
                ]
            }
        },
        "1.10.3-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b7a261354c62f956155910ccf4547f68670fbb62cbfda2edc80dc84da335e919",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "35706ee3798dd72870c26c50fbc4bc2b82366f1be15fb9431cf4468b8f251461",
            "container_config": {
                "Hostname": "35706ee3798d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b7a261354c62f956155910ccf4547f68670fbb62cbfda2edc80dc84da335e919",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-17T17:59:21.109174735Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T12:05:25.448694057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:77cbe27c4436cc4c9d81bee6c5ae0fee0c6d1708813d34abd2af2d3ebd7d96a5 in / "
                },
                {
                    "created": "2018-07-17T12:05:26.262700516Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:46:48.176466568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:46:56.116679644Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:47:40.02063699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:58:16.412682882Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:59:02.469602531Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T17:59:18.546801657Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d3df3fa3d153e81041af24f31a82f86a21cb7b92c1b5552fb621bad0320f06b6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='355128a05b456c9e68792143801ad18e0431510a53857f640f7b30ba92624ed2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3d5fe1932c904a01acb13dae07a5835bffafef38bef9e5a05450c52948ebdeb4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f3640b2f0990a9617c937775f669ee18f10a82e424e5f87a8ce794a6407b8347' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='34385f64651f82fbc11dc43bdc410c2abda237bdef87f3a430d35a508ec3ce0d' ;; \t\t*) goRelArch='src'; goRelSha256='567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-17T17:59:19.556977877Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T17:59:19.868689057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T17:59:20.757337816Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-17T17:59:21.109174735Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcdd7ab8c6fc0fe22e290f19a488f435ee798ed9ac42c6d1006dd37894b0e2c1",
                    "sha256:3649eabae1eadcd9090a6ecb01c7baedcbf88ecc51072cf6236802f38c0ddc3f",
                    "sha256:4a59a1eb41339490824316dcb4aaabeb923d7c3cfe70d26a7c3bb319c1b2301d",
                    "sha256:aed792db9115736c36de929afa8583d35a877fa6caab9a491e193e63c14394c3",
                    "sha256:248bb395c7b95ef157e441790429642638864a62f99c1190fdde41612cc103c1",
                    "sha256:a8dd17427f27dd7e24b4e15cdfbd3e4a5952788018e46f5dd3be51eead59b21e",
                    "sha256:8a5b1b96f97c7c58af15668b0e0bb44b2b070a43a1201bcb2a4a68974095baa4"
                ]
            }
        },
        "1.10.4-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5b8dedb11e9dd1b0f78f1e3d0eee861f47c8d3894c45eafd3d4d5d11fc1290f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "dd2f96384ceed2200e164ca98392c9562f5dce2dcf8be31e9d0e28aa4560a346",
            "container_config": {
                "Hostname": "dd2f96384cee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5b8dedb11e9dd1b0f78f1e3d0eee861f47c8d3894c45eafd3d4d5d11fc1290f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T14:41:21.338447718Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-16T12:05:35.587808217Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5a70dc8c5adc5e530a8fc10745a2fba15ee4379cd2e1adba6e1abfc8353c48d9 in / "
                },
                {
                    "created": "2018-10-16T12:05:38.593841077Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T12:58:42.730155045Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T12:58:52.607717156Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T12:59:35.430792914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T14:40:17.616221807Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T14:40:57.681728914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T14:41:14.371131987Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa04efdb17a275a0c6e137f969a1c4eb878939e91e1da16060ce42f02c2ec5ec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4e1e80bd98f3598c0c48ba0c189c836d01b602bfc769b827a4bfed01d2c14b21' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2e0f9e99aeefaabba280b2bf85db0336da122accde73603159b3d72d0b2bd512' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='771f48e55776d4abc9c2a74907457066c7c282ac05fa01cf5ff4422ced76d2ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1cfc147357c0be91a988998046997c5f30b20c6baaeb6cd5774717714db76093' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5593d770d6544090c1bb20d57bb34c743131470695e195fbe5352bf056927a35' ;; \t\t*) goRelArch='src'; goRelSha256='6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-16T14:41:16.684735015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T14:41:17.850826537Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T14:41:20.633685681Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-16T14:41:21.338447718Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:983a8a7a9d549913dfef6a881cf7f3cf6a4afd170b62bd4b03e0ccb490a42352",
                    "sha256:58e65751f0f46b9a354d09fe450c0b134ec6fcdf31345f655e47485b1173b799",
                    "sha256:9306cb361c83ed65c5457106f0564ca6a80cee77d8e1a32369df452d53c157a3",
                    "sha256:5b6a2a5836848f99b1061fdfa0218bc6050f10b8ee10a7981a9bd3fa71171704",
                    "sha256:dbd9b391f3f74ed338acdf376fc5c7946b2245be7254640ac96b3032c7c45c34",
                    "sha256:5e53ea810854cee00442316ddb113cc22d92af3a7589a2672528732340884d20",
                    "sha256:975d68ecae842c5f28e582a69db0427087eba21cc720549a2972a47c30f154e5"
                ]
            }
        },
        "1.10.5-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5bbcea3f40e55e009f3c2a91dc7241bbd987fc09b1f58d2c702414d25f9714de",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "660a54e92602cf7b237761b79d6abd03a5e9fbdab6affd2f19ae033175e14405",
            "container_config": {
                "Hostname": "660a54e92602",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5bbcea3f40e55e009f3c2a91dc7241bbd987fc09b1f58d2c702414d25f9714de",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-16T22:52:39.130575386Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T13:08:47.189557905Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:085a6a2a32a05acfff8d2b179dad7789d649aca5cf2565a5b5490403e3d3cea0 in / "
                },
                {
                    "created": "2018-11-16T13:08:48.678757303Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T18:17:27.402519866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T18:17:38.190322284Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T18:18:32.210273961Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T22:50:40.728462544Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T22:52:13.519685347Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T22:52:30.775853225Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a035d9beda8341b645d3f45a1b620cf2d8fb0c5eb409be36b389c0fd384ecc3a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1d864a6d0ec599de9112c8354dcaaa886b4df928757966939402598e9bd9c238' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b4c16fcee18bc79de2fa4776c8d0f9bc164ddfc32101e96fe1da83ebe881e3df' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='bc1bd42405a551ba7ac86b79b9d23a5635f21de53caf684acd8bf5dfee8bef5d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fc13736d383312710249b24adf05af59ff14dacb73d9bd715ff463bc89c5c5f' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e90269495fab7ef99aea6937caf7a049896b2dc7b181456f80a506e69a8b57fc' ;; \t\t*) goRelArch='src'; goRelSha256='f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-16T22:52:36.605691853Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T22:52:37.104302794Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T22:52:38.591085379Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-16T22:52:39.130575386Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:23b83194cf993950179ad2aabfb02f408351b638e48585cd57c84c1f834438fd",
                    "sha256:d6dd60e5d63925b22c7ea0086cac66556f342b228f10c843dd30d7ecbb6e6146",
                    "sha256:14ee81a45c85fd9a922d68675f30060e850c618691382f0f898b2f22c2629d58",
                    "sha256:f7ec92976527e85736e31866639e7cbaad0b12c5e2ad42b11c9093b866f86baf",
                    "sha256:4cf59f28267a1f3a306d6a317adc39cc9f71d380c4bdf9370b6e2d7186cd4edd",
                    "sha256:526380589964e30e83d23da62a2dde1a9c9996070c176517bd05550b265ea56c",
                    "sha256:a61573782392f4ba1dd17e9013a8ecf5dc8a7572bd542f11e387101141e3fce5"
                ]
            }
        },
        "1.10.6-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1c6f152b18f36e0c5ed4f9987c413043799184291486d6c33545a298e21fe36",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0e9b90d0df320341f4350aad1daf9f6e761fe9c71227bb445c2feef278895202",
            "container_config": {
                "Hostname": "0e9b90d0df32",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1c6f152b18f36e0c5ed4f9987c413043799184291486d6c33545a298e21fe36",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:58:52.620512037Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T13:08:47.189557905Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:085a6a2a32a05acfff8d2b179dad7789d649aca5cf2565a5b5490403e3d3cea0 in / "
                },
                {
                    "created": "2018-11-16T13:08:48.678757303Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T18:17:27.402519866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T18:17:38.190322284Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T18:18:32.210273961Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T22:50:40.728462544Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-14T12:58:29.453127106Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:58:45.863215105Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='acbdedf28b55b38d2db6f06209a25a869a36d31bdcf09fd2ec3d40e1279e0592' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4da252fc7e834b7ce35d349fb581aa84a08adece926a0b9a8e4216451ffcb11e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0fcbfbcbf6373c0b6876786900a4a100c1ed9af86bd3258f23ab498cca4c02a1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='171fe6cbecb2845b875a35ac7ad758d4c0c5bd03f330fa35d340de85b9070e71' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ebd7e4688f3e1baabbc735453b19c6c27116e1f292bf46622123bfc4c160c747' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0223daa57bdef5bf85d308f6d2793c58055d294c13cbaca240ead2f568de2e9f' ;; \t\t*) goRelArch='src'; goRelSha256='0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:58:50.012886202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:58:50.522617306Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:58:52.158187881Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:58:52.620512037Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:23b83194cf993950179ad2aabfb02f408351b638e48585cd57c84c1f834438fd",
                    "sha256:d6dd60e5d63925b22c7ea0086cac66556f342b228f10c843dd30d7ecbb6e6146",
                    "sha256:14ee81a45c85fd9a922d68675f30060e850c618691382f0f898b2f22c2629d58",
                    "sha256:f7ec92976527e85736e31866639e7cbaad0b12c5e2ad42b11c9093b866f86baf",
                    "sha256:4cf59f28267a1f3a306d6a317adc39cc9f71d380c4bdf9370b6e2d7186cd4edd",
                    "sha256:a14a168acb209e4d1feca4749434ca71d109fc09c2009c10af5faab2f6e912dd",
                    "sha256:8b7f4d703a37ee98c891e67e38e4102fbdb78ea79690f749ffad748cd2ebf94d"
                ]
            }
        },
        "1.10.7-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6bfb44b546f6f4db586a94486e387ed88e803c0653b8d1d2ffe7e43631818283",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6bc03b3ce18baed888298fcbbfaa3b229625e18b8785b82e1eca9f7ff9fc25c2",
            "container_config": {
                "Hostname": "6bc03b3ce18b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6bfb44b546f6f4db586a94486e387ed88e803c0653b8d1d2ffe7e43631818283",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-23T18:36:55.50475079Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-23T13:04:29.016610652Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f58fcfcac4bd31e03fe733b7c850ff7f67728d2532fc54252c02a91c66445c88 in / "
                },
                {
                    "created": "2019-01-23T13:04:29.816333777Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T13:44:17.486692114Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T13:44:26.61970133Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-01-23T13:45:09.551107285Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T18:35:07.841246579Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T18:36:29.734011404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T18:36:50.235827126Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1aabe10919048822f3bb1865f7a22f8b78387a12c03cd573101594bc8fb33579' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1f81c995f829c8fc7def4d0cc1bde63cac1834386e6f650f2cd7be56ab5e8b98' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cb5a274f7c8f6186957e4503e724dda8aeffe84b76a146748c55ea5bb22d9ae4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='55cd25e550cb8ce8250dbc9eda56b9c10b3097c7f6beed45066fbaaf8c6c1ebd' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='11279ffebfcfa875b0552839d428cc72e2056e68681286429b57173c0da91fb4' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e0d7802029ed8d2720a2b27ec1816e71cb29f818380abb8b449080e97547881e' ;; \t\t*) goRelArch='src'; goRelSha256='b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-23T18:36:53.017644578Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T18:36:53.453292333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T18:36:54.969388896Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-23T18:36:55.50475079Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b85f84d47b3634a6ba46549f8cc9f83c6ec4fc51767b5c09321675604cc96aee",
                    "sha256:26f8f159ee1e700058d29332d0c116e4421d8bb5ae00e0d471fbce7203f23850",
                    "sha256:0e6f33edbddecf6d58ff68478a761c900c55d768b0e2510db5eb3dfbf5dc1bbe",
                    "sha256:9f1c0d1133ff027e3d6f8d2cac8b842a7738815754e4985c88b38501f9538434",
                    "sha256:7b816c02dd18289c64e260dc48541306b414e6cc9709e8d91a1d077788ca5845",
                    "sha256:80cea8f0a6c7cfe52111504398637f6d12505fe81f9bfa1b22ee66888beee848",
                    "sha256:47137a09883ee5d850495dcd5092917da2ed2ba71f0e152b0fee88753d7fa548"
                ]
            }
        },
        "1.10.8-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:23b47f3f07331035bc66d1277efcba139fd5702ac70137c39d47051e3e6307da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b804086daad7ca44fe36731c1a975db08cbfd092ce448b159705666f56ae9ec2",
            "container_config": {
                "Hostname": "b804086daad7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:23b47f3f07331035bc66d1277efcba139fd5702ac70137c39d47051e3e6307da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-07T18:32:32.157265407Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-07T13:03:09.707883002Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fd4dfb0a59a763b52fd5588a8f4c35f596b133e00275b1cc485a71cf088b31a in / "
                },
                {
                    "created": "2019-02-07T13:03:10.749979676Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T15:37:43.623870365Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T15:37:52.397773112Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-07T15:38:25.375924594Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T18:30:56.527209234Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T18:32:06.48532418Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:32:27.648364856Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-07T18:32:29.779193692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:32:30.22434676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:32:31.71706934Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-07T18:32:32.157265407Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2d885fdf40bcc2cc1d9f2185a318dd8d96fea868600125ba7dd758b62f60b56e",
                    "sha256:a91d99d71dcdf8745cd6e0d355878d73c8ed44e842f8971fca16630a4c48123a",
                    "sha256:c6dbf05815e68a56df5794c62238ad290e8c14e37f8d43b73509dc93a15cecbf",
                    "sha256:e1a905a52780351be90d092f857a1a0e092ef8e4c135f0c876cacf1f0d288a90",
                    "sha256:4f2680cfce740a76020a765f0c7f35a138d5fc09cb76e8e90d1b62640229f904",
                    "sha256:09a55755459759114ba2963f78814127dca0829768ff786e7be0610cc1f39418",
                    "sha256:b2b48503b2d36220a4d6d133ba43cb70075e928a269a5ba72dfb7765008b3bd0"
                ]
            }
        },
        "1.10beta2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4c148e013e0fb28d11775d5c5f125b92cf1567de89bcfe318156ab3e0e4a1a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "46bcb97348d28f5fec2319055d341c28df31683c839bfd54342e0ef4cdf8ba6b",
            "container_config": {
                "Hostname": "46bcb97348d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4c148e013e0fb28d11775d5c5f125b92cf1567de89bcfe318156ab3e0e4a1a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-20T00:46:38.550378257Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T13:32:59.253424046Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d49e67cdc6ae27f43c5c002d96bff764fd43188dd7e8036f5d5f8c44eb12dcad in / "
                },
                {
                    "created": "2017-12-12T13:32:59.833899974Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T14:21:12.454194131Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T14:21:22.810313763Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T14:22:22.476350588Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-20T00:45:05.488438584Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-20T00:45:07.601815752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-20T00:46:26.726276786Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ab3abb7d731dd5ac7a06d5d5e64ef19946f57d4ce34555d262a87b8899901a93' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='777a59c2b1516598e161c0c5b25809c83fdec3737a0b7f4942c855259d57b3fe' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2f51e94a227473d41bf3d9dbbdc5855308e64d82fb740a15019bd4fe733c9518' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4e5bc465a828c88e0e3c6049c58ee735d8ca27a994bc1d709424425cd20cab79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ace75d03dc73351320d055535f1f314b7dbd27ab21c7878db27a385b1e00d5b0' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4d8625f071edd2cb2b16251f23530a43f9ff64db1b6ce080daff0dcc984005da' ;; \t\t*) goRelArch='src'; goRelSha256='a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-20T00:46:30.886244235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-20T00:46:32.043695162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-20T00:46:36.482770113Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-20T00:46:37.309700447Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-20T00:46:38.550378257Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7df4170b43a705cd0d3997e60a8dc3ccb145910dc10b1d17e37c7a2c3dee72ee",
                    "sha256:b88079410c187e1e651823e891db227250f074370a2fcb4a42e2797e19434632",
                    "sha256:a6fb3a64a1dbcb07174e3209ccb17e754d86e952b709f250d40493373ae3700b",
                    "sha256:6a7b79cc83f82508f948355adbdfcb2301032a2ff8ea29bd51ab9120069fbd14",
                    "sha256:601c748bf78b615dce78f87a7992403d6d126eb5551755b80399367b322d78c3",
                    "sha256:da0fdea70048634c7b4cafac0d81e0ddd3373b7abb3f99a2f71bbc144539f633",
                    "sha256:b03be403807ccd98c5c5672f64b77b2b3e071f2ab53617c03dd967752ba78713",
                    "sha256:8d750fa7fce2871b381b9d823531e1ce67323446e5f46d69cb1c0b21aced4151"
                ]
            }
        },
        "1.10rc1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:06b96f2d5a1f23b7c47f8f356149abe3870b8e1b623e21e8f0918457ee2d4eeb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "a6ece5c071a08a0653609fc781215163eee703d878c83c358cea73eb86549f16",
            "container_config": {
                "Hostname": "a6ece5c071a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:06b96f2d5a1f23b7c47f8f356149abe3870b8e1b623e21e8f0918457ee2d4eeb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T14:53:55.964379465Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T13:32:59.253424046Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d49e67cdc6ae27f43c5c002d96bff764fd43188dd7e8036f5d5f8c44eb12dcad in / "
                },
                {
                    "created": "2017-12-12T13:32:59.833899974Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T14:21:12.454194131Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T14:21:22.810313763Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T14:22:22.476350588Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-20T00:45:05.488438584Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-26T14:52:39.240540857Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T14:53:45.664268314Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='c10d3cc7760bf3799037bd39027bbffdc568aea21d6fe60fe833373289c7b7c6' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2c1ed86e3cbf9d9866333b73cee96a0cd0b8c73654f4705088caa64eb5a624d4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a749faf38e80025b832dae250442ddc86d5bc353d752c781ea632e904922ff1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='03a98cc12b65dde36ed9561fa23530bcf5fa7ed85596aa74f2380f686fcbe928' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f482c7d6193c23d36657f8f026a74222c82eeb443331c38bbf3493d971144988' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a20d4077c0bb1d58710e48478ba0042950cf282f6ef1593aea4ac6e66265d22c' ;; \t\t*) goRelArch='src'; goRelSha256='743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T14:53:50.062304046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T14:53:50.728675475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T14:53:55.202426404Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T14:53:55.964379465Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7df4170b43a705cd0d3997e60a8dc3ccb145910dc10b1d17e37c7a2c3dee72ee",
                    "sha256:b88079410c187e1e651823e891db227250f074370a2fcb4a42e2797e19434632",
                    "sha256:a6fb3a64a1dbcb07174e3209ccb17e754d86e952b709f250d40493373ae3700b",
                    "sha256:6a7b79cc83f82508f948355adbdfcb2301032a2ff8ea29bd51ab9120069fbd14",
                    "sha256:601c748bf78b615dce78f87a7992403d6d126eb5551755b80399367b322d78c3",
                    "sha256:2391911875a39d21088a6aa92ce73f228eeb5f92fd6368f11740f8d6c636f000",
                    "sha256:41e9378ee36ae8f5fa2e3bcea43625de206a3bd902d536ffdf18df8c17e0c0d9"
                ]
            }
        },
        "1.10rc2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5404b581f1afe316a9a37db75cf3869771cd993a4f417f7ba87c44e35e304f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "83afe9782e4fc221b1c0de9bb1ff101b44f0fa0f6f966030e86dd26b11cfb035",
            "container_config": {
                "Hostname": "83afe9782e4f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5404b581f1afe316a9a37db75cf3869771cd993a4f417f7ba87c44e35e304f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-15T18:17:54.875221239Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T13:30:55.881774969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:58c4e4829c3db6bdb6063ee3ca04776b696772f592f70cb29d5196788c3608da in / "
                },
                {
                    "created": "2018-02-15T13:30:56.385011287Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T14:14:18.124549067Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T14:14:30.418671009Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T14:15:08.347314459Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T18:16:33.730257427Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T18:16:35.328017838Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T18:17:44.825709492Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-15T18:17:48.912496361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T18:17:49.564603787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T18:17:54.058267987Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-15T18:17:54.875221239Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:38cf3b8c8e9b3505beaa76bab833b270000f5504ef667a2247051482848beeae",
                    "sha256:50528950d6c7f572f79c38626ae384b1a3923b828eabc000aa9ec2eae2636310",
                    "sha256:9cb818a3fb6bb6b4ea90de1774e1b4c8e06a263fafc04a8c9ef3d6fd9ed5c3d0",
                    "sha256:e29e87bf8ae11538ba2573cba4c3b2642b35f636a8e5f069a9464558ae86cb06",
                    "sha256:cda75f074923dac6c691f4a5b92d2bf7404efd163d9c10e2112e100d3c921eae",
                    "sha256:57f91dfbc498fa56ded1c2c23e73f6e6533ddaf4b70944c0530cb9740cca7f40",
                    "sha256:0d5cb8d351fd1f7a06deeb938d7ebb734cfb6120dd3fa279c62b2ce2ddd62dcd"
                ]
            }
        },
        "1.11-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3363cd490df3fa579abbe28bd56752361518ff2382f0ced18abe3ec026d3a6bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c86f4d55c284aa23198855c5d4b3ef90c66a284f11458838160c4431dfd6e07a",
            "container_config": {
                "Hostname": "c86f4d55c284",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3363cd490df3fa579abbe28bd56752361518ff2382f0ced18abe3ec026d3a6bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:20:45.240896299Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:18:09.630137984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:40.984018209Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:20:43.064842069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:43.408746892Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:44.773344413Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:20:45.240896299Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:e62bf205c07623bac270afc3b9fbd30dbee2468263c3f1095a98b48b5cb1fcd4",
                    "sha256:e76031533fcedfa53c4f3ed58031a2e3b972bce153feaa4e2e3eff2d3855f504"
                ]
            }
        },
        "1.11-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3363cd490df3fa579abbe28bd56752361518ff2382f0ced18abe3ec026d3a6bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c86f4d55c284aa23198855c5d4b3ef90c66a284f11458838160c4431dfd6e07a",
            "container_config": {
                "Hostname": "c86f4d55c284",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3363cd490df3fa579abbe28bd56752361518ff2382f0ced18abe3ec026d3a6bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:20:45.240896299Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:18:09.630137984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:40.984018209Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:20:43.064842069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:43.408746892Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:44.773344413Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:20:45.240896299Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:e62bf205c07623bac270afc3b9fbd30dbee2468263c3f1095a98b48b5cb1fcd4",
                    "sha256:e76031533fcedfa53c4f3ed58031a2e3b972bce153feaa4e2e3eff2d3855f504"
                ]
            }
        },
        "1.11-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:72c92d52e5db29f6b111e5175e92a06b614fe3606b457c921cfb21e475e98463",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "14642f3d53097ecd9a7fafab5a391a4f9e498c0c4620fb3a03fca03cd5b27f84",
            "container_config": {
                "Hostname": "14642f3d5309",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:72c92d52e5db29f6b111e5175e92a06b614fe3606b457c921cfb21e475e98463",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:43:25.496834614Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:40:56.88173948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:22.300276622Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:43:23.364890102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:23.748719988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:25.085047879Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:43:25.496834614Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:371c7193083ab807e72edd77ac3e84331a8998b2118e2a0beedf6ebd7c45dcc6",
                    "sha256:336bacbc5375920e2ec4cc69a4fb0968dab3cb41726f8744777bbdb6cce3873b"
                ]
            }
        },
        "1.11-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a489f3ce06765302aa263687d10aba7846c107168658d4bc0f970986001db6e4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e85e5f90171dd95bdb01382b90a82374c2a1b514fb4d160e2abb234333450308",
            "container_config": {
                "Hostname": "e85e5f90171d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a489f3ce06765302aa263687d10aba7846c107168658d4bc0f970986001db6e4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:00:27.025541437Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:59:44.029442993Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9c8bae31876c4f1a65b716e728f9b7e1573ec698b6fe8daaeb5f3dc080bb131 in / "
                },
                {
                    "created": "2019-08-14T00:59:45.225380675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:07:03.984167697Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:07:14.698888205Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:07:49.504945911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:01.52711595Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:00:00.833362354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:20.43197835Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:00:24.789817066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:25.198102809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:26.609601259Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:00:27.025541437Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd55307db9b60c191231d44adbe5f4c2dda3c7cfedf51fed934dbcac33583bd",
                    "sha256:ffe59162282799874b7e5c25bfe9b30a8dd63abc8c5400b5aa75e10cd6021112",
                    "sha256:b03ae013300698b9326982514f3ed998d6f1974875945bddb1ca7c4b34f88586",
                    "sha256:ae9e1918717cae0fc72b7bc4763eed8cadd09354d0d635beea1f24942ff0fbfb",
                    "sha256:17e3e4434a9b309d3fef8d6bfd711562bc720973e7ba619d0463044326fa5b0b",
                    "sha256:cfa625203474af5013ca941f7439481c192c582fea13c81fdbde351a3caf9935",
                    "sha256:30bb7938a4839aff41c8011b6dd34b87a34ec1143a3744adf4c4ba6a45b8e53d"
                ]
            }
        },
        "1.11-rc-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d44f1f8791063bc174c0e0029ea1e2a7f141d62f49a85c204213f4a80ec7251",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7d9192cac98f1321a1187d6cc930c225a3ea286e29c9861fdd7eb44827245a17",
            "container_config": {
                "Hostname": "7d9192cac98f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d44f1f8791063bc174c0e0029ea1e2a7f141d62f49a85c204213f4a80ec7251",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:58:06.174110129Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T12:05:25.448694057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:77cbe27c4436cc4c9d81bee6c5ae0fee0c6d1708813d34abd2af2d3ebd7d96a5 in / "
                },
                {
                    "created": "2018-07-17T12:05:26.262700516Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:46:48.176466568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:46:56.116679644Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:47:40.02063699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:58:16.412682882Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T11:57:34.076724904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:57:55.28512713Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:58:00.417306076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:58:00.724643942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:58:01.621398669Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:58:06.174110129Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcdd7ab8c6fc0fe22e290f19a488f435ee798ed9ac42c6d1006dd37894b0e2c1",
                    "sha256:3649eabae1eadcd9090a6ecb01c7baedcbf88ecc51072cf6236802f38c0ddc3f",
                    "sha256:4a59a1eb41339490824316dcb4aaabeb923d7c3cfe70d26a7c3bb319c1b2301d",
                    "sha256:aed792db9115736c36de929afa8583d35a877fa6caab9a491e193e63c14394c3",
                    "sha256:248bb395c7b95ef157e441790429642638864a62f99c1190fdde41612cc103c1",
                    "sha256:f5c9284a5c8b592dfe92384aa7f0dbce6feb3222826a98b2f68ce529f50f0d87",
                    "sha256:ed06de0b34389fa63f9a7137abd7c28a82d0cc40a985a66fc0964e33600fac85"
                ]
            }
        },
        "1.11-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69dc3ed8a4b7d18ca82a4574169ee876326652d1c8607cc98282f01c2df89d99",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4ca07f6f769e7cc36d8fa2cbb66e996aa55487908b0db807c087d591019f5f43",
            "container_config": {
                "Hostname": "4ca07f6f769e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69dc3ed8a4b7d18ca82a4574169ee876326652d1c8607cc98282f01c2df89d99",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:00:58.716886637Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T01:05:03.68205404Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3db44b151cbde9df965afdae57262daa20fbdde74d80e65b10942ee7755fc910 in / "
                },
                {
                    "created": "2019-08-14T01:05:04.384257407Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:19:09.481649797Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:19:19.234255684Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:19:55.917988948Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:59:20.63762004Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:00:35.317382137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:53.643125475Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:00:56.709482458Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:57.076892732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:58.293428703Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:00:58.716886637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a020bd80c571284085f3fd56a1b16b7fa32c0dcd2563abb3f8bcce543073b14",
                    "sha256:2640a1b6b27976f5a7b83b06306e4956335b2d86b3c79f65d6249fc14f352cae",
                    "sha256:27ee615705f25e044d2e055b7c4b52ce4cd5de649218dbaedb479511f535e036",
                    "sha256:ce72f6fb32c920daf7bd54fe825057a00f71ec49862098cc906bf417bc743fc2",
                    "sha256:6d30c6a80efea902d3c634b080b642315e8fa65578fca52261f186e7dbe50e52",
                    "sha256:e59b517fc971bbfe3c4ae817287c7bd5fe4fe3ebbefa645e31bd5c83986e2160",
                    "sha256:34438acdf6cd54d9fde4e0e2b44cd8a098d6f258856b047cc9eb26b9e2149c06"
                ]
            }
        },
        "1.11.0-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:46efc59a90289414b5186daeaa4671bf04eb88d1f695b03993e0bbb43a965c4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e6dad6b4b0cfad2eaef90fabbbac372dea9ad6f981b5fb651bdae65ad2c7e00a",
            "container_config": {
                "Hostname": "e6dad6b4b0cf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:46efc59a90289414b5186daeaa4671bf04eb88d1f695b03993e0bbb43a965c4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-05T17:12:50.122048195Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-05T12:04:11.901647283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bacead0de46aaeea589aade1154ab29f7b53ba32ac884c84a950a3f42bbe2868 in / "
                },
                {
                    "created": "2018-09-05T12:04:12.533626815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T12:44:43.090803721Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T12:44:52.242573011Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-09-05T12:45:35.612052878Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T17:12:31.717084656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T17:12:32.290581452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T17:12:47.413476546Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='8ffeb3577d8ca5477064f1cb8739835973c866487f2bf81df1227eaa96826acd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e4853168f41d0bea65e4d38f992a2d44b58552605f623640c5ead89d515c56c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a91932b65b4af2f84ef2dce10d790e6a0d3d22c9ea1bdf3d8c4d9279dfa680e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e874d617f0e322f8c2dda8c23ea3a2ea21d5dfe7177abb1f8b6a0ac7cd653272' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c113495fbb175d6beb1b881750de1dd034c7ae8657c30b3de8808032c9af0a15' ;; \t\t*) goRelArch='src'; goRelSha256='afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-05T17:12:48.296924077Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T17:12:48.582159939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T17:12:49.757899179Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-05T17:12:50.122048195Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c8f55a01a7e8d38ebf7b21b1acb3e2b2252c87377f512da17c2d5731f0f33491",
                    "sha256:3a0756d8672a165ed3a0ae40ffba77266eb4707d87eaae4ae45a4497d25f1816",
                    "sha256:923a03919348e69e555bd39d5d3544de1e6e131fd533bd525986f90f1c95dba1",
                    "sha256:e39fc25178c7a0dbebd546bd2ed205ebcc9861eb7c5ee1df9801b0946fe7650b",
                    "sha256:4c7cf0964a19e45dbe81f3b550dad211e2140231422a0cb04de0e4d1cbb5a5b8",
                    "sha256:25f00a4e7b3e296514323b4e88e2000afb6024f90b962319a79b6c2af9ef6c4d",
                    "sha256:a8eaea130e554186fc2739fe57a78ab146493d91cd309981f5bf87ef0940185f"
                ]
            }
        },
        "1.11.1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3061422e42cc0b24c4940a1359f331eced1e64c664a0c47599b8f47b6bd49374",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f3c8747b74354d129a68e7fde2a4531a2aa8f01479ed424c566586df3d691610",
            "container_config": {
                "Hostname": "f3c8747b7435",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3061422e42cc0b24c4940a1359f331eced1e64c664a0c47599b8f47b6bd49374",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T14:40:51.178976861Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-16T12:05:35.587808217Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5a70dc8c5adc5e530a8fc10745a2fba15ee4379cd2e1adba6e1abfc8353c48d9 in / "
                },
                {
                    "created": "2018-10-16T12:05:38.593841077Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T12:58:42.730155045Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T12:58:52.607717156Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T12:59:35.430792914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T14:40:17.616221807Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T14:40:21.543074623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T14:40:43.777089834Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2871270d8ff0c8c69f161aaae42f9f28739855ff5c5204752a8d92a1c9f63993' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bc601e428f458da6028671d66581b026092742baf6d3124748bb044c82497d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='25e1a281b937022c70571ac5a538c9402dd74bceb71c2526377a7e5747df5522' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='52935db83719739d84a389a8f3b14544874fba803a316250b8d596313283aadf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f929d434d6db09fc4c6b67b03951596e576af5d02ff009633ca3c5be1c832bdd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='93afc048ad72fa2a0e5ec56bcdcd8a34213eb262aee6f39a7e4dfeeb7e564c9d' ;; \t\t*) goRelArch='src'; goRelSha256='558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-16T14:40:45.349207738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T14:40:45.756674267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T14:40:46.990327038Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-16T14:40:51.178976861Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:983a8a7a9d549913dfef6a881cf7f3cf6a4afd170b62bd4b03e0ccb490a42352",
                    "sha256:58e65751f0f46b9a354d09fe450c0b134ec6fcdf31345f655e47485b1173b799",
                    "sha256:9306cb361c83ed65c5457106f0564ca6a80cee77d8e1a32369df452d53c157a3",
                    "sha256:5b6a2a5836848f99b1061fdfa0218bc6050f10b8ee10a7981a9bd3fa71171704",
                    "sha256:dbd9b391f3f74ed338acdf376fc5c7946b2245be7254640ac96b3032c7c45c34",
                    "sha256:a211d573e23fcf95c5ed33231c66c891266bc4d1402a68a9c72ddb9873ff142c",
                    "sha256:21b2a2afa133486488959e8570e1cf33eebb0601979edda1b8e830038d03d967"
                ]
            }
        },
        "1.11.10-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65522b69c1acabf61d2adb3e22fdb9fdaface10e1b4e8ec9e51615b015ec2f2b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "55850ca937d1178513d867b17f20a418ff968a6009b4fc6f8428338f13660245",
            "container_config": {
                "Hostname": "55850ca937d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65522b69c1acabf61d2adb3e22fdb9fdaface10e1b4e8ec9e51615b015ec2f2b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T13:09:32.828708864Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T13:07:30.156903799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:09:28.226489635Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T13:09:30.340670998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:09:30.740766164Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:09:32.368672158Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T13:09:32.828708864Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:2986017fe7ee59eedc9130e6c5396380b440f4c13b8e7b08c72025e0981a47b8",
                    "sha256:c7b252f973d719a960641fb8301c06a90424b22c77a27119c7e477e9a23b5cfa"
                ]
            }
        },
        "1.11.10-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65522b69c1acabf61d2adb3e22fdb9fdaface10e1b4e8ec9e51615b015ec2f2b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "55850ca937d1178513d867b17f20a418ff968a6009b4fc6f8428338f13660245",
            "container_config": {
                "Hostname": "55850ca937d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65522b69c1acabf61d2adb3e22fdb9fdaface10e1b4e8ec9e51615b015ec2f2b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T13:09:32.828708864Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T13:07:30.156903799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:09:28.226489635Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T13:09:30.340670998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:09:30.740766164Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:09:32.368672158Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T13:09:32.828708864Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:2986017fe7ee59eedc9130e6c5396380b440f4c13b8e7b08c72025e0981a47b8",
                    "sha256:c7b252f973d719a960641fb8301c06a90424b22c77a27119c7e477e9a23b5cfa"
                ]
            }
        },
        "1.11.10-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc35a5509d1683ddefab3640f0d079fc71ec3ace8e8973831ff3025058e6148b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "007223cf0d7052066cd05131db39c2d3146609422ae23b6b8efce9ae7c785dea",
            "container_config": {
                "Hostname": "007223cf0d70",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc35a5509d1683ddefab3640f0d079fc71ec3ace8e8973831ff3025058e6148b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-08T16:15:03.42566745Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-08T12:03:26.334916929Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7e8dcc40e246d53b86266855a2de8080d26e6b4ed9f594c1acc565784405735b in / "
                },
                {
                    "created": "2019-05-08T12:03:27.765340171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T13:04:33.641818469Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T13:04:42.293926726Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-05-08T13:05:22.992873375Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T16:14:01.188177571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T16:14:39.966940365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T16:14:57.898063243Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aefaa228b68641e266d1f23f1d95dba33f17552ba132878b65bb798ffa37e6d0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='29812e3443c469de6b976e4e44b5e6402d55f6358a544278addc22446a0abe8b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6743c54f0e33873c113cbd66df7749e81785f378567734831c2e5d3b6b6aa2b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='619ddab5b56597d72681467810c63238063ab0d221fe0df9b2e85608c10161e5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a6c7129e92fe325645229846257e563dab1d970bb0e61820d63524df2b54fcf8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='35f196abd74db6f049018829ea6230fde6b8c2e24d2da9f9e75ce0e6d0292b49' ;; \t\t*) goRelArch='src'; goRelSha256='df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-08T16:14:59.838596605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T16:15:00.588244056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T16:15:02.641999113Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-08T16:15:03.42566745Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21ec535fbc10d61a6261f020debe9cff61d7b1ba1155f813b0658c96edd1a98c",
                    "sha256:eb0f450d28b4994f5a1d4a8715e2d656048f8dbde032e970e5a600dd8586c224",
                    "sha256:3098ad1698c04c3f6cd081de1414d5e2abef8b20fc35c3012b22af32f260eb50",
                    "sha256:197d58449e8ef22b944596c803020660d8dab4f15b65d9555b6d48613750e1af",
                    "sha256:73d41ead59396a1334b4628da6a564cde0dc574ae176c195a6b2f4bb6aadc657",
                    "sha256:169af64744c051ee9a1d08fb58a7d90f23bcd07eb0e3c5c8eb1ea130e8bc840e",
                    "sha256:2d400e6de53665cb288ea614756880efa18ba9b2389a8fba8b9dcca7da2539f3"
                ]
            }
        },
        "1.11.11-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:797b97fe7e592d7a589c29b6efa4b323bb9961335839f1da22eee3719a4d32d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c25f7ba9e061e44c6e69386675b6798889529b0e63626e145c4620427a1b9d43",
            "container_config": {
                "Hostname": "c25f7ba9e061",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:797b97fe7e592d7a589c29b6efa4b323bb9961335839f1da22eee3719a4d32d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T21:02:30.90075572Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:57:43.708833417Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0fb1a3eecd6693893c4c94275505763f0c6432d1cbd38fea5c27baa5256b32aa in / "
                },
                {
                    "created": "2019-06-19T20:57:44.18832996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:57:48.156118792Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:57:49.70489381Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T21:00:25.412855392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:02:27.25448517Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T21:02:28.596788802Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:02:29.088629888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:02:30.497162102Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T21:02:30.90075572Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd857cff215ae4119c7f0be48a3adb1bdbffd36de3820ddb6aa7dae44d2616dd",
                    "sha256:fe15040bd2855ec5c14270fb89ae1514fa4bf00ce4174441d8c63c6bef48e9d9",
                    "sha256:25f5b6467d1b070fe3afa64562a0ec52b7d4201ed04c18ded16c90b72e19a61c",
                    "sha256:a33f2fcbd7ad22d4f4fffdaba9cc4e7fb87088f6f72952347a29979955b3330e",
                    "sha256:90e019936ca5d2724b9094ef04ce987c198b3664a2380e0c1c87f5139e9d2470"
                ]
            }
        },
        "1.11.11-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:797b97fe7e592d7a589c29b6efa4b323bb9961335839f1da22eee3719a4d32d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c25f7ba9e061e44c6e69386675b6798889529b0e63626e145c4620427a1b9d43",
            "container_config": {
                "Hostname": "c25f7ba9e061",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:797b97fe7e592d7a589c29b6efa4b323bb9961335839f1da22eee3719a4d32d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T21:02:30.90075572Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:57:43.708833417Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0fb1a3eecd6693893c4c94275505763f0c6432d1cbd38fea5c27baa5256b32aa in / "
                },
                {
                    "created": "2019-06-19T20:57:44.18832996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:57:48.156118792Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:57:49.70489381Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T21:00:25.412855392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:02:27.25448517Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T21:02:28.596788802Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:02:29.088629888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:02:30.497162102Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T21:02:30.90075572Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd857cff215ae4119c7f0be48a3adb1bdbffd36de3820ddb6aa7dae44d2616dd",
                    "sha256:fe15040bd2855ec5c14270fb89ae1514fa4bf00ce4174441d8c63c6bef48e9d9",
                    "sha256:25f5b6467d1b070fe3afa64562a0ec52b7d4201ed04c18ded16c90b72e19a61c",
                    "sha256:a33f2fcbd7ad22d4f4fffdaba9cc4e7fb87088f6f72952347a29979955b3330e",
                    "sha256:90e019936ca5d2724b9094ef04ce987c198b3664a2380e0c1c87f5139e9d2470"
                ]
            }
        },
        "1.11.11-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:541960051c2e20df1a9777b971efdba5659d783584ba461e0132c9e3b9f6dd8c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3610456e8b550062d720966bea94f1a91ef07782415ac814c4dfb971b0d53c9c",
            "container_config": {
                "Hostname": "3610456e8b55",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:541960051c2e20df1a9777b971efdba5659d783584ba461e0132c9e3b9f6dd8c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-13T00:39:32.419411322Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-13T00:37:13.374459935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:39:25.540157617Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-13T00:39:28.667379178Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:39:29.344680645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:39:31.679804544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-13T00:39:32.419411322Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:ea8440801cc4deba18bedaea118b377e4bc6018837d125cbd8c0002b654f8610",
                    "sha256:c33170a17882d66d2aae514fffffdcbab8dc18f0b0b0f6622ce964910d415aca"
                ]
            }
        },
        "1.11.11-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4709dddf27e5a1fcad50283003465491d34b589dfab0dcb5df050deac7604f2f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "42d6f687d764c57eb8ed463e55e8aa5c10993cf5a490c9d1df84590c60d7767a",
            "container_config": {
                "Hostname": "42d6f687d764",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4709dddf27e5a1fcad50283003465491d34b589dfab0dcb5df050deac7604f2f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-13T00:36:58.796090287Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-11T00:02:40.730434102Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a533ab960a52dd32ca40bdcb55083ba8c340e110f8519a3eda696b46a4a07165 in / "
                },
                {
                    "created": "2019-06-11T00:02:41.857103469Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T01:09:06.18785081Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T01:09:19.188919163Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T01:09:59.311016803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-13T00:33:07.620600241Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-13T00:36:29.528862872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:36:50.349592768Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2fd47b824d6e32154b0f6c8742d066d816667715763e06cebb710304b195c775' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c2b882a5fbb3bac5c9cc6d65bfe17a5febfe0251a339fc059306bb825dec9b17' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5ee39ea08e5d8c017658f36d0f969b17a44d49576214f4a00710f2d98bb773be' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c711fe5025608e14bcd0efda9403e9b8f05cb4a53a125e296d639c10d280a65f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='98ff7ff2367239e26745231aabeaf9d7e51c40b616bb9aa15d4376792ff581d1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='d7471874ed396f72dd550c3593c9f42d5e3d38a2cca7658e669305bf9023e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-13T00:36:53.998059032Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:36:54.505285962Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:36:56.358303678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-13T00:36:58.796090287Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4225e0635193370093a2fd719d5a931c4e757508ef70c53d8882d7f0f5fe0e74",
                    "sha256:862dec0bd83b1d9d82d3df614b08aae35ec90977f918f175a42aee9aa294af2a",
                    "sha256:fa20690210e58b6b5c9cb567059648e57ea2974e16c05736d101ccb280e59485",
                    "sha256:ca531cd5112e548df9f55b83fabbfec0ce48c41f3387d321b8f2d2693b04362b",
                    "sha256:0d2ecef77f26631c6512f793fcba307f6e7a7050ff656e4decb5416c13f791cc",
                    "sha256:8c5acb2893b4ef429d49821ff405d116add2d1a92d85433a1115bfa8aed7a533",
                    "sha256:e858ecaee0485f85b695d060dd84bf5ae2762c6a559e467eb4647312429a7182"
                ]
            }
        },
        "1.11.12-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01be22a995b6e8851d446af1fd99ce89d297e53f5bc3a96856ba7f252d23cb4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ad827c113d7720555982f698cc653fdcae4f43cade27416ef7ff0528f86a3ce7",
            "container_config": {
                "Hostname": "ad827c113d77",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01be22a995b6e8851d446af1fd99ce89d297e53f5bc3a96856ba7f252d23cb4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T01:02:21.780452978Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:57:38.657292999Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:679b9d60ff413960c630af8cd74244faeae07446f35b19f4afec78449126c6b6 in / "
                },
                {
                    "created": "2019-07-11T21:57:39.11721023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:13:25.116005422Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:13:26.641844609Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-20T00:59:50.521021261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:02:17.892952142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T01:02:19.812852003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:02:20.16485728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:02:21.381181231Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T01:02:21.780452978Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c39fe739bfebaed288acb4e856ab70b62f8791219059fcd04489638612557d1b",
                    "sha256:457abfd8c16e04953fcbf8bc1555dfbdc25074bb2e16b016c6508ebd38a8d3db",
                    "sha256:da0bf5abf1ba975b68f6e0ea25c23d29d3918fd9bc6bddfa45123489c58e3828",
                    "sha256:2b21fdc8e5e129c0dc2561679964deefc698983e38308b60ae4baf500804eb4b",
                    "sha256:9430c71b2f9fa9c5eb7a422c16e4fef315de76213ce84b287b689c64fccc9158"
                ]
            }
        },
        "1.11.12-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01be22a995b6e8851d446af1fd99ce89d297e53f5bc3a96856ba7f252d23cb4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ad827c113d7720555982f698cc653fdcae4f43cade27416ef7ff0528f86a3ce7",
            "container_config": {
                "Hostname": "ad827c113d77",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01be22a995b6e8851d446af1fd99ce89d297e53f5bc3a96856ba7f252d23cb4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T01:02:21.780452978Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:57:38.657292999Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:679b9d60ff413960c630af8cd74244faeae07446f35b19f4afec78449126c6b6 in / "
                },
                {
                    "created": "2019-07-11T21:57:39.11721023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:13:25.116005422Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:13:26.641844609Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-20T00:59:50.521021261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:02:17.892952142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T01:02:19.812852003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:02:20.16485728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:02:21.381181231Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T01:02:21.780452978Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c39fe739bfebaed288acb4e856ab70b62f8791219059fcd04489638612557d1b",
                    "sha256:457abfd8c16e04953fcbf8bc1555dfbdc25074bb2e16b016c6508ebd38a8d3db",
                    "sha256:da0bf5abf1ba975b68f6e0ea25c23d29d3918fd9bc6bddfa45123489c58e3828",
                    "sha256:2b21fdc8e5e129c0dc2561679964deefc698983e38308b60ae4baf500804eb4b",
                    "sha256:9430c71b2f9fa9c5eb7a422c16e4fef315de76213ce84b287b689c64fccc9158"
                ]
            }
        },
        "1.11.12-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d80529a6caf0af5016e82c85476f12633331742efa5bffe04719797e9cd425d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d80cb127bf9afe6d325713383c7a62dd5594f570ffa1bc8feffe2a9a92fa4967",
            "container_config": {
                "Hostname": "d80cb127bf9a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d80529a6caf0af5016e82c85476f12633331742efa5bffe04719797e9cd425d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-09T01:08:24.206958868Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-09T01:06:19.830712573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T01:08:20.223303878Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-09T01:08:21.679051921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T01:08:22.143630151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T01:08:23.698492376Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-09T01:08:24.206958868Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:897956eb4454805d6a8daedc7d20e9e129b4e8fcbc1ff9df0c7f2f0f80df98f5",
                    "sha256:91bc233c51a9d2de40bff2a6656437a4fd67da93fb4c64ce6c8f0ec4d67eec4a"
                ]
            }
        },
        "1.11.12-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:95724c1f000eeb6aec85311b28dbb89e3eeade1686cf5fe16adcb2fc1292d804",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "31e586b379632336c267b13f08aed5cf41d960975a1677359d2db1ed336a17a3",
            "container_config": {
                "Hostname": "31e586b37963",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:95724c1f000eeb6aec85311b28dbb89e3eeade1686cf5fe16adcb2fc1292d804",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T00:59:42.725206006Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:07:09.631726878Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fa9102440e38c2e5ab7e7ba08b43246e370dceb03cfb40debb00f4975b4d5eeb in / "
                },
                {
                    "created": "2019-07-09T21:07:11.0713165Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:32:18.388812638Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:32:31.861484705Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:33:10.768283523Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T00:54:23.868946547Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-20T00:59:18.91695907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T00:59:38.665632111Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T00:59:40.532442334Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T00:59:40.932956827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T00:59:42.309169998Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T00:59:42.725206006Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c8f1eeabe991e1dfde8e915e160d95644d8a503c9a1a82668e523e03ae00a9d",
                    "sha256:5eb82648b148a4843c308e1c50abc9b02c7097f382fdb9aa1a210de55b858467",
                    "sha256:15dd99db2b366070411cd4edd1dea413fac597f5559726e8133f7cf0e13e513d",
                    "sha256:5a2c96af125bd021a99d47b340c1ca893a005bb3aafd2d06d175010d79d5ddc3",
                    "sha256:b3ac868408dee5d1b69e85910085399968f406b2f91a20692f83dd7c466cfaf5",
                    "sha256:096d84e23cb465fa66e3caa63ffc394cd39c5b546abe7d6b38d8c58e55d026c8",
                    "sha256:f4b3bba099b4bab99941ab3664a309a17df5197dfb9eeefd2cd83d91d270f34c"
                ]
            }
        },
        "1.11.12-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf592f20e6c091444293e27c1e62d8e604393bf33de79f66097d9291b64e3222",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ca166dc7462e3e032535972d2eee5ec325a9139524523ae3402f8a6e52518a9b",
            "container_config": {
                "Hostname": "ca166dc7462e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf592f20e6c091444293e27c1e62d8e604393bf33de79f66097d9291b64e3222",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-10T00:56:53.14444998Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:12:58.996023447Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00322e24567c3cea35b2051e88033c77243c4fdc311040b784d7551188ae0d62 in / "
                },
                {
                    "created": "2019-07-09T21:12:59.910888993Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:45:31.060437579Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:45:42.686936017Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:46:25.025749879Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T00:55:30.372440861Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T00:56:23.307994551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T00:56:46.631901019Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-10T00:56:48.47200158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T00:56:49.430832513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T00:56:51.902614764Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-10T00:56:53.14444998Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e65f419047418836c52d4021340f6da0f1498f2edb920ad181bb923571c61929",
                    "sha256:21a76083529eaa8b41100837c8d41341b8aedff1a7a8379140a84a63ba8ded6d",
                    "sha256:d18155c9bf86861567d09b7366e3a3b6da339d9e513abf93a97902ab6171a197",
                    "sha256:dedd08b13608d6fce38ff6118d490990f62e41a89afcc54b38ecfde0fe09a37f",
                    "sha256:7e0b808a9e7dfc9c364ad423efd611991cea1641f5b6a3a98d4828c63e4abb15",
                    "sha256:782e14f377c763248e6f75284be7646a4fe30d62864f382e5f1e6ce3f4ad87f8",
                    "sha256:f320bc653c693eb44eb03d5388f505181b687b54dccb832eaf607474254af1d7"
                ]
            }
        },
        "1.11.13-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3363cd490df3fa579abbe28bd56752361518ff2382f0ced18abe3ec026d3a6bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c86f4d55c284aa23198855c5d4b3ef90c66a284f11458838160c4431dfd6e07a",
            "container_config": {
                "Hostname": "c86f4d55c284",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3363cd490df3fa579abbe28bd56752361518ff2382f0ced18abe3ec026d3a6bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:20:45.240896299Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:18:09.630137984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:40.984018209Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:20:43.064842069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:43.408746892Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:44.773344413Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:20:45.240896299Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:e62bf205c07623bac270afc3b9fbd30dbee2468263c3f1095a98b48b5cb1fcd4",
                    "sha256:e76031533fcedfa53c4f3ed58031a2e3b972bce153feaa4e2e3eff2d3855f504"
                ]
            }
        },
        "1.11.13-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3363cd490df3fa579abbe28bd56752361518ff2382f0ced18abe3ec026d3a6bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c86f4d55c284aa23198855c5d4b3ef90c66a284f11458838160c4431dfd6e07a",
            "container_config": {
                "Hostname": "c86f4d55c284",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3363cd490df3fa579abbe28bd56752361518ff2382f0ced18abe3ec026d3a6bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:20:45.240896299Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:18:09.630137984Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:40.984018209Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:20:43.064842069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:43.408746892Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:20:44.773344413Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:20:45.240896299Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:e62bf205c07623bac270afc3b9fbd30dbee2468263c3f1095a98b48b5cb1fcd4",
                    "sha256:e76031533fcedfa53c4f3ed58031a2e3b972bce153feaa4e2e3eff2d3855f504"
                ]
            }
        },
        "1.11.13-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:72c92d52e5db29f6b111e5175e92a06b614fe3606b457c921cfb21e475e98463",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "14642f3d53097ecd9a7fafab5a391a4f9e498c0c4620fb3a03fca03cd5b27f84",
            "container_config": {
                "Hostname": "14642f3d5309",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:72c92d52e5db29f6b111e5175e92a06b614fe3606b457c921cfb21e475e98463",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:43:25.496834614Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:40:56.88173948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:22.300276622Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:43:23.364890102Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:23.748719988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:25.085047879Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:43:25.496834614Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:371c7193083ab807e72edd77ac3e84331a8998b2118e2a0beedf6ebd7c45dcc6",
                    "sha256:336bacbc5375920e2ec4cc69a4fb0968dab3cb41726f8744777bbdb6cce3873b"
                ]
            }
        },
        "1.11.13-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a489f3ce06765302aa263687d10aba7846c107168658d4bc0f970986001db6e4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e85e5f90171dd95bdb01382b90a82374c2a1b514fb4d160e2abb234333450308",
            "container_config": {
                "Hostname": "e85e5f90171d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a489f3ce06765302aa263687d10aba7846c107168658d4bc0f970986001db6e4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:00:27.025541437Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:59:44.029442993Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9c8bae31876c4f1a65b716e728f9b7e1573ec698b6fe8daaeb5f3dc080bb131 in / "
                },
                {
                    "created": "2019-08-14T00:59:45.225380675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:07:03.984167697Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:07:14.698888205Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:07:49.504945911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:01.52711595Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:00:00.833362354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:20.43197835Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:00:24.789817066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:25.198102809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:26.609601259Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:00:27.025541437Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd55307db9b60c191231d44adbe5f4c2dda3c7cfedf51fed934dbcac33583bd",
                    "sha256:ffe59162282799874b7e5c25bfe9b30a8dd63abc8c5400b5aa75e10cd6021112",
                    "sha256:b03ae013300698b9326982514f3ed998d6f1974875945bddb1ca7c4b34f88586",
                    "sha256:ae9e1918717cae0fc72b7bc4763eed8cadd09354d0d635beea1f24942ff0fbfb",
                    "sha256:17e3e4434a9b309d3fef8d6bfd711562bc720973e7ba619d0463044326fa5b0b",
                    "sha256:cfa625203474af5013ca941f7439481c192c582fea13c81fdbde351a3caf9935",
                    "sha256:30bb7938a4839aff41c8011b6dd34b87a34ec1143a3744adf4c4ba6a45b8e53d"
                ]
            }
        },
        "1.11.13-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69dc3ed8a4b7d18ca82a4574169ee876326652d1c8607cc98282f01c2df89d99",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4ca07f6f769e7cc36d8fa2cbb66e996aa55487908b0db807c087d591019f5f43",
            "container_config": {
                "Hostname": "4ca07f6f769e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69dc3ed8a4b7d18ca82a4574169ee876326652d1c8607cc98282f01c2df89d99",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:00:58.716886637Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T01:05:03.68205404Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3db44b151cbde9df965afdae57262daa20fbdde74d80e65b10942ee7755fc910 in / "
                },
                {
                    "created": "2019-08-14T01:05:04.384257407Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:19:09.481649797Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:19:19.234255684Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:19:55.917988948Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:59:20.63762004Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:00:35.317382137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:53.643125475Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:00:56.709482458Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:57.076892732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:00:58.293428703Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:00:58.716886637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a020bd80c571284085f3fd56a1b16b7fa32c0dcd2563abb3f8bcce543073b14",
                    "sha256:2640a1b6b27976f5a7b83b06306e4956335b2d86b3c79f65d6249fc14f352cae",
                    "sha256:27ee615705f25e044d2e055b7c4b52ce4cd5de649218dbaedb479511f535e036",
                    "sha256:ce72f6fb32c920daf7bd54fe825057a00f71ec49862098cc906bf417bc743fc2",
                    "sha256:6d30c6a80efea902d3c634b080b642315e8fa65578fca52261f186e7dbe50e52",
                    "sha256:e59b517fc971bbfe3c4ae817287c7bd5fe4fe3ebbefa645e31bd5c83986e2160",
                    "sha256:34438acdf6cd54d9fde4e0e2b44cd8a098d6f258856b047cc9eb26b9e2149c06"
                ]
            }
        },
        "1.11.2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8dbce729b5157e203f08d1d17012baa3c1c2a5d67c3f11a4adc716f9598e1a39",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "435a54634c27a4165da158a661d31b649e08b2f543dd3907eebbc9c914252437",
            "container_config": {
                "Hostname": "435a54634c27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8dbce729b5157e203f08d1d17012baa3c1c2a5d67c3f11a4adc716f9598e1a39",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-16T22:51:35.434097719Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T13:08:47.189557905Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:085a6a2a32a05acfff8d2b179dad7789d649aca5cf2565a5b5490403e3d3cea0 in / "
                },
                {
                    "created": "2018-11-16T13:08:48.678757303Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T18:17:27.402519866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T18:17:38.190322284Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T18:18:32.210273961Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T22:50:40.728462544Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T22:50:42.038164133Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T22:51:11.150121625Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1dfe664fa3d8ad714bbd15a36627992effd150ddabd7523931f077b3926d736d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b9d16a8eb1f7b8fdadd27232f6300aa8b4427e5e4cb148c4be4089db8fb56429' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='98a42b9b8d3bacbcc6351a1e39af52eff582d0bc3ac804cd5a97ce497dd84026' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e74f2f37b43b9b1bcf18008a11e0efb8921b41dff399a4f48ac09a4f25729881' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='23291935a299fdfde4b6a988ce3faa0c7a498aab6d56bbafbf1e7476468529a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a67ef820ef8cfecc8d68c69dd5bf513aaf647c09b6605570af425bf5fe8a32f0' ;; \t\t*) goRelArch='src'; goRelSha256='042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-16T22:51:22.078084221Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T22:51:22.86219378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T22:51:34.578529131Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-16T22:51:35.434097719Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:23b83194cf993950179ad2aabfb02f408351b638e48585cd57c84c1f834438fd",
                    "sha256:d6dd60e5d63925b22c7ea0086cac66556f342b228f10c843dd30d7ecbb6e6146",
                    "sha256:14ee81a45c85fd9a922d68675f30060e850c618691382f0f898b2f22c2629d58",
                    "sha256:f7ec92976527e85736e31866639e7cbaad0b12c5e2ad42b11c9093b866f86baf",
                    "sha256:4cf59f28267a1f3a306d6a317adc39cc9f71d380c4bdf9370b6e2d7186cd4edd",
                    "sha256:796168805d1c06c68793d454a450fa419b4f0f4e2d2de57c577d7d35a13c69ac",
                    "sha256:4cc755a7b36dd44b3aa7480e876696e32df8f1ef23630e511fd8ed17d7fada5b"
                ]
            }
        },
        "1.11.3-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3d9e18dddc87c48754fba370d9343021109a4bf65449dc34d8ff7077260df3aa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ed1d2a5a2ae1476cf28169d3cd993b6a582f089cb77bf648c08f4ed601bbc727",
            "container_config": {
                "Hostname": "ed1d2a5a2ae1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3d9e18dddc87c48754fba370d9343021109a4bf65449dc34d8ff7077260df3aa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:58:17.119093695Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T13:08:47.189557905Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:085a6a2a32a05acfff8d2b179dad7789d649aca5cf2565a5b5490403e3d3cea0 in / "
                },
                {
                    "created": "2018-11-16T13:08:48.678757303Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T18:17:27.402519866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T18:17:38.190322284Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T18:18:32.210273961Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T22:50:40.728462544Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-14T12:57:41.281715754Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:58:00.554211887Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d20a4869ffb13cee0f7ee777bf18c7b9b67ef0375f93fac1298519e0c227a07f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='384933e6e97b74c5125011c8f0539362bbed5a015978a34e441d7333d8e519b9' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='723c54cb081dd629a44d620197e4a789dccdfe6dee7f8b4ad7a6659f76952056' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c3fadf7f8652c060e18b7907fb8e15b853955b25aa661dbd991f6d6bc581d7a9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='57c89a047ef4f539580af4cadebf1364a906891b065afa0664592e72a034b0ee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='183258709c051ceb2900dee5ee681abb0bc440624c8f657374bde2a5658bef27' ;; \t\t*) goRelArch='src'; goRelSha256='7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:58:02.440707517Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:58:08.708526862Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:58:16.663095324Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:58:17.119093695Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:23b83194cf993950179ad2aabfb02f408351b638e48585cd57c84c1f834438fd",
                    "sha256:d6dd60e5d63925b22c7ea0086cac66556f342b228f10c843dd30d7ecbb6e6146",
                    "sha256:14ee81a45c85fd9a922d68675f30060e850c618691382f0f898b2f22c2629d58",
                    "sha256:f7ec92976527e85736e31866639e7cbaad0b12c5e2ad42b11c9093b866f86baf",
                    "sha256:4cf59f28267a1f3a306d6a317adc39cc9f71d380c4bdf9370b6e2d7186cd4edd",
                    "sha256:b523db3702f5b616ffe68b5a17f0d47b36b8c345297f8a0c540c815af31cd364",
                    "sha256:2c97f67c966f19e6a21fcd0774d0cf121d181377e2e2da9238a5c0975c0149e6"
                ]
            }
        },
        "1.11.4-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2865a7032ef5ec5c0c398022dd28233ce727a7f4d70518790d4e7ef6c7d16d81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6c0ae0e339f3d62184653d5d3e7bfe75cf6c74db75e4f8393b6b56620f36d415",
            "container_config": {
                "Hostname": "6c0ae0e339f3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2865a7032ef5ec5c0c398022dd28233ce727a7f4d70518790d4e7ef6c7d16d81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-23T18:36:23.293113965Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-23T13:04:29.016610652Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f58fcfcac4bd31e03fe733b7c850ff7f67728d2532fc54252c02a91c66445c88 in / "
                },
                {
                    "created": "2019-01-23T13:04:29.816333777Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T13:44:17.486692114Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T13:44:26.61970133Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-01-23T13:45:09.551107285Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T18:35:07.841246579Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T18:35:55.169761933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T18:36:19.569724188Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fb26c30e6a04ad937bbc657a1b5bba92f80096af1e8ee6da6430c045a8db3a5b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f7a71d27fef69f654a93e265560c8d9db1a2ca3f1dcdbe5288c46facfde5821' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b76df430ba8caff197b8558921deef782cdb20b62fa36fa93f81a8c08ab7c8e7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cecd2da1849043237d5f0756a93d601db6798fa3bb27a14563d201088aa415f3' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1f10146826acd56716b00b9188079af53823ddd79ceb6362e78e2f3aafb370ab' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4467442dacf89eb94c5d6f9f700204cb360be82db60e6296cc2ef8d0e890cd42' ;; \t\t*) goRelArch='src'; goRelSha256='4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-23T18:36:20.913107324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T18:36:21.280834113Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T18:36:22.781142949Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-23T18:36:23.293113965Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b85f84d47b3634a6ba46549f8cc9f83c6ec4fc51767b5c09321675604cc96aee",
                    "sha256:26f8f159ee1e700058d29332d0c116e4421d8bb5ae00e0d471fbce7203f23850",
                    "sha256:0e6f33edbddecf6d58ff68478a761c900c55d768b0e2510db5eb3dfbf5dc1bbe",
                    "sha256:9f1c0d1133ff027e3d6f8d2cac8b842a7738815754e4985c88b38501f9538434",
                    "sha256:7b816c02dd18289c64e260dc48541306b414e6cc9709e8d91a1d077788ca5845",
                    "sha256:997a75ca3ae25c5e10f674f9bc623702482e6230dc20656dd767f5f4f28f7ba2",
                    "sha256:8c109d936ab31d106ad38fc1e87338c3ee5aaed2768bed0d77088ad6ccbc8533"
                ]
            }
        },
        "1.11.5-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9028a2f19ea47348cdbb9ab931a0bfa3893bd1f9a3c1556470e5c8809d1cceb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2fbf8d9ea16a20bf3ebaa86f3bf1679a97ccc46b924c76dade5cbbb2cdd5f705",
            "container_config": {
                "Hostname": "2fbf8d9ea16a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9028a2f19ea47348cdbb9ab931a0bfa3893bd1f9a3c1556470e5c8809d1cceb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-12T12:17:55.400489521Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-12T12:15:53.033245239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:17:51.262311636Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-12T12:17:53.17678854Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:17:53.557103477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:17:54.961752466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-12T12:17:55.400489521Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:3f9cb71492ecb0ffc4c3bfc8c08590b2ac276a82c25b66efeba542db0550e1e4",
                    "sha256:a19dba3b60fb587725b12de6f5466fcb151d3dd155a9422e3b0147320acb4175"
                ]
            }
        },
        "1.11.5-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9028a2f19ea47348cdbb9ab931a0bfa3893bd1f9a3c1556470e5c8809d1cceb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2fbf8d9ea16a20bf3ebaa86f3bf1679a97ccc46b924c76dade5cbbb2cdd5f705",
            "container_config": {
                "Hostname": "2fbf8d9ea16a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9028a2f19ea47348cdbb9ab931a0bfa3893bd1f9a3c1556470e5c8809d1cceb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-12T12:17:55.400489521Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-12T12:15:53.033245239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:17:51.262311636Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-12T12:17:53.17678854Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:17:53.557103477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:17:54.961752466Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-12T12:17:55.400489521Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:3f9cb71492ecb0ffc4c3bfc8c08590b2ac276a82c25b66efeba542db0550e1e4",
                    "sha256:a19dba3b60fb587725b12de6f5466fcb151d3dd155a9422e3b0147320acb4175"
                ]
            }
        },
        "1.11.5-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:93efee75e65fdaaabcd62c76bc360b0f2ad798a816e8426db8e8496e05dfb962",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a7b277d6824aa9c028a16ed2f6158f5568cbca547ec11f535fb9d4897f9c50d4",
            "container_config": {
                "Hostname": "a7b277d6824a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:93efee75e65fdaaabcd62c76bc360b0f2ad798a816e8426db8e8496e05dfb962",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T16:41:57.934074568Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-05T13:10:34.15957375Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f0ec0cbcef5902fe5ef35892898a19e6c61f5c422ac3d47500d42067ad7fef8 in / "
                },
                {
                    "created": "2019-03-05T13:10:35.44625625Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T13:50:19.722876608Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T13:50:29.288438525Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T13:51:36.573533911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T16:40:40.643542129Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T16:41:22.359372551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:41:50.735365877Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ff54aafedff961eb94792487e827515da683d61a5f9482f668008832631e5d25' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b26b53c94923f78955236386fee0725ef4e76b6cb47e0df0ed0c0c4724e7b198' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6ee9a5714444182a236d3cc4636e74cfc5e24a1bacf0463ac71dcf0e7d4288ed' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acd8e05f8d3eed406e09bb58eab89de3f0a139d4aef15f74adeed2d2c24cb440' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66e83152c68cb35d41f21453377d6a811585c9e01a6ac54b19f7a6e2cbb3d1f5' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='56209e5498c64a8338cd6f0fe0c2e2cbf6857c0acdb10c774894f0cc0d19f413' ;; \t\t*) goRelArch='src'; goRelSha256='bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T16:41:53.554030876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:41:54.502308192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:41:57.098915385Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T16:41:57.934074568Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd785931aef8a8c6311770b31830931cd2bc74a4fe67b36f0dacf3d710a6d09",
                    "sha256:6d6f2346ec432f051c2ac5655dede90bd8a04cfed3f516905670cf088cc6bd98",
                    "sha256:8e0d4c78db84cd259e041eb4d652bf83716c0f294c41da693034e96b18e26146",
                    "sha256:b67191dba4fbd16cbd4166702c960f7b1e2a6367188d2e45d456256224fecaba",
                    "sha256:443cd5b73f071cf7106f1adf4577b40688fae75cbcf577cea9f03c47fcefbc7f",
                    "sha256:c55e9c1f50644a80ffeaa7a72eec686403cf2751697bc2b2d217f842852ca32e",
                    "sha256:7de80d9b9db82c4bc4f952fc5f644b9d1fd1dac1587df7ccf0de7eb3fd48fb59"
                ]
            }
        },
        "1.11.6-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dd8fa4f3b32b8ccd4cb26678017f5f34d907e7477067338ecefdff940211f755",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b39689927c39e888c3777581702c56d0f986ebe0263ad7dca6e0b6e7d53d098",
            "container_config": {
                "Hostname": "8b39689927c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dd8fa4f3b32b8ccd4cb26678017f5f34d907e7477067338ecefdff940211f755",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T12:03:42.304553002Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T12:01:36.400899512Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:03:37.422370201Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T12:03:39.958227866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:03:40.405125949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:03:41.845137223Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T12:03:42.304553002Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:f52b618123cb5e25f8c6ea8602f2fa06a95c2f5c20d3c5b3897638e5d19c7fd8",
                    "sha256:441b78b04b3b2f2a143bdb7660a9dc04dd431ca441fa57647829dfa1d5389703"
                ]
            }
        },
        "1.11.6-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dd8fa4f3b32b8ccd4cb26678017f5f34d907e7477067338ecefdff940211f755",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b39689927c39e888c3777581702c56d0f986ebe0263ad7dca6e0b6e7d53d098",
            "container_config": {
                "Hostname": "8b39689927c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dd8fa4f3b32b8ccd4cb26678017f5f34d907e7477067338ecefdff940211f755",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T12:03:42.304553002Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T12:01:36.400899512Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:03:37.422370201Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T12:03:39.958227866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:03:40.405125949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:03:41.845137223Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T12:03:42.304553002Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:f52b618123cb5e25f8c6ea8602f2fa06a95c2f5c20d3c5b3897638e5d19c7fd8",
                    "sha256:441b78b04b3b2f2a143bdb7660a9dc04dd431ca441fa57647829dfa1d5389703"
                ]
            }
        },
        "1.11.6-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ee418cb4090013de09f1fec715d3ece53d2e1715a69ab27d5c7cfa2a4d6646da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a69698a5420284ce52a172ccaa81ae54f9da4d18d1249a918dd17b6ae78632c4",
            "container_config": {
                "Hostname": "a69698a54202",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ee418cb4090013de09f1fec715d3ece53d2e1715a69ab27d5c7cfa2a4d6646da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T16:04:27.781805647Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T12:07:23.256165411Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb82b6b8aa709ab4455c13e7e19562bc1ddbd415015cd576612b0fc51c4e7007 in / "
                },
                {
                    "created": "2019-03-27T12:07:24.904979496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T13:12:54.886216918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T13:13:04.596635938Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T13:13:51.406048099Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:27.514463313Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:04:00.96263882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:04:21.121253414Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4e1864282d8d20010d6385a12a1e35641783a380a7c57907bfb46a5499c5eb49' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62597fe72f1170cbb939958823555a701510e00362eb8a10b7ace6e59c8e7e6e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='29f64505cea47c57a46e2c8001ecf8d0c01cbf1ec86de96f4e3126b94a12ebb7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7d90e484bb92e68648c1a7b6b1790e97af33718bae457d2ee02ee5d1dd0ce2b7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43d7cc7d3cdc1e57af33a13296b48713735f55e25aa655187afb19a707143c77' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c7f83fa5975a8f11641962bad79f89a7e17a6580d0d21ca828733dc0cfe470f7' ;; \t\t*) goRelArch='src'; goRelSha256='a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T16:04:25.157564213Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:04:25.565140759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:04:27.178036203Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T16:04:27.781805647Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bb8a900019f4f93e608b1ac8c0b2f2a8f286466479bc59d7b60988c85bf2dec",
                    "sha256:de6be9fabd777cb454b03b09beb60ba563a6d88c2a0ab1d3ea38ef3f34f217f6",
                    "sha256:c2964fd3bfec5803b62c9cdeac94649b821ef954f543a166ef493f97758971da",
                    "sha256:5351f61d4e259f59c875f2a494ca7ee9d8989679ab3b1a719d909619912b8af6",
                    "sha256:85323c8403860f78968013e2b8b5e584bf6ca5119048feb6ab81488215349963",
                    "sha256:77a97cbd3b00deb06d6b5ed9adfd2353c39fc800d4b7f3862c57626da8f920f9",
                    "sha256:e15795f9dcd70589db2b3b38be893010f637815bae9e0ecd6418afd755677459"
                ]
            }
        },
        "1.11.7-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67042511bb438cc2139f4adf913c7e79b924362cf4b194a61007e0955454b370",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "178f284f2e8c9dfb56e6eedfef0fc8aa2c9ba841c119a666c210926a7dbde321",
            "container_config": {
                "Hostname": "178f284f2e8c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67042511bb438cc2139f4adf913c7e79b924362cf4b194a61007e0955454b370",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T12:03:26.209313296Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T12:00:57.25293175Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:03:21.771234103Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T12:03:23.383097681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:03:23.85710149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:03:25.655667982Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T12:03:26.209313296Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:5f03dd7bda895b6e64dde1ec4165257f177c9a7899824d5b1effb28f7970e468",
                    "sha256:e6cefdf2c0a946c376ec0f4a1aa36cf1c51e76f3937975808ff2c21919e0befb"
                ]
            }
        },
        "1.11.7-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67042511bb438cc2139f4adf913c7e79b924362cf4b194a61007e0955454b370",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "178f284f2e8c9dfb56e6eedfef0fc8aa2c9ba841c119a666c210926a7dbde321",
            "container_config": {
                "Hostname": "178f284f2e8c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67042511bb438cc2139f4adf913c7e79b924362cf4b194a61007e0955454b370",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T12:03:26.209313296Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T12:00:57.25293175Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:03:21.771234103Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T12:03:23.383097681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:03:23.85710149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:03:25.655667982Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T12:03:26.209313296Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:5f03dd7bda895b6e64dde1ec4165257f177c9a7899824d5b1effb28f7970e468",
                    "sha256:e6cefdf2c0a946c376ec0f4a1aa36cf1c51e76f3937975808ff2c21919e0befb"
                ]
            }
        },
        "1.11.7-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f83b7d2a21d036f6d8556f1d296c4f71b82ac08fdd125ac948d30a6c2ae44d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "45e67ceb03a3f593b75b6bf0925f981338b804d0363614d8596e3193eb4435c9",
            "container_config": {
                "Hostname": "45e67ceb03a3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f83b7d2a21d036f6d8556f1d296c4f71b82ac08fdd125ac948d30a6c2ae44d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T12:00:51.188662475Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T12:07:23.256165411Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb82b6b8aa709ab4455c13e7e19562bc1ddbd415015cd576612b0fc51c4e7007 in / "
                },
                {
                    "created": "2019-03-27T12:07:24.904979496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T13:12:54.886216918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T13:13:04.596635938Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T13:13:51.406048099Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:27.514463313Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-06T12:00:29.247303992Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:47.046163961Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='db687814288b3b541c1754dfd4ecc2b8fd0d5e7995624945e3054a350ca573d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7d6ae2e119a432a4b00a6dc2c2085f56ead4973f40d58e534308f1535b45afc2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='fe7ba5046aa4f52ae8fa36531aac4a949ad8e10c02b0f4aa05a420b4e803f8c6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='86d11a58bd99298719cb7ebea160255aefc56735d14089d2b2241d581967a482' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43b04f58b37808f86f526e6f1a8d6643fe196c1314acc3d7db710ec9ae960d18' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='178932743c7af70c94f170f800202f490e0f85e74796dabe0a23d50630ba0333' ;; \t\t*) goRelArch='src'; goRelSha256='cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T12:00:49.064965268Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:49.473178497Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:50.785302367Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T12:00:51.188662475Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bb8a900019f4f93e608b1ac8c0b2f2a8f286466479bc59d7b60988c85bf2dec",
                    "sha256:de6be9fabd777cb454b03b09beb60ba563a6d88c2a0ab1d3ea38ef3f34f217f6",
                    "sha256:c2964fd3bfec5803b62c9cdeac94649b821ef954f543a166ef493f97758971da",
                    "sha256:5351f61d4e259f59c875f2a494ca7ee9d8989679ab3b1a719d909619912b8af6",
                    "sha256:85323c8403860f78968013e2b8b5e584bf6ca5119048feb6ab81488215349963",
                    "sha256:12b3b84f15903b49d8c35838fdf6af0226647300f8e4de74f0d4f0291de56221",
                    "sha256:6e8b0e33e45257eeb5bd013b0db6f16a529c6b627b9b19ed60f40e22271a4b9b"
                ]
            }
        },
        "1.11.8-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10fe62541dd408edd7380a305021119b7214aa3aa282f92f45fe68fe02032ca6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9d519271a138785e2ae4d80ee4530df7a382d7e598a9befed21e671b41307fdc",
            "container_config": {
                "Hostname": "9d519271a138",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10fe62541dd408edd7380a305021119b7214aa3aa282f92f45fe68fe02032ca6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T12:41:10.533102923Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:57:47.813512109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a27b74f23795a1f205247dcd6eff48ac56f0b8f2afe0c358199a0b60f694861 in / "
                },
                {
                    "created": "2019-04-10T11:57:48.591796864Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:36:38.153828354Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T12:36:39.465588665Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T12:39:09.897937044Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:41:05.575371694Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T12:41:07.999200037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:41:08.409266049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:41:10.013731752Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T12:41:10.533102923Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8c6532c0d10d7ef8e9390cb281500d4ae7418065f66e2a866b2b4517187ef92",
                    "sha256:c068725b85a6fec4ec24c5072fa2d67b41cff7f3f0402f4f51c520190d67c363",
                    "sha256:3ed8fc64895d3629ebf4528e47f7b0f3215d3c7461fb158923cf6b7b2415084f",
                    "sha256:a88dc8dd396810ad0f57bb3c786fdeafd27860d33ac0d30dfd107387755d3c27",
                    "sha256:74d58c7a16f20a2587db103dd5957e8bc3081a13349a2787e1171eedd95686d4"
                ]
            }
        },
        "1.11.8-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10fe62541dd408edd7380a305021119b7214aa3aa282f92f45fe68fe02032ca6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9d519271a138785e2ae4d80ee4530df7a382d7e598a9befed21e671b41307fdc",
            "container_config": {
                "Hostname": "9d519271a138",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:10fe62541dd408edd7380a305021119b7214aa3aa282f92f45fe68fe02032ca6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T12:41:10.533102923Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:57:47.813512109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a27b74f23795a1f205247dcd6eff48ac56f0b8f2afe0c358199a0b60f694861 in / "
                },
                {
                    "created": "2019-04-10T11:57:48.591796864Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:36:38.153828354Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T12:36:39.465588665Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T12:39:09.897937044Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:41:05.575371694Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T12:41:07.999200037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:41:08.409266049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:41:10.013731752Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T12:41:10.533102923Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8c6532c0d10d7ef8e9390cb281500d4ae7418065f66e2a866b2b4517187ef92",
                    "sha256:c068725b85a6fec4ec24c5072fa2d67b41cff7f3f0402f4f51c520190d67c363",
                    "sha256:3ed8fc64895d3629ebf4528e47f7b0f3215d3c7461fb158923cf6b7b2415084f",
                    "sha256:a88dc8dd396810ad0f57bb3c786fdeafd27860d33ac0d30dfd107387755d3c27",
                    "sha256:74d58c7a16f20a2587db103dd5957e8bc3081a13349a2787e1171eedd95686d4"
                ]
            }
        },
        "1.11.8-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0717a67bf0361cc18d1898701cddd756c20e0fa961ad54564d3ccd67fadb9633",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c0ed87faa3f035a2b24965435af7fda3df2c8ffd2508427100dd41fd5974aab2",
            "container_config": {
                "Hostname": "c0ed87faa3f0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0717a67bf0361cc18d1898701cddd756c20e0fa961ad54564d3ccd67fadb9633",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T12:00:55.273149988Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T12:07:23.256165411Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb82b6b8aa709ab4455c13e7e19562bc1ddbd415015cd576612b0fc51c4e7007 in / "
                },
                {
                    "created": "2019-03-27T12:07:24.904979496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T13:12:54.886216918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T13:13:04.596635938Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T13:13:51.406048099Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:27.514463313Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-09T12:00:32.040946674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T12:00:50.288590704Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e32ab1c934b747999d04e8a550b97f4647f8b1b43e152de5650d4476bfd1d2e1' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c5d4fd90242761c214124eedb0ffc35af52be19e7a4eb4006b036b5dcb422c87' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='68c42239d118b27f5e52a449f444c8a53e64a181b12d9ecbda14d0c3b765a5ee' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0e62a02516fa2197a2eb319a6957e7bd7007005a11b4da5c6650879999db899' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4f0559832957c37022f771420902c1f19100c0a5b391c4957753c521a9eba56e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='023928ee1d896af181c62acfd0a4e7bd713c8503a9b3b9aec745a3a830630e1b' ;; \t\t*) goRelArch='src'; goRelSha256='ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T12:00:52.805053645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T12:00:53.196719097Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T12:00:54.783014391Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T12:00:55.273149988Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bb8a900019f4f93e608b1ac8c0b2f2a8f286466479bc59d7b60988c85bf2dec",
                    "sha256:de6be9fabd777cb454b03b09beb60ba563a6d88c2a0ab1d3ea38ef3f34f217f6",
                    "sha256:c2964fd3bfec5803b62c9cdeac94649b821ef954f543a166ef493f97758971da",
                    "sha256:5351f61d4e259f59c875f2a494ca7ee9d8989679ab3b1a719d909619912b8af6",
                    "sha256:85323c8403860f78968013e2b8b5e584bf6ca5119048feb6ab81488215349963",
                    "sha256:30a1cafee4fc227e30dc422b704d7a8ebad55c3d722eb1effde9cf677e2ad39e",
                    "sha256:7da15803fdde7aaff0cad300bbf9437878b34b67551fb6475799b4c659dc3ed2"
                ]
            }
        },
        "1.11.9-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:877b460df9f3ae701bdb458330015f2fd42f90fbdc09a8f7c3ad0b3960127af0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "27d2b27ac93633df08ac9ea7162846bf63f155a4ee2688cea844c7370e180906",
            "container_config": {
                "Hostname": "27d2b27ac936",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:877b460df9f3ae701bdb458330015f2fd42f90fbdc09a8f7c3ad0b3960127af0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:56:49.904772914Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:57:47.813512109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a27b74f23795a1f205247dcd6eff48ac56f0b8f2afe0c358199a0b60f694861 in / "
                },
                {
                    "created": "2019-04-10T11:57:48.591796864Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:36:38.153828354Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T12:36:39.465588665Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T19:54:50.77681374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:46.000700849Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:56:47.984692212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:48.365195704Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:49.528927444Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:56:49.904772914Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8c6532c0d10d7ef8e9390cb281500d4ae7418065f66e2a866b2b4517187ef92",
                    "sha256:c068725b85a6fec4ec24c5072fa2d67b41cff7f3f0402f4f51c520190d67c363",
                    "sha256:3ed8fc64895d3629ebf4528e47f7b0f3215d3c7461fb158923cf6b7b2415084f",
                    "sha256:125047a5b31d943a8f5c6df5d86249950a2e957a1e4b2e429d11cf8634d5921e",
                    "sha256:7b2deb15227e2b4d99498b2f5adb598c339e6887e2789628aefca5184469bef5"
                ]
            }
        },
        "1.11.9-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:877b460df9f3ae701bdb458330015f2fd42f90fbdc09a8f7c3ad0b3960127af0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "27d2b27ac93633df08ac9ea7162846bf63f155a4ee2688cea844c7370e180906",
            "container_config": {
                "Hostname": "27d2b27ac936",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:877b460df9f3ae701bdb458330015f2fd42f90fbdc09a8f7c3ad0b3960127af0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:56:49.904772914Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:57:47.813512109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a27b74f23795a1f205247dcd6eff48ac56f0b8f2afe0c358199a0b60f694861 in / "
                },
                {
                    "created": "2019-04-10T11:57:48.591796864Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:36:38.153828354Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T12:36:39.465588665Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T19:54:50.77681374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:46.000700849Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:56:47.984692212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:48.365195704Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:56:49.528927444Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:56:49.904772914Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8c6532c0d10d7ef8e9390cb281500d4ae7418065f66e2a866b2b4517187ef92",
                    "sha256:c068725b85a6fec4ec24c5072fa2d67b41cff7f3f0402f4f51c520190d67c363",
                    "sha256:3ed8fc64895d3629ebf4528e47f7b0f3215d3c7461fb158923cf6b7b2415084f",
                    "sha256:125047a5b31d943a8f5c6df5d86249950a2e957a1e4b2e429d11cf8634d5921e",
                    "sha256:7b2deb15227e2b4d99498b2f5adb598c339e6887e2789628aefca5184469bef5"
                ]
            }
        },
        "1.11.9-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:524da3792286ba39ce3ce7bc15e11a3ba3eba9200a64323afcfb333004bde7d2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7bee813bdf63c492f83ed704c4e4d87618df9c75a310d89a9ee3e41223af119a",
            "container_config": {
                "Hostname": "7bee813bdf63",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:524da3792286ba39ce3ce7bc15e11a3ba3eba9200a64323afcfb333004bde7d2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:54:46.86457843Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T12:07:23.256165411Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb82b6b8aa709ab4455c13e7e19562bc1ddbd415015cd576612b0fc51c4e7007 in / "
                },
                {
                    "created": "2019-03-27T12:07:24.904979496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T13:12:54.886216918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T13:13:04.596635938Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T13:13:51.406048099Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:27.514463313Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-15T19:54:26.320823786Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:43.101459042Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e88aa3e39104e3ba6a95a4e05629348b4a1ec82791fb3c941a493ca349730608' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f0d7b039cae61efdc346669f3459460e3dc03b6c6de528ca107fc53970cba0d1' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='892ab6c2510c4caa5905b3b1b6a1d4c6f04e384841fec50881ca2be7e8accf05' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='0fa4001fcf1ef0644e261bf6dde02fc9f10ae4df6d74fda61fc4d3c3cbef1d79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6a0a6a80997529543a434667f404ead2da88ac8fecc59bfba82f62bd2588e6c8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0dd7073469d0f414b264fbadc4f720f9582b13ff6a0a978a9ef23020f9e42ac1' ;; \t\t*) goRelArch='src'; goRelSha256='ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:54:44.852559492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:45.212531907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:46.465025448Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:54:46.86457843Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bb8a900019f4f93e608b1ac8c0b2f2a8f286466479bc59d7b60988c85bf2dec",
                    "sha256:de6be9fabd777cb454b03b09beb60ba563a6d88c2a0ab1d3ea38ef3f34f217f6",
                    "sha256:c2964fd3bfec5803b62c9cdeac94649b821ef954f543a166ef493f97758971da",
                    "sha256:5351f61d4e259f59c875f2a494ca7ee9d8989679ab3b1a719d909619912b8af6",
                    "sha256:85323c8403860f78968013e2b8b5e584bf6ca5119048feb6ab81488215349963",
                    "sha256:ee5bb156de332e502dbc019c798c8468dd0d2063b7ffa9ec46be7613dbc1af62",
                    "sha256:018b70b07b4a4f27b38a865eecb845c4137ba08f3b1a8b3bb2e36bc6a1110500"
                ]
            }
        },
        "1.11beta1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be58aed196266a0aba31b3914dfab606b59a35f0df3a90bdb6423c9a59f8cf65",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "45f9f3164c92fb1636bab88e60b5443d32f5a79a1f811c552c3767da8a229770",
            "container_config": {
                "Hostname": "45f9f3164c92",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be58aed196266a0aba31b3914dfab606b59a35f0df3a90bdb6423c9a59f8cf65",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-17T17:58:47.996833895Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T12:05:25.448694057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:77cbe27c4436cc4c9d81bee6c5ae0fee0c6d1708813d34abd2af2d3ebd7d96a5 in / "
                },
                {
                    "created": "2018-07-17T12:05:26.262700516Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:46:48.176466568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:46:56.116679644Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:47:40.02063699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:58:16.412682882Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:58:22.947765089Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T17:58:45.121821556Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='df7fe096ffab5d331d35c6d038d2ec0426b45ce17f55a93037e371d3af9d4e6d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='844ed9e34b118a9c2b069a18924a7879236929e08c887a92e5be1af5d701fb90' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9c1795148e777c81ac3cb381e3ea970eea60f5db2323658c061e5c4382125dd4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a6e804652f58785b3dfe272d96b8206250210e7ba7bdcb1ffb726ab3753db4af' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66529a525c0369d2b79ecd19f6d16444ed162c9bf88f7b37715520841c36de65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='731b9e6ac0d4c9709297f0efc1a6455589b978d2ecc207184d3e5be07a130c9c' ;; \t\t*) goRelArch='src'; goRelSha256='5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-17T17:58:46.212829468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T17:58:46.544505094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T17:58:47.632904117Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-17T17:58:47.996833895Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcdd7ab8c6fc0fe22e290f19a488f435ee798ed9ac42c6d1006dd37894b0e2c1",
                    "sha256:3649eabae1eadcd9090a6ecb01c7baedcbf88ecc51072cf6236802f38c0ddc3f",
                    "sha256:4a59a1eb41339490824316dcb4aaabeb923d7c3cfe70d26a7c3bb319c1b2301d",
                    "sha256:aed792db9115736c36de929afa8583d35a877fa6caab9a491e193e63c14394c3",
                    "sha256:248bb395c7b95ef157e441790429642638864a62f99c1190fdde41612cc103c1",
                    "sha256:d91fde1da175af8f1f9991a147a8850cd7dfcc9f8848eb569273272968480c13",
                    "sha256:9e89c3f7f0ea335d0285ace1d4e3ed2210983a4a779a20cfbbf6a222c14f70b0"
                ]
            }
        },
        "1.11beta2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e346a42e44c6f3969c7ccbf30f332753367a8f799eb95797d56bf8189ba39be4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "eb790d1a7336e87abf4ce6a85cf2fd451072eee472ed38232e95f56559439f03",
            "container_config": {
                "Hostname": "eb790d1a7336",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e346a42e44c6f3969c7ccbf30f332753367a8f799eb95797d56bf8189ba39be4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T12:00:27.089399288Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T12:05:25.448694057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:77cbe27c4436cc4c9d81bee6c5ae0fee0c6d1708813d34abd2af2d3ebd7d96a5 in / "
                },
                {
                    "created": "2018-07-17T12:05:26.262700516Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:46:48.176466568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:46:56.116679644Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:47:40.02063699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:58:16.412682882Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-21T11:59:50.381531939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T12:00:23.833737838Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ccb60f1ae6efe4fcef115db8143eb7f9ba134c63486f47b2c5176706ede35af5' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3242225cc9bb151789b4ba606903862b68b0e81682a5ab75245d76ab1ddf38fb' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='835fc6ebae5cb4368fc39683a911fe5a25c36b4251b2b254112f3fc8f36a9f39' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acc26b494699f7dca7e30ec2c08d0f2af8813437a234f17605fafe9c7c8cf69e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='31168f17e2791e664e591dc4c5e2c37ab5c3b942a2898d84075437daed3fc9f9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='648b0f22ff517668bf4b642749a2a479d421f69b1e11bcd0ab1a71994e1c94db' ;; \t\t*) goRelArch='src'; goRelSha256='50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T12:00:24.949547794Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T12:00:25.337235921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T12:00:26.689186337Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T12:00:27.089399288Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcdd7ab8c6fc0fe22e290f19a488f435ee798ed9ac42c6d1006dd37894b0e2c1",
                    "sha256:3649eabae1eadcd9090a6ecb01c7baedcbf88ecc51072cf6236802f38c0ddc3f",
                    "sha256:4a59a1eb41339490824316dcb4aaabeb923d7c3cfe70d26a7c3bb319c1b2301d",
                    "sha256:aed792db9115736c36de929afa8583d35a877fa6caab9a491e193e63c14394c3",
                    "sha256:248bb395c7b95ef157e441790429642638864a62f99c1190fdde41612cc103c1",
                    "sha256:b2d907710f93345f6903b1197f9268968580fd71318b94dd96832848d1208a56",
                    "sha256:82585805f15a46a313d4aa10d8fd49772e41a2446a4e43f72d7b28c463e13583"
                ]
            }
        },
        "1.11beta3-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:559238b172464007a92fe8c0d429658f8711f2df16bba45a6bcfd42cf2b6dfc0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "91bef96fe16c1e69fd20a3fc1bfe4167d62118229dc8581500d0861e6d639204",
            "container_config": {
                "Hostname": "91bef96fe16c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:559238b172464007a92fe8c0d429658f8711f2df16bba45a6bcfd42cf2b6dfc0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T12:00:39.168380229Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T12:05:25.448694057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:77cbe27c4436cc4c9d81bee6c5ae0fee0c6d1708813d34abd2af2d3ebd7d96a5 in / "
                },
                {
                    "created": "2018-07-17T12:05:26.262700516Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:46:48.176466568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:46:56.116679644Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:47:40.02063699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:58:16.412682882Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-04T12:00:10.000572156Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T12:00:36.62259719Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='674c1091f4712c1cfdcd77ecddafe6aef81cbda740af64a6e3f893ddf3dfb11c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='491e4d1288ad9f69d16e8ec990d4a4a2b9cc494c3b9488743a96c168424cbb5c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d8fb9d36a3c862a68db828eb22268e0723e3e245f41cc33f5da0a5b7e293fea5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e3e4e1271aa74f7dc64c586048f351e89d7ab20b5f3c3a518e87a628f5abf582' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6fe3a4db6a43a59fbe364069fd94536e1d2920df897d5ec93bea7fd519031c54' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='518762a66c9992d667bf7cae4adda285d14f856413ccc7cd853876aae0670382' ;; \t\t*) goRelArch='src'; goRelSha256='b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T12:00:37.625072895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T12:00:37.929347834Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T12:00:38.889180163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T12:00:39.168380229Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcdd7ab8c6fc0fe22e290f19a488f435ee798ed9ac42c6d1006dd37894b0e2c1",
                    "sha256:3649eabae1eadcd9090a6ecb01c7baedcbf88ecc51072cf6236802f38c0ddc3f",
                    "sha256:4a59a1eb41339490824316dcb4aaabeb923d7c3cfe70d26a7c3bb319c1b2301d",
                    "sha256:aed792db9115736c36de929afa8583d35a877fa6caab9a491e193e63c14394c3",
                    "sha256:248bb395c7b95ef157e441790429642638864a62f99c1190fdde41612cc103c1",
                    "sha256:ea1f3f3265771417a88e338926c36c87b91df05fb07e0e4c5cb6cbb4b073c593",
                    "sha256:61ea9f987e3811bac514392cef3a3fd07111c0218479e49eb5ce7943d9c436b1"
                ]
            }
        },
        "1.11rc1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c718ea47b180cc130fb9b576c7c7bd998b9468cb023fc3c4e4a73b6c0adf9124",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9d05361cfddbb1390b1d784b0ecc176a6d3fa19eb97fc12ea573a62c55041835",
            "container_config": {
                "Hostname": "9d05361cfddb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c718ea47b180cc130fb9b576c7c7bd998b9468cb023fc3c4e4a73b6c0adf9124",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-14T16:35:48.512865418Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T12:05:25.448694057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:77cbe27c4436cc4c9d81bee6c5ae0fee0c6d1708813d34abd2af2d3ebd7d96a5 in / "
                },
                {
                    "created": "2018-07-17T12:05:26.262700516Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:46:48.176466568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:46:56.116679644Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:47:40.02063699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:58:16.412682882Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-14T16:35:19.933163216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:35:46.38202985Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1a071f069982427b245aea736d3174e065a12e8481c34051c672d62a5ca59ca9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2c0a53850e7dcd2f1592eb51325fa5da20ee953512bebf1b0d3fb046874dc4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8a3d96e3e7604cf5390b7e318ff35112cdb13e0e44ddf0130659cefd196ab50e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='afe8f516fbd0316981e70fc0dda8c67116837baaa0431ee2da47f4fee4614433' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='972e7b6bfecee780a9cd970100297b35bed4c82cacc2bd55d78428928b66683d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd30adfb32de8c441fc0b12a9a9acbd5098a77ab77609269aed7ea4f8dd682ae' ;; \t\t*) goRelArch='src'; goRelSha256='fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-14T16:35:47.220523828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:35:47.492833195Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:35:48.25711163Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-14T16:35:48.512865418Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcdd7ab8c6fc0fe22e290f19a488f435ee798ed9ac42c6d1006dd37894b0e2c1",
                    "sha256:3649eabae1eadcd9090a6ecb01c7baedcbf88ecc51072cf6236802f38c0ddc3f",
                    "sha256:4a59a1eb41339490824316dcb4aaabeb923d7c3cfe70d26a7c3bb319c1b2301d",
                    "sha256:aed792db9115736c36de929afa8583d35a877fa6caab9a491e193e63c14394c3",
                    "sha256:248bb395c7b95ef157e441790429642638864a62f99c1190fdde41612cc103c1",
                    "sha256:803307baf5d225eb1310645c1f5d8dbb09039de9bd5d77e378523a07ece103e0",
                    "sha256:1e87f7a3b4b3a0c6c522555093eb99cb728e2b6f92e529cc8fe8716f497995bf"
                ]
            }
        },
        "1.11rc2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d44f1f8791063bc174c0e0029ea1e2a7f141d62f49a85c204213f4a80ec7251",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7d9192cac98f1321a1187d6cc930c225a3ea286e29c9861fdd7eb44827245a17",
            "container_config": {
                "Hostname": "7d9192cac98f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d44f1f8791063bc174c0e0029ea1e2a7f141d62f49a85c204213f4a80ec7251",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:58:06.174110129Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T12:05:25.448694057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:77cbe27c4436cc4c9d81bee6c5ae0fee0c6d1708813d34abd2af2d3ebd7d96a5 in / "
                },
                {
                    "created": "2018-07-17T12:05:26.262700516Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:46:48.176466568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:46:56.116679644Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:47:40.02063699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T17:58:16.412682882Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T11:57:34.076724904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:57:55.28512713Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:58:00.417306076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:58:00.724643942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:58:01.621398669Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:58:06.174110129Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcdd7ab8c6fc0fe22e290f19a488f435ee798ed9ac42c6d1006dd37894b0e2c1",
                    "sha256:3649eabae1eadcd9090a6ecb01c7baedcbf88ecc51072cf6236802f38c0ddc3f",
                    "sha256:4a59a1eb41339490824316dcb4aaabeb923d7c3cfe70d26a7c3bb319c1b2301d",
                    "sha256:aed792db9115736c36de929afa8583d35a877fa6caab9a491e193e63c14394c3",
                    "sha256:248bb395c7b95ef157e441790429642638864a62f99c1190fdde41612cc103c1",
                    "sha256:f5c9284a5c8b592dfe92384aa7f0dbce6feb3222826a98b2f68ce529f50f0d87",
                    "sha256:ed06de0b34389fa63f9a7137abd7c28a82d0cc40a985a66fc0964e33600fac85"
                ]
            }
        },
        "1.12-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35cfd23b31f2dddc1e6f4819357c13b35be533fc15ea6142a7e09d9f2cf0213d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0285cc65abacd19721dc7dc09da5483b4bc8154c9de13327e74a74e90572af5",
            "container_config": {
                "Hostname": "f0285cc65aba",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35cfd23b31f2dddc1e6f4819357c13b35be533fc15ea6142a7e09d9f2cf0213d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:19:16.617713706Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:17:02.438729851Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:09.61297699Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:19:12.937426948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:13.709699027Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:16.044360058Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:19:16.617713706Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:f028b520d4ddf007f034a14d5b209ee07c83bd28d0d48baf3bc93d1e8d8ef7b2",
                    "sha256:ded8aaea16dd6173ad25361f3c58808f125b1558a1172dd6ddd13440bf9f6454"
                ]
            }
        },
        "1.12-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0e819aff08a463f11e096a3119f8c01c3365b79b84dd59744840e6d138b26d2e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3c0085fd83f4b5bab7462b2d2f8dc5c2c232ced4c51de7bc3345926152c175a8",
            "container_config": {
                "Hostname": "3c0085fd83f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0e819aff08a463f11e096a3119f8c01c3365b79b84dd59744840e6d138b26d2e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:21:53.165057741Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:19:33.901273705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:21:45.936018063Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:21:49.574579829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:21:50.382336793Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:21:52.531623678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:21:53.165057741Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:e3f0037bd6f1152c876e325a7729dbbe48a80e70fa5876fe309dc670e4748ec9",
                    "sha256:e13a628a4f77c9be03c3e141835a509707b67acda741ab433767e7eb6e4aea16"
                ]
            }
        },
        "1.12-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35cfd23b31f2dddc1e6f4819357c13b35be533fc15ea6142a7e09d9f2cf0213d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0285cc65abacd19721dc7dc09da5483b4bc8154c9de13327e74a74e90572af5",
            "container_config": {
                "Hostname": "f0285cc65aba",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35cfd23b31f2dddc1e6f4819357c13b35be533fc15ea6142a7e09d9f2cf0213d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:19:16.617713706Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:17:02.438729851Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:09.61297699Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:19:12.937426948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:13.709699027Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:16.044360058Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:19:16.617713706Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:f028b520d4ddf007f034a14d5b209ee07c83bd28d0d48baf3bc93d1e8d8ef7b2",
                    "sha256:ded8aaea16dd6173ad25361f3c58808f125b1558a1172dd6ddd13440bf9f6454"
                ]
            }
        },
        "1.12-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a7e3a41a56bd90a91a5f94266b6700f3ea0636b23edbb7bf3e62ff7bcebbfb7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f75c1de5994af287625576ccf8f61223025107b413564a181ca6a85a9a6bf064",
            "container_config": {
                "Hostname": "f75c1de5994a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a7e3a41a56bd90a91a5f94266b6700f3ea0636b23edbb7bf3e62ff7bcebbfb7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-05T23:08:27.432483535Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T23:06:07.494835967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T23:08:20.955366586Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-05T23:08:24.78140972Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T23:08:25.285520385Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T23:08:26.825617039Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-05T23:08:27.432483535Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:ca49f162d35ab4fa2e3e5b3f5aceb63ee781951ac18a38da28878a7813e2292d",
                    "sha256:beeeaf08f5fb432a8011dc388a82f5a1c4fdd2f230cfdaf3a9b8d31229a09515"
                ]
            }
        },
        "1.12-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0989a2531740ee0c405618f7132177dd64f88c574183deb9eae91b20cc42e484",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0291e2296991fa0ce6822e56d9f8c09564ed0d378a41a58de6ae2b53c3a2131b",
            "container_config": {
                "Hostname": "0291e2296991",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0989a2531740ee0c405618f7132177dd64f88c574183deb9eae91b20cc42e484",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:16:19.986454951Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:00:06.417453205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a57a312731f174c4b03031908ff95f49d7055d8c196439f0ed07ed9c4834d993 in / "
                },
                {
                    "created": "2020-02-01T17:00:08.178400051Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:08.819492837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:24.122069875Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:01:04.229273367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:30:56.418836912Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T01:15:53.906820674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:14.560444615Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:16:17.122748376Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:17.637973939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:19.211353935Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:16:19.986454951Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:46e7cfd0c0f3284f02b2135e1918547bf991c36d75e54e40fe9db34cab65c290",
                    "sha256:27ed451d5d653095e610ab9f87626a6fa5fe21f2306f133aba07d5fff2d5eea0",
                    "sha256:fcfd58af280ca13e4e7cbe28921a46524be5346a4493b805ad1aacb9415e5580",
                    "sha256:70a91d1a8c327a6ab23a26e61b554eba49e3c99cdd34813056717afb62c20aba",
                    "sha256:871721b76996f935774c1fc4ec711463fe4d75bc24e643acbcb6599a06f5f76e",
                    "sha256:549c9cf1df21c26559762b4bea9e59d4621b1bf4bab7bb12b9f281ae52a7a5ef",
                    "sha256:28089a4ed2ca77263ad4a7cfe15071fe52658be56da447effc4ffe1dd130689b"
                ]
            }
        },
        "1.12-rc-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b303ae984de9278e02a1f80cc2700a1c6245bb536d683abf4976957a01782338",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e9e171e576d37b450db50c86b1657a7b5c23f41b986c7280819a23358c31066c",
            "container_config": {
                "Hostname": "e9e171e576d3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b303ae984de9278e02a1f80cc2700a1c6245bb536d683abf4976957a01782338",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:57:57.78065701Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-07T13:03:09.707883002Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fd4dfb0a59a763b52fd5588a8f4c35f596b133e00275b1cc485a71cf088b31a in / "
                },
                {
                    "created": "2019-02-07T13:03:10.749979676Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T15:37:43.623870365Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T15:37:52.397773112Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-07T15:38:25.375924594Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T18:30:56.527209234Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-13T12:57:27.827189773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:57:53.080059704Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e5a03e1f2e065b17b2fbbd3429f18a6f51fe2848e0120586652b9f14ada72c9a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62126e4ca72e2fea9856fe0ec1a0f28cf1b385fb362d32cb56413c39cab318f8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='654b90f75902d501e2201a7b438965132fd1242a102f54529e9ff7dbbdf0d4bb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1d8615576655decbadeefcfaa6d5144b370dbea67fd4b426f58b573deedbd918' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='cb6c7ba83ee8211da1d13d6db148adfdd6b86a790d3974d0c5702d229ca1da40' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='40208d21fca8469c20054e67250f288ab62d68794690aa2c0324d67018ba99c2' ;; \t\t*) goRelArch='src'; goRelSha256='ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:57:55.224694863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:57:55.740632361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:57:57.306628273Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:57:57.78065701Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2d885fdf40bcc2cc1d9f2185a318dd8d96fea868600125ba7dd758b62f60b56e",
                    "sha256:a91d99d71dcdf8745cd6e0d355878d73c8ed44e842f8971fca16630a4c48123a",
                    "sha256:c6dbf05815e68a56df5794c62238ad290e8c14e37f8d43b73509dc93a15cecbf",
                    "sha256:e1a905a52780351be90d092f857a1a0e092ef8e4c135f0c876cacf1f0d288a90",
                    "sha256:4f2680cfce740a76020a765f0c7f35a138d5fc09cb76e8e90d1b62640229f904",
                    "sha256:c66a730d7f5f870d81da0a18a3c1407d1979792e919f9d8b0cdc88a2bf747bdc",
                    "sha256:8be23b85cb40adcf6b4c7979ef4361630294ab2e9b362f6399fc86ac9dd409cf"
                ]
            }
        },
        "1.12-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bafcba05866743bcf7681ae385a5ab8ddfd7844774ffcf795835e75b2fd9ee81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a183a14a54eb2fe24ead38081f9354be4966397ff2a0d05de93002ef4d10d07",
            "container_config": {
                "Hostname": "8a183a14a54e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bafcba05866743bcf7681ae385a5ab8ddfd7844774ffcf795835e75b2fd9ee81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:16:55.645691036Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:04:08.434471765Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7fc54d004d962f2cfb469a1aaa9e689e46dfa2554e0cf44c33981d688adc31b in / "
                },
                {
                    "created": "2020-02-01T17:04:09.985480911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:18:17.210178472Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:18:29.74152444Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:19:26.254828182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:33:10.603594656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T01:16:28.348104001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:50.281427229Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:16:52.68488535Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:53.330020379Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:54.919068016Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:16:55.645691036Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7025fd153916d67aed12af624ffb223bea6bd8ad0837cd220648bb6fafb0c15",
                    "sha256:d8dccd79f6a8f10c1636cbd82d919eed8c95166d302f48b992af102693a2e0a2",
                    "sha256:48d889636708d63da0061ef1e64042d7e6cfbf430b274af2a6637e4fca94a8ab",
                    "sha256:d335f8e4986334af3faba57d57b78f72d53e70c36ff5f6e3a6482611bd13a490",
                    "sha256:1f8a54d1f09d462613b546c4a599f7a2fce5db959952a252413c5f28f23760a3",
                    "sha256:320609051009dec02018837d1e606cbec4c6bc3e2100efea2318585c217975ec",
                    "sha256:199c25ac0750d2f706b1087d28f470fff5341a5c362a7cf896507a5c82ed6d9d"
                ]
            }
        },
        "1.12.0-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9654469ce22855d513c14672ecb5f6a2a2a6d31d559848a7403c326e854cd748",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b36dd0759b365f22aa2db4629e628d12fa3848ec2a305bae3d1e6b221dac31ac",
            "container_config": {
                "Hostname": "b36dd0759b36",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9654469ce22855d513c14672ecb5f6a2a2a6d31d559848a7403c326e854cd748",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-12T12:15:36.629218718Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-12T12:13:22.784585251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:15:32.107142184Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-12T12:15:34.313276408Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:15:34.733149495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:15:36.157631044Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-12T12:15:36.629218718Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:41a5f107a3ca2ca98d5a539dd1a0c0d5ceb7fe521d12c1c1dce3d24207c21492",
                    "sha256:e82147a7260aa560237de88d6a1aba6322879595547f0e2cfec9d62ec4fafaca"
                ]
            }
        },
        "1.12.0-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9654469ce22855d513c14672ecb5f6a2a2a6d31d559848a7403c326e854cd748",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b36dd0759b365f22aa2db4629e628d12fa3848ec2a305bae3d1e6b221dac31ac",
            "container_config": {
                "Hostname": "b36dd0759b36",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9654469ce22855d513c14672ecb5f6a2a2a6d31d559848a7403c326e854cd748",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-12T12:15:36.629218718Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-12T12:13:22.784585251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:15:32.107142184Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-12T12:15:34.313276408Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:15:34.733149495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:15:36.157631044Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-12T12:15:36.629218718Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:41a5f107a3ca2ca98d5a539dd1a0c0d5ceb7fe521d12c1c1dce3d24207c21492",
                    "sha256:e82147a7260aa560237de88d6a1aba6322879595547f0e2cfec9d62ec4fafaca"
                ]
            }
        },
        "1.12.0-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:456a89112b39776bc82819b75cbc9edccbd1df8511abb3a75c980266aeeb2acd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b537678248244788b8a53bebea084c0c4c17dbdb44b21a27d5cb1e98dcc0d43f",
            "container_config": {
                "Hostname": "b53767824824",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:456a89112b39776bc82819b75cbc9edccbd1df8511abb3a75c980266aeeb2acd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T16:41:13.802628863Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-05T13:10:34.15957375Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8f0ec0cbcef5902fe5ef35892898a19e6c61f5c422ac3d47500d42067ad7fef8 in / "
                },
                {
                    "created": "2019-03-05T13:10:35.44625625Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T13:50:19.722876608Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T13:50:29.288438525Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T13:51:36.573533911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T16:40:40.643542129Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T16:40:41.361694863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:41:04.746316306Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='750a07fef8579ae4839458701f4df690e0b20b8bcce33b437e4df89c451b6f13' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ea0636f055763d309437461b5817452419411eb1f598dc7f35999fae05bcb79a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b7bf59c2f1ac48eb587817a2a30b02168ecc99635fc19b6e677cce01406e3fac' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3ac1db65a6fa5c13f424b53ee181755429df0c33775733cede1e0d540440fd7b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='5be21e7035efa4a270802ea04fb104dc7a54e3492641ae44632170b93166fb68' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c0aef360b99ebb4b834db8b5b22777b73a11fa37b382121b24bf587c40603915' ;; \t\t*) goRelArch='src'; goRelSha256='09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T16:41:08.632210094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:41:09.439508802Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:41:12.643435253Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T16:41:13.802628863Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd785931aef8a8c6311770b31830931cd2bc74a4fe67b36f0dacf3d710a6d09",
                    "sha256:6d6f2346ec432f051c2ac5655dede90bd8a04cfed3f516905670cf088cc6bd98",
                    "sha256:8e0d4c78db84cd259e041eb4d652bf83716c0f294c41da693034e96b18e26146",
                    "sha256:b67191dba4fbd16cbd4166702c960f7b1e2a6367188d2e45d456256224fecaba",
                    "sha256:443cd5b73f071cf7106f1adf4577b40688fae75cbcf577cea9f03c47fcefbc7f",
                    "sha256:6036250fcd73e2ba63e21b53c1a1aa0ef5993919a07a17310ecb6c2c3157942d",
                    "sha256:740fd7e8791f037c938dec29f15fc2f9cfbe2f6b696724b1d172230f29b1f221"
                ]
            }
        },
        "1.12.1-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4e0015d9cbb80cd8cf213b9b18beae10e203b4743ef5cddcf3c2e9d17ae4d38",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "209039a184b246a25c35c8eda7af75cdfa383b939245bfacb4d609c1c5a5a668",
            "container_config": {
                "Hostname": "209039a184b2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4e0015d9cbb80cd8cf213b9b18beae10e203b4743ef5cddcf3c2e9d17ae4d38",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T12:00:53.696429808Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T11:58:38.05278394Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:00:49.421500017Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T12:00:51.521016483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:00:51.912457696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:00:53.268876493Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T12:00:53.696429808Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:b6b8590d9c8a83f0a9a0d13d0b9bd77c76950472e659f66d6a189fd289de13e1",
                    "sha256:74bc0b7a4fc90c23b6e2ec00eabbb9ddd5783430c5d04c41f7ddf40d90435018"
                ]
            }
        },
        "1.12.1-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4e0015d9cbb80cd8cf213b9b18beae10e203b4743ef5cddcf3c2e9d17ae4d38",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "209039a184b246a25c35c8eda7af75cdfa383b939245bfacb4d609c1c5a5a668",
            "container_config": {
                "Hostname": "209039a184b2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4e0015d9cbb80cd8cf213b9b18beae10e203b4743ef5cddcf3c2e9d17ae4d38",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T12:00:53.696429808Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T11:58:38.05278394Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:00:49.421500017Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T12:00:51.521016483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:00:51.912457696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T12:00:53.268876493Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T12:00:53.696429808Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:b6b8590d9c8a83f0a9a0d13d0b9bd77c76950472e659f66d6a189fd289de13e1",
                    "sha256:74bc0b7a4fc90c23b6e2ec00eabbb9ddd5783430c5d04c41f7ddf40d90435018"
                ]
            }
        },
        "1.12.1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:62882fe5db444d4f9d9f0ed532d7661d4145f1965679a7d4bf11ca40f96497e0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "06f94b2b4b11a7374a1b85be94e82a9888bd65f1c8c39ceed0318ee3d8a80566",
            "container_config": {
                "Hostname": "06f94b2b4b11",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:62882fe5db444d4f9d9f0ed532d7661d4145f1965679a7d4bf11ca40f96497e0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T16:03:52.389329813Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T12:07:23.256165411Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb82b6b8aa709ab4455c13e7e19562bc1ddbd415015cd576612b0fc51c4e7007 in / "
                },
                {
                    "created": "2019-03-27T12:07:24.904979496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T13:12:54.886216918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T13:13:04.596635938Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T13:13:51.406048099Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:27.514463313Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:28.742382118Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:03:46.623393418Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2a3fdabf665496a0db5f41ec6af7a9b15a49fbe71a85a50ca38b1f13a103aeec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ceac33f07f8fdbccd6c6f7339db33479e1be8c206e67458ba259470fe796dbf2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='10dba44cf95c7aa7abc3c72610c12ebcaf7cad6eed761d5ad92736ca3bc0d547' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='af74b6572dd0c133e5de121928616eab60a6252c66f6d9b15007c82207416a2c' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e1258c81f420c88339abf40888423904c0023497b4e9bbffac9ee484597a57d3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a9b8f49be6b2083e2586c2ce8a2a86d5dbf47cca64ac6195546a81c9927f9513' ;; \t\t*) goRelArch='src'; goRelSha256='0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T16:03:49.84280904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:03:50.322729125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:03:51.87349856Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T16:03:52.389329813Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bb8a900019f4f93e608b1ac8c0b2f2a8f286466479bc59d7b60988c85bf2dec",
                    "sha256:de6be9fabd777cb454b03b09beb60ba563a6d88c2a0ab1d3ea38ef3f34f217f6",
                    "sha256:c2964fd3bfec5803b62c9cdeac94649b821ef954f543a166ef493f97758971da",
                    "sha256:5351f61d4e259f59c875f2a494ca7ee9d8989679ab3b1a719d909619912b8af6",
                    "sha256:85323c8403860f78968013e2b8b5e584bf6ca5119048feb6ab81488215349963",
                    "sha256:d6a968208aeefbb79957510cfb7676310c81147f81a01c086ab028c630240f5b",
                    "sha256:823329f9d64823cb977ed4149da782b7e6d736c688db14ab401ee6a1c2fe4465"
                ]
            }
        },
        "1.12.10-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e41db7e46283beb716b31e029c849c0d65cd961ec06089402737acacb196c9c5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4be7ad0264f82afc39c4d44832fbab5c2115b7af6fb0663e62a14f15b146fdab",
            "container_config": {
                "Hostname": "4be7ad0264f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e41db7e46283beb716b31e029c849c0d65cd961ec06089402737acacb196c9c5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:56:10.391434236Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:53:35.27439956Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:55:56.552601447Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:56:03.884119264Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:56:05.475191005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:56:08.824734989Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:56:10.391434236Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:4581c8ba4bd945b0c774b75117371a0f8d8c6870da8354a91bfff4d7520ee278",
                    "sha256:c549c8bc222c2195ba6fe09d73b1cf7466511ab6725b68e872a7f4b879e8dbb6"
                ]
            }
        },
        "1.12.10-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e41db7e46283beb716b31e029c849c0d65cd961ec06089402737acacb196c9c5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4be7ad0264f82afc39c4d44832fbab5c2115b7af6fb0663e62a14f15b146fdab",
            "container_config": {
                "Hostname": "4be7ad0264f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e41db7e46283beb716b31e029c849c0d65cd961ec06089402737acacb196c9c5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:56:10.391434236Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:53:35.27439956Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:55:56.552601447Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:56:03.884119264Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:56:05.475191005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:56:08.824734989Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:56:10.391434236Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:4581c8ba4bd945b0c774b75117371a0f8d8c6870da8354a91bfff4d7520ee278",
                    "sha256:c549c8bc222c2195ba6fe09d73b1cf7466511ab6725b68e872a7f4b879e8dbb6"
                ]
            }
        },
        "1.12.10-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c458f3639d05d9cbcace3a4a2327685d24b24bc4310a5a98126eaa07f864258",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bd5404eb41deef319f438b7180810c1f556582678db89317001ce0394bb7134b",
            "container_config": {
                "Hostname": "bd5404eb41de",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c458f3639d05d9cbcace3a4a2327685d24b24bc4310a5a98126eaa07f864258",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:58:46.339551673Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:56:21.549414821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:58:39.086103942Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:58:42.330600075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:58:43.317737039Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:58:45.380016838Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:58:46.339551673Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:a6f243ce6868fcdc9e6db92c9d81594f53cc34e1836cfed2ff2347f9c7bc27dd",
                    "sha256:98c985be05071d16c10f23c2ab756233006133a43afd02af777c96e37cc136f4"
                ]
            }
        },
        "1.12.10-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:929b32430e9251eb9ec2c62891287ab58e06de7cb1f2807e9a13907e74411e81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "871db2b061cb3d31bf7248988276272aef8bf79e11a43cbadb5027275f0e59f2",
            "container_config": {
                "Hostname": "871db2b061cb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:929b32430e9251eb9ec2c62891287ab58e06de7cb1f2807e9a13907e74411e81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T17:32:29.103016564Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:05:23.793223407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3acf01a0633a4067bab5dd8864409407f6a25d8266f86719c64597981017ffcb in / "
                },
                {
                    "created": "2019-10-17T00:05:25.298643091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:07:42.490819389Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:07:59.558017326Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:08:42.09173034Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:30:20.02154863Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:32:01.125480824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:32:22.964035159Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T17:32:24.685753066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:32:25.86113837Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:32:28.088288052Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T17:32:29.103016564Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7edbeaf1d554a857ed18dbea96b5e43cc404517af7dd2c8f67f7a66f65495bbe",
                    "sha256:7051e01e54eb81261fa0c94b3cd8b9b64aa79e63d388d0c8ad97446ee9cd920f",
                    "sha256:8e0fad781dfb53bfd0d88b849f1ef6cfe7df7eef939f401f896a1f1c90ff6165",
                    "sha256:34c03909760abac7feb4a3282241d7edf0f82a1c8d5e12646414ae54576ca164",
                    "sha256:78a3a7506c554360b7500704d074d367c2fe49e4cc4e5a45121f8f4e1f87a86b",
                    "sha256:c36aeb21d87d9471cdf2dbccb87d9fda7062e8043700a6b7ac215f08c83b8ac0",
                    "sha256:c7a929c56d813efff5e2f3995ea535236fb07e029d835e367aa0bceb8c445325"
                ]
            }
        },
        "1.12.10-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22102a4a53c2ea2e7c3ea659815f3431a1446ba20eb863e0c1b9336f0b130746",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7170b83c1a63e769969573f45ece2ec6f90be5fc7b68c036b6264f1d9e7b0328",
            "container_config": {
                "Hostname": "7170b83c1a63",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22102a4a53c2ea2e7c3ea659815f3431a1446ba20eb863e0c1b9336f0b130746",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T17:33:03.116776602Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:10:47.93498212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3283babf00aa2ace3b06f2d143b912daeedd504791cdf83548bbe49f1f670f4d in / "
                },
                {
                    "created": "2019-10-17T00:10:49.666895598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:23:20.593213481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:23:33.810403212Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:24:27.621844569Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:31:22.048237849Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:32:35.619425398Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:32:57.916652362Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T17:33:00.185056475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:33:00.782734998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:33:02.485491169Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T17:33:03.116776602Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43834cdf9bef5fa99ec47db6c59def13ab286cb8044e7dffd1d3b331dfffa0de",
                    "sha256:9aadc5506756401e4d48dd9ed026525663b46eb8470161543a09de787169f010",
                    "sha256:8bff8c46bd958b6e1c14b48fc8aa93b96d029c39dd477e9901f9929f45e2a0a4",
                    "sha256:ed9cd8acc21ccedab777dba9eddd89d862fdd7df38c85bfe5449826e19cbc2b3",
                    "sha256:0893cf9a774cc36edac61cb97f1f9fe44bdce2fd778c6449723d5d0a4baba8d3",
                    "sha256:2c8ce647604beb03313adcb066560158d0fc1b8d34288b2c93adc9e41e9408d2",
                    "sha256:bde3619bd06ea5912eeaf399c85293bef41308307ca46e45c3606cd872549064"
                ]
            }
        },
        "1.12.11-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c08cf1bee83e36ee12ead38cd2789c5ebcba7b803daeced946edc6d70c3d87d2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4f671911daa8f77bda6053769b91460f1b788aba94fc50b2a0d8bab577d4a5fb",
            "container_config": {
                "Hostname": "4f671911daa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c08cf1bee83e36ee12ead38cd2789c5ebcba7b803daeced946edc6d70c3d87d2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:34:39.724526819Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T20:32:16.485573479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:34:32.440990783Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:34:36.324912806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:34:36.92494079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:34:38.949494136Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:34:39.724526819Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:8ca4f2e7cf419359907541882b1ac47e915d0f00f99b546605e0da2bf8e8ae2c",
                    "sha256:b7d4d5d97fdc3874a031f2362d11dad60fcf7be1a9fc96a9c221735780af8bd3"
                ]
            }
        },
        "1.12.11-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c08cf1bee83e36ee12ead38cd2789c5ebcba7b803daeced946edc6d70c3d87d2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4f671911daa8f77bda6053769b91460f1b788aba94fc50b2a0d8bab577d4a5fb",
            "container_config": {
                "Hostname": "4f671911daa8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c08cf1bee83e36ee12ead38cd2789c5ebcba7b803daeced946edc6d70c3d87d2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:34:39.724526819Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T20:32:16.485573479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:34:32.440990783Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:34:36.324912806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:34:36.92494079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:34:38.949494136Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:34:39.724526819Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:8ca4f2e7cf419359907541882b1ac47e915d0f00f99b546605e0da2bf8e8ae2c",
                    "sha256:b7d4d5d97fdc3874a031f2362d11dad60fcf7be1a9fc96a9c221735780af8bd3"
                ]
            }
        },
        "1.12.11-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1b897762dfac454e7037a73fce66b519ab1d1da40e1d458dbdd8a6a6c7a9e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4fad02b5dc12146ad051b73fcc3b99166cd791be1e3973c62efa7879a54d9d78",
            "container_config": {
                "Hostname": "4fad02b5dc12",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1b897762dfac454e7037a73fce66b519ab1d1da40e1d458dbdd8a6a6c7a9e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:37:11.660983651Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T20:34:48.265264178Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:37:03.881245844Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:37:08.642903744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:37:09.14556918Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:37:10.977795715Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:37:11.660983651Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:f53c155b5c0caa0a948c1e312142d9c5cf910fa3fc81da7cb0147e6ae67fbcfb",
                    "sha256:d69b468e676d951a01d4b41f97166432455a6554295ea2050e61d94367482ed1"
                ]
            }
        },
        "1.12.11-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33d17768a0a441bbd43cd45e5e9116f04b24b1ad59cbef2d5ccc6eb4a2690ca0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "965e4d5149754df5425b9cf252a7e1e05cedeebb28fda2f0697798b1d9eba2c9",
            "container_config": {
                "Hostname": "965e4d514975",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33d17768a0a441bbd43cd45e5e9116f04b24b1ad59cbef2d5ccc6eb4a2690ca0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:31:24.745936635Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:05:23.793223407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3acf01a0633a4067bab5dd8864409407f6a25d8266f86719c64597981017ffcb in / "
                },
                {
                    "created": "2019-10-17T00:05:25.298643091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:07:42.490819389Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:07:59.558017326Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:08:42.09173034Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:30:20.02154863Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T20:30:55.169105602Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:31:17.58098147Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2c5960292da8b747d83f171a28a04116b2977e809169c344268c893e4cf0a857' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='895766c9c1d1a32e9e0e7ea2f9fac6f33df0397954564c05b56ecdc58605fd1e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a05361badb95f6cc5724e32f59b0f33048dfca63b539cf2bd8ab77fa4f2ba923' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9d979c489471c5ec9b9cd6b0922f061b2dca7b801effc39d7826a1255e8221c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8f962f84bd36f5caad78710b32e074406d12e864e334bf6c8820836dbd1b6409' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='faa9de31cc41c0ecb79382569f1269758a7e51ca526aaf849d7189da6e28f716' ;; \t\t*) goRelArch='src'; goRelSha256='fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:31:21.05024224Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:31:21.746304178Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:31:23.985040264Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:31:24.745936635Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7edbeaf1d554a857ed18dbea96b5e43cc404517af7dd2c8f67f7a66f65495bbe",
                    "sha256:7051e01e54eb81261fa0c94b3cd8b9b64aa79e63d388d0c8ad97446ee9cd920f",
                    "sha256:8e0fad781dfb53bfd0d88b849f1ef6cfe7df7eef939f401f896a1f1c90ff6165",
                    "sha256:34c03909760abac7feb4a3282241d7edf0f82a1c8d5e12646414ae54576ca164",
                    "sha256:78a3a7506c554360b7500704d074d367c2fe49e4cc4e5a45121f8f4e1f87a86b",
                    "sha256:0035bd334cad2b2b949f46b43d4e7e0c7f72fdae79b35b4bad920308968e1dd7",
                    "sha256:1840583e2ec7c5b52af8fd5137379e705ed7f59c8c363baf574d1db63dc008c8"
                ]
            }
        },
        "1.12.11-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ec279725300b217fa7df7ceea0e1afc9e091a0743772d3264546eea21f2e9ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "afc4235421b6b8a43a2c65dbcb65a45dc08a73e830e3ab7355b84bf3ba90e00d",
            "container_config": {
                "Hostname": "afc4235421b6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ec279725300b217fa7df7ceea0e1afc9e091a0743772d3264546eea21f2e9ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:32:07.13490378Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:10:47.93498212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3283babf00aa2ace3b06f2d143b912daeedd504791cdf83548bbe49f1f670f4d in / "
                },
                {
                    "created": "2019-10-17T00:10:49.666895598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:23:20.593213481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:23:33.810403212Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:24:27.621844569Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:31:22.048237849Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T20:31:36.977019238Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:31:58.312318214Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2c5960292da8b747d83f171a28a04116b2977e809169c344268c893e4cf0a857' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='895766c9c1d1a32e9e0e7ea2f9fac6f33df0397954564c05b56ecdc58605fd1e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a05361badb95f6cc5724e32f59b0f33048dfca63b539cf2bd8ab77fa4f2ba923' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9d979c489471c5ec9b9cd6b0922f061b2dca7b801effc39d7826a1255e8221c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8f962f84bd36f5caad78710b32e074406d12e864e334bf6c8820836dbd1b6409' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='faa9de31cc41c0ecb79382569f1269758a7e51ca526aaf849d7189da6e28f716' ;; \t\t*) goRelArch='src'; goRelSha256='fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:32:01.955458099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:32:02.893941562Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:32:06.149279434Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:32:07.13490378Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43834cdf9bef5fa99ec47db6c59def13ab286cb8044e7dffd1d3b331dfffa0de",
                    "sha256:9aadc5506756401e4d48dd9ed026525663b46eb8470161543a09de787169f010",
                    "sha256:8bff8c46bd958b6e1c14b48fc8aa93b96d029c39dd477e9901f9929f45e2a0a4",
                    "sha256:ed9cd8acc21ccedab777dba9eddd89d862fdd7df38c85bfe5449826e19cbc2b3",
                    "sha256:0893cf9a774cc36edac61cb97f1f9fe44bdce2fd778c6449723d5d0a4baba8d3",
                    "sha256:e07f66d6c6a45a7777880d1b5ba5fd8c4b3e035a77e700273612d06873ea234c",
                    "sha256:8b42cc1a803c2526ab21b6ba322df3dc5c2f6a8c1555432c8406d1136c5085a3"
                ]
            }
        },
        "1.12.12-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9fc8ffa57b10d559b8f0368e00eb6ca5b46ea35b27741351f6d484dd451a2cc7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8882e067f0f47a36f5564005222c0452a5ec07832cb92c770e33e92c95e0707d",
            "container_config": {
                "Hostname": "8882e067f0f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9fc8ffa57b10d559b8f0368e00eb6ca5b46ea35b27741351f6d484dd451a2cc7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T19:28:39.454940929Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T19:26:10.67485915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:28:31.460855913Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T19:28:34.991677388Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:28:35.995910406Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:28:38.376849589Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T19:28:39.454940929Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:3413c07e1f3d1ea08a2f5d2c2987227f19199a445b6796be6eb933edc5b22319",
                    "sha256:fb56e332173d9cc6621e5488cf21eacfb7e384923eddb7a5c6dd326369acb684"
                ]
            }
        },
        "1.12.12-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9fc8ffa57b10d559b8f0368e00eb6ca5b46ea35b27741351f6d484dd451a2cc7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8882e067f0f47a36f5564005222c0452a5ec07832cb92c770e33e92c95e0707d",
            "container_config": {
                "Hostname": "8882e067f0f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9fc8ffa57b10d559b8f0368e00eb6ca5b46ea35b27741351f6d484dd451a2cc7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T19:28:39.454940929Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T19:26:10.67485915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:28:31.460855913Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T19:28:34.991677388Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:28:35.995910406Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:28:38.376849589Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T19:28:39.454940929Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:3413c07e1f3d1ea08a2f5d2c2987227f19199a445b6796be6eb933edc5b22319",
                    "sha256:fb56e332173d9cc6621e5488cf21eacfb7e384923eddb7a5c6dd326369acb684"
                ]
            }
        },
        "1.12.12-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0ed8b6565c1dbff61e6129189beeda49e62dcecefdc6f650a7e99ed5bde9840a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "71863fe3cb3967d8abe9f82bf56dc33f4b4f091e422a05028bda57b3e0f82693",
            "container_config": {
                "Hostname": "71863fe3cb39",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0ed8b6565c1dbff61e6129189beeda49e62dcecefdc6f650a7e99ed5bde9840a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:10:17.060428687Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T04:07:35.990547088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:10:11.361547712Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:10:14.144395061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:10:14.775272424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:10:16.4013172Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:10:17.060428687Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:975a4d94d67f5560387f83b332e0520c2ec22ac795f759c70a7652da611b08ef",
                    "sha256:7dc848da8399ff6343c778b883db32a610ffbf655bdafb9743d070f124b53b2d"
                ]
            }
        },
        "1.12.12-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:242cfa7d780357edc6e01d657f95f56a580f489f97c9c8cbda4d24ac6307119f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ebf3dc1ccb21906ee977a845767fd260c36789937044fbdb8cde02f5e53c67b0",
            "container_config": {
                "Hostname": "ebf3dc1ccb21",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:242cfa7d780357edc6e01d657f95f56a580f489f97c9c8cbda4d24ac6307119f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:04:19.438680812Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:05:23.793223407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3acf01a0633a4067bab5dd8864409407f6a25d8266f86719c64597981017ffcb in / "
                },
                {
                    "created": "2019-10-17T00:05:25.298643091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:07:42.490819389Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:07:59.558017326Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:08:42.09173034Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:30:20.02154863Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:03:48.689563178Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:04:13.996741361Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4cf11ac6a8fa42d26ab85e27a5d916ee171900a87745d9f7d4a29a21587d78fc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ed3cda3c2d0648a712fa13cfc25e82431772231ef8f3db70de2fa9c2b893a5ab' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7e2fed536904f2bf7007deed3609b3484c55660821bd2faaeb6928fa62fd33e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='59a48035f9b1387347e8a8a0f7c6d693e6bc84e0374ef802fb8ec61f894db073' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='adee3f914baf578bd21526479f45f99782791dcd12bfba2a7ca2d3fb79e4d623' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='24b0be352713a6e047b21093cf2aaaf22c7757d3606839ddd26da60e7f18dba6' ;; \t\t*) goRelArch='src'; goRelSha256='fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:04:16.641970762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:04:17.196102514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:04:18.826185545Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:04:19.438680812Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7edbeaf1d554a857ed18dbea96b5e43cc404517af7dd2c8f67f7a66f65495bbe",
                    "sha256:7051e01e54eb81261fa0c94b3cd8b9b64aa79e63d388d0c8ad97446ee9cd920f",
                    "sha256:8e0fad781dfb53bfd0d88b849f1ef6cfe7df7eef939f401f896a1f1c90ff6165",
                    "sha256:34c03909760abac7feb4a3282241d7edf0f82a1c8d5e12646414ae54576ca164",
                    "sha256:78a3a7506c554360b7500704d074d367c2fe49e4cc4e5a45121f8f4e1f87a86b",
                    "sha256:ec513af0d62ef8ed07e611e5cc4ac493dc94196888cadcc3287d97a39d97af72",
                    "sha256:fb200de42e094f64aae47e1f1af4ef10c7f617f3123c993ace2dfe7d46a4842d"
                ]
            }
        },
        "1.12.12-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45e92e435932889f467a7162bc8bf51a11c12b8ffa4d4051e76e7d7aec31db9f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f04b176a076d699061f581dd17b8ccf4ea310b404d4ef084fb9f71ccf8a99a07",
            "container_config": {
                "Hostname": "f04b176a076d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45e92e435932889f467a7162bc8bf51a11c12b8ffa4d4051e76e7d7aec31db9f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:04:55.757381337Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:10:47.93498212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3283babf00aa2ace3b06f2d143b912daeedd504791cdf83548bbe49f1f670f4d in / "
                },
                {
                    "created": "2019-10-17T00:10:49.666895598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:23:20.593213481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:23:33.810403212Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:24:27.621844569Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:31:22.048237849Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:04:29.106320266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:04:50.513099087Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4cf11ac6a8fa42d26ab85e27a5d916ee171900a87745d9f7d4a29a21587d78fc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ed3cda3c2d0648a712fa13cfc25e82431772231ef8f3db70de2fa9c2b893a5ab' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7e2fed536904f2bf7007deed3609b3484c55660821bd2faaeb6928fa62fd33e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='59a48035f9b1387347e8a8a0f7c6d693e6bc84e0374ef802fb8ec61f894db073' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='adee3f914baf578bd21526479f45f99782791dcd12bfba2a7ca2d3fb79e4d623' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='24b0be352713a6e047b21093cf2aaaf22c7757d3606839ddd26da60e7f18dba6' ;; \t\t*) goRelArch='src'; goRelSha256='fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:04:52.805958161Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:04:53.413084562Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:04:55.057764747Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:04:55.757381337Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43834cdf9bef5fa99ec47db6c59def13ab286cb8044e7dffd1d3b331dfffa0de",
                    "sha256:9aadc5506756401e4d48dd9ed026525663b46eb8470161543a09de787169f010",
                    "sha256:8bff8c46bd958b6e1c14b48fc8aa93b96d029c39dd477e9901f9929f45e2a0a4",
                    "sha256:ed9cd8acc21ccedab777dba9eddd89d862fdd7df38c85bfe5449826e19cbc2b3",
                    "sha256:0893cf9a774cc36edac61cb97f1f9fe44bdce2fd778c6449723d5d0a4baba8d3",
                    "sha256:538664f1d4ac233edd1a76ec421a6ea0e6f05cd6ec71333acf17495d9d886f6e",
                    "sha256:a0d88c70cda20723f35bb896d993588eb4964b2fe59cd04a461ea474f5a85caa"
                ]
            }
        },
        "1.12.13-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f21410d355026b0a79be06c1ed8b0e718e413084ffab0414d05e54d523751ff2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d03c2586a3f82ae8a6fb50a3ddcc14682c26b1712de3b9ba97186e9b4ff7515f",
            "container_config": {
                "Hostname": "d03c2586a3f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f21410d355026b0a79be06c1ed8b0e718e413084ffab0414d05e54d523751ff2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T21:05:51.782412791Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T21:03:32.886340404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:05:45.012822965Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T21:05:48.750035779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:05:49.532928616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:05:51.198324068Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T21:05:51.782412791Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:f3fdd646e3b4dc7a71ad1c5035bb05ec6a078cc298f3dcb5f1d270b788768fe5",
                    "sha256:f481712cbc3f0ef5ba6271f4c6c35baba7db1bd927c100cbcb901ffab3c5494e"
                ]
            }
        },
        "1.12.13-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f21410d355026b0a79be06c1ed8b0e718e413084ffab0414d05e54d523751ff2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d03c2586a3f82ae8a6fb50a3ddcc14682c26b1712de3b9ba97186e9b4ff7515f",
            "container_config": {
                "Hostname": "d03c2586a3f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f21410d355026b0a79be06c1ed8b0e718e413084ffab0414d05e54d523751ff2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T21:05:51.782412791Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T21:03:32.886340404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:05:45.012822965Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T21:05:48.750035779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:05:49.532928616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:05:51.198324068Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T21:05:51.782412791Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:f3fdd646e3b4dc7a71ad1c5035bb05ec6a078cc298f3dcb5f1d270b788768fe5",
                    "sha256:f481712cbc3f0ef5ba6271f4c6c35baba7db1bd927c100cbcb901ffab3c5494e"
                ]
            }
        },
        "1.12.13-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cb465bcf03b4bcdb1f820c7c0f51b1d882cf9a470292bace2290b2d129a43398",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6d19685696c709b574cd3f33b755d0502b7d44c86534aa03016f0a4c7088bedc",
            "container_config": {
                "Hostname": "6d19685696c7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cb465bcf03b4bcdb1f820c7c0f51b1d882cf9a470292bace2290b2d129a43398",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T21:08:22.074444685Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T21:06:03.85018588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:08:16.814225815Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T21:08:19.605693444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:08:20.100859239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:08:21.480310195Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T21:08:22.074444685Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:7dd6db6b8a73b9a70d337150cbb7c4fcee9b87a26518e0684013271cace25d3b",
                    "sha256:1c35804ae65dee219cac2a960ce9364591f085da27a351fec40aee8b3e44b5f8"
                ]
            }
        },
        "1.12.13-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf68fa48170ba904322045f35dd20a4817762f8f8e78cb0958580646842826a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0f99b43bf166f1d91cc8c582c9aa8c1aa80e02d6ea98ece0cfba14fd9c988f93",
            "container_config": {
                "Hostname": "0f99b43bf166",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf68fa48170ba904322045f35dd20a4817762f8f8e78cb0958580646842826a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-23T20:39:26.764659378Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T13:22:15.754620273Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c51a92fbc511319241c84feac408f0040600ab2230fd8ef007c322f6a5b9532 in / "
                },
                {
                    "created": "2019-11-22T13:22:17.010093098Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T23:09:59.150617742Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T23:10:12.424938698Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T23:11:00.829055416Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T20:37:16.94423117Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T20:38:59.04432773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:39:19.99851886Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='da036454cb3353f9f507f0ceed4048feac611065e4e1818b434365eb32ac9bdc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bf061cc3d4951e07904496b5c3d6c82419309d24634835522d786673a3f5438f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dcfcb3785292c98f7a75c2276169dfe2d445c19f8ffe1d40b3f7b8f59712d361' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='fafcb585591557b7b16d9b22dec4654193d205cf444b1810ab2988f658585e23' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='77056264abcf5444ed0d9ab7552552ae2145ca8fb6c39d33db3c735eaf3f42d2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8ef1ffbe7d0e944a52aadd529fc88fd6a2303ec67ee7eeb906712ca38ada0c91' ;; \t\t*) goRelArch='src'; goRelSha256='5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-23T20:39:23.391897212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:39:23.990102025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:39:26.093644311Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-23T20:39:26.764659378Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df6d53900cd9bc9ff729f7f395049c1671edbdc3cf63eddb389589a84e16cd51",
                    "sha256:34ae3dff8661999bdb9d4fcd068bd7e4b62ec5ebfbf2c153c34fdd93bcbddd11",
                    "sha256:8bf1636e7f9271b2a0f88783b79be09ff674cd5320c582c9b44aee2a8ae21e84",
                    "sha256:898d81efab46fe801c62f26acfc84fc67f8fbf1e94430bd83891f616945ec6b5",
                    "sha256:4a402bcc2568864aab54ae6e8188aec7be38c5568458f121c6845c780454dbb8",
                    "sha256:07edfd880513c30e8b1ddc626b8e3aca0b5a1c737320e7345ec9845a8e9f37b4",
                    "sha256:3c9b6416afd89d7dea42e5d118db0f0bb2499d6b7b259fdf890041e245e250bf"
                ]
            }
        },
        "1.12.13-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b582c2785c8d1c73f4ce0742da01136a55b51d63e43cf2d47bc35df5c25605a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "451dafd74cf3882b0f55af8b424e483b76c962fcacadb2e994984429348b5976",
            "container_config": {
                "Hostname": "451dafd74cf3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b582c2785c8d1c73f4ce0742da01136a55b51d63e43cf2d47bc35df5c25605a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-23T20:40:09.411121211Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T13:27:54.700003197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3893b8a7336301b4a2a741f62c99805c3c7b2bee21e4f026b6885060becfc03d in / "
                },
                {
                    "created": "2019-11-22T13:27:57.481673179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T23:24:42.915203166Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T23:24:56.611805769Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T23:25:44.081552288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T20:38:19.350290568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T20:39:33.087789337Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:40:02.658746695Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='da036454cb3353f9f507f0ceed4048feac611065e4e1818b434365eb32ac9bdc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bf061cc3d4951e07904496b5c3d6c82419309d24634835522d786673a3f5438f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dcfcb3785292c98f7a75c2276169dfe2d445c19f8ffe1d40b3f7b8f59712d361' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='fafcb585591557b7b16d9b22dec4654193d205cf444b1810ab2988f658585e23' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='77056264abcf5444ed0d9ab7552552ae2145ca8fb6c39d33db3c735eaf3f42d2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8ef1ffbe7d0e944a52aadd529fc88fd6a2303ec67ee7eeb906712ca38ada0c91' ;; \t\t*) goRelArch='src'; goRelSha256='5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-23T20:40:05.926321396Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:40:06.570442783Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:40:08.623331946Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-23T20:40:09.411121211Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92694e08924c2a2638bb0a6d3327f28f51fb9773c9f328e74233d6010b9bfa77",
                    "sha256:d025ef71dbe09790aef199d1cea264c4dd7f7e9704d43d6cbed78b289d165d8f",
                    "sha256:5814c0c1afb56ba553e5dd7810f328a38000fb0d8a3af9b313d7efd08457d415",
                    "sha256:d6cd56eab0d84bd4b3da2cb4180a20707ceeca295646eb8288f97f4b736af78a",
                    "sha256:61cfea81d091af79f4356333f969f8be60d9536b05cf90fe92463daaedf9d645",
                    "sha256:84cf8ecd9606e8850967d65b9cbf0b4373a5282a845cfeb3d13a69929e6f33b6",
                    "sha256:56c41f2649524d3ee43daf61004b89fe456f198651f9f3a34c26effa4158289a"
                ]
            }
        },
        "1.12.14-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1510006790866c9c566c508dc31a0f450dac1e6ad3e55e97e56c4d355dbbb538",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "372644f980c399ce5412b7ad2b026f0955628948d8c42c8e9ea94a5e8c62204d",
            "container_config": {
                "Hostname": "372644f980c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1510006790866c9c566c508dc31a0f450dac1e6ad3e55e97e56c4d355dbbb538",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:14:48.854152719Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T18:59:09.61386684Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:caf7ca25875eddd2bfa2d1e56663bb52d278a85f6ee1314f9ccf01dc4da8070a in / "
                },
                {
                    "created": "2019-12-24T18:59:10.412982599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:04:23.646440848Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T21:04:25.76907405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T21:12:30.826016058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:14:42.136254401Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:14:45.819047373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:14:46.645012079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:14:48.214560493Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:14:48.854152719Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95bc3dfd6e5aa4a58b18663c321171e15c27a4fb0532b121f6d632c0f83b41d4",
                    "sha256:4b378abef4d2f2b5f4c89655c1401f02892ee503e5d7ff24a1ffe6ac60f25b4e",
                    "sha256:29c9b8e0a0c15026bbb277a731f79ca44acdabb9eadef933a405d1313357cd11",
                    "sha256:5077c40ee134db926f8df718d09f9c317760b083b3fa5a03224c46d8725b2137",
                    "sha256:9a810d178f9b99ef2891fdb421c49bcbca9acbdcaa19b2c31f6bd5906243e363"
                ]
            }
        },
        "1.12.14-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:80711552a8d045fbdf72d4678c4f4f04042efe621b614b698cf0ccf23afc139a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb230522eb63c8f8aef704c1990df9961f220be6d6df8ae554da684e135abb57",
            "container_config": {
                "Hostname": "cb230522eb63",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:80711552a8d045fbdf72d4678c4f4f04042efe621b614b698cf0ccf23afc139a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:17:19.401539717Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T23:03:35.985513654Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:17:12.905338788Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:17:16.529472737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:17:17.137842253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:17:18.793988006Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:17:19.401539717Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:e6b7bfd3ec8009d3dd5bf58e59b3cf86ac3a5ed2807a599ab0f068af6045baca",
                    "sha256:d2be571245322b1bda350750cf1ea5f8ac9309d78d5deddb6be678fec4f3f2fa"
                ]
            }
        },
        "1.12.14-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1510006790866c9c566c508dc31a0f450dac1e6ad3e55e97e56c4d355dbbb538",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "372644f980c399ce5412b7ad2b026f0955628948d8c42c8e9ea94a5e8c62204d",
            "container_config": {
                "Hostname": "372644f980c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1510006790866c9c566c508dc31a0f450dac1e6ad3e55e97e56c4d355dbbb538",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:14:48.854152719Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T18:59:09.61386684Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:caf7ca25875eddd2bfa2d1e56663bb52d278a85f6ee1314f9ccf01dc4da8070a in / "
                },
                {
                    "created": "2019-12-24T18:59:10.412982599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:04:23.646440848Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T21:04:25.76907405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T21:12:30.826016058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:14:42.136254401Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:14:45.819047373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:14:46.645012079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:14:48.214560493Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:14:48.854152719Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95bc3dfd6e5aa4a58b18663c321171e15c27a4fb0532b121f6d632c0f83b41d4",
                    "sha256:4b378abef4d2f2b5f4c89655c1401f02892ee503e5d7ff24a1ffe6ac60f25b4e",
                    "sha256:29c9b8e0a0c15026bbb277a731f79ca44acdabb9eadef933a405d1313357cd11",
                    "sha256:5077c40ee134db926f8df718d09f9c317760b083b3fa5a03224c46d8725b2137",
                    "sha256:9a810d178f9b99ef2891fdb421c49bcbca9acbdcaa19b2c31f6bd5906243e363"
                ]
            }
        },
        "1.12.14-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a7e3a41a56bd90a91a5f94266b6700f3ea0636b23edbb7bf3e62ff7bcebbfb7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f75c1de5994af287625576ccf8f61223025107b413564a181ca6a85a9a6bf064",
            "container_config": {
                "Hostname": "f75c1de5994a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a7e3a41a56bd90a91a5f94266b6700f3ea0636b23edbb7bf3e62ff7bcebbfb7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-05T23:08:27.432483535Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T23:06:07.494835967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T23:08:20.955366586Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-05T23:08:24.78140972Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T23:08:25.285520385Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T23:08:26.825617039Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-05T23:08:27.432483535Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:ca49f162d35ab4fa2e3e5b3f5aceb63ee781951ac18a38da28878a7813e2292d",
                    "sha256:beeeaf08f5fb432a8011dc388a82f5a1c4fdd2f230cfdaf3a9b8d31229a09515"
                ]
            }
        },
        "1.12.14-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79741a438d4c71651e0c6fbd3fe364167b7a820ac352ecfa33bdd1d116593a01",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b62587ba66c47959df9eda02c27fcc013e904b22e79c218b6be8ed8ef99fd4a1",
            "container_config": {
                "Hostname": "b62587ba66c4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79741a438d4c71651e0c6fbd3fe364167b7a820ac352ecfa33bdd1d116593a01",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-29T03:44:54.84277914Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:58:42.401065681Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:26fba5cd6ba1fe45f19fb80d1c8e54eac5189e2b93e521b2ba6d5a6b54175e81 in / "
                },
                {
                    "created": "2019-12-28T04:58:45.087367866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:43:14.306636446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:43:30.867219598Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:44:14.608350699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:40:56.973713424Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:44:23.08122096Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:44:43.571200981Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='925a1a9d8b31c2425d7313fe73d3342288968a66e26cd8bf1b6b5656f4603fcb' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c7aa5562168b6eb3a4bb54af061d68bcb6b9ecae9d785f9a38255c107c986b73' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1ab765f4cf74f05cfba40ddcea9160ca6cf9a57915036a559ca1691942862e7c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='76dda90b4fc0410212094b433cfdc40c9802fba972427e95cbdec3c5b94fd7a6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4e237b1357922e186337989914201e98bd9aed855f4034a5918476650484f83d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='affd9764e5b163591ca87f351984c17d74e518e03b9d5e16f2be57bd30a82c80' ;; \t\t*) goRelArch='src'; goRelSha256='39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-29T03:44:47.919374492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:44:49.012592935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:44:53.440013963Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-29T03:44:54.84277914Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eee5b7f6e28aff3944f870f1cea1fbdf0c794b2fa9c84ddf6ddc009b9de3ac0b",
                    "sha256:46c22901cd9f12d91feac019823678c89e0fff06e53b23a4a4870ee89028ddcc",
                    "sha256:b4462ea7378389e9c5bb7f0c5ebca1fd2e7d7bd27cd47a1ae39a803de6a8d0da",
                    "sha256:4d3420dd001fcd981445244854d348f217b83e218c96bcaac414b1e6c6d15917",
                    "sha256:ab92d88bee9d2af59a44c102b2183c67d4dbc8c6dbfa72f475b8c5ff69ccebeb",
                    "sha256:57dadef745db43ec45f4901839b4e220fedc3939f8f878a524fd4f5c668baa36",
                    "sha256:96b2d73b173a31802dc4b55f33348e5b6324c989bfdd5e0706fefd7329a0155a"
                ]
            }
        },
        "1.12.14-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fce2990ab88eaaf81ca995bc1a685ba85e2d3880f8608a5bdf8a0483433376f1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "201235741c76d0916b250a952155eca8adb773c5bdd3d46ffad6dcf6de912778",
            "container_config": {
                "Hostname": "201235741c76",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fce2990ab88eaaf81ca995bc1a685ba85e2d3880f8608a5bdf8a0483433376f1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-29T03:45:41.108142644Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T05:03:19.284699458Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5692a55e4805d33baa21e559cc0bb86fb91422171345ddd332fa5514285a3401 in / "
                },
                {
                    "created": "2019-12-28T05:03:25.100956471Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:59:48.86972173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T07:00:00.714206652Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T07:00:53.270742682Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:43:18.013956801Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:45:04.157213901Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:45:24.729892293Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='925a1a9d8b31c2425d7313fe73d3342288968a66e26cd8bf1b6b5656f4603fcb' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c7aa5562168b6eb3a4bb54af061d68bcb6b9ecae9d785f9a38255c107c986b73' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1ab765f4cf74f05cfba40ddcea9160ca6cf9a57915036a559ca1691942862e7c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='76dda90b4fc0410212094b433cfdc40c9802fba972427e95cbdec3c5b94fd7a6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4e237b1357922e186337989914201e98bd9aed855f4034a5918476650484f83d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='affd9764e5b163591ca87f351984c17d74e518e03b9d5e16f2be57bd30a82c80' ;; \t\t*) goRelArch='src'; goRelSha256='39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-29T03:45:33.202009808Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:45:34.654436993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:45:37.944011413Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-29T03:45:41.108142644Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec2c013414a254c5c8516dd1c17a5740cd4c9aae192408786547b1d567759e8f",
                    "sha256:f17e98e6d0db6f91a36440aff5091fa6e59a442b3b77225360a689662e89467e",
                    "sha256:7fbe953f69462dc01fdd98a1949926c76fc35effbe024f18b1bc5f483c70ce32",
                    "sha256:d9047b4143f5e19b257ccdc81d32ae6b541a5df85373b8233450456b071a9614",
                    "sha256:761e616b9906d54c43567f3fc19dd9a041bcb5dd7120820a0a11077d0f0ff1f0",
                    "sha256:8e7d9d1eedc174ee6696a2e2d070358f6f2afcc18c5928173dff03597d9446e8",
                    "sha256:ab411cf4d7fcbe4e9562d33b814a7d077fae98cb578c9eedb1f5115b1abff512"
                ]
            }
        },
        "1.12.15-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af907ae80410dbcb42e334737fd581a3e00272e406322ecc4ceecbab6256cdef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9a1f7823c9ae04350bf1c042384d350469eaefa4b0523779acec264aee36cbdf",
            "container_config": {
                "Hostname": "9a1f7823c9ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af907ae80410dbcb42e334737fd581a3e00272e406322ecc4ceecbab6256cdef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T03:15:05.299235813Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T03:12:27.972370185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:14:56.632801633Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T03:15:00.994008443Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:15:01.703146619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:15:04.196496763Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T03:15:05.299235813Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:01cd0e555bbb1b510d373280a543edd6fed3ebb6b86e49d650c2e56326051193",
                    "sha256:358bb76f51b359120a8bc19d8c58e221c5d8a39b1e0322dd0896e914ebe421e7"
                ]
            }
        },
        "1.12.15-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79395228601041d9b26e550ca6b894646a935c39bda6c2f030f290699ceac398",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4de98879ef2d1cfddaea31b1284f7fab801b57e3294c5684ee1efedf16bbe19d",
            "container_config": {
                "Hostname": "4de98879ef2d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79395228601041d9b26e550ca6b894646a935c39bda6c2f030f290699ceac398",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-23T17:32:02.386398452Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-23T17:29:28.893767413Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:31:48.909307835Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-23T17:31:55.466833149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:31:57.54861185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:32:01.113813399Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-23T17:32:02.386398452Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:1d4c50fd7521f5dcff94a892f4dc634e627786ea679818f979caeeee5c51edfa",
                    "sha256:685fd3d26f0a0c038f674cc1a1e35f5cbb24085ceda0fa01a3903bf8217a66b6"
                ]
            }
        },
        "1.12.15-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af907ae80410dbcb42e334737fd581a3e00272e406322ecc4ceecbab6256cdef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9a1f7823c9ae04350bf1c042384d350469eaefa4b0523779acec264aee36cbdf",
            "container_config": {
                "Hostname": "9a1f7823c9ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af907ae80410dbcb42e334737fd581a3e00272e406322ecc4ceecbab6256cdef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T03:15:05.299235813Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T03:12:27.972370185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:14:56.632801633Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T03:15:00.994008443Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:15:01.703146619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:15:04.196496763Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T03:15:05.299235813Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:01cd0e555bbb1b510d373280a543edd6fed3ebb6b86e49d650c2e56326051193",
                    "sha256:358bb76f51b359120a8bc19d8c58e221c5d8a39b1e0322dd0896e914ebe421e7"
                ]
            }
        },
        "1.12.15-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9713d3992b70e6735a02d833ec664ecf15a1d9f117efae38976258cd8daf1ce0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9053e10df6b99182b5e200ed4aa3d90dea3b896a29548aaa14b69730f4ae108",
            "container_config": {
                "Hostname": "c9053e10df6b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9713d3992b70e6735a02d833ec664ecf15a1d9f117efae38976258cd8daf1ce0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-10T00:07:09.316254503Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:58:42.401065681Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:26fba5cd6ba1fe45f19fb80d1c8e54eac5189e2b93e521b2ba6d5a6b54175e81 in / "
                },
                {
                    "created": "2019-12-28T04:58:45.087367866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:43:14.306636446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:43:30.867219598Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:44:14.608350699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:40:56.973713424Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-10T00:06:13.451248531Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:06:57.138645779Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='61068419f3d3fcd3cc415c352c4a93d6ae0e723ac18a22ac572b4904d78b5a4c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3a36d168bf80c780694bf25d6cb2ed0dbb6d4bc29b1c82bb29e819d9dbe6347b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cff1a28f0b207dd54230bf822cdcfbcc7cd411261a9366616a05a1fa1fbeedd3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='608c9fb90b2b35f7b4e4b110a9c6919d8902311388c6309487b5f77aed9d2b74' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4fe9ce71a6cd9acd56f0e898dd87d95ed9bc83a6a5be0863e9b5b646e05eee05' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a02061245a738bc80c645251cddd7a22c1ea9fee0726d5caf5da7645dea3787e' ;; \t\t*) goRelArch='src'; goRelSha256='8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-10T00:07:01.354696847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:07:04.115133598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:07:07.489150054Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-10T00:07:09.316254503Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eee5b7f6e28aff3944f870f1cea1fbdf0c794b2fa9c84ddf6ddc009b9de3ac0b",
                    "sha256:46c22901cd9f12d91feac019823678c89e0fff06e53b23a4a4870ee89028ddcc",
                    "sha256:b4462ea7378389e9c5bb7f0c5ebca1fd2e7d7bd27cd47a1ae39a803de6a8d0da",
                    "sha256:4d3420dd001fcd981445244854d348f217b83e218c96bcaac414b1e6c6d15917",
                    "sha256:ab92d88bee9d2af59a44c102b2183c67d4dbc8c6dbfa72f475b8c5ff69ccebeb",
                    "sha256:814b0eb222004fc93db05dd3dffeb5d7ef15ddc3dfe80f7680f3561df2d0c48d",
                    "sha256:93f7c997c0d6ca1e95ec67bb10bb6b56319aecc960ab3157f4dea56ddeaaef33"
                ]
            }
        },
        "1.12.15-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:961eae43eb76d65dcaffacb787511fbe68ce2810c653885aa4299289f99f7328",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9c1bfbf83731faed04fdc4674cfb2b4a11dcc76823dae0b4c07c72adae172ade",
            "container_config": {
                "Hostname": "9c1bfbf83731",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:961eae43eb76d65dcaffacb787511fbe68ce2810c653885aa4299289f99f7328",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-10T00:07:50.046344666Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T05:03:19.284699458Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5692a55e4805d33baa21e559cc0bb86fb91422171345ddd332fa5514285a3401 in / "
                },
                {
                    "created": "2019-12-28T05:03:25.100956471Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:59:48.86972173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T07:00:00.714206652Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T07:00:53.270742682Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:43:18.013956801Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-10T00:07:16.252773424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:07:44.061218876Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='61068419f3d3fcd3cc415c352c4a93d6ae0e723ac18a22ac572b4904d78b5a4c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3a36d168bf80c780694bf25d6cb2ed0dbb6d4bc29b1c82bb29e819d9dbe6347b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cff1a28f0b207dd54230bf822cdcfbcc7cd411261a9366616a05a1fa1fbeedd3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='608c9fb90b2b35f7b4e4b110a9c6919d8902311388c6309487b5f77aed9d2b74' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4fe9ce71a6cd9acd56f0e898dd87d95ed9bc83a6a5be0863e9b5b646e05eee05' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a02061245a738bc80c645251cddd7a22c1ea9fee0726d5caf5da7645dea3787e' ;; \t\t*) goRelArch='src'; goRelSha256='8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-10T00:07:46.253716266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:07:47.882136235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:07:49.430489009Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-10T00:07:50.046344666Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec2c013414a254c5c8516dd1c17a5740cd4c9aae192408786547b1d567759e8f",
                    "sha256:f17e98e6d0db6f91a36440aff5091fa6e59a442b3b77225360a689662e89467e",
                    "sha256:7fbe953f69462dc01fdd98a1949926c76fc35effbe024f18b1bc5f483c70ce32",
                    "sha256:d9047b4143f5e19b257ccdc81d32ae6b541a5df85373b8233450456b071a9614",
                    "sha256:761e616b9906d54c43567f3fc19dd9a041bcb5dd7120820a0a11077d0f0ff1f0",
                    "sha256:5bae72ad16aba39fac2a970f68e55f55938af634b4b5f34b4a6053df4e54fffa",
                    "sha256:30fc3853f10250c206c8d513c254788c05c70640a6e3575b27e4e3bda815c9f2"
                ]
            }
        },
        "1.12.16-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:463109e8a197ea5a5c8442254160b8e049ce16cfa57887e7e17340685a3934f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6ecd9b3349bb3763f3fed1b455d198c37de36fdc430a10e8e41982cca801f954",
            "container_config": {
                "Hostname": "6ecd9b3349bb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:463109e8a197ea5a5c8442254160b8e049ce16cfa57887e7e17340685a3934f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T22:08:31.23344843Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T22:06:07.690298109Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:08:25.824768409Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T22:08:28.593640753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:08:29.077346016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:08:30.64583493Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T22:08:31.23344843Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:976549e174582decf642b4721131b256692c99638872295e950305dffaf460ca",
                    "sha256:4bb69d2474c978ae7bb69279908ba7aa99c1cb9fae2ea876ac88c0935953e9e3"
                ]
            }
        },
        "1.12.16-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b9b93d1427c5a5cbe0c300467fdb2b6657670c404998e2b834a0e6e5a688ca1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7c5cbff14a706be6c051eaa38607a36d2d6249ddf09c134e10b8a73cfcb3552c",
            "container_config": {
                "Hostname": "7c5cbff14a70",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b9b93d1427c5a5cbe0c300467fdb2b6657670c404998e2b834a0e6e5a688ca1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T22:10:57.42526905Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T22:08:38.705660725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:10:50.376705999Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T22:10:54.624494518Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:10:55.110514153Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:10:56.698488289Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T22:10:57.42526905Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:eb648a427f0d39505c99049cf5c27bdcfb7c916d1ab176b3053c00e9eacec017",
                    "sha256:a2ba10e50cc907760efe8d0c05c9283911271d01f97bd93860dbb69a9c9901f9"
                ]
            }
        },
        "1.12.16-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:463109e8a197ea5a5c8442254160b8e049ce16cfa57887e7e17340685a3934f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6ecd9b3349bb3763f3fed1b455d198c37de36fdc430a10e8e41982cca801f954",
            "container_config": {
                "Hostname": "6ecd9b3349bb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:463109e8a197ea5a5c8442254160b8e049ce16cfa57887e7e17340685a3934f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T22:08:31.23344843Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T22:06:07.690298109Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:08:25.824768409Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T22:08:28.593640753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:08:29.077346016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:08:30.64583493Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T22:08:31.23344843Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:976549e174582decf642b4721131b256692c99638872295e950305dffaf460ca",
                    "sha256:4bb69d2474c978ae7bb69279908ba7aa99c1cb9fae2ea876ac88c0935953e9e3"
                ]
            }
        },
        "1.12.16-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2d41ab7b0dd4e530eecf065e25142dc8a7ab0b66daf6ab595ff87ca4f3d6e126",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4feba07b5635375ff5cd3fbfc41518579c6520ab2ddd2a5acf83b36cda4e6f58",
            "container_config": {
                "Hostname": "4feba07b5635",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2d41ab7b0dd4e530eecf065e25142dc8a7ab0b66daf6ab595ff87ca4f3d6e126",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T14:34:38.066039778Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:00:06.417453205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a57a312731f174c4b03031908ff95f49d7055d8c196439f0ed07ed9c4834d993 in / "
                },
                {
                    "created": "2020-02-01T17:00:08.178400051Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:08.819492837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:24.122069875Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:01:04.229273367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:30:56.418836912Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:33:55.518454809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:34:18.028517974Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bf3a85d75658144c06ce986ba05e07ef08af4320089b74b1d41de3b0f340ea7e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2f77688eaf25d8ae58adc5164de0fc13d600705c2ebadc6e1138e5ce9ceadc41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a01df310bfeffc67480982cf6ad50c9b83f9aaf4ac855d5e581b95eb727bb24c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e6ebf5622203f2ceee138af16c765818bf65b74668d5e73c1da6491c3e890a88' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7c133932d1beae68a483dbac69bb0e1023fa08196ebee100594b79c0672ce67c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e93326caefb3945054f9c98dd7934892b69dcb46d343cd3582c777874f5d2716' ;; \t\t*) goRelArch='src'; goRelSha256='ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T14:34:26.183503224Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:34:28.779278514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:34:35.374175066Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T14:34:38.066039778Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:46e7cfd0c0f3284f02b2135e1918547bf991c36d75e54e40fe9db34cab65c290",
                    "sha256:27ed451d5d653095e610ab9f87626a6fa5fe21f2306f133aba07d5fff2d5eea0",
                    "sha256:fcfd58af280ca13e4e7cbe28921a46524be5346a4493b805ad1aacb9415e5580",
                    "sha256:70a91d1a8c327a6ab23a26e61b554eba49e3c99cdd34813056717afb62c20aba",
                    "sha256:871721b76996f935774c1fc4ec711463fe4d75bc24e643acbcb6599a06f5f76e",
                    "sha256:425030529f5f5757e2944d26c513317b76151b74baf8886de900d1e625e56868",
                    "sha256:0646fabed8ceaf2086cece32ecf685fbc5f62ae8b4156ff0a56bf75c1501210d"
                ]
            }
        },
        "1.12.16-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d371ad69494f6dc5a4e2be35ea7fb965a8f9e6222b1bea07f12cb6f0d45c04a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fd826d1a0cfe69dca1e66e2cf2d7f7421b4790c39bf8964037c5f14dae770017",
            "container_config": {
                "Hostname": "fd826d1a0cfe",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d371ad69494f6dc5a4e2be35ea7fb965a8f9e6222b1bea07f12cb6f0d45c04a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T14:35:16.277685768Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:04:08.434471765Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7fc54d004d962f2cfb469a1aaa9e689e46dfa2554e0cf44c33981d688adc31b in / "
                },
                {
                    "created": "2020-02-01T17:04:09.985480911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:18:17.210178472Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:18:29.74152444Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:19:26.254828182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:33:10.603594656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:34:50.274449047Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:35:10.332613567Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bf3a85d75658144c06ce986ba05e07ef08af4320089b74b1d41de3b0f340ea7e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2f77688eaf25d8ae58adc5164de0fc13d600705c2ebadc6e1138e5ce9ceadc41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a01df310bfeffc67480982cf6ad50c9b83f9aaf4ac855d5e581b95eb727bb24c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e6ebf5622203f2ceee138af16c765818bf65b74668d5e73c1da6491c3e890a88' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7c133932d1beae68a483dbac69bb0e1023fa08196ebee100594b79c0672ce67c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e93326caefb3945054f9c98dd7934892b69dcb46d343cd3582c777874f5d2716' ;; \t\t*) goRelArch='src'; goRelSha256='ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T14:35:13.284911966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:35:13.958651423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:35:15.623282888Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T14:35:16.277685768Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7025fd153916d67aed12af624ffb223bea6bd8ad0837cd220648bb6fafb0c15",
                    "sha256:d8dccd79f6a8f10c1636cbd82d919eed8c95166d302f48b992af102693a2e0a2",
                    "sha256:48d889636708d63da0061ef1e64042d7e6cfbf430b274af2a6637e4fca94a8ab",
                    "sha256:d335f8e4986334af3faba57d57b78f72d53e70c36ff5f6e3a6482611bd13a490",
                    "sha256:1f8a54d1f09d462613b546c4a599f7a2fce5db959952a252413c5f28f23760a3",
                    "sha256:2b787d7b7901434954a7e3d2ae8ef7e4f251a01b127bf08ab0ac4b16f87033c7",
                    "sha256:2a9796ba28f4a5fa5353cdc4979a695eeb5f2e1feeb8f43761d6b93aafc6cb77"
                ]
            }
        },
        "1.12.17-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35cfd23b31f2dddc1e6f4819357c13b35be533fc15ea6142a7e09d9f2cf0213d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0285cc65abacd19721dc7dc09da5483b4bc8154c9de13327e74a74e90572af5",
            "container_config": {
                "Hostname": "f0285cc65aba",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35cfd23b31f2dddc1e6f4819357c13b35be533fc15ea6142a7e09d9f2cf0213d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:19:16.617713706Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:17:02.438729851Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:09.61297699Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:19:12.937426948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:13.709699027Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:16.044360058Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:19:16.617713706Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:f028b520d4ddf007f034a14d5b209ee07c83bd28d0d48baf3bc93d1e8d8ef7b2",
                    "sha256:ded8aaea16dd6173ad25361f3c58808f125b1558a1172dd6ddd13440bf9f6454"
                ]
            }
        },
        "1.12.17-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0e819aff08a463f11e096a3119f8c01c3365b79b84dd59744840e6d138b26d2e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3c0085fd83f4b5bab7462b2d2f8dc5c2c232ced4c51de7bc3345926152c175a8",
            "container_config": {
                "Hostname": "3c0085fd83f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0e819aff08a463f11e096a3119f8c01c3365b79b84dd59744840e6d138b26d2e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:21:53.165057741Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:19:33.901273705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:21:45.936018063Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:21:49.574579829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:21:50.382336793Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:21:52.531623678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:21:53.165057741Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:e3f0037bd6f1152c876e325a7729dbbe48a80e70fa5876fe309dc670e4748ec9",
                    "sha256:e13a628a4f77c9be03c3e141835a509707b67acda741ab433767e7eb6e4aea16"
                ]
            }
        },
        "1.12.17-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35cfd23b31f2dddc1e6f4819357c13b35be533fc15ea6142a7e09d9f2cf0213d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f0285cc65abacd19721dc7dc09da5483b4bc8154c9de13327e74a74e90572af5",
            "container_config": {
                "Hostname": "f0285cc65aba",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35cfd23b31f2dddc1e6f4819357c13b35be533fc15ea6142a7e09d9f2cf0213d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:19:16.617713706Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:17:02.438729851Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:09.61297699Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:19:12.937426948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:13.709699027Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:19:16.044360058Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:19:16.617713706Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:f028b520d4ddf007f034a14d5b209ee07c83bd28d0d48baf3bc93d1e8d8ef7b2",
                    "sha256:ded8aaea16dd6173ad25361f3c58808f125b1558a1172dd6ddd13440bf9f6454"
                ]
            }
        },
        "1.12.17-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0989a2531740ee0c405618f7132177dd64f88c574183deb9eae91b20cc42e484",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0291e2296991fa0ce6822e56d9f8c09564ed0d378a41a58de6ae2b53c3a2131b",
            "container_config": {
                "Hostname": "0291e2296991",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0989a2531740ee0c405618f7132177dd64f88c574183deb9eae91b20cc42e484",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:16:19.986454951Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:00:06.417453205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a57a312731f174c4b03031908ff95f49d7055d8c196439f0ed07ed9c4834d993 in / "
                },
                {
                    "created": "2020-02-01T17:00:08.178400051Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:08.819492837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:24.122069875Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:01:04.229273367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:30:56.418836912Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T01:15:53.906820674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:14.560444615Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:16:17.122748376Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:17.637973939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:19.211353935Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:16:19.986454951Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:46e7cfd0c0f3284f02b2135e1918547bf991c36d75e54e40fe9db34cab65c290",
                    "sha256:27ed451d5d653095e610ab9f87626a6fa5fe21f2306f133aba07d5fff2d5eea0",
                    "sha256:fcfd58af280ca13e4e7cbe28921a46524be5346a4493b805ad1aacb9415e5580",
                    "sha256:70a91d1a8c327a6ab23a26e61b554eba49e3c99cdd34813056717afb62c20aba",
                    "sha256:871721b76996f935774c1fc4ec711463fe4d75bc24e643acbcb6599a06f5f76e",
                    "sha256:549c9cf1df21c26559762b4bea9e59d4621b1bf4bab7bb12b9f281ae52a7a5ef",
                    "sha256:28089a4ed2ca77263ad4a7cfe15071fe52658be56da447effc4ffe1dd130689b"
                ]
            }
        },
        "1.12.17-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bafcba05866743bcf7681ae385a5ab8ddfd7844774ffcf795835e75b2fd9ee81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a183a14a54eb2fe24ead38081f9354be4966397ff2a0d05de93002ef4d10d07",
            "container_config": {
                "Hostname": "8a183a14a54e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bafcba05866743bcf7681ae385a5ab8ddfd7844774ffcf795835e75b2fd9ee81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:16:55.645691036Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:04:08.434471765Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7fc54d004d962f2cfb469a1aaa9e689e46dfa2554e0cf44c33981d688adc31b in / "
                },
                {
                    "created": "2020-02-01T17:04:09.985480911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:18:17.210178472Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:18:29.74152444Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:19:26.254828182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:33:10.603594656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T01:16:28.348104001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:50.281427229Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:16:52.68488535Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:53.330020379Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:16:54.919068016Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:16:55.645691036Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7025fd153916d67aed12af624ffb223bea6bd8ad0837cd220648bb6fafb0c15",
                    "sha256:d8dccd79f6a8f10c1636cbd82d919eed8c95166d302f48b992af102693a2e0a2",
                    "sha256:48d889636708d63da0061ef1e64042d7e6cfbf430b274af2a6637e4fca94a8ab",
                    "sha256:d335f8e4986334af3faba57d57b78f72d53e70c36ff5f6e3a6482611bd13a490",
                    "sha256:1f8a54d1f09d462613b546c4a599f7a2fce5db959952a252413c5f28f23760a3",
                    "sha256:320609051009dec02018837d1e606cbec4c6bc3e2100efea2318585c217975ec",
                    "sha256:199c25ac0750d2f706b1087d28f470fff5341a5c362a7cf896507a5c82ed6d9d"
                ]
            }
        },
        "1.12.2-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69008cbe514a22ff4f613011407862d22240bda97491e8e477d855c325ceede5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ccab6a9f36498eeb68dfb01aa8292e87041e7912438beb77e802572689f87b3f",
            "container_config": {
                "Hostname": "ccab6a9f3649",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69008cbe514a22ff4f613011407862d22240bda97491e8e477d855c325ceede5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T12:00:19.888863502Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T11:57:59.285138666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:16.237941477Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T12:00:17.360877862Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:17.820922789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:19.410587191Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T12:00:19.888863502Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:acace4f74ad31615a25e0954f778aeb33ecb3b6a53de442414c7ad9214f53078",
                    "sha256:fbdfdd37fe2d51044c17e5395e8fe882fdcabba599986fb206d5f86fe7e63d7a"
                ]
            }
        },
        "1.12.2-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69008cbe514a22ff4f613011407862d22240bda97491e8e477d855c325ceede5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ccab6a9f36498eeb68dfb01aa8292e87041e7912438beb77e802572689f87b3f",
            "container_config": {
                "Hostname": "ccab6a9f3649",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69008cbe514a22ff4f613011407862d22240bda97491e8e477d855c325ceede5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T12:00:19.888863502Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:52.222531099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e9ae09c8f3973b62bf7e10dd8b9251e50f5479c0d8d1644f632f3886e02c7323 in / "
                },
                {
                    "created": "2019-03-08T03:35:52.612420119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-12T12:13:20.938859468Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-12T12:13:22.405084587Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T11:57:59.285138666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:16.237941477Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T12:00:17.360877862Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:17.820922789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T12:00:19.410587191Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T12:00:19.888863502Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21705165756ddfdc31d10bff59efb9893ded3cd793d06f2432c2dc819aa1cd72",
                    "sha256:d22de0108d9eb3cafc5ce029d26ffd28c5292acf8800ea7e58be2428159c466c",
                    "sha256:793d0e0d7bd84d1df0f097b09bd76d6daa69b66440022a0454498149d71371fa",
                    "sha256:acace4f74ad31615a25e0954f778aeb33ecb3b6a53de442414c7ad9214f53078",
                    "sha256:fbdfdd37fe2d51044c17e5395e8fe882fdcabba599986fb206d5f86fe7e63d7a"
                ]
            }
        },
        "1.12.2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c21d885e0819b5718b34a998ae210f8c38202e70c4b536586246806237e37ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "10a5dd19a35b0e22a6ee9acb0e6ac85a491153bb5273fc45e9c98f532ec385a5",
            "container_config": {
                "Hostname": "10a5dd19a35b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c21d885e0819b5718b34a998ae210f8c38202e70c4b536586246806237e37ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T11:57:52.052450108Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T12:07:23.256165411Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb82b6b8aa709ab4455c13e7e19562bc1ddbd415015cd576612b0fc51c4e7007 in / "
                },
                {
                    "created": "2019-03-27T12:07:24.904979496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T13:12:54.886216918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T13:13:04.596635938Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T13:13:51.406048099Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:27.514463313Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-06T11:57:26.332844669Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:57:47.873837491Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f28c1fde8f293cc5c83ae8de76373cf76ae9306909564f54e0edcf140ce8fe3f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='38d92116cd8c408e995972ff7fb0b6453c4f2214bde602d1772bd88f9d4d5c60' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='598558fe54bbdce8b676f81e37f514dd70b8fc1377086658ae6e836480e900eb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3005a7937ff2be7ea9badd416cc37dfe2ff589d3a311f1685de0a805e45455b6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='62be1d5f38e322edc21de0debd3051247faff59890c343a7f2173c15098dbd35' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a41b0b11f5e34c3cccd7619bddf79a6d4b94bcbd2160fefcdf25f0afe87cad0a' ;; \t\t*) goRelArch='src'; goRelSha256='af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T11:57:49.809147844Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:57:50.235404018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:57:51.6972714Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T11:57:52.052450108Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bb8a900019f4f93e608b1ac8c0b2f2a8f286466479bc59d7b60988c85bf2dec",
                    "sha256:de6be9fabd777cb454b03b09beb60ba563a6d88c2a0ab1d3ea38ef3f34f217f6",
                    "sha256:c2964fd3bfec5803b62c9cdeac94649b821ef954f543a166ef493f97758971da",
                    "sha256:5351f61d4e259f59c875f2a494ca7ee9d8989679ab3b1a719d909619912b8af6",
                    "sha256:85323c8403860f78968013e2b8b5e584bf6ca5119048feb6ab81488215349963",
                    "sha256:453e7fba11de075f76280a3ed61dd48a9a81f31f616a67444e00eaa6b50d7fa5",
                    "sha256:ce019bcf164ae032b19d68575e79a55189cc6b1dafeb76dbf4353f56577e73f7"
                ]
            }
        },
        "1.12.3-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:685a69c02e1e3d58bc489e06ac7220a406981179b10f0d34a63b35bcd4c26a58",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d672373c6002fb7b625d8db271dd1f2e4042bbbc6f4724465ddbe67c13adf600",
            "container_config": {
                "Hostname": "d672373c6002",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:685a69c02e1e3d58bc489e06ac7220a406981179b10f0d34a63b35bcd4c26a58",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T12:38:56.668287979Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:57:47.813512109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a27b74f23795a1f205247dcd6eff48ac56f0b8f2afe0c358199a0b60f694861 in / "
                },
                {
                    "created": "2019-04-10T11:57:48.591796864Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:36:38.153828354Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T12:36:39.465588665Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T12:36:39.857211865Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:38:50.396511494Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T12:38:52.405690655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:38:53.236712957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:38:55.919941057Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T12:38:56.668287979Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8c6532c0d10d7ef8e9390cb281500d4ae7418065f66e2a866b2b4517187ef92",
                    "sha256:c068725b85a6fec4ec24c5072fa2d67b41cff7f3f0402f4f51c520190d67c363",
                    "sha256:3ed8fc64895d3629ebf4528e47f7b0f3215d3c7461fb158923cf6b7b2415084f",
                    "sha256:523484959a74c0345ae4498656fa2f7c47ed5a8c17592c07625748fede0cd578",
                    "sha256:6a60115db8f157bd77874fc1df9376da80fc9d367c917606308b9e9e4f49a7e8"
                ]
            }
        },
        "1.12.3-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:685a69c02e1e3d58bc489e06ac7220a406981179b10f0d34a63b35bcd4c26a58",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d672373c6002fb7b625d8db271dd1f2e4042bbbc6f4724465ddbe67c13adf600",
            "container_config": {
                "Hostname": "d672373c6002",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:685a69c02e1e3d58bc489e06ac7220a406981179b10f0d34a63b35bcd4c26a58",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T12:38:56.668287979Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:57:47.813512109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a27b74f23795a1f205247dcd6eff48ac56f0b8f2afe0c358199a0b60f694861 in / "
                },
                {
                    "created": "2019-04-10T11:57:48.591796864Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:36:38.153828354Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T12:36:39.465588665Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T12:36:39.857211865Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:38:50.396511494Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T12:38:52.405690655Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:38:53.236712957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:38:55.919941057Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T12:38:56.668287979Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8c6532c0d10d7ef8e9390cb281500d4ae7418065f66e2a866b2b4517187ef92",
                    "sha256:c068725b85a6fec4ec24c5072fa2d67b41cff7f3f0402f4f51c520190d67c363",
                    "sha256:3ed8fc64895d3629ebf4528e47f7b0f3215d3c7461fb158923cf6b7b2415084f",
                    "sha256:523484959a74c0345ae4498656fa2f7c47ed5a8c17592c07625748fede0cd578",
                    "sha256:6a60115db8f157bd77874fc1df9376da80fc9d367c917606308b9e9e4f49a7e8"
                ]
            }
        },
        "1.12.3-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:48c50c410949dfec056d34aa562579d0dbbff90b018f792c834910e6da8c898b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1197a1d7f9a3a877392db68ca3b4edc1bbb67dbe91e9427b289c686df56c85a5",
            "container_config": {
                "Hostname": "1197a1d7f9a3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:48c50c410949dfec056d34aa562579d0dbbff90b018f792c834910e6da8c898b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T11:57:52.133291583Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T12:07:23.256165411Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb82b6b8aa709ab4455c13e7e19562bc1ddbd415015cd576612b0fc51c4e7007 in / "
                },
                {
                    "created": "2019-03-27T12:07:24.904979496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T13:12:54.886216918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T13:13:04.596635938Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T13:13:51.406048099Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:27.514463313Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-09T11:57:25.116910073Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:57:47.806282298Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3924819eed16e55114f02d25d03e77c916ec40b7fd15c8acb5838b63135b03df' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='efce59fac5ebc7302263ca1093fe2c3252c1b936f5b1ae08afc328eea0403c79' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4deb7f3b90d03f71f5cac3654e0e1f9cb46c45b85c5475510222b958e4ea2ed6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='67599ae0788ed88260531d4be4293cb8f5199e5c7e06d30c6bd95eb54f014be7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8bd04e742be8ed3f7f6fd2c78e2303be2ee70709cdc28758f101765a5e7d6dc1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='102fe607818ba21b9853ddfa3b1225b2af802010af3a032c6487144fbb7f3521' ;; \t\t*) goRelArch='src'; goRelSha256='5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T11:57:49.30398661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:57:49.720421913Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:57:51.308613514Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T11:57:52.133291583Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bb8a900019f4f93e608b1ac8c0b2f2a8f286466479bc59d7b60988c85bf2dec",
                    "sha256:de6be9fabd777cb454b03b09beb60ba563a6d88c2a0ab1d3ea38ef3f34f217f6",
                    "sha256:c2964fd3bfec5803b62c9cdeac94649b821ef954f543a166ef493f97758971da",
                    "sha256:5351f61d4e259f59c875f2a494ca7ee9d8989679ab3b1a719d909619912b8af6",
                    "sha256:85323c8403860f78968013e2b8b5e584bf6ca5119048feb6ab81488215349963",
                    "sha256:ae2478cee2f94647df4a928cba3c3ce1be828dde4666a63e9ec87d106d7d2b20",
                    "sha256:4358fbf78f4abc6ac4397d25e9ede74bf32e8834cd54b0f03dfcf8d13c0046f9"
                ]
            }
        },
        "1.12.4-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:64bfa204855ce30a1c236b3838a8f0cfb582f2cf1fe0f2cd8faccba599c7aa4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "da32e461021f92f42a4ac991be0874070e88a5ddb77412b0c011eb754fa30952",
            "container_config": {
                "Hostname": "da32e461021f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:64bfa204855ce30a1c236b3838a8f0cfb582f2cf1fe0f2cd8faccba599c7aa4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:54:15.940792862Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:57:47.813512109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a27b74f23795a1f205247dcd6eff48ac56f0b8f2afe0c358199a0b60f694861 in / "
                },
                {
                    "created": "2019-04-10T11:57:48.591796864Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:36:38.153828354Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T12:36:39.465588665Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T19:51:41.228645264Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:11.999838135Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:54:14.004780681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:14.364665017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:15.57308191Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:54:15.940792862Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8c6532c0d10d7ef8e9390cb281500d4ae7418065f66e2a866b2b4517187ef92",
                    "sha256:c068725b85a6fec4ec24c5072fa2d67b41cff7f3f0402f4f51c520190d67c363",
                    "sha256:3ed8fc64895d3629ebf4528e47f7b0f3215d3c7461fb158923cf6b7b2415084f",
                    "sha256:5d3154cd8428d98e5537271c80c48fd951c319104e7955c96e4341475b022d9a",
                    "sha256:095bc38c63f27bc9ac95247ff26b5425c53cd9395fda1f6542867c648ff1c230"
                ]
            }
        },
        "1.12.4-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:64bfa204855ce30a1c236b3838a8f0cfb582f2cf1fe0f2cd8faccba599c7aa4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "da32e461021f92f42a4ac991be0874070e88a5ddb77412b0c011eb754fa30952",
            "container_config": {
                "Hostname": "da32e461021f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:64bfa204855ce30a1c236b3838a8f0cfb582f2cf1fe0f2cd8faccba599c7aa4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:54:15.940792862Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:57:47.813512109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a27b74f23795a1f205247dcd6eff48ac56f0b8f2afe0c358199a0b60f694861 in / "
                },
                {
                    "created": "2019-04-10T11:57:48.591796864Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:36:38.153828354Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T12:36:39.465588665Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-15T19:51:41.228645264Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:11.999838135Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:54:14.004780681Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:14.364665017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:54:15.57308191Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:54:15.940792862Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8c6532c0d10d7ef8e9390cb281500d4ae7418065f66e2a866b2b4517187ef92",
                    "sha256:c068725b85a6fec4ec24c5072fa2d67b41cff7f3f0402f4f51c520190d67c363",
                    "sha256:3ed8fc64895d3629ebf4528e47f7b0f3215d3c7461fb158923cf6b7b2415084f",
                    "sha256:5d3154cd8428d98e5537271c80c48fd951c319104e7955c96e4341475b022d9a",
                    "sha256:095bc38c63f27bc9ac95247ff26b5425c53cd9395fda1f6542867c648ff1c230"
                ]
            }
        },
        "1.12.4-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0e37fbe33908bacf5289b317e4411d76dd40ca7133c9898d00b34940d3fb704f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "88bf0c2131d687ec5fd739a6de08ca09af48361d167b9763549fb64bb01e4aeb",
            "container_config": {
                "Hostname": "88bf0c2131d6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0e37fbe33908bacf5289b317e4411d76dd40ca7133c9898d00b34940d3fb704f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-15T19:51:36.620705803Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T12:07:23.256165411Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb82b6b8aa709ab4455c13e7e19562bc1ddbd415015cd576612b0fc51c4e7007 in / "
                },
                {
                    "created": "2019-03-27T12:07:24.904979496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T13:12:54.886216918Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T13:13:04.596635938Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T13:13:51.406048099Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T16:03:27.514463313Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-15T19:51:13.137112399Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:51:32.726161404Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d7d1f1f88ddfe55840712dc1747f37a790cbcaa448f6c9cf51bbe10aa65442f5' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c43457b6d89016e9b79b92823003fd7858fb02aea22b335cfd204e0b5be71d92' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b7d7b4319b2d86a2ed20cef3b47aa23f0c97612b469178deecd021610f6917df' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='eba5c51f657c1b05d5930475d1723758cd86db74499125ab48f0f9d1863845f7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='51642f3cd6ef9af6c4a092c2929e4fb478f102fe949921bd77ecd6905952c216' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0aab0f368c090da71f52531ebac977cc7396b692145acee557b3f9500b42467a' ;; \t\t*) goRelArch='src'; goRelSha256='4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-15T19:51:34.644617128Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:51:35.037003297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T19:51:36.221108939Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-15T19:51:36.620705803Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bb8a900019f4f93e608b1ac8c0b2f2a8f286466479bc59d7b60988c85bf2dec",
                    "sha256:de6be9fabd777cb454b03b09beb60ba563a6d88c2a0ab1d3ea38ef3f34f217f6",
                    "sha256:c2964fd3bfec5803b62c9cdeac94649b821ef954f543a166ef493f97758971da",
                    "sha256:5351f61d4e259f59c875f2a494ca7ee9d8989679ab3b1a719d909619912b8af6",
                    "sha256:85323c8403860f78968013e2b8b5e584bf6ca5119048feb6ab81488215349963",
                    "sha256:3481b3d69e4e3b3a89c69185edbce1134ebe1c85cdf4c1b8a455eef1adc0b2ec",
                    "sha256:860224580b1eee969ad22326e68cd375f803e2d752930b9cc6cb63b0cd391577"
                ]
            }
        },
        "1.12.5-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e1edb5017f1ef8ee7cbd4e6ad43c9e07d55b23f7b9cc81822a97db6e7da5d671",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cca3731d0cdc37c9a39884b091b27451fccf8394ed6782f5f3e93ec0a7e4d903",
            "container_config": {
                "Hostname": "cca3731d0cdc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e1edb5017f1ef8ee7cbd4e6ad43c9e07d55b23f7b9cc81822a97db6e7da5d671",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T13:07:19.384838481Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T13:04:59.032901593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:07:15.38136217Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T13:07:16.746321216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:07:17.196490035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:07:18.981090878Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T13:07:19.384838481Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:929a4cc5353055eab990e3285405efdda59215d9daa7316c6b8f9907013dcc56",
                    "sha256:0190556ca32484b746fd44ed4e741f6aa0072c6b19505bd4fd9587a790611167"
                ]
            }
        },
        "1.12.5-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e1edb5017f1ef8ee7cbd4e6ad43c9e07d55b23f7b9cc81822a97db6e7da5d671",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cca3731d0cdc37c9a39884b091b27451fccf8394ed6782f5f3e93ec0a7e4d903",
            "container_config": {
                "Hostname": "cca3731d0cdc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e1edb5017f1ef8ee7cbd4e6ad43c9e07d55b23f7b9cc81822a97db6e7da5d671",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T13:07:19.384838481Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T13:04:59.032901593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:07:15.38136217Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T13:07:16.746321216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:07:17.196490035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:07:18.981090878Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T13:07:19.384838481Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:929a4cc5353055eab990e3285405efdda59215d9daa7316c6b8f9907013dcc56",
                    "sha256:0190556ca32484b746fd44ed4e741f6aa0072c6b19505bd4fd9587a790611167"
                ]
            }
        },
        "1.12.5-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0a96616ddc417bbda7ad6937dcbd916d1dfda65dc3086892bd97c62e0cc901c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d0e2201e11db89b4d51652537a9c9db1daa7ab116dd85764c5564a6f495c6d49",
            "container_config": {
                "Hostname": "d0e2201e11db",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0a96616ddc417bbda7ad6937dcbd916d1dfda65dc3086892bd97c62e0cc901c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-08T16:14:28.452230801Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-08T12:03:26.334916929Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7e8dcc40e246d53b86266855a2de8080d26e6b4ed9f594c1acc565784405735b in / "
                },
                {
                    "created": "2019-05-08T12:03:27.765340171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T13:04:33.641818469Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T13:04:42.293926726Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-05-08T13:05:22.992873375Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T16:14:01.188177571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-08T16:14:02.673029888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T16:14:20.572452476Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aea86e3c73495f205929cfebba0d63f1382c8ac59be081b6351681415f4063cf' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='311f5e76c7cec1ec752474a61d837e474b8e750b8e3eed267911ab57c0e5da9a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ff09f34935cd189a4912f3f308ec83e4683c309304144eae9cf60ebc552e7cd8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='146605e13bf337ff3aacd941a816c5d97a8fef8b5817e07fcec4540632085980' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e88b2a2098bc79ad33912d1d27bc3282a7f3231b6f4672f306465bf46ff784ca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='168d297ec910cb446d1aea878baeb85f1387209f9eb55dde68bddcd4c006dcbb' ;; \t\t*) goRelArch='src'; goRelSha256='2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-08T16:14:22.607831468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T16:14:23.463623861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-08T16:14:27.752230511Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-08T16:14:28.452230801Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21ec535fbc10d61a6261f020debe9cff61d7b1ba1155f813b0658c96edd1a98c",
                    "sha256:eb0f450d28b4994f5a1d4a8715e2d656048f8dbde032e970e5a600dd8586c224",
                    "sha256:3098ad1698c04c3f6cd081de1414d5e2abef8b20fc35c3012b22af32f260eb50",
                    "sha256:197d58449e8ef22b944596c803020660d8dab4f15b65d9555b6d48613750e1af",
                    "sha256:73d41ead59396a1334b4628da6a564cde0dc574ae176c195a6b2f4bb6aadc657",
                    "sha256:a2f61baea1ec592cadf21bb3e749919abf86f61b03960dbe65db71c0e196ebd1",
                    "sha256:f080e5b3ffcdd2141fe0f63fd6f06071a80605c0c7a90c4781fee7990959a9c8"
                ]
            }
        },
        "1.12.6-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c670939c6dd0290c6013cc8a18def6b55be7028d7211d8f3994b2adf18488813",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6f75bcf0fded319956dfb86143ebe8bb64279108f8044c5583975d902dd2e880",
            "container_config": {
                "Hostname": "6f75bcf0fded",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c670939c6dd0290c6013cc8a18def6b55be7028d7211d8f3994b2adf18488813",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T21:00:09.508879034Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:57:43.708833417Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0fb1a3eecd6693893c4c94275505763f0c6432d1cbd38fea5c27baa5256b32aa in / "
                },
                {
                    "created": "2019-06-19T20:57:44.18832996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:57:48.156118792Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:57:49.70489381Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:57:50.133513891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:00:04.722420367Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T21:00:07.221043732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:00:07.616993073Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:00:09.033242086Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T21:00:09.508879034Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd857cff215ae4119c7f0be48a3adb1bdbffd36de3820ddb6aa7dae44d2616dd",
                    "sha256:fe15040bd2855ec5c14270fb89ae1514fa4bf00ce4174441d8c63c6bef48e9d9",
                    "sha256:25f5b6467d1b070fe3afa64562a0ec52b7d4201ed04c18ded16c90b72e19a61c",
                    "sha256:4f2581d3ec11c34c0acdb4f4a358b3f0a40bcecbb59b92b1a56b032e7cb2bbd1",
                    "sha256:f3932c37a3a2e90d583c95197dbad68b197e7e6cc194afaa0e946de2092b2eab"
                ]
            }
        },
        "1.12.6-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c670939c6dd0290c6013cc8a18def6b55be7028d7211d8f3994b2adf18488813",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6f75bcf0fded319956dfb86143ebe8bb64279108f8044c5583975d902dd2e880",
            "container_config": {
                "Hostname": "6f75bcf0fded",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c670939c6dd0290c6013cc8a18def6b55be7028d7211d8f3994b2adf18488813",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T21:00:09.508879034Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:57:43.708833417Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0fb1a3eecd6693893c4c94275505763f0c6432d1cbd38fea5c27baa5256b32aa in / "
                },
                {
                    "created": "2019-06-19T20:57:44.18832996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:57:48.156118792Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:57:49.70489381Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:57:50.133513891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:00:04.722420367Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T21:00:07.221043732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:00:07.616993073Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T21:00:09.033242086Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T21:00:09.508879034Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd857cff215ae4119c7f0be48a3adb1bdbffd36de3820ddb6aa7dae44d2616dd",
                    "sha256:fe15040bd2855ec5c14270fb89ae1514fa4bf00ce4174441d8c63c6bef48e9d9",
                    "sha256:25f5b6467d1b070fe3afa64562a0ec52b7d4201ed04c18ded16c90b72e19a61c",
                    "sha256:4f2581d3ec11c34c0acdb4f4a358b3f0a40bcecbb59b92b1a56b032e7cb2bbd1",
                    "sha256:f3932c37a3a2e90d583c95197dbad68b197e7e6cc194afaa0e946de2092b2eab"
                ]
            }
        },
        "1.12.6-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:56ccf21b61cd235b8b490045c4d39b8e145292c7d2258fec206dd1f4ed8db2f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b9adfd29155a43bf68c8f07ffdb116d30adbbc885949d826650636f85e2d43bd",
            "container_config": {
                "Hostname": "b9adfd29155a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:56ccf21b61cd235b8b490045c4d39b8e145292c7d2258fec206dd1f4ed8db2f0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-13T00:36:11.479888412Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-13T00:33:43.039151912Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:36:02.119817699Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-13T00:36:07.526902811Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:36:08.189884087Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:36:10.481928151Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-13T00:36:11.479888412Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:ac09150b75f6b4bea0e81228ef18935de625f889eb73fe5ea97c9d3b8af076d9",
                    "sha256:35e4c394148da15f9d6ad538497b40bea3f618cfef6d4d61e69d3b71ef25effd"
                ]
            }
        },
        "1.12.6-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0878245e881472a49a0f9f3cc33274bfddb3893459a2e11b052ac7f4bfdb6794",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "23439465d99b7f0177cb355f91a2b8ed141b8b9cdc9ae18db7907d9d2b4fca7d",
            "container_config": {
                "Hostname": "23439465d99b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0878245e881472a49a0f9f3cc33274bfddb3893459a2e11b052ac7f4bfdb6794",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-13T00:33:36.305921154Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-11T00:02:40.730434102Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a533ab960a52dd32ca40bdcb55083ba8c340e110f8519a3eda696b46a4a07165 in / "
                },
                {
                    "created": "2019-06-11T00:02:41.857103469Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T01:09:06.18785081Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T01:09:19.188919163Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T01:09:59.311016803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-13T00:33:07.620600241Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-13T00:33:08.656883936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:33:27.992160863Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='dbcf71a3c1ea53b8d54ef1b48c85a39a6c9a935d01fc8291ff2b92028e59913c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0708fbc125e7b782b44d450f3a3864859419b3691121ad401f1b9f00e488bddb' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8f4e3909c74b4f3f3956715f32419b28d32a4ad57dbd79f74b7a8a920b21a1a3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7aaf25164a9ab5e1005c15535ed16ee122df50ac192c2d79b7940315c2b74f2c' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='67eacb68c1e251c1428e588776c5a02e287a508e3d44f940d31d8ff5d57f0eef' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c14baa10b87a38e56f28a176fae8a839e9052b0e691bdc0461677d4bcedea9aa' ;; \t\t*) goRelArch='src'; goRelSha256='c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-13T00:33:31.688752051Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:33:32.417744152Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-13T00:33:35.624801316Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-13T00:33:36.305921154Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4225e0635193370093a2fd719d5a931c4e757508ef70c53d8882d7f0f5fe0e74",
                    "sha256:862dec0bd83b1d9d82d3df614b08aae35ec90977f918f175a42aee9aa294af2a",
                    "sha256:fa20690210e58b6b5c9cb567059648e57ea2974e16c05736d101ccb280e59485",
                    "sha256:ca531cd5112e548df9f55b83fabbfec0ce48c41f3387d321b8f2d2693b04362b",
                    "sha256:0d2ecef77f26631c6512f793fcba307f6e7a7050ff656e4decb5416c13f791cc",
                    "sha256:99fd5a4c8efe5f3eace88b93ccb9be652fec0850cbaab98adc329578925b7da4",
                    "sha256:89ae7cc0ecaf77c9054ac44c17aaf129d9c4cbb05d7ed49474e00b4c25cbe515"
                ]
            }
        },
        "1.12.7-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89432a3e9406f8ebd3ffd84263fde81c49767209c5eacc54c8fad2a61351ad50",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ec307729f0176640b621849c39cd939f8feedebd904b2a970798d89a4a9c319d",
            "container_config": {
                "Hostname": "ec307729f017",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89432a3e9406f8ebd3ffd84263fde81c49767209c5eacc54c8fad2a61351ad50",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-11T22:19:38.345591593Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:57:38.657292999Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:679b9d60ff413960c630af8cd74244faeae07446f35b19f4afec78449126c6b6 in / "
                },
                {
                    "created": "2019-07-11T21:57:39.11721023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:13:25.116005422Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:13:26.641844609Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-11T22:16:51.585592122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:19:33.468063552Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-11T22:19:35.641217507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:19:36.126166618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:19:37.790186787Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-11T22:19:38.345591593Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c39fe739bfebaed288acb4e856ab70b62f8791219059fcd04489638612557d1b",
                    "sha256:457abfd8c16e04953fcbf8bc1555dfbdc25074bb2e16b016c6508ebd38a8d3db",
                    "sha256:da0bf5abf1ba975b68f6e0ea25c23d29d3918fd9bc6bddfa45123489c58e3828",
                    "sha256:e2eb2d22a7a36c9b64a87599bc130428ed3fb24b5525596b74b5efe775f9c8b1",
                    "sha256:50043aeda792a5e12425fe14de0bb00a3fc68aaf81f3e6e473b79792945abb4c"
                ]
            }
        },
        "1.12.7-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89432a3e9406f8ebd3ffd84263fde81c49767209c5eacc54c8fad2a61351ad50",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ec307729f0176640b621849c39cd939f8feedebd904b2a970798d89a4a9c319d",
            "container_config": {
                "Hostname": "ec307729f017",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89432a3e9406f8ebd3ffd84263fde81c49767209c5eacc54c8fad2a61351ad50",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-11T22:19:38.345591593Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:57:38.657292999Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:679b9d60ff413960c630af8cd74244faeae07446f35b19f4afec78449126c6b6 in / "
                },
                {
                    "created": "2019-07-11T21:57:39.11721023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:13:25.116005422Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:13:26.641844609Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-11T22:16:51.585592122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:19:33.468063552Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-11T22:19:35.641217507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:19:36.126166618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:19:37.790186787Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-11T22:19:38.345591593Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c39fe739bfebaed288acb4e856ab70b62f8791219059fcd04489638612557d1b",
                    "sha256:457abfd8c16e04953fcbf8bc1555dfbdc25074bb2e16b016c6508ebd38a8d3db",
                    "sha256:da0bf5abf1ba975b68f6e0ea25c23d29d3918fd9bc6bddfa45123489c58e3828",
                    "sha256:e2eb2d22a7a36c9b64a87599bc130428ed3fb24b5525596b74b5efe775f9c8b1",
                    "sha256:50043aeda792a5e12425fe14de0bb00a3fc68aaf81f3e6e473b79792945abb4c"
                ]
            }
        },
        "1.12.7-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ed5d2557b90ed8e59f0cfc08b9f5678d790166c9695cca05ec9563cee4bd2ee2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fce09720a909c5e1c65d0fa3fe6d6c1e5bb834797dd3b293fa1b05185d126aab",
            "container_config": {
                "Hostname": "fce09720a909",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ed5d2557b90ed8e59f0cfc08b9f5678d790166c9695cca05ec9563cee4bd2ee2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-09T01:03:24.602455688Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-09T01:00:58.757058386Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T01:03:20.166796312Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-09T01:03:21.878522773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T01:03:22.377989006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T01:03:24.018525867Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-09T01:03:24.602455688Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:27c6e07a5a42562fda31897cfea742e9c640893d6b90fb2a3629bd8fc129e245",
                    "sha256:74acc7717d2be4aff9e851444d00b0240c70f03fd072f7525dd6dd8f419618d1"
                ]
            }
        },
        "1.12.7-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fb025f428c8639bb760c01b5812775fcf894f6d9c404c99a8caf7381c9732ede",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "29290735ae9dbd53e6186edbec92ff03ca514d20ad94d4b70371585dd98d7023",
            "container_config": {
                "Hostname": "29290735ae9d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fb025f428c8639bb760c01b5812775fcf894f6d9c404c99a8caf7381c9732ede",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T00:59:00.360863885Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:07:09.631726878Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fa9102440e38c2e5ab7e7ba08b43246e370dceb03cfb40debb00f4975b4d5eeb in / "
                },
                {
                    "created": "2019-07-09T21:07:11.0713165Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:32:18.388812638Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:32:31.861484705Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:33:10.768283523Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T00:54:23.868946547Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-20T00:58:33.584865376Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T00:58:56.555021086Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='48edbe936e9eb74f259bfc4b621fafca4d4ec43156b4ee7bd0d979f257dcd60a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4da1f7198a8fa0c4067852656b6c10153a4eca5a26aca28ef02ae9f4a7939ba5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ae2424b7ff557a708be12d3141f25b645966489ca49af1ad10b4fbe4c97d4c41' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eda20600d90247efbfa70d116d80056e11192d62592240975b2a8c53caa5bf3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3374ac3d646555e50be790091b51849319cfcb176904048458c7f4252337fce8' ;; \t\t*) goRelArch='src'; goRelSha256='95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T00:58:57.787717737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T00:58:58.253156567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T00:58:59.85329903Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T00:59:00.360863885Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c8f1eeabe991e1dfde8e915e160d95644d8a503c9a1a82668e523e03ae00a9d",
                    "sha256:5eb82648b148a4843c308e1c50abc9b02c7097f382fdb9aa1a210de55b858467",
                    "sha256:15dd99db2b366070411cd4edd1dea413fac597f5559726e8133f7cf0e13e513d",
                    "sha256:5a2c96af125bd021a99d47b340c1ca893a005bb3aafd2d06d175010d79d5ddc3",
                    "sha256:b3ac868408dee5d1b69e85910085399968f406b2f91a20692f83dd7c466cfaf5",
                    "sha256:27f6ba2be19a6216429abe1001c22b53cb688dcc5ba9022a1af0dcd95c2fc034",
                    "sha256:224302fe85eab44cc70fc2b725d98c7932436ad0dfe8a4b6e478efb8be3e9a0d"
                ]
            }
        },
        "1.12.7-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69220a0749ff9cf8e0fa4e196fcebc5f1e0a996b12dac0c736f159bb8d388051",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "33fb8a5b607d1427053434f5595bb40a459710e8b93b41c6bc7966d3696f238a",
            "container_config": {
                "Hostname": "33fb8a5b607d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69220a0749ff9cf8e0fa4e196fcebc5f1e0a996b12dac0c736f159bb8d388051",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-10T00:56:01.968884764Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:12:58.996023447Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00322e24567c3cea35b2051e88033c77243c4fdc311040b784d7551188ae0d62 in / "
                },
                {
                    "created": "2019-07-09T21:12:59.910888993Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:45:31.060437579Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:45:42.686936017Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:46:25.025749879Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T00:55:30.372440861Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T00:55:31.225384609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T00:55:55.128108998Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='48edbe936e9eb74f259bfc4b621fafca4d4ec43156b4ee7bd0d979f257dcd60a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4da1f7198a8fa0c4067852656b6c10153a4eca5a26aca28ef02ae9f4a7939ba5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ae2424b7ff557a708be12d3141f25b645966489ca49af1ad10b4fbe4c97d4c41' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eda20600d90247efbfa70d116d80056e11192d62592240975b2a8c53caa5bf3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3374ac3d646555e50be790091b51849319cfcb176904048458c7f4252337fce8' ;; \t\t*) goRelArch='src'; goRelSha256='95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-10T00:55:57.260227106Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T00:55:57.960399556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T00:56:01.380799629Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-10T00:56:01.968884764Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e65f419047418836c52d4021340f6da0f1498f2edb920ad181bb923571c61929",
                    "sha256:21a76083529eaa8b41100837c8d41341b8aedff1a7a8379140a84a63ba8ded6d",
                    "sha256:d18155c9bf86861567d09b7366e3a3b6da339d9e513abf93a97902ab6171a197",
                    "sha256:dedd08b13608d6fce38ff6118d490990f62e41a89afcc54b38ecfde0fe09a37f",
                    "sha256:7e0b808a9e7dfc9c364ad423efd611991cea1641f5b6a3a98d4828c63e4abb15",
                    "sha256:a4b268ed7f122792d6481733f5af62a72d7686767bde6425a1d3bb6d0b1ff3c3",
                    "sha256:f6d8c377bb2ac0162c253bb6fdee93c2690becadeee46a97789940870c69da64"
                ]
            }
        },
        "1.12.8-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74949926736d00e4d341faba8fd368fbbe6b8ce43dfe4ab5da9593db69545411",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "060c53abc1216035ac15bb26e28282ba09d83f716cd9dc79806682d2c0d3fbb5",
            "container_config": {
                "Hostname": "060c53abc121",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74949926736d00e4d341faba8fd368fbbe6b8ce43dfe4ab5da9593db69545411",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:34:31.157160644Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:57:38.657292999Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:679b9d60ff413960c630af8cd74244faeae07446f35b19f4afec78449126c6b6 in / "
                },
                {
                    "created": "2019-07-11T21:57:39.11721023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:13:25.116005422Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:13:26.641844609Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:32:06.988806502Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:24.508950459Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:34:28.27005953Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:29.124997261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:30.661495925Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:34:31.157160644Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c39fe739bfebaed288acb4e856ab70b62f8791219059fcd04489638612557d1b",
                    "sha256:457abfd8c16e04953fcbf8bc1555dfbdc25074bb2e16b016c6508ebd38a8d3db",
                    "sha256:da0bf5abf1ba975b68f6e0ea25c23d29d3918fd9bc6bddfa45123489c58e3828",
                    "sha256:1617a200f12d6cef52f17100793ed9e237dc16cf340ee4a0dd512da912ba1c00",
                    "sha256:a431217312673e4890ccf5d8a5d1efb23f4a7b7463e2941070abf37693be556a"
                ]
            }
        },
        "1.12.8-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74949926736d00e4d341faba8fd368fbbe6b8ce43dfe4ab5da9593db69545411",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "060c53abc1216035ac15bb26e28282ba09d83f716cd9dc79806682d2c0d3fbb5",
            "container_config": {
                "Hostname": "060c53abc121",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74949926736d00e4d341faba8fd368fbbe6b8ce43dfe4ab5da9593db69545411",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:34:31.157160644Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:57:38.657292999Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:679b9d60ff413960c630af8cd74244faeae07446f35b19f4afec78449126c6b6 in / "
                },
                {
                    "created": "2019-07-11T21:57:39.11721023Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:13:25.116005422Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:13:26.641844609Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:32:06.988806502Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:24.508950459Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:34:28.27005953Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:29.124997261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:30.661495925Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:34:31.157160644Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c39fe739bfebaed288acb4e856ab70b62f8791219059fcd04489638612557d1b",
                    "sha256:457abfd8c16e04953fcbf8bc1555dfbdc25074bb2e16b016c6508ebd38a8d3db",
                    "sha256:da0bf5abf1ba975b68f6e0ea25c23d29d3918fd9bc6bddfa45123489c58e3828",
                    "sha256:1617a200f12d6cef52f17100793ed9e237dc16cf340ee4a0dd512da912ba1c00",
                    "sha256:a431217312673e4890ccf5d8a5d1efb23f4a7b7463e2941070abf37693be556a"
                ]
            }
        },
        "1.12.8-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f73e4cf0540dd61e5b076851b0c734d73fd26e7130c757e7bd1545c60e155d20",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f779a162c206abf1a41efc2ee9bcb7dcd22a1a93914a82ec45ee4951da61188",
            "container_config": {
                "Hostname": "2f779a162c20",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f73e4cf0540dd61e5b076851b0c734d73fd26e7130c757e7bd1545c60e155d20",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:36:59.680548719Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:34:38.272815719Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:36:56.720631866Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:36:57.800709994Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:36:58.144662915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:36:59.321450988Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:36:59.680548719Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:e8ac61c1d9da4174ba3e5f31a6b8d12d0e44ee8cd57d3c31f8c7729b1c6b178e",
                    "sha256:60beeb99e0416f3723e8040b909c240f1579ffc9081478c8a9f86e210f0b3ab8"
                ]
            }
        },
        "1.12.8-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4f55b51b8dafed283b8a2a3f270187b71d5d9bb166100dea2c01d3300ab03133",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "085c04a7c6113c386bb328c64d6f65c1dba95f42564558d2fb2330328a56b759",
            "container_config": {
                "Hostname": "085c04a7c611",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4f55b51b8dafed283b8a2a3f270187b71d5d9bb166100dea2c01d3300ab03133",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T15:58:58.281641474Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:59:44.029442993Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9c8bae31876c4f1a65b716e728f9b7e1573ec698b6fe8daaeb5f3dc080bb131 in / "
                },
                {
                    "created": "2019-08-14T00:59:45.225380675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:07:03.984167697Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:07:14.698888205Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:07:49.504945911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:01.52711595Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:34.716674606Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:58:53.375112716Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bd26cd4962a362ed3c11835bca32c2e131c2ae050304f2c4df9fa6ded8db85d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b6b057e7b5c740894132ce30e70503d7d36988dcd61a00f0865d1e7d6dcc74ca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='15e9e0b5b414d1a0322896368c0050af6ab1cd82d050e93f8eceb38ef2626652' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='be164c4e04205c4fc713e81594bc2fdd4c94dff3d567ec8e0072223dd0778287' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='24a65f8a702ade1854f86ddf96eda554a8abd89c8a54ddc32788769419e90232' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='db78fc8f9610cb27ac35aab55cb11698f4daa2101acdf46f0ba64e1db16323e5' ;; \t\t*) goRelArch='src'; goRelSha256='11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T15:58:56.077303253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:58:56.473551019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:58:57.857421119Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T15:58:58.281641474Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd55307db9b60c191231d44adbe5f4c2dda3c7cfedf51fed934dbcac33583bd",
                    "sha256:ffe59162282799874b7e5c25bfe9b30a8dd63abc8c5400b5aa75e10cd6021112",
                    "sha256:b03ae013300698b9326982514f3ed998d6f1974875945bddb1ca7c4b34f88586",
                    "sha256:ae9e1918717cae0fc72b7bc4763eed8cadd09354d0d635beea1f24942ff0fbfb",
                    "sha256:17e3e4434a9b309d3fef8d6bfd711562bc720973e7ba619d0463044326fa5b0b",
                    "sha256:85f011deeee2c25afc0099997a63f762912c1e3202edb6d7b56ad6f571e38fba",
                    "sha256:5b6b732a595dc90eab584ecd04f626a60429dfe2de3d8028420e5b5ffc77a228"
                ]
            }
        },
        "1.12.8-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fc2d9d3b5c987653289540ea973674df2c369a626bb8d996aa836b7343f4b6d5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4094df7235e32ba295370a42c6c763714993b6dc01c307030f01e42bde811d21",
            "container_config": {
                "Hostname": "4094df7235e3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fc2d9d3b5c987653289540ea973674df2c369a626bb8d996aa836b7343f4b6d5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T15:59:43.405198072Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T01:05:03.68205404Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3db44b151cbde9df965afdae57262daa20fbdde74d80e65b10942ee7755fc910 in / "
                },
                {
                    "created": "2019-08-14T01:05:04.384257407Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:19:09.481649797Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:19:19.234255684Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:19:55.917988948Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:59:20.63762004Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:59:21.5573249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:59:38.82427235Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bd26cd4962a362ed3c11835bca32c2e131c2ae050304f2c4df9fa6ded8db85d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b6b057e7b5c740894132ce30e70503d7d36988dcd61a00f0865d1e7d6dcc74ca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='15e9e0b5b414d1a0322896368c0050af6ab1cd82d050e93f8eceb38ef2626652' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='be164c4e04205c4fc713e81594bc2fdd4c94dff3d567ec8e0072223dd0778287' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='24a65f8a702ade1854f86ddf96eda554a8abd89c8a54ddc32788769419e90232' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='db78fc8f9610cb27ac35aab55cb11698f4daa2101acdf46f0ba64e1db16323e5' ;; \t\t*) goRelArch='src'; goRelSha256='11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T15:59:41.281735761Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:59:41.637263281Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:59:42.993618554Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T15:59:43.405198072Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4a020bd80c571284085f3fd56a1b16b7fa32c0dcd2563abb3f8bcce543073b14",
                    "sha256:2640a1b6b27976f5a7b83b06306e4956335b2d86b3c79f65d6249fc14f352cae",
                    "sha256:27ee615705f25e044d2e055b7c4b52ce4cd5de649218dbaedb479511f535e036",
                    "sha256:ce72f6fb32c920daf7bd54fe825057a00f71ec49862098cc906bf417bc743fc2",
                    "sha256:6d30c6a80efea902d3c634b080b642315e8fa65578fca52261f186e7dbe50e52",
                    "sha256:03efdc08c6fb35bf8adde5a36bb09ea360f801d863d8c94eab0f1e0c75be80db",
                    "sha256:14a33f391c6ef84b15923a883e3614f1eeec12b2fcb1bf2212393f80045bfc52"
                ]
            }
        },
        "1.12.9-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:749833111fc7e0b349388f58b88697e89c62723be42ffb803e5e29611047f766",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e7a861ef971cbb86f998d8b4de1b9a83daa96a6c88d37f41d61c1e77695f58d4",
            "container_config": {
                "Hostname": "e7a861ef971c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:749833111fc7e0b349388f58b88697e89c62723be42ffb803e5e29611047f766",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:17:41.797651266Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:15:24.588912604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:17:37.19191964Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:17:39.497273895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:17:39.9214825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:17:41.353593668Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:17:41.797651266Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:e3733f1a8135e1ea42a42fcf8d9856b9c632aa47e00b9e0da7fd5b88b9bc3075",
                    "sha256:6ce5f0b896d785a52af7196d5854e90e01ce2c384ac04c2412bb411f34386d16"
                ]
            }
        },
        "1.12.9-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:749833111fc7e0b349388f58b88697e89c62723be42ffb803e5e29611047f766",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e7a861ef971cbb86f998d8b4de1b9a83daa96a6c88d37f41d61c1e77695f58d4",
            "container_config": {
                "Hostname": "e7a861ef971c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:749833111fc7e0b349388f58b88697e89c62723be42ffb803e5e29611047f766",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:17:41.797651266Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:15:24.588912604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:17:37.19191964Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:17:39.497273895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:17:39.9214825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:17:41.353593668Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:17:41.797651266Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:e3733f1a8135e1ea42a42fcf8d9856b9c632aa47e00b9e0da7fd5b88b9bc3075",
                    "sha256:6ce5f0b896d785a52af7196d5854e90e01ce2c384ac04c2412bb411f34386d16"
                ]
            }
        },
        "1.12.9-alpine3.9": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d924c176e0e4a27a95d23028c3ab1f1a82ba42ae711e2334078d979af86d973b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "27831e61d83ff6cedc619070165d581e8907878ca741a796f1b5225c1d786606",
            "container_config": {
                "Hostname": "27831e61d83f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d924c176e0e4a27a95d23028c3ab1f1a82ba42ae711e2334078d979af86d973b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-16T20:55:34.851025512Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:57:33.923662819Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6a887e546cc71145f8be9285950befcf2a4095b97ba44c66550b31165f7a02b5 in / "
                },
                {
                    "created": "2019-05-11T11:57:34.305654522Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:04:56.932280739Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T13:04:58.624364128Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-16T20:53:05.848021651Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:55:30.626366306Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-16T20:55:32.157539354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:55:32.655135919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-16T20:55:34.348964167Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-16T20:55:34.851025512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7d5b9c167a1f2809a00eab98c542be4a4aca536d039ed7fb1b60efc8d001116d",
                    "sha256:6846afc9a2de667835a727fde670696954802a4cf733099133dce510d344756f",
                    "sha256:3171e7b32685ed45277efb68d532f3482236762e4ceb81b4dc94b8874378d445",
                    "sha256:a192e8d90e8ea4684f568b77565d68403bceecbf411a96fe5b3db02b89e799c0",
                    "sha256:1e0913f9bf435dbd0423b0e84a30eeb7576ee1a24208c8bb659d9cd878b5b012"
                ]
            }
        },
        "1.12.9-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:042f948b7de6cbd725b58136dd6596c08554a3f4036dec9ccd149b83c62c566c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9906df59189a4d7c48ffc95afc5bd28f3738540ca9d86f7bc01764067dac3f3e",
            "container_config": {
                "Hostname": "9906df59189a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:042f948b7de6cbd725b58136dd6596c08554a3f4036dec9ccd149b83c62c566c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T20:32:04.278288123Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:58:50.257114942Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:327132009c18b82090b7fac6b0fc73b86347a43cc3267eef172951a214db95e6 in / "
                },
                {
                    "created": "2019-09-11T22:58:51.549310579Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:38:36.590821127Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:38:55.598974212Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:39:39.861993799Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T20:30:05.606055118Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T20:31:38.020901153Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:31:57.939213239Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ac2a6efcc1f5ec8bdc0db0a988bb1d301d64b6d61b7e8d9e42f662fbb75a2b9b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0d9be0efa9cd296d6f8ab47de45356ba45cb82102bc5df2614f7af52e3fb5842' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3606dc6ce8b4a5faad81d7365714a86b3162df041a32f44568418c9efbd7f646' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c40824a3e6c948b8ecad8fe9095b620c488b3d8d6694bdd48084a4798db4799a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2e74c071c6a68446c9b00c1717ceeb59a826025b9202b3b0efed4f128e868b30' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2aac6de8e83b253b8413781a2f9a0733384d859cff1b89a2ad0d13814541c336' ;; \t\t*) goRelArch='src'; goRelSha256='ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T20:31:59.900333973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:32:00.431319816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:32:03.259555203Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T20:32:04.278288123Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be14f1ac9ea8e588e6a0a17f73e05805ae70175c962c1b5cd51aaee229df0025",
                    "sha256:374ff6637755684f05ea1f80c6e15320c08facf9d4827f33d3b847a3ed9b6aaa",
                    "sha256:b8eacb70fd78eb4c9b89e56d6c2205e28f15047f6faf86732dff0878b9df3793",
                    "sha256:442c3f28b5307303bdbd0bb7eaf973df76558ee166ecda8b556ef194667fcee6",
                    "sha256:e54f3e4e27cf74dc6d0691af6146345a6aa5d87d87794986b61a89abd9065bfe",
                    "sha256:13b8859a7e6ab7df9d1df36a80466d52c8bac33424f6a020f15ef9aa54f8a244",
                    "sha256:4b5503d0966e258966b8280e42d9dc7b5ac496da70e9f8aa16d6fb7d9c153351"
                ]
            }
        },
        "1.12.9-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3e35aa0c1e25ddc75f3a224a8021a5840e8425424eb99cdf0581cf338318e49",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "019044a3c9d90124711f55c70e0a2c62401b10ccc93ea65b85ed3694125a53ef",
            "container_config": {
                "Hostname": "019044a3c9d9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3e35aa0c1e25ddc75f3a224a8021a5840e8425424eb99cdf0581cf338318e49",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T20:32:35.581556173Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T23:03:14.768128157Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91eff5584a7f103d6443e8fbd0b2a5c82942c7334e241590bb4ad2fde4d77ee9 in / "
                },
                {
                    "created": "2019-09-11T23:03:16.071507572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:53:37.499880405Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:53:48.383008419Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:54:36.752573024Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T20:30:59.087300359Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T20:32:11.886646708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:32:30.018856205Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ac2a6efcc1f5ec8bdc0db0a988bb1d301d64b6d61b7e8d9e42f662fbb75a2b9b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0d9be0efa9cd296d6f8ab47de45356ba45cb82102bc5df2614f7af52e3fb5842' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3606dc6ce8b4a5faad81d7365714a86b3162df041a32f44568418c9efbd7f646' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c40824a3e6c948b8ecad8fe9095b620c488b3d8d6694bdd48084a4798db4799a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2e74c071c6a68446c9b00c1717ceeb59a826025b9202b3b0efed4f128e868b30' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2aac6de8e83b253b8413781a2f9a0733384d859cff1b89a2ad0d13814541c336' ;; \t\t*) goRelArch='src'; goRelSha256='ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T20:32:32.745213906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:32:33.220507182Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:32:34.605130275Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T20:32:35.581556173Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec90a6ab6713e462fda68546d1a16cb1023c0f257da3efdcf474ddfc27e5bd62",
                    "sha256:be51328214e282ee6c49c8691152a85928b86454947dfba3722a4a04a01a5d9c",
                    "sha256:e52d8e1d6b0420ed81d085f80d6a06efb32a549b12bf2e5a289f922d3c956653",
                    "sha256:43b4f71c6acfd03c4c3f521b0eb2acb6521ddf4b428691cfc10a2aa12078d443",
                    "sha256:c21f7cb9413286dadb52bcd8ac32ee57d890c0ca48c8d727d395f4c123bda326",
                    "sha256:67011f9deb7097f1ffca9b072f4e84ca863d9fb7ef22f7c0c04384e7665ea5ea",
                    "sha256:965ba050ccbf16c9b1b779e801130e8ae22419bfd35b6789fae24c199439ab46"
                ]
            }
        },
        "1.12beta1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d8558554f2f98c3b382e8f422d67b89de1835332b3b215b8463486b17d85d4ed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f682c6bea6f955dabcdf54b3a886bd4102201c9b6c216b6ed7137d1af9728592",
            "container_config": {
                "Hostname": "f682c6bea6f9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d8558554f2f98c3b382e8f422d67b89de1835332b3b215b8463486b17d85d4ed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-01T12:59:20.468785307Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-29T13:04:28.538064691Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ab1f738bb6fe0b2e0c47963cf773badbd7069848e58eeb671d7f13e357f02d8 in / "
                },
                {
                    "created": "2018-12-29T13:04:30.369209154Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T13:43:30.059666126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-29T13:43:42.345454449Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-12-29T13:44:25.133070974Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-01T12:58:57.046498904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-01T12:58:58.045125756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-01T12:59:16.363182192Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='65bfd4a99925f1f85d712f4c1109977aa24ee4c6e198162bf8e819fdde19e875' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='e0ba7091227b42e98a9ed83f52e3821f7b3b836a16a5815ccf237bcaa590083a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='df79a288b2c569bd26e43ea3acc245b7eabae897b4783f7b4acffdd97ba0a01c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5c93266b9b9f6e4ac452517b073a54d2dbb4cbbae901bc7e2b5d34415adf658b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8ae18d580913cc4cb67cdac36c058aad279419640f469931e44d6b7f0bbd9062' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c575e5835a0ed3b19040497e24f7de6913eb73a42983e828f5dc2af4c9fcecf7' ;; \t\t*) goRelArch='src'; goRelSha256='639585de6bfb67865a85cd750d41ecc39968039dafb9d1fdb15361eb118d150a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-01T12:59:18.384707534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-01T12:59:18.760951825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-01T12:59:20.072862516Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-01T12:59:20.468785307Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6afccb08f7baf7eef3a0e8ad6c7973e3071a939f77968394347de60b26d3a79",
                    "sha256:acbd968d319f400de816ed7e76a306bd52ccc8b09c857111a11175df546bc696",
                    "sha256:1bdcbd8999ea5bceaa26e0b96ef46701ded3dcf9073b43011fc88c8fec1dbdba",
                    "sha256:3d1bfd8dcf42df8c765e1cfae5d016394adfde0d1f5b41cc2d9921758ba19bcd",
                    "sha256:cf83fefe9ab77d37bf792139a329d178c784bdd3c92e3f14e0819de7d70f67ac",
                    "sha256:db2497f6c15aa6d6c544fe3049c4ac96b88ecb7d1f7077390ca1763e1bf7b28e",
                    "sha256:08989d71e15b7def3defb12f86744fec0a053cb3daa5436f886d37114f77911d"
                ]
            }
        },
        "1.12beta2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:810144b1289d00d6f3edd54014056c05b61b0508320d2488bd956ef00938e993",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "20e0128a70f2759f5f2ed7232ee8193bee407c61bb693200f65a7c45c3714cc3",
            "container_config": {
                "Hostname": "20e0128a70f2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:810144b1289d00d6f3edd54014056c05b61b0508320d2488bd956ef00938e993",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-07T18:31:23.385204369Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-07T13:03:09.707883002Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fd4dfb0a59a763b52fd5588a8f4c35f596b133e00275b1cc485a71cf088b31a in / "
                },
                {
                    "created": "2019-02-07T13:03:10.749979676Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T15:37:43.623870365Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T15:37:52.397773112Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-07T15:38:25.375924594Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T18:30:56.527209234Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T18:30:57.441044212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:31:19.134501204Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9e4884b46a72e0558187a8af6e8733e039432df1b755f14b361f18b63fa5a63e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d41674dda2e33a539929a980c7ba8d68c90c8aabcb138b65a2dc36704af02ace' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='77d80484e455ad65aa0778aa82391c02ded01a37ee65f7887167dc03a6ef3251' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ffe0d1c92473b2fd653e399c1ddb11535b9666f22b6ae5653bd1fb4f84534c46' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1701e3c216c970a833248d6e5df5f2c27c6103e8e3bde34c5c3c25e839e87f9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bb4ea794a8fa459ad596c03b08fba9de647c62369c74f5daf21a6bae8c855b11' ;; \t\t*) goRelArch='src'; goRelSha256='fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-07T18:31:21.133001232Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:31:21.537300306Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T18:31:22.953651058Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-07T18:31:23.385204369Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2d885fdf40bcc2cc1d9f2185a318dd8d96fea868600125ba7dd758b62f60b56e",
                    "sha256:a91d99d71dcdf8745cd6e0d355878d73c8ed44e842f8971fca16630a4c48123a",
                    "sha256:c6dbf05815e68a56df5794c62238ad290e8c14e37f8d43b73509dc93a15cecbf",
                    "sha256:e1a905a52780351be90d092f857a1a0e092ef8e4c135f0c876cacf1f0d288a90",
                    "sha256:4f2680cfce740a76020a765f0c7f35a138d5fc09cb76e8e90d1b62640229f904",
                    "sha256:c79828053d92776c032f2caf88ad443977f2540183488795a704f14f81828660",
                    "sha256:a21dc6a37a77fa1a7d089107192d605ab271559d9ecc8897ba0c9db5470493ab"
                ]
            }
        },
        "1.12rc1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b303ae984de9278e02a1f80cc2700a1c6245bb536d683abf4976957a01782338",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e9e171e576d37b450db50c86b1657a7b5c23f41b986c7280819a23358c31066c",
            "container_config": {
                "Hostname": "e9e171e576d3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b303ae984de9278e02a1f80cc2700a1c6245bb536d683abf4976957a01782338",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:57:57.78065701Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-07T13:03:09.707883002Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5fd4dfb0a59a763b52fd5588a8f4c35f596b133e00275b1cc485a71cf088b31a in / "
                },
                {
                    "created": "2019-02-07T13:03:10.749979676Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-07T15:37:43.623870365Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T15:37:52.397773112Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-07T15:38:25.375924594Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-07T18:30:56.527209234Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-13T12:57:27.827189773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:57:53.080059704Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e5a03e1f2e065b17b2fbbd3429f18a6f51fe2848e0120586652b9f14ada72c9a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62126e4ca72e2fea9856fe0ec1a0f28cf1b385fb362d32cb56413c39cab318f8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='654b90f75902d501e2201a7b438965132fd1242a102f54529e9ff7dbbdf0d4bb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1d8615576655decbadeefcfaa6d5144b370dbea67fd4b426f58b573deedbd918' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='cb6c7ba83ee8211da1d13d6db148adfdd6b86a790d3974d0c5702d229ca1da40' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='40208d21fca8469c20054e67250f288ab62d68794690aa2c0324d67018ba99c2' ;; \t\t*) goRelArch='src'; goRelSha256='ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:57:55.224694863Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:57:55.740632361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:57:57.306628273Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:57:57.78065701Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2d885fdf40bcc2cc1d9f2185a318dd8d96fea868600125ba7dd758b62f60b56e",
                    "sha256:a91d99d71dcdf8745cd6e0d355878d73c8ed44e842f8971fca16630a4c48123a",
                    "sha256:c6dbf05815e68a56df5794c62238ad290e8c14e37f8d43b73509dc93a15cecbf",
                    "sha256:e1a905a52780351be90d092f857a1a0e092ef8e4c135f0c876cacf1f0d288a90",
                    "sha256:4f2680cfce740a76020a765f0c7f35a138d5fc09cb76e8e90d1b62640229f904",
                    "sha256:c66a730d7f5f870d81da0a18a3c1407d1979792e919f9d8b0cdc88a2bf747bdc",
                    "sha256:8be23b85cb40adcf6b4c7979ef4361630294ab2e9b362f6399fc86ac9dd409cf"
                ]
            }
        },
        "1.13-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61c298ec7db020ad6fae1a1c340638efa196b044cb291af292f23a3c6d686c4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6b7de25a3d7e81f37b37002bda1627c7f61410c2e4fb43bc4fd3bdd8382280a",
            "container_config": {
                "Hostname": "b6b7de25a3d7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61c298ec7db020ad6fae1a1c340638efa196b044cb291af292f23a3c6d686c4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T04:09:37.347472112Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T03:17:14.81964297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:18.077720762Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T04:09:26.997312623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:28.572853547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:34.809190841Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T04:09:37.347472112Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:4f0b7a0b65b02e7408a8073a11991d476e6881edda1a7df45fa47806fa3b3d25",
                    "sha256:d4999ab6616a4f5b313d95cc748d030d02e6674944b656ea51d26fed87c1c9f1"
                ]
            }
        },
        "1.13-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4fbade2c88776442db28bf196cb82e0a225cedd9bc1a0b04a48da3470a74d466",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "69af059c5ff435e40c261bc2b8e75062f12333d8020d0ea26b888aeebc7ae16a",
            "container_config": {
                "Hostname": "69af059c5ff4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4fbade2c88776442db28bf196cb82e0a225cedd9bc1a0b04a48da3470a74d466",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T01:55:10.115694442Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:44.143517322Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dabd2c1328a46961a58e93557d1039d6b98775cbdfe48ce875c109bb74615cb1 in / "
                },
                {
                    "created": "2020-04-23T22:04:45.554450366Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:38.31150298Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T03:20:40.491899276Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T01:38:11.333587587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:55:02.015907844Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T01:55:06.978231447Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:55:07.526618123Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:55:09.359733515Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T01:55:10.115694442Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3cc9f42711ed1597620bb398e5a95d9f326cb32c8289b3828e361a41ade5c24",
                    "sha256:c12a289f0130d5301191167dfbe45396fc8e53f89ad7bbd7b0b34e18c6e7da80",
                    "sha256:a15eaf008e367f19098b6a3bc90cdf003dc4d53825816104e14eed9dddc01301",
                    "sha256:4669aebbb3a50be4907d4973adbc5f2536d6b3febcd6a9ac9d91efb118aab56d",
                    "sha256:592929d159bc35c22e4577a51df79196b12779e7f03c12a3be425f9d6c4952c3"
                ]
            }
        },
        "1.13-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22b2eb727224ea8760e5f50d3729a9a32d636ea06ffc73b71f0fd9af6dd64a1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6ba4aa624824d28c3de620292e268d501ea5af339dc7f6c431960ec65bd3cf50",
            "container_config": {
                "Hostname": "6ba4aa624824",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22b2eb727224ea8760e5f50d3729a9a32d636ea06ffc73b71f0fd9af6dd64a1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T04:59:02.293989795Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T04:09:46.035773564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:58:54.36363464Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T04:58:58.806544284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:58:59.521557419Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:59:01.491759415Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T04:59:02.293989795Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:fa56eaf4f68abad2d6eb373d0e038960ab5a0cb0bd8e4dde5c71ba5802edf091",
                    "sha256:635e7e2042eec42d0251daaaf11787bc86d0aeb6fe9aeb5c6d1f30a79d52f5f6"
                ]
            }
        },
        "1.13-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61c298ec7db020ad6fae1a1c340638efa196b044cb291af292f23a3c6d686c4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6b7de25a3d7e81f37b37002bda1627c7f61410c2e4fb43bc4fd3bdd8382280a",
            "container_config": {
                "Hostname": "b6b7de25a3d7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61c298ec7db020ad6fae1a1c340638efa196b044cb291af292f23a3c6d686c4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T04:09:37.347472112Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T03:17:14.81964297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:18.077720762Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T04:09:26.997312623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:28.572853547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:34.809190841Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T04:09:37.347472112Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:4f0b7a0b65b02e7408a8073a11991d476e6881edda1a7df45fa47806fa3b3d25",
                    "sha256:d4999ab6616a4f5b313d95cc748d030d02e6674944b656ea51d26fed87c1c9f1"
                ]
            }
        },
        "1.13-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e1e23a458d84974127e9f1f729d08b4b88d8de33ea2f464f02cb5de5fa556198",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25b47d34d682825c30d49525b51a15dd37f6c73f201022982dfd508cbf75900a",
            "container_config": {
                "Hostname": "25b47d34d682",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e1e23a458d84974127e9f1f729d08b4b88d8de33ea2f464f02cb5de5fa556198",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T03:15:59.938127271Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:14:59.322987539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:15:36.584976834Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-07T03:15:43.802339661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:15:46.807160657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:15:57.126574712Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T03:15:59.938127271Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:d02a469f9a2aa6ef1374ba481e9457491984b9707460fe34009013e79fde125d",
                    "sha256:f390e5ecfe691f514757e99f475caed2564c86ef599995e9a145b35174d2de8c"
                ]
            }
        },
        "1.13-rc-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e12f7faac8fb0416de64314438501433d7febab405a9a8274d86e0a0745fb53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d73451a96e7a2831cf798e1ea00840c92df687283b3cfaae3b02c1c796b74860",
            "container_config": {
                "Hostname": "d73451a96e7a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e12f7faac8fb0416de64314438501433d7febab405a9a8274d86e0a0745fb53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:19:48.728772277Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:16:34.260645428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:44.898214827Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:19:46.91675099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:47.232596063Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:48.365152198Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:19:48.728772277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:1e9d2f5b7a5be80d5bd860c9d7110cea61a5c9fa29920662f41a5446d1d50656",
                    "sha256:c6747c07a50e4c33cfe601069345fa21d25136928b086ebb24738282d369561f"
                ]
            }
        },
        "1.13-rc-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e12f7faac8fb0416de64314438501433d7febab405a9a8274d86e0a0745fb53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d73451a96e7a2831cf798e1ea00840c92df687283b3cfaae3b02c1c796b74860",
            "container_config": {
                "Hostname": "d73451a96e7a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e12f7faac8fb0416de64314438501433d7febab405a9a8274d86e0a0745fb53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:19:48.728772277Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:16:34.260645428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:44.898214827Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:19:46.91675099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:47.232596063Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:48.365152198Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:19:48.728772277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:1e9d2f5b7a5be80d5bd860c9d7110cea61a5c9fa29920662f41a5446d1d50656",
                    "sha256:c6747c07a50e4c33cfe601069345fa21d25136928b086ebb24738282d369561f"
                ]
            }
        },
        "1.13-rc-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7330436c6a85510c044f5fd2f9f74388dc90b93cdaed92e40d0040f8162dbe12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "05b9069c1ce18f1cf4abd8512390f6d8d2ec7e2ddf62bf55ae6caaecab1e929a",
            "container_config": {
                "Hostname": "05b9069c1ce1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7330436c6a85510c044f5fd2f9f74388dc90b93cdaed92e40d0040f8162dbe12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:16:26.596786625Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:59:44.029442993Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9c8bae31876c4f1a65b716e728f9b7e1573ec698b6fe8daaeb5f3dc080bb131 in / "
                },
                {
                    "created": "2019-08-14T00:59:45.225380675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:07:03.984167697Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:07:14.698888205Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:07:49.504945911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:01.52711595Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-29T21:16:05.23279637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:16:22.860581596Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3cd4490021a5f1f25a7440edca03910e40a38e587b578cf52ab7143a81db1861' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='deebe2b723c818293046629344f09ead1610fba608aea038bcf25da70766f944' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='184c9fff6bba9da1cf23ba7f52561cc777ac7feaf73621b3824f4a30ffa4648d' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5f5d235b73672ee5d26917d3907f8f1966af60d4391477a5afd4300d070ca852' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7656da8bb13e450754d5df35c7d21dafb5847b00779dcc08f3c41eec7d817037' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6016103bab62f1fe6b8f90665888a23ae8c825a8e7db7a607877298148e593cf' ;; \t\t*) goRelArch='src'; goRelSha256='0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:16:24.729040732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:16:25.052792803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:16:26.233140385Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:16:26.596786625Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd55307db9b60c191231d44adbe5f4c2dda3c7cfedf51fed934dbcac33583bd",
                    "sha256:ffe59162282799874b7e5c25bfe9b30a8dd63abc8c5400b5aa75e10cd6021112",
                    "sha256:b03ae013300698b9326982514f3ed998d6f1974875945bddb1ca7c4b34f88586",
                    "sha256:ae9e1918717cae0fc72b7bc4763eed8cadd09354d0d635beea1f24942ff0fbfb",
                    "sha256:17e3e4434a9b309d3fef8d6bfd711562bc720973e7ba619d0463044326fa5b0b",
                    "sha256:f26f013f40e67ff79ad35c120dafd22beb2af71bf44cdd8eb5867492004bafb9",
                    "sha256:def6711095f85df5fa3569199d0ac21c8521d5e96de10593dab84871f88dded9"
                ]
            }
        },
        "1.13-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:43e7567f3c86d99d523c66e91886d88ad90650be7a3f67a3a70f4746192265d8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "58d674d38c054c308774bdf6b50b6b8820abd3c0dd7eb3b8437b2cf43d6e29ce",
            "container_config": {
                "Hostname": "58d674d38c05",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:43e7567f3c86d99d523c66e91886d88ad90650be7a3f67a3a70f4746192265d8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T03:17:06.825063375Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T05:01:04.874841639Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ba6f3203fb10e66124d03088d234e92fc908c572ec7eed268e866623a383a7d in / "
                },
                {
                    "created": "2020-08-04T05:01:07.939350474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T08:16:04.465529549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T08:16:44.245416999Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T08:18:19.547854109Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:38.536613259Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:40.729936373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:16:18.23231845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:16:52.577221488Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-07T03:16:56.195863327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:16:57.024426269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:17:05.200372774Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T03:17:06.825063375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7352564cb071e9fe8088197f4901584095f1e55fdc9ba28cc77b91045be23467",
                    "sha256:9dd7fe8f21549089acbd73452166a5697ac31784ca821330d7b05cf9b6b7f2fc",
                    "sha256:b5fe9b0ba4a73f8ca29f530ec91f65a7176c09183793ad44bf1cfffa5041ca22",
                    "sha256:d52fc9488b3ec18dc8b3724b27e506fc825f5f74788f4e3258868408bdf266e3",
                    "sha256:02d2df8ece5e9513b029bf95088173f339b912987e12e99cc1d7de65c6c9c76d",
                    "sha256:1842242eebdf88836e9e8ce0fdf3205a26f950248e0b4828809b9ba2f0d9903d",
                    "sha256:5b15c2314d04533d5a2483262b3d9e8e787d5f3dedbd5ac9ab186104b702092a"
                ]
            }
        },
        "1.13.0-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ee9fadbe08781c5278b4ff2b98987c67d3f274c94b72a1ac88d32342835cd744",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a49e1f0863885c0096ae40648bf9f54d7d60a8ac5809226bc6dff0cf762e125f",
            "container_config": {
                "Hostname": "a49e1f086388",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ee9fadbe08781c5278b4ff2b98987c67d3f274c94b72a1ac88d32342835cd744",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-03T20:09:15.681122462Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-03T20:03:17.588943875Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:09:12.466257557Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-03T20:09:13.820741003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:09:14.152579493Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:09:15.321143279Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-03T20:09:15.681122462Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:66d7891b641c5c204fb78580f0ef69a20e5135b35edab86ea6b83ddf1576c8e3",
                    "sha256:5d4995099ee2fd48bb3f940f32e1365ad5a50de5fcd6c8883715df080a186e06"
                ]
            }
        },
        "1.13.0-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ee9fadbe08781c5278b4ff2b98987c67d3f274c94b72a1ac88d32342835cd744",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a49e1f0863885c0096ae40648bf9f54d7d60a8ac5809226bc6dff0cf762e125f",
            "container_config": {
                "Hostname": "a49e1f086388",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ee9fadbe08781c5278b4ff2b98987c67d3f274c94b72a1ac88d32342835cd744",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-03T20:09:15.681122462Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-03T20:03:17.588943875Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:09:12.466257557Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-03T20:09:13.820741003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:09:14.152579493Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:09:15.321143279Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-03T20:09:15.681122462Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:66d7891b641c5c204fb78580f0ef69a20e5135b35edab86ea6b83ddf1576c8e3",
                    "sha256:5d4995099ee2fd48bb3f940f32e1365ad5a50de5fcd6c8883715df080a186e06"
                ]
            }
        },
        "1.13.0-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5f57ef6e4c599b83b1117eb9094256efe8ac9e09f2f2427f78faf1985d09f331",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "944945d2eb56cbcbaa81b00b3cb149745355312cf482286f676d12d853c10a7f",
            "container_config": {
                "Hostname": "944945d2eb56",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5f57ef6e4c599b83b1117eb9094256efe8ac9e09f2f2427f78faf1985d09f331",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T20:30:31.603362555Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:58:50.257114942Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:327132009c18b82090b7fac6b0fc73b86347a43cc3267eef172951a214db95e6 in / "
                },
                {
                    "created": "2019-09-11T22:58:51.549310579Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:38:36.590821127Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:38:55.598974212Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:39:39.861993799Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T20:30:05.606055118Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T20:30:07.006239884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:30:25.911486257Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='68a2297eb099d1a76097905a2ce334e3155004ec08cdea85f24527be3c48e856' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='931906d67cae1222f501e7be26e0ee73ba89420be0c4591925901cb9a4e156f0' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e2a61328101eff3b9c1ba47ecfec5eb2fdc3eb35d8c27d505737ba98bfcb197b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='519b3e6ae4db011b93b60e6fabb055773ae6448355b6909a6befef87e02d98f5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='807b036bb058061b6090635e2a8612aaf301895dce70a773bbcd67fa1e57337c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='b7122795910b70b68e4118d0d34685a30925f4dd861c065cf20b699a7783807a' ;; \t\t*) goRelArch='src'; goRelSha256='3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T20:30:28.964731759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:30:29.452360594Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:30:31.027564738Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T20:30:31.603362555Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be14f1ac9ea8e588e6a0a17f73e05805ae70175c962c1b5cd51aaee229df0025",
                    "sha256:374ff6637755684f05ea1f80c6e15320c08facf9d4827f33d3b847a3ed9b6aaa",
                    "sha256:b8eacb70fd78eb4c9b89e56d6c2205e28f15047f6faf86732dff0878b9df3793",
                    "sha256:442c3f28b5307303bdbd0bb7eaf973df76558ee166ecda8b556ef194667fcee6",
                    "sha256:e54f3e4e27cf74dc6d0691af6146345a6aa5d87d87794986b61a89abd9065bfe",
                    "sha256:c95d414d63ecc41b59b289d520578bbb9cef276458a5fca05cff8ce57f24d028",
                    "sha256:5edd37343e1be19fd41ecfb708b81e89c06236ae4722388b23dfff61dc20cdcf"
                ]
            }
        },
        "1.13.0-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:467931bb11e870b9ffefda09627a817df94a6b837cd22285261e9628f08e2fdf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a6e0c7add039c774eecdf84fa9a86b3296f7b8a49b2f2300645455cdc750841c",
            "container_config": {
                "Hostname": "a6e0c7add039",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:467931bb11e870b9ffefda09627a817df94a6b837cd22285261e9628f08e2fdf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T20:31:21.820635439Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T23:03:14.768128157Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91eff5584a7f103d6443e8fbd0b2a5c82942c7334e241590bb4ad2fde4d77ee9 in / "
                },
                {
                    "created": "2019-09-11T23:03:16.071507572Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:53:37.499880405Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:53:48.383008419Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:54:36.752573024Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T20:30:59.087300359Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T20:31:00.360185096Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:31:17.125436471Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='68a2297eb099d1a76097905a2ce334e3155004ec08cdea85f24527be3c48e856' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='931906d67cae1222f501e7be26e0ee73ba89420be0c4591925901cb9a4e156f0' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e2a61328101eff3b9c1ba47ecfec5eb2fdc3eb35d8c27d505737ba98bfcb197b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='519b3e6ae4db011b93b60e6fabb055773ae6448355b6909a6befef87e02d98f5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='807b036bb058061b6090635e2a8612aaf301895dce70a773bbcd67fa1e57337c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='b7122795910b70b68e4118d0d34685a30925f4dd861c065cf20b699a7783807a' ;; \t\t*) goRelArch='src'; goRelSha256='3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T20:31:19.079081728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:31:19.558778506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T20:31:21.198154198Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T20:31:21.820635439Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec90a6ab6713e462fda68546d1a16cb1023c0f257da3efdcf474ddfc27e5bd62",
                    "sha256:be51328214e282ee6c49c8691152a85928b86454947dfba3722a4a04a01a5d9c",
                    "sha256:e52d8e1d6b0420ed81d085f80d6a06efb32a549b12bf2e5a289f922d3c956653",
                    "sha256:43b4f71c6acfd03c4c3f521b0eb2acb6521ddf4b428691cfc10a2aa12078d443",
                    "sha256:c21f7cb9413286dadb52bcd8ac32ee57d890c0ca48c8d727d395f4c123bda326",
                    "sha256:14ff357a5ef0e67290d958cab4577d7dff9a98e4447555f6c7745cbb5389ad40",
                    "sha256:afc800fe39b7c2b2024b7adcfa242d32c6a05bfcd2bc3459793ad76ac07ac216"
                ]
            }
        },
        "1.13.1-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e739b02c4096185f651668a47d51250dc8044d00e8d5a86bd5663549d41b4ef0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "152ac56c771f8deb16097b6f7f27bd97fb69f6b29015546f1c93c211f10617e9",
            "container_config": {
                "Hostname": "152ac56c771f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e739b02c4096185f651668a47d51250dc8044d00e8d5a86bd5663549d41b4ef0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:52:04.487645291Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:49:23.496572252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:51.556645552Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:51:53.968595943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:54.831724269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:52:02.496457883Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:52:04.487645291Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:df27bfe45eebb4a4852df082da61bfa105d0849fb8e80f332a6faf03fbe6a443",
                    "sha256:61df9135c40d1c838e497562a653dd03bea3f4a5269b7d75adddc3ad7ca61ebb"
                ]
            }
        },
        "1.13.1-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e739b02c4096185f651668a47d51250dc8044d00e8d5a86bd5663549d41b4ef0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "152ac56c771f8deb16097b6f7f27bd97fb69f6b29015546f1c93c211f10617e9",
            "container_config": {
                "Hostname": "152ac56c771f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e739b02c4096185f651668a47d51250dc8044d00e8d5a86bd5663549d41b4ef0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:52:04.487645291Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:49:23.496572252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:51.556645552Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:51:53.968595943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:54.831724269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:52:02.496457883Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:52:04.487645291Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:df27bfe45eebb4a4852df082da61bfa105d0849fb8e80f332a6faf03fbe6a443",
                    "sha256:61df9135c40d1c838e497562a653dd03bea3f4a5269b7d75adddc3ad7ca61ebb"
                ]
            }
        },
        "1.13.1-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c0a5a4a7f4227661a7a51c90ab47ff8c056722ddaa48d526204a3c0ec0590206",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb50587e23adb9abc453820fbec872c46872b721e02da4b8f3d7e4a441553089",
            "container_config": {
                "Hostname": "cb50587e23ad",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c0a5a4a7f4227661a7a51c90ab47ff8c056722ddaa48d526204a3c0ec0590206",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T17:30:46.745626858Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:05:23.793223407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3acf01a0633a4067bab5dd8864409407f6a25d8266f86719c64597981017ffcb in / "
                },
                {
                    "created": "2019-10-17T00:05:25.298643091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:07:42.490819389Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:07:59.558017326Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:08:42.09173034Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:30:20.02154863Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:30:21.381007803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:30:41.392809175Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='94f874037b82ea5353f4061e543681a0e79657f787437974214629af8407d124' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7c75d4002321ea4a066dfe13f6dd5168076e9a231317c5afd55e78b86f478e37' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8af8787b7c2a3c0eb3f20f872577fcb6c36098bf725c59c4923921443084c807' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4bf7a961fda7ad892b8824002036de8c0f290df05df2e8f11252d1f8c77dcd8f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='72422c68dbed013ee321a05dbb97d9c8d6b2c75f347de707138c2c748fc4aceb' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5f0859ae1037ad7af6cdb6d16f638de908fd9de044d463eeab92b9578d4c7c75' ;; \t\t*) goRelArch='src'; goRelSha256='81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T17:30:43.694712113Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:30:44.287322189Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:30:46.157734006Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T17:30:46.745626858Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7edbeaf1d554a857ed18dbea96b5e43cc404517af7dd2c8f67f7a66f65495bbe",
                    "sha256:7051e01e54eb81261fa0c94b3cd8b9b64aa79e63d388d0c8ad97446ee9cd920f",
                    "sha256:8e0fad781dfb53bfd0d88b849f1ef6cfe7df7eef939f401f896a1f1c90ff6165",
                    "sha256:34c03909760abac7feb4a3282241d7edf0f82a1c8d5e12646414ae54576ca164",
                    "sha256:78a3a7506c554360b7500704d074d367c2fe49e4cc4e5a45121f8f4e1f87a86b",
                    "sha256:bcf732dc1d9b0f39f1c5e6f5e2562f2e35c1030a7e4a1eb5661391ce765fc29a",
                    "sha256:d14c5d172bde4b3e3b2a23850ebb30cbe4a2af967f803b5a9a83f1f8b3edb550"
                ]
            }
        },
        "1.13.1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f2ce986cea57016545a7859b7f3d554291c8323b1556930bb8541c8e61c3e3b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a9a8d9d116f236d5600ddc47a7995557e40367f4b2e262b553f32dc589f98eb5",
            "container_config": {
                "Hostname": "a9a8d9d116f2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f2ce986cea57016545a7859b7f3d554291c8323b1556930bb8541c8e61c3e3b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T17:31:45.151468909Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:10:47.93498212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3283babf00aa2ace3b06f2d143b912daeedd504791cdf83548bbe49f1f670f4d in / "
                },
                {
                    "created": "2019-10-17T00:10:49.666895598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:23:20.593213481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:23:33.810403212Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:24:27.621844569Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:31:22.048237849Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:31:23.565495461Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:31:39.973021424Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='94f874037b82ea5353f4061e543681a0e79657f787437974214629af8407d124' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7c75d4002321ea4a066dfe13f6dd5168076e9a231317c5afd55e78b86f478e37' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8af8787b7c2a3c0eb3f20f872577fcb6c36098bf725c59c4923921443084c807' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4bf7a961fda7ad892b8824002036de8c0f290df05df2e8f11252d1f8c77dcd8f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='72422c68dbed013ee321a05dbb97d9c8d6b2c75f347de707138c2c748fc4aceb' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5f0859ae1037ad7af6cdb6d16f638de908fd9de044d463eeab92b9578d4c7c75' ;; \t\t*) goRelArch='src'; goRelSha256='81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T17:31:42.346347245Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:31:42.886260915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:31:44.51104685Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T17:31:45.151468909Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43834cdf9bef5fa99ec47db6c59def13ab286cb8044e7dffd1d3b331dfffa0de",
                    "sha256:9aadc5506756401e4d48dd9ed026525663b46eb8470161543a09de787169f010",
                    "sha256:8bff8c46bd958b6e1c14b48fc8aa93b96d029c39dd477e9901f9929f45e2a0a4",
                    "sha256:ed9cd8acc21ccedab777dba9eddd89d862fdd7df38c85bfe5449826e19cbc2b3",
                    "sha256:0893cf9a774cc36edac61cb97f1f9fe44bdce2fd778c6449723d5d0a4baba8d3",
                    "sha256:443711e98ea4aa3bcd42477fdff69b9dce441d0bd5177a5607b002279d5755ba",
                    "sha256:2f3a0d4354f03610a8503460b5fd138f1d2b3f178ddaab2702a24e3d465e3951"
                ]
            }
        },
        "1.13.10-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25244c301350940bdc889c3d87618587b93ee27d7b357855ff1cf0dcb9b75c65",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f45048c23fecd00f2a5c227e6d098c3fb8d86770a05b52efe531f7a1bc93829",
            "container_config": {
                "Hostname": "2f45048c23fe",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25244c301350940bdc889c3d87618587b93ee27d7b357855ff1cf0dcb9b75c65",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T03:20:20.30000354Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-24T02:52:04.834561077Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:10.600682764Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-24T03:20:17.070314327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:17.723165035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:19.505284536Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-24T03:20:20.30000354Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:c8fea641111d032c04465a288a71708fb332790f0fe2264beec3c7c10dcc6133",
                    "sha256:4a170db4d4bca4e3d1685640718e9838ce5b08fe1ebd8e833276d2d246e53566"
                ]
            }
        },
        "1.13.10-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a09f41b054a1cbbfa2614d3c1772c290ff499c005d54a193d3387869ef46fbce",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b8892e9a54e059ee2f3ef1753b32c27d05c1aa4ee11c9a47364624cc1afae2c3",
            "container_config": {
                "Hostname": "b8892e9a54e0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a09f41b054a1cbbfa2614d3c1772c290ff499c005d54a193d3387869ef46fbce",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T03:39:04.204385134Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:44.143517322Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dabd2c1328a46961a58e93557d1039d6b98775cbdfe48ce875c109bb74615cb1 in / "
                },
                {
                    "created": "2020-04-23T22:04:45.554450366Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:38.31150298Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T03:20:40.491899276Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-24T03:20:41.136964162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:38:51.531845273Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-24T03:39:00.335643528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:39:01.223396851Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:39:03.293414629Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-24T03:39:04.204385134Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3cc9f42711ed1597620bb398e5a95d9f326cb32c8289b3828e361a41ade5c24",
                    "sha256:c12a289f0130d5301191167dfbe45396fc8e53f89ad7bbd7b0b34e18c6e7da80",
                    "sha256:a15eaf008e367f19098b6a3bc90cdf003dc4d53825816104e14eed9dddc01301",
                    "sha256:7c294fec4fb4602a13c477fcc622f1679fe838ff930dc604f6d5e964e830bf32",
                    "sha256:edef1e9fc039457de9546ce068e44d3ec0fadbf4a7797813d60a003a7d9f038f"
                ]
            }
        },
        "1.13.10-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25244c301350940bdc889c3d87618587b93ee27d7b357855ff1cf0dcb9b75c65",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f45048c23fecd00f2a5c227e6d098c3fb8d86770a05b52efe531f7a1bc93829",
            "container_config": {
                "Hostname": "2f45048c23fe",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25244c301350940bdc889c3d87618587b93ee27d7b357855ff1cf0dcb9b75c65",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T03:20:20.30000354Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-24T02:52:04.834561077Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:10.600682764Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-24T03:20:17.070314327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:17.723165035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:19.505284536Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-24T03:20:20.30000354Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:c8fea641111d032c04465a288a71708fb332790f0fe2264beec3c7c10dcc6133",
                    "sha256:4a170db4d4bca4e3d1685640718e9838ce5b08fe1ebd8e833276d2d246e53566"
                ]
            }
        },
        "1.13.10-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d7d6def4ce99f25aa77f06d7864e92d497d1d82762a6065606de1dc68153f4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "28003054ad73335ea8f55a4eca3d31ee77629e064ff614cb998bd7810c414702",
            "container_config": {
                "Hostname": "28003054ad73",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d7d6def4ce99f25aa77f06d7864e92d497d1d82762a6065606de1dc68153f4c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T19:34:43.477618511Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T01:03:01.732247541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:67087d9a080132a9a5865637874fa3dab5059ac619630d071c563e75a7a5d977 in / "
                },
                {
                    "created": "2020-04-23T01:03:02.683167789Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T04:07:54.291761436Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T04:08:09.356123774Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-04-23T04:08:49.238115274Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T19:32:08.573018847Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T19:34:08.296399684Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:34:31.87660525Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='8a4cbc9f2b95d114c38f6cbe94a45372d48c604b707db2057c787398dfbf8e7f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c581f11ed49eaf0954f62ffebc123f8c392fc536f01c5a44cb38185701101fc' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='f16f19947855b410e48f395ca488bd39223c7b35e8b69c7f15ec00201e20b572' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='233c9d43fe2fab27ee489efea08b84665aec5855cce95a81dba3846636de5fed' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6b9505388ecafa3cb04d5f51638276b25f7d80c5f70bd74ed72f8013f5006fd9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='41cb67266e809920363ff620e8cabce152ab54bebd6a337e9f903f5c1996ec35' ;; \t\t*) goRelArch='src'; goRelSha256='eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T19:34:36.933086257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:34:38.805360908Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:34:42.076801111Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T19:34:43.477618511Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3dd398bff6c9b25fbf6459da668851c285f1285c4f34297d8c5e9dc83e4ba1a8",
                    "sha256:29f29ea03ca5e6eb32a225bb49aeb09a9508cd51e052ef35fc6f556eef7015b3",
                    "sha256:fe2cd8182c65fbcb7dadda209dec95c389c906ea9d54b18f85135f4730d0b5b3",
                    "sha256:ee1da15fc58f713421396676b62514326628e9a3b6d2dc9dbb622423784ac18e",
                    "sha256:95f2d08540053a9145cb879f44d064878fcf87bb6cdafcc01da59e0b000decc0",
                    "sha256:e6b36714f00bd1e9984e2052363f6726f89a1e3b32b9a5be9a44a709698e1b88",
                    "sha256:b154c2168335f74b72a31c010f4306023fe65373395bba7f4012dc1226f16dff"
                ]
            }
        },
        "1.13.10-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:31e97864d1d300ac1f91efec1aac9a8838b86decabf31b2ee14877a8317884d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a469b8e7d667320ad3e8f22445409e7f271133e541651ed9dded051f91e9a99a",
            "container_config": {
                "Hostname": "a469b8e7d667",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:31e97864d1d300ac1f91efec1aac9a8838b86decabf31b2ee14877a8317884d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T19:35:21.773306177Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T01:07:13.233759087Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af00fcaffcce2a55b74d080d33cbc9ce5bcf91faf659b887f508c06803fa64bd in / "
                },
                {
                    "created": "2020-04-23T01:07:15.686716341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T04:23:24.254013385Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T04:23:38.186168124Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-04-23T04:24:29.005678333Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T19:33:14.06999749Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T19:34:53.758624963Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:35:15.642794012Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='8a4cbc9f2b95d114c38f6cbe94a45372d48c604b707db2057c787398dfbf8e7f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c581f11ed49eaf0954f62ffebc123f8c392fc536f01c5a44cb38185701101fc' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='f16f19947855b410e48f395ca488bd39223c7b35e8b69c7f15ec00201e20b572' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='233c9d43fe2fab27ee489efea08b84665aec5855cce95a81dba3846636de5fed' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6b9505388ecafa3cb04d5f51638276b25f7d80c5f70bd74ed72f8013f5006fd9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='41cb67266e809920363ff620e8cabce152ab54bebd6a337e9f903f5c1996ec35' ;; \t\t*) goRelArch='src'; goRelSha256='eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T19:35:18.638098329Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:35:19.213149156Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:35:21.035290036Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T19:35:21.773306177Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b476170020ddcba271820e9d647ee245d6ef93c85b63d4e35edabee0680b64f5",
                    "sha256:1e794c5efb36ad525582636452b12d237c643e3a792ba18786369112af70dc4c",
                    "sha256:8a0eebbc108015d9e0fb3f37061c156206a5fe7a6f4a96929f97b829175fb7fd",
                    "sha256:960b941d22b23924a8b813b89f653cb5811e11bc93d322da8dee57378da087a1",
                    "sha256:f345e871ef23c33ddd9ee31fbb4aed39cefd980b782094405c42923a8ed78797",
                    "sha256:72f0aa2004ac70df090152e467e7065a68523564af10e4c4e54aaa2492f04b5e",
                    "sha256:1f511d56b41d43025b19636beb69ffc21179722d309711226b912e361a235cec"
                ]
            }
        },
        "1.13.11-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54073934c4cf666c4fba7a2d56ab7b9d4b26d0039c4c6a6ced4c7bed499a92ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e706655d8f45a3b0d6395245ab84f8aecb48352e8a49ff36f388aa5027c8c4dd",
            "container_config": {
                "Hostname": "e706655d8f45",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54073934c4cf666c4fba7a2d56ab7b9d4b26d0039c4c6a6ced4c7bed499a92ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T01:37:53.783482414Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T01:14:31.202490178Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:37:41.603082438Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T01:37:49.91587848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:37:50.704450304Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:37:52.89212598Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T01:37:53.783482414Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:7e6f7973ab338818af9039b681ca41c9b2006f3b54261d9d0555b67b27791244",
                    "sha256:dcc5651c786d8b5ddcd6411e3065af86065c3a2700d02334dc4fefb03069ab08"
                ]
            }
        },
        "1.13.11-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4fbade2c88776442db28bf196cb82e0a225cedd9bc1a0b04a48da3470a74d466",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "69af059c5ff435e40c261bc2b8e75062f12333d8020d0ea26b888aeebc7ae16a",
            "container_config": {
                "Hostname": "69af059c5ff4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4fbade2c88776442db28bf196cb82e0a225cedd9bc1a0b04a48da3470a74d466",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T01:55:10.115694442Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:44.143517322Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dabd2c1328a46961a58e93557d1039d6b98775cbdfe48ce875c109bb74615cb1 in / "
                },
                {
                    "created": "2020-04-23T22:04:45.554450366Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T03:20:38.31150298Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T03:20:40.491899276Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T01:38:11.333587587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:55:02.015907844Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T01:55:06.978231447Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:55:07.526618123Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:55:09.359733515Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T01:55:10.115694442Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b3cc9f42711ed1597620bb398e5a95d9f326cb32c8289b3828e361a41ade5c24",
                    "sha256:c12a289f0130d5301191167dfbe45396fc8e53f89ad7bbd7b0b34e18c6e7da80",
                    "sha256:a15eaf008e367f19098b6a3bc90cdf003dc4d53825816104e14eed9dddc01301",
                    "sha256:4669aebbb3a50be4907d4973adbc5f2536d6b3febcd6a9ac9d91efb118aab56d",
                    "sha256:592929d159bc35c22e4577a51df79196b12779e7f03c12a3be425f9d6c4952c3"
                ]
            }
        },
        "1.13.11-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54073934c4cf666c4fba7a2d56ab7b9d4b26d0039c4c6a6ced4c7bed499a92ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e706655d8f45a3b0d6395245ab84f8aecb48352e8a49ff36f388aa5027c8c4dd",
            "container_config": {
                "Hostname": "e706655d8f45",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:54073934c4cf666c4fba7a2d56ab7b9d4b26d0039c4c6a6ced4c7bed499a92ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T01:37:53.783482414Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T01:14:31.202490178Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:37:41.603082438Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T01:37:49.91587848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:37:50.704450304Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:37:52.89212598Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T01:37:53.783482414Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:7e6f7973ab338818af9039b681ca41c9b2006f3b54261d9d0555b67b27791244",
                    "sha256:dcc5651c786d8b5ddcd6411e3065af86065c3a2700d02334dc4fefb03069ab08"
                ]
            }
        },
        "1.13.11-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75b267674e51251553e18eab77f078a9430862366a8d1e8cbc053c2951247927",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6f564a3f92948ee06452029f2bc11e0267d277a93a12c8020be69bbdb833ca32",
            "container_config": {
                "Hostname": "6f564a3f9294",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75b267674e51251553e18eab77f078a9430862366a8d1e8cbc053c2951247927",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T01:13:43.246030759Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-15T00:59:31.840323154Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3b126babe4f145c735dff1d1a8828e523967279b9f25d547fce6f4d5422d0a4 in / "
                },
                {
                    "created": "2020-05-15T00:59:33.668285267Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T10:34:04.535186078Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T10:34:17.63694016Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T10:35:01.812588654Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T00:45:25.052766449Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T01:13:11.872609998Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:13:33.651254168Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a4d71ca9e02923fa96669a4b5faf78ee8331b18e7209b09dd87fe763b4838ada' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f762f3acdaf2bb8d32041110022104aa430d96c39a8fc9cf3d4ab74faa607fca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6c81c0ce79be2bd3ac5ea69c709ea9bd588069632ded4ac39d58dadf4d2f93e6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c61ea511a4e82e9a7d31684d33c7b8bbb275e4110490f9a320c8026b76cac4ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d9697e5bcf3a3ac0ba1ff299bb72ffd4957b9893a19a1e65adce683144d795e3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='076f31fb29aa5129151aaf850593b16b4391157870a15a3f0199554a99db0b9b' ;; \t\t*) goRelArch='src'; goRelSha256='89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T01:13:39.549915987Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:13:40.425343576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:13:42.214647758Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T01:13:43.246030759Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7362fe59fbc7c68c038ffc778fdd6154ce23d10e2027075d1bf2116daaac998",
                    "sha256:3db0492984853cb0886ad4beecad3b01b60b25d9b06b4a8c92edd691a03b1b05",
                    "sha256:4e95aa05a98dec786c7383dad2b821b12640f496bc2f3b1406cdaaff04dbd437",
                    "sha256:2b0daa557f6c1091d46ee5acc76437c3a108589d7bf4fb47b07afe31d1494ade",
                    "sha256:682a447ffeaf2d9a5a86b05cbe4e82d35e1f80f484170313e411472fac7e4bae",
                    "sha256:1a50f66437091d54d33fe6541c51c266e56dc42c017beb2a6c02a1dbf56b978f",
                    "sha256:8133c43c8e1392bd29d504c75dd93d27f435085132cc642c4429ae5de72cfb40"
                ]
            }
        },
        "1.13.11-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c88bd3ee2c1d4062cb078c02e6ab2b27cd98a7aa2093f4d7845ed3b255cadbb9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b57ae494b1b181f47758f7d455cd1edcf6aa30caa40ea908f6a10beecb3fe111",
            "container_config": {
                "Hostname": "b57ae494b1b1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c88bd3ee2c1d4062cb078c02e6ab2b27cd98a7aa2093f4d7845ed3b255cadbb9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T01:14:23.885552636Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-15T01:06:22.053100565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:89db8453485648b09e63411b6e2ad84f08844ee55cb115e59cdc8c8cb1c29a1f in / "
                },
                {
                    "created": "2020-05-15T01:06:23.309959849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T10:48:54.710879293Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T10:49:06.971801308Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T10:49:50.757263824Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T00:46:54.089429947Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T01:13:54.86973551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:14:17.44910671Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a4d71ca9e02923fa96669a4b5faf78ee8331b18e7209b09dd87fe763b4838ada' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f762f3acdaf2bb8d32041110022104aa430d96c39a8fc9cf3d4ab74faa607fca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6c81c0ce79be2bd3ac5ea69c709ea9bd588069632ded4ac39d58dadf4d2f93e6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c61ea511a4e82e9a7d31684d33c7b8bbb275e4110490f9a320c8026b76cac4ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d9697e5bcf3a3ac0ba1ff299bb72ffd4957b9893a19a1e65adce683144d795e3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='076f31fb29aa5129151aaf850593b16b4391157870a15a3f0199554a99db0b9b' ;; \t\t*) goRelArch='src'; goRelSha256='89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T01:14:20.846227727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:14:21.397944629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:14:23.166840323Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T01:14:23.885552636Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9c974cf55649aa78a8d6e556d4022b9e4d15c5534fe016493a93af28ed14e11",
                    "sha256:71fe1b566166d1f59c3b2fe19edb5e2332be0e66a5dbcee5a268816c5aeb21b0",
                    "sha256:456b2904672c5d965f8817687221a1337d75afb154e5dce765ceb7d75d97d0e5",
                    "sha256:725edce3811514b4044fb2efe339abee7f1a63466cb5e0f25d9650d680afb8bc",
                    "sha256:c0ecc3b0a77a911d3d82156c1f30d1af4f445cc12982b0892121c7386e6726ca",
                    "sha256:c1a45bc70636390a47bdf38bf353a01740586c80d7438abc8178507871e9e376",
                    "sha256:3e27595bf3a7ae37389462b3069c17d11296d32ca70455fbecf8fc34e2749f92"
                ]
            }
        },
        "1.13.12-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2a1f1c6ac1a638ac42e13996c7c5b7b54410c8fd311ee93520b8a03ded9bf661",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b88ac5c518bc7d49701f6befa58435f9c4df9ddea03262497d5363fdb3267d6a",
            "container_config": {
                "Hostname": "b88ac5c518bc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2a1f1c6ac1a638ac42e13996c7c5b7b54410c8fd311ee93520b8a03ded9bf661",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T02:56:21.441823632Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T02:03:47.24375375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:56:15.732572708Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T02:56:18.33837901Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:56:18.982277623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:56:20.710971656Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T02:56:21.441823632Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:58f483c895d217e1fe0927787451949d06237c05f908c0661746b97fea8be5f5",
                    "sha256:47e1c9dd5aa4c87fc7cb97f22295b1d0c83865bd168bbef0ff6a2fcea6692adc"
                ]
            }
        },
        "1.13.12-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d81c3d45620ee3cd89144e1947d274ebf1d42693e62b5229aa299627fdc012f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b37b26e3d4c50d18269597361ec88c24247af73884949f71e3d5f74da98cf54e",
            "container_config": {
                "Hostname": "b37b26e3d4c5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d81c3d45620ee3cd89144e1947d274ebf1d42693e62b5229aa299627fdc012f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T03:48:42.777821092Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T02:56:29.188554122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T03:47:25.961822142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T03:47:38.6000483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T03:47:48.124064737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T03:48:35.595500579Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T03:48:42.777821092Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:7b87cbab0d70b69bd8f0e9bae43f330fb2521851d7f643d3d9ac6be6112304b4",
                    "sha256:b6b10a5aec856e7ada3d57409d4bf07e58890b725df5c1bb71d65b8668c777e0"
                ]
            }
        },
        "1.13.12-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2a1f1c6ac1a638ac42e13996c7c5b7b54410c8fd311ee93520b8a03ded9bf661",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b88ac5c518bc7d49701f6befa58435f9c4df9ddea03262497d5363fdb3267d6a",
            "container_config": {
                "Hostname": "b88ac5c518bc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2a1f1c6ac1a638ac42e13996c7c5b7b54410c8fd311ee93520b8a03ded9bf661",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T02:56:21.441823632Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T02:03:47.24375375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:56:15.732572708Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T02:56:18.33837901Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:56:18.982277623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T02:56:20.710971656Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T02:56:21.441823632Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:58f483c895d217e1fe0927787451949d06237c05f908c0661746b97fea8be5f5",
                    "sha256:47e1c9dd5aa4c87fc7cb97f22295b1d0c83865bd168bbef0ff6a2fcea6692adc"
                ]
            }
        },
        "1.13.12-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b0a8fc496638898b1a07aadbdcd5a52518ff83527035a7776ff8a1048e5e81f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d9a2802009924b95b773937c541d3e61f370ced6e70aea2bd2f3ec72605087b1",
            "container_config": {
                "Hostname": "d9a280200992",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b0a8fc496638898b1a07aadbdcd5a52518ff83527035a7776ff8a1048e5e81f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-23T21:28:27.978291594Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:00:40.240297572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:35073a186411c4b773a9d4d540ec0693ced845cb847b43d8465f9579174cd2b0 in / "
                },
                {
                    "created": "2020-06-09T01:00:45.422649393Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T01:46:25.589392797Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T01:46:57.954146341Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T01:48:31.958640374Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T18:36:04.519824732Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:26:08.292062009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:28:04.014139979Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:28:23.16400529Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9cacc6653563771b458c13056265aa0c21b8a23ca9408278484e4efde4160618' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='552db731a120d341a1756c6ce0b1029cb5f5c756c09de9f45273893268d19c23' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='7a8b4e7841d978c95dae8ef53e19811ee2d5c595a1c5ec7afed74bb8f71588b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='625d9cdb25ba55e1afba9490c79c55767117fa272e067f81643d22268d51308a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='97d762a62eae2e1f4d89ce09a89407a63e12c22d5c0fb952e409b323927cd38e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8dd2d50666176cbe5cab7557081acb0f380cef2240e18d05db7faffc03d8f356' ;; \t\t*) goRelArch='src'; goRelSha256='17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-06-23T21:28:25.157303734Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:28:25.717895206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:28:27.394395294Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-23T21:28:27.978291594Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e6070c2111110dc7d213895db88659b4146b537f9446c6aa29f2e13ebae8dfaf",
                    "sha256:8894abcd4aadb18aa97f0ac8a6f99699090681285abf6308391487831016fa01",
                    "sha256:8fa1c8dbd532c2a24e90650ea026a575ead946241546acff4cb6d7298a2e5bcf",
                    "sha256:b0e9797952fd90698009450953abae1bc3f66de554ab77c476fb0264f4c93d4b",
                    "sha256:c7c3017811e15af8e37d5430edea241e597393f8e2358e835cb2fe0d331744f6",
                    "sha256:6a478bda9a1a26696661619ffaa760cf94628c026b787381ded4830b2cd56583",
                    "sha256:6c866506cb7bf074220bea888fd85bfbeccc04bb0c34b89b044e7782adf8de3b"
                ]
            }
        },
        "1.13.12-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:279b212cd0488cca1e1c87e50f7a566ed365fcc7cd0f4a031f4ec38587263c38",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "73155c52ece76e4dd9f90efb82d9941d6787155964857842513e7a4cba07280c",
            "container_config": {
                "Hostname": "73155c52ece7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:279b212cd0488cca1e1c87e50f7a566ed365fcc7cd0f4a031f4ec38587263c38",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-23T21:29:01.487565162Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:06:07.3208771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c0b9ed1244ec0acfc9054c7cb80c768878e3da99740f981ba3a82bdd854305db in / "
                },
                {
                    "created": "2020-06-09T01:06:09.662318409Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:02:44.875653819Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:02:56.42312136Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:03:44.991347616Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T18:37:09.849868686Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:27:20.773737061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:28:35.2415049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:28:55.137881802Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9cacc6653563771b458c13056265aa0c21b8a23ca9408278484e4efde4160618' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='552db731a120d341a1756c6ce0b1029cb5f5c756c09de9f45273893268d19c23' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='7a8b4e7841d978c95dae8ef53e19811ee2d5c595a1c5ec7afed74bb8f71588b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='625d9cdb25ba55e1afba9490c79c55767117fa272e067f81643d22268d51308a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='97d762a62eae2e1f4d89ce09a89407a63e12c22d5c0fb952e409b323927cd38e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8dd2d50666176cbe5cab7557081acb0f380cef2240e18d05db7faffc03d8f356' ;; \t\t*) goRelArch='src'; goRelSha256='17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-06-23T21:28:58.190385852Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:28:58.846082265Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:29:00.8632075Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-23T21:29:01.487565162Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c03baeddd805de01cf6073d95c620bfd3120692906e38ee2c8aef0f8259cf106",
                    "sha256:69519c783cb4c65e2ca7791b2dcfd29b2e46dac7142ced6b54ba04797c2d700c",
                    "sha256:753ee8f241c2b86398b8c50eea3f5056a192a902daa22ee4a5f0d188ef674c37",
                    "sha256:399077523746363bdcac90919a1c85caea9a6247115b66a0c4a75690d2430bb3",
                    "sha256:491600dbaba6a580f911a92f0cab3b2b8927da1fbe6399a104f8fb73fc766544",
                    "sha256:5f522bb9b0f93e9fbbdfe75a11d9de7561d70af6f7f7c7136c2968e7144a7834",
                    "sha256:3c367fd249489d52f6e3ade2ebf54873b3da859594ab20255d726ad3b258cbfd"
                ]
            }
        },
        "1.13.13-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba0b16b721e5caa055dc3e76194d4393c5bdaf9b1d1469638a32b75fc6f281d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "48f6460ea11264d204fcf401eda7ae8715c58b544e16232ca6f934ba4d4c2a05",
            "container_config": {
                "Hostname": "48f6460ea112",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba0b16b721e5caa055dc3e76194d4393c5bdaf9b1d1469638a32b75fc6f281d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:12:13.875071249Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:07:12.341519085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:12:07.42815632Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:12:11.061715422Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:12:11.63372661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:12:13.235029431Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:12:13.875071249Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:7620f0e4b93340089c9cc367274a1c6782e68522c7b7d07cdf85f728c9a80c71",
                    "sha256:e34b5a3627c169846b5fd9d46365ef0732477599528c370d8a438e16e0dd2458"
                ]
            }
        },
        "1.13.13-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6609eb3336296fd24f81845a90bb92d98928b7b4fc1fe08b3ab883f1677559c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "87c7d18b26e2c7d3becf6a244e0e9aaab3a957c943f9fad81f8b5d2b749bcd92",
            "container_config": {
                "Hostname": "87c7d18b26e2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6609eb3336296fd24f81845a90bb92d98928b7b4fc1fe08b3ab883f1677559c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:33:51.418468035Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:12:20.190594483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:33:43.405533597Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:33:47.203254303Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:33:48.126276039Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:33:50.362234029Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:33:51.418468035Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:23c021cf19c3ddd6bae9779f0ce8c2158d3b866da61af9f44f0ae955dcf1977c",
                    "sha256:2d64f8061d4de5e53c9b511c85b98417720357b58cad047eeb97de77af887bfc"
                ]
            }
        },
        "1.13.13-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba0b16b721e5caa055dc3e76194d4393c5bdaf9b1d1469638a32b75fc6f281d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "48f6460ea11264d204fcf401eda7ae8715c58b544e16232ca6f934ba4d4c2a05",
            "container_config": {
                "Hostname": "48f6460ea112",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba0b16b721e5caa055dc3e76194d4393c5bdaf9b1d1469638a32b75fc6f281d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:12:13.875071249Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:07:12.341519085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:12:07.42815632Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:12:11.061715422Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:12:11.63372661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:12:13.235029431Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:12:13.875071249Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:7620f0e4b93340089c9cc367274a1c6782e68522c7b7d07cdf85f728c9a80c71",
                    "sha256:e34b5a3627c169846b5fd9d46365ef0732477599528c370d8a438e16e0dd2458"
                ]
            }
        },
        "1.13.13-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcf934c2f8dc38d49340a6324476cee6c58bc4a5962efd44dacc34114d578f03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "475b7d01c7a68dad42b20915c4d2400a4be7772bf30a310352eed95761bb3a06",
            "container_config": {
                "Hostname": "475b7d01c7a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcf934c2f8dc38d49340a6324476cee6c58bc4a5962efd44dacc34114d578f03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:06:30.014463104Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:00:40.240297572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:35073a186411c4b773a9d4d540ec0693ced845cb847b43d8465f9579174cd2b0 in / "
                },
                {
                    "created": "2020-06-09T01:00:45.422649393Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T01:46:25.589392797Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T01:46:57.954146341Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T01:48:31.958640374Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T18:36:04.519824732Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:26:08.292062009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:06:03.12282045Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:06:24.502398834Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b8573c2335bebef53e819ab8d323456dc2b94838bebdbd8cc6623bb8a6d77b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='621081207d4d8549d33e2bc0623e50195152f40f3132327efecaa372f080af55' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='999fcd9090b164062e166523086a54f4152549c41f627ff5ccad3c3ec2da0657' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='efcadf5d927558429ce1156e12943639e0f33d4b5b75919683ec2529ffb8c3e1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f816b5ac28322af6692fb61d6e12b11697c4927eec42226ebcf8ef32cee5bf9b' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='333a437e579f7a8e8188c6431eb13f31517d72310b6583d1df69022e09965ce8' ;; \t\t*) goRelArch='src'; goRelSha256='ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-14T18:06:26.893398954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:06:27.538428241Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:06:29.345916389Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:06:30.014463104Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e6070c2111110dc7d213895db88659b4146b537f9446c6aa29f2e13ebae8dfaf",
                    "sha256:8894abcd4aadb18aa97f0ac8a6f99699090681285abf6308391487831016fa01",
                    "sha256:8fa1c8dbd532c2a24e90650ea026a575ead946241546acff4cb6d7298a2e5bcf",
                    "sha256:b0e9797952fd90698009450953abae1bc3f66de554ab77c476fb0264f4c93d4b",
                    "sha256:c7c3017811e15af8e37d5430edea241e597393f8e2358e835cb2fe0d331744f6",
                    "sha256:45731cad7647eda99dddd8c6560a0d9f7a90741cd0960661e1c7d714326089ea",
                    "sha256:2e4eb33971ff73f5d8bf25d613f37221d97522d2f91c610b818604d80de50a6c"
                ]
            }
        },
        "1.13.13-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ac34266ffedeef6f3fe223f76ceb64e9199cf0875994f6a839d96d74a7919c04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb18c5ff35c0334aefd98225e5d6f27c851f1800bde07822a565b29b5be1ab58",
            "container_config": {
                "Hostname": "eb18c5ff35c0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ac34266ffedeef6f3fe223f76ceb64e9199cf0875994f6a839d96d74a7919c04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:07:06.442708776Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:06:07.3208771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c0b9ed1244ec0acfc9054c7cb80c768878e3da99740f981ba3a82bdd854305db in / "
                },
                {
                    "created": "2020-06-09T01:06:09.662318409Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:02:44.875653819Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:02:56.42312136Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:03:44.991347616Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T18:37:09.849868686Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:27:20.773737061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:06:40.849499373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:07:01.28388549Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b8573c2335bebef53e819ab8d323456dc2b94838bebdbd8cc6623bb8a6d77b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='621081207d4d8549d33e2bc0623e50195152f40f3132327efecaa372f080af55' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='999fcd9090b164062e166523086a54f4152549c41f627ff5ccad3c3ec2da0657' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='efcadf5d927558429ce1156e12943639e0f33d4b5b75919683ec2529ffb8c3e1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f816b5ac28322af6692fb61d6e12b11697c4927eec42226ebcf8ef32cee5bf9b' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='333a437e579f7a8e8188c6431eb13f31517d72310b6583d1df69022e09965ce8' ;; \t\t*) goRelArch='src'; goRelSha256='ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-14T18:07:03.586702649Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:07:04.162360299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:07:05.774390283Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:07:06.442708776Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c03baeddd805de01cf6073d95c620bfd3120692906e38ee2c8aef0f8259cf106",
                    "sha256:69519c783cb4c65e2ca7791b2dcfd29b2e46dac7142ced6b54ba04797c2d700c",
                    "sha256:753ee8f241c2b86398b8c50eea3f5056a192a902daa22ee4a5f0d188ef674c37",
                    "sha256:399077523746363bdcac90919a1c85caea9a6247115b66a0c4a75690d2430bb3",
                    "sha256:491600dbaba6a580f911a92f0cab3b2b8927da1fbe6399a104f8fb73fc766544",
                    "sha256:eb32f0ec4300856b470534045ee44cd8905e52c14c76b1e36ecf5b77f8fbea3f",
                    "sha256:d5e785e6babf71fbeccfe24dc8316ca497512b947940cd9bbb08462c1810ab76"
                ]
            }
        },
        "1.13.14-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bfb2cd2a13758d82e4cbffb749fd24d8dae1e8ef8c0a03ed938b520251e597d8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e991549c2773898c846d7c1166b5e2f91e6bda65f8740b1b7a8b9dc9934bff46",
            "container_config": {
                "Hostname": "e991549c2773",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bfb2cd2a13758d82e4cbffb749fd24d8dae1e8ef8c0a03ed938b520251e597d8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T05:24:15.626937502Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T04:20:10.449576012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T05:23:32.397405694Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T05:23:41.821315543Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T05:23:49.159080646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T05:24:09.44635197Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T05:24:15.626937502Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:b3aba7d67a66804f1807906b9af83c4dcca68b16af0cb2e11b6c3338978c6418",
                    "sha256:7f2a973bcb131989a449a666dc3f29c24eef36898aba6920ca27f2f1c314b536"
                ]
            }
        },
        "1.13.14-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:21cb8b92d483990f25836f18a3fc2be529bcf37d9ffa831b11c97c9e02adbdb4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "567ade385db85fbdd672fedce33d5e010693dcba7cc9a99f75aa1164f4c5dff6",
            "container_config": {
                "Hostname": "567ade385db8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:21cb8b92d483990f25836f18a3fc2be529bcf37d9ffa831b11c97c9e02adbdb4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T06:25:03.741478888Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T05:24:32.171012425Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T06:24:57.493365862Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T06:25:00.877485574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T06:25:01.417452759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T06:25:03.090514141Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T06:25:03.741478888Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:2dd4b03445ef1f29cfcc2f8a07989d57d61f9dc332ce014ee86eacd9480dab24",
                    "sha256:2c3885cadaa08ec5015d77da8e4b61634d2cf8e16c34bc1bd4f64aac0aa3efb5"
                ]
            }
        },
        "1.13.14-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bfb2cd2a13758d82e4cbffb749fd24d8dae1e8ef8c0a03ed938b520251e597d8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e991549c2773898c846d7c1166b5e2f91e6bda65f8740b1b7a8b9dc9934bff46",
            "container_config": {
                "Hostname": "e991549c2773",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bfb2cd2a13758d82e4cbffb749fd24d8dae1e8ef8c0a03ed938b520251e597d8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T05:24:15.626937502Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T04:20:10.449576012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T05:23:32.397405694Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T05:23:41.821315543Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T05:23:49.159080646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T05:24:09.44635197Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T05:24:15.626937502Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:b3aba7d67a66804f1807906b9af83c4dcca68b16af0cb2e11b6c3338978c6418",
                    "sha256:7f2a973bcb131989a449a666dc3f29c24eef36898aba6920ca27f2f1c314b536"
                ]
            }
        },
        "1.13.14-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c69805ce532eeccf7ff0ea1a17ef155ee4a3492f0f767089df52ac76ec985a78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f64012ce42e76fa58579d2f367da013f66c5b9715ad41575b500658e6b06da0",
            "container_config": {
                "Hostname": "2f64012ce42e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c69805ce532eeccf7ff0ea1a17ef155ee4a3492f0f767089df52ac76ec985a78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-05T01:44:11.978907222Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:43:35.358910466Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:44:00.728458281Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='32617db984b18308f2b00279c763bff060d2739229cb8037217a49c9e691b46a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1a238daa3cd00611145d66a5577ea57bf90266443d1a2bef076ca74302a02c48' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ee5f84e3bc0548e4963344a887f684458bec1e5a822d0d413d1c6925b784a16e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='537bb1769827852673ab96ce5f7676c162bba3d5394e6828733b53b4c9449c11' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='c91a424a4738993d2e77bb0f134ad6c5af1aa5b785f5a3a8a642d50a36de7471' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8c4cf33742a1374644cbade2db39bbeebf50bb044b2409c48bdf0526f96fcce5' ;; \t\t*) goRelArch='src'; goRelSha256='197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-05T01:44:02.999808423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:44:05.086900375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:44:11.294611254Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-05T01:44:11.978907222Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:c8b96b41ca4940ef0520e9dfb0a4889ad698d83c5a5dfbd5b7def428f5966b83",
                    "sha256:cf5cd071433f00295d5dd4dd8ac91a9df72e6b65c1c8c44d195566cbaf33356c"
                ]
            }
        },
        "1.13.14-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2a517f7d66211271c880300fbf42136cf3b370ce2aa35cf6c2c1afeefdffc571",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6299a3c3be66e3d44ace4684e9b92c22995ef4e031c992256f10dccd801605b",
            "container_config": {
                "Hostname": "b6299a3c3be6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2a517f7d66211271c880300fbf42136cf3b370ce2aa35cf6c2c1afeefdffc571",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-05T01:44:57.867622952Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T05:01:04.874841639Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ba6f3203fb10e66124d03088d234e92fc908c572ec7eed268e866623a383a7d in / "
                },
                {
                    "created": "2020-08-04T05:01:07.939350474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T08:16:04.465529549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T08:16:44.245416999Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T08:18:19.547854109Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:38.536613259Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:40.729936373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:44:19.597745817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:44:44.202479646Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='32617db984b18308f2b00279c763bff060d2739229cb8037217a49c9e691b46a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1a238daa3cd00611145d66a5577ea57bf90266443d1a2bef076ca74302a02c48' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ee5f84e3bc0548e4963344a887f684458bec1e5a822d0d413d1c6925b784a16e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='537bb1769827852673ab96ce5f7676c162bba3d5394e6828733b53b4c9449c11' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='c91a424a4738993d2e77bb0f134ad6c5af1aa5b785f5a3a8a642d50a36de7471' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8c4cf33742a1374644cbade2db39bbeebf50bb044b2409c48bdf0526f96fcce5' ;; \t\t*) goRelArch='src'; goRelSha256='197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-05T01:44:50.930825374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:44:52.022855285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:44:57.101468764Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-05T01:44:57.867622952Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7352564cb071e9fe8088197f4901584095f1e55fdc9ba28cc77b91045be23467",
                    "sha256:9dd7fe8f21549089acbd73452166a5697ac31784ca821330d7b05cf9b6b7f2fc",
                    "sha256:b5fe9b0ba4a73f8ca29f530ec91f65a7176c09183793ad44bf1cfffa5041ca22",
                    "sha256:d52fc9488b3ec18dc8b3724b27e506fc825f5f74788f4e3258868408bdf266e3",
                    "sha256:02d2df8ece5e9513b029bf95088173f339b912987e12e99cc1d7de65c6c9c76d",
                    "sha256:df4bb5f701a9e15e6115bb51bb5335d485243179dfaf6d42ada55c90adad556e",
                    "sha256:17c62adf8c1e4cece148a7dc4d6da6983cd0933a3623e63014119054934e67cd"
                ]
            }
        },
        "1.13.15-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61c298ec7db020ad6fae1a1c340638efa196b044cb291af292f23a3c6d686c4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6b7de25a3d7e81f37b37002bda1627c7f61410c2e4fb43bc4fd3bdd8382280a",
            "container_config": {
                "Hostname": "b6b7de25a3d7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61c298ec7db020ad6fae1a1c340638efa196b044cb291af292f23a3c6d686c4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T04:09:37.347472112Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T03:17:14.81964297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:18.077720762Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T04:09:26.997312623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:28.572853547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:34.809190841Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T04:09:37.347472112Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:4f0b7a0b65b02e7408a8073a11991d476e6881edda1a7df45fa47806fa3b3d25",
                    "sha256:d4999ab6616a4f5b313d95cc748d030d02e6674944b656ea51d26fed87c1c9f1"
                ]
            }
        },
        "1.13.15-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22b2eb727224ea8760e5f50d3729a9a32d636ea06ffc73b71f0fd9af6dd64a1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6ba4aa624824d28c3de620292e268d501ea5af339dc7f6c431960ec65bd3cf50",
            "container_config": {
                "Hostname": "6ba4aa624824",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22b2eb727224ea8760e5f50d3729a9a32d636ea06ffc73b71f0fd9af6dd64a1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T04:59:02.293989795Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T04:09:46.035773564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:58:54.36363464Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T04:58:58.806544284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:58:59.521557419Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:59:01.491759415Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T04:59:02.293989795Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:fa56eaf4f68abad2d6eb373d0e038960ab5a0cb0bd8e4dde5c71ba5802edf091",
                    "sha256:635e7e2042eec42d0251daaaf11787bc86d0aeb6fe9aeb5c6d1f30a79d52f5f6"
                ]
            }
        },
        "1.13.15-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61c298ec7db020ad6fae1a1c340638efa196b044cb291af292f23a3c6d686c4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6b7de25a3d7e81f37b37002bda1627c7f61410c2e4fb43bc4fd3bdd8382280a",
            "container_config": {
                "Hostname": "b6b7de25a3d7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61c298ec7db020ad6fae1a1c340638efa196b044cb291af292f23a3c6d686c4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T04:09:37.347472112Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T03:17:14.81964297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:18.077720762Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T04:09:26.997312623Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:28.572853547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T04:09:34.809190841Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T04:09:37.347472112Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:4f0b7a0b65b02e7408a8073a11991d476e6881edda1a7df45fa47806fa3b3d25",
                    "sha256:d4999ab6616a4f5b313d95cc748d030d02e6674944b656ea51d26fed87c1c9f1"
                ]
            }
        },
        "1.13.15-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e1e23a458d84974127e9f1f729d08b4b88d8de33ea2f464f02cb5de5fa556198",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25b47d34d682825c30d49525b51a15dd37f6c73f201022982dfd508cbf75900a",
            "container_config": {
                "Hostname": "25b47d34d682",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e1e23a458d84974127e9f1f729d08b4b88d8de33ea2f464f02cb5de5fa556198",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T03:15:59.938127271Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:14:59.322987539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:15:36.584976834Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-07T03:15:43.802339661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:15:46.807160657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:15:57.126574712Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T03:15:59.938127271Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:d02a469f9a2aa6ef1374ba481e9457491984b9707460fe34009013e79fde125d",
                    "sha256:f390e5ecfe691f514757e99f475caed2564c86ef599995e9a145b35174d2de8c"
                ]
            }
        },
        "1.13.15-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:43e7567f3c86d99d523c66e91886d88ad90650be7a3f67a3a70f4746192265d8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "58d674d38c054c308774bdf6b50b6b8820abd3c0dd7eb3b8437b2cf43d6e29ce",
            "container_config": {
                "Hostname": "58d674d38c05",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:43e7567f3c86d99d523c66e91886d88ad90650be7a3f67a3a70f4746192265d8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T03:17:06.825063375Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T05:01:04.874841639Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ba6f3203fb10e66124d03088d234e92fc908c572ec7eed268e866623a383a7d in / "
                },
                {
                    "created": "2020-08-04T05:01:07.939350474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T08:16:04.465529549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T08:16:44.245416999Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T08:18:19.547854109Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:38.536613259Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:40.729936373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:16:18.23231845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:16:52.577221488Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-07T03:16:56.195863327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:16:57.024426269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T03:17:05.200372774Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T03:17:06.825063375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7352564cb071e9fe8088197f4901584095f1e55fdc9ba28cc77b91045be23467",
                    "sha256:9dd7fe8f21549089acbd73452166a5697ac31784ca821330d7b05cf9b6b7f2fc",
                    "sha256:b5fe9b0ba4a73f8ca29f530ec91f65a7176c09183793ad44bf1cfffa5041ca22",
                    "sha256:d52fc9488b3ec18dc8b3724b27e506fc825f5f74788f4e3258868408bdf266e3",
                    "sha256:02d2df8ece5e9513b029bf95088173f339b912987e12e99cc1d7de65c6c9c76d",
                    "sha256:1842242eebdf88836e9e8ce0fdf3205a26f950248e0b4828809b9ba2f0d9903d",
                    "sha256:5b15c2314d04533d5a2483262b3d9e8e787d5f3dedbd5ac9ab186104b702092a"
                ]
            }
        },
        "1.13.2-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d2e5755cb4b88feecf8d0a02aa986afac1e56ca59a38f561dc8e4b5156323a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1c52bc548c30cb9ab897d90efa8afd0c0f5b4d19ed6fb3c5f56da1aa5f0c5f62",
            "container_config": {
                "Hostname": "1c52bc548c30",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d2e5755cb4b88feecf8d0a02aa986afac1e56ca59a38f561dc8e4b5156323a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:30:25.137359512Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T20:27:54.726497107Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:30:17.917975748Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:30:22.229861469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:30:22.83324031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:30:24.534609334Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:30:25.137359512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:98150d6b35fde76d745c877569a261317060fb7e2fa71053bc6a9d419201a6f4",
                    "sha256:e1349ea4f4b6cc516d9c4fe85234fdfe077431fcec8866217a0562d1809f06dd"
                ]
            }
        },
        "1.13.2-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d2e5755cb4b88feecf8d0a02aa986afac1e56ca59a38f561dc8e4b5156323a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1c52bc548c30cb9ab897d90efa8afd0c0f5b4d19ed6fb3c5f56da1aa5f0c5f62",
            "container_config": {
                "Hostname": "1c52bc548c30",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d2e5755cb4b88feecf8d0a02aa986afac1e56ca59a38f561dc8e4b5156323a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:30:25.137359512Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T20:27:54.726497107Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:30:17.917975748Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:30:22.229861469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:30:22.83324031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:30:24.534609334Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:30:25.137359512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:98150d6b35fde76d745c877569a261317060fb7e2fa71053bc6a9d419201a6f4",
                    "sha256:e1349ea4f4b6cc516d9c4fe85234fdfe077431fcec8866217a0562d1809f06dd"
                ]
            }
        },
        "1.13.2-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:948fb5bc81c198bddbca7420be331c0c2bb30322a599899611cb02e963a518c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "694dee9d42025f56f8fcb411f3f8a3d444a53ff5e0e7cc161c8d297d1eea3c0e",
            "container_config": {
                "Hostname": "694dee9d4202",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:948fb5bc81c198bddbca7420be331c0c2bb30322a599899611cb02e963a518c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:27:12.63561095Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:05:23.793223407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3acf01a0633a4067bab5dd8864409407f6a25d8266f86719c64597981017ffcb in / "
                },
                {
                    "created": "2019-10-17T00:05:25.298643091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:07:42.490819389Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:07:59.558017326Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:08:42.09173034Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:30:20.02154863Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T20:26:45.666397609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:27:06.186656547Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='293b41a6ccd735eebcfb4094b6931bfd187595555cecf3e4386e9e119220c0b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2e90b5d08a177be14938a905f7b91e9b17052318b5ea0e6d7c0a83af252421' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a2d27f341d6b7968f9da229990aa9ab7a6d4bd1c722945be11576a09eb538482' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='468f116889631405da0c89b1765985e8bbeddbf8642c2a552a81f0bfbe58ab55' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ffcc3651fce34fc6418e33836d5417c0e6b713fda99033259e67538fa802900a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='dbed59db3e4f57df7c86120be37bdbf3516891214174b771cff40d81ba8577e2' ;; \t\t*) goRelArch='src'; goRelSha256='1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:27:09.35885221Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:27:10.07494091Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:27:12.036013849Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:27:12.63561095Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7edbeaf1d554a857ed18dbea96b5e43cc404517af7dd2c8f67f7a66f65495bbe",
                    "sha256:7051e01e54eb81261fa0c94b3cd8b9b64aa79e63d388d0c8ad97446ee9cd920f",
                    "sha256:8e0fad781dfb53bfd0d88b849f1ef6cfe7df7eef939f401f896a1f1c90ff6165",
                    "sha256:34c03909760abac7feb4a3282241d7edf0f82a1c8d5e12646414ae54576ca164",
                    "sha256:78a3a7506c554360b7500704d074d367c2fe49e4cc4e5a45121f8f4e1f87a86b",
                    "sha256:91527f5b59c989cffaf509b47c9e704185369cd136dd3ba5e7e3ce963c149a2f",
                    "sha256:809cb53b36765720c6b77359f772a104e5d6cec6d2866682a86a3b1698bfb66f"
                ]
            }
        },
        "1.13.2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2b9d4502902c0e0607b95affdcef66b35b8e28308880b2930303c9c179c0e599",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "027e9b603dfcc0007e7741be553a2952b83a37af773fd7455b7472c47b778b7f",
            "container_config": {
                "Hostname": "027e9b603dfc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2b9d4502902c0e0607b95affdcef66b35b8e28308880b2930303c9c179c0e599",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T20:27:45.61110368Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:10:47.93498212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3283babf00aa2ace3b06f2d143b912daeedd504791cdf83548bbe49f1f670f4d in / "
                },
                {
                    "created": "2019-10-17T00:10:49.666895598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:23:20.593213481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:23:33.810403212Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:24:27.621844569Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:31:22.048237849Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T20:27:20.521562778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:27:38.557837111Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='293b41a6ccd735eebcfb4094b6931bfd187595555cecf3e4386e9e119220c0b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2e90b5d08a177be14938a905f7b91e9b17052318b5ea0e6d7c0a83af252421' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a2d27f341d6b7968f9da229990aa9ab7a6d4bd1c722945be11576a09eb538482' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='468f116889631405da0c89b1765985e8bbeddbf8642c2a552a81f0bfbe58ab55' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ffcc3651fce34fc6418e33836d5417c0e6b713fda99033259e67538fa802900a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='dbed59db3e4f57df7c86120be37bdbf3516891214174b771cff40d81ba8577e2' ;; \t\t*) goRelArch='src'; goRelSha256='1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T20:27:42.43174226Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:27:43.249400183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T20:27:44.969658663Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T20:27:45.61110368Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43834cdf9bef5fa99ec47db6c59def13ab286cb8044e7dffd1d3b331dfffa0de",
                    "sha256:9aadc5506756401e4d48dd9ed026525663b46eb8470161543a09de787169f010",
                    "sha256:8bff8c46bd958b6e1c14b48fc8aa93b96d029c39dd477e9901f9929f45e2a0a4",
                    "sha256:ed9cd8acc21ccedab777dba9eddd89d862fdd7df38c85bfe5449826e19cbc2b3",
                    "sha256:0893cf9a774cc36edac61cb97f1f9fe44bdce2fd778c6449723d5d0a4baba8d3",
                    "sha256:43cd24de2b7832b530eb3d33eb3e245740ed062c9cf00834b045fa6c7a62042e",
                    "sha256:5fc2acd5c760ec848850193d7ad005ba224c150fdd00eafaf92adbca6c8c81d8"
                ]
            }
        },
        "1.13.3-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2452d9fde27a2faf9051baeb1955a51ba0cfd59977e89867032efafaf32934b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7204bec12ec88732b85f0cda859321826dd9cdaf1810696626d85e5bb87a48dc",
            "container_config": {
                "Hostname": "7204bec12ec8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2452d9fde27a2faf9051baeb1955a51ba0cfd59977e89867032efafaf32934b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T19:25:40.627762188Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T19:23:13.913723382Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:25:30.994734069Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T19:25:36.670778759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:25:37.30488672Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:25:39.849441506Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T19:25:40.627762188Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:6b420d58b32dbc4df7314a96cbdd2563162bcd63453cb3c3e045cd4d1762d786",
                    "sha256:316c6bfa91a4902ec010ea4e818ba1fc305d0b46db74711342cc6f344876dcd9"
                ]
            }
        },
        "1.13.3-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2452d9fde27a2faf9051baeb1955a51ba0cfd59977e89867032efafaf32934b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7204bec12ec88732b85f0cda859321826dd9cdaf1810696626d85e5bb87a48dc",
            "container_config": {
                "Hostname": "7204bec12ec8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2452d9fde27a2faf9051baeb1955a51ba0cfd59977e89867032efafaf32934b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T19:25:40.627762188Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T19:23:13.913723382Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:25:30.994734069Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T19:25:36.670778759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:25:37.30488672Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T19:25:39.849441506Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T19:25:40.627762188Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:6b420d58b32dbc4df7314a96cbdd2563162bcd63453cb3c3e045cd4d1762d786",
                    "sha256:316c6bfa91a4902ec010ea4e818ba1fc305d0b46db74711342cc6f344876dcd9"
                ]
            }
        },
        "1.13.3-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:718252c270d2bc066c0d8289ceede4dd7038f88774758182f5726d4215e7fed1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "07c6ce25170bbc58df080fef2d5d8e39aedf6dd1677fcf1ca846b5d3325f5527",
            "container_config": {
                "Hostname": "07c6ce25170b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:718252c270d2bc066c0d8289ceede4dd7038f88774758182f5726d4215e7fed1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:00:04.174521166Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:05:23.793223407Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3acf01a0633a4067bab5dd8864409407f6a25d8266f86719c64597981017ffcb in / "
                },
                {
                    "created": "2019-10-17T00:05:25.298643091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:07:42.490819389Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:07:59.558017326Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:08:42.09173034Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:30:20.02154863Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T03:59:34.910858084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T03:59:57.166158104Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0804bf02020dceaa8a7d7275ee79f7a142f1996bfd0c39216ccb405f93f994c0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f15d6aa4098cd53ec5cb48d1a1e554d062b2263a03985d50c2568757d966dc6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9fa65ae42665baff53802091b49b83af6f2e397986b6cbea2ae30e2c7ee0f2f2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c68ebb127924ee753d05fcd4cc893e3409a6754e8884bb04e5248e9b5849f6ba' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2373b60d7f7b4825b1d0ec195079833a3dac72ddd55b207ee22b0032b1a658d9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='9241ce5bf362b7066c90da5abc4c85ec7b4054637e1a8a01b8cc83281e228b7e' ;; \t\t*) goRelArch='src'; goRelSha256='4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:00:01.34779451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:00:01.920423654Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:00:03.569262796Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:00:04.174521166Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7edbeaf1d554a857ed18dbea96b5e43cc404517af7dd2c8f67f7a66f65495bbe",
                    "sha256:7051e01e54eb81261fa0c94b3cd8b9b64aa79e63d388d0c8ad97446ee9cd920f",
                    "sha256:8e0fad781dfb53bfd0d88b849f1ef6cfe7df7eef939f401f896a1f1c90ff6165",
                    "sha256:34c03909760abac7feb4a3282241d7edf0f82a1c8d5e12646414ae54576ca164",
                    "sha256:78a3a7506c554360b7500704d074d367c2fe49e4cc4e5a45121f8f4e1f87a86b",
                    "sha256:c255a23b9c65c85981ef708a00355ceb4a701f94c14a0cfa682fb69ef98f3fce",
                    "sha256:5cca82900fc5fb7eb47d5b55328778c2fbdb747273f237af6cef4cb73580c9a9"
                ]
            }
        },
        "1.13.3-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ea0e128253e2a61c09144809d3abdc02cb6633bcc7bfce3a6e3ff90f35ce573",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5d1aa170de2d7f481685d3f332e54f14a9a3461aaa7b6bb7822f696440d4d6e3",
            "container_config": {
                "Hostname": "5d1aa170de2d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ea0e128253e2a61c09144809d3abdc02cb6633bcc7bfce3a6e3ff90f35ce573",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:00:41.1048797Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-17T00:10:47.93498212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3283babf00aa2ace3b06f2d143b912daeedd504791cdf83548bbe49f1f670f4d in / "
                },
                {
                    "created": "2019-10-17T00:10:49.666895598Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T02:23:20.593213481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T02:23:33.810403212Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T02:24:27.621844569Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:31:22.048237849Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:00:12.537590038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:00:34.497366468Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0804bf02020dceaa8a7d7275ee79f7a142f1996bfd0c39216ccb405f93f994c0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f15d6aa4098cd53ec5cb48d1a1e554d062b2263a03985d50c2568757d966dc6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9fa65ae42665baff53802091b49b83af6f2e397986b6cbea2ae30e2c7ee0f2f2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c68ebb127924ee753d05fcd4cc893e3409a6754e8884bb04e5248e9b5849f6ba' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2373b60d7f7b4825b1d0ec195079833a3dac72ddd55b207ee22b0032b1a658d9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='9241ce5bf362b7066c90da5abc4c85ec7b4054637e1a8a01b8cc83281e228b7e' ;; \t\t*) goRelArch='src'; goRelSha256='4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:00:37.598806538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:00:38.176815969Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:00:40.494611084Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:00:41.1048797Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43834cdf9bef5fa99ec47db6c59def13ab286cb8044e7dffd1d3b331dfffa0de",
                    "sha256:9aadc5506756401e4d48dd9ed026525663b46eb8470161543a09de787169f010",
                    "sha256:8bff8c46bd958b6e1c14b48fc8aa93b96d029c39dd477e9901f9929f45e2a0a4",
                    "sha256:ed9cd8acc21ccedab777dba9eddd89d862fdd7df38c85bfe5449826e19cbc2b3",
                    "sha256:0893cf9a774cc36edac61cb97f1f9fe44bdce2fd778c6449723d5d0a4baba8d3",
                    "sha256:32af2e59ca1916614b2c28b4b95d8bec09b34c2f9080fe419ccceaa2d1633b5d",
                    "sha256:d234c8910a131597622c40d83883acb0814a33568f806eb6a88cb8d6c087e7ad"
                ]
            }
        },
        "1.13.4-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69832a1b49e0fc0afcb0aea509a129cf8e89d50a7564a3ba370fdfc10fa9f252",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a1ee936470575745933cb8029f46cba56921d9517a22da9b2e8997db2faa50dc",
            "container_config": {
                "Hostname": "a1ee93647057",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69832a1b49e0fc0afcb0aea509a129cf8e89d50a7564a3ba370fdfc10fa9f252",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T21:02:15.113752804Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:59:37.881759887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:02:10.274276723Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T21:02:12.205773139Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:02:12.779781375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:02:14.514813048Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T21:02:15.113752804Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:54f3c0b1b8a7b5aa3c84d1f3454e3278729c2f49de86ae8966bb50b964663698",
                    "sha256:46e72116902df76746e9bc0a0d28a353c52116d2b961d24639fec0ecc4e7cd71"
                ]
            }
        },
        "1.13.4-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69832a1b49e0fc0afcb0aea509a129cf8e89d50a7564a3ba370fdfc10fa9f252",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a1ee936470575745933cb8029f46cba56921d9517a22da9b2e8997db2faa50dc",
            "container_config": {
                "Hostname": "a1ee93647057",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69832a1b49e0fc0afcb0aea509a129cf8e89d50a7564a3ba370fdfc10fa9f252",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T21:02:15.113752804Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:59:37.881759887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:02:10.274276723Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T21:02:12.205773139Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:02:12.779781375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T21:02:14.514813048Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T21:02:15.113752804Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:54f3c0b1b8a7b5aa3c84d1f3454e3278729c2f49de86ae8966bb50b964663698",
                    "sha256:46e72116902df76746e9bc0a0d28a353c52116d2b961d24639fec0ecc4e7cd71"
                ]
            }
        },
        "1.13.4-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:124bb371762ef26c6467119c9b821bd9dc5fea14c1531222e8080c5566172e0a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8965ea86fc702da64e43dc93a638b2227f37f64b7456693700ab1f191c20ccc4",
            "container_config": {
                "Hostname": "8965ea86fc70",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:124bb371762ef26c6467119c9b821bd9dc5fea14c1531222e8080c5566172e0a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-23T20:37:52.460702985Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T13:22:15.754620273Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c51a92fbc511319241c84feac408f0040600ab2230fd8ef007c322f6a5b9532 in / "
                },
                {
                    "created": "2019-11-22T13:22:17.010093098Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T23:09:59.150617742Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T23:10:12.424938698Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T23:11:00.829055416Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T20:37:16.94423117Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T20:37:18.281558414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:37:47.181585958Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='692d17071736f74be04a72a06dab9cac1cd759377bd85316e52b2227604c004c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f76e6353c9ae2dcad1731b7239531eb8be2fe171f29f2a9c5040945a930fd41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8b8d99eb07206f082468fb4d0ec962a819ae45d54065fc1ed6e2c502e774aaf0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='497934398ca57c7c207ce3388f099823923b4c7b74394d6ed64cd2d3751aecb8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='815bf3c7100e73cfac50c4a07c8eeb4b0458a49ffa0e13a74a6cf7ad8e2a6499' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='efc6947e8eb0a6409f4c8ba62b00ae4e54404064bc221df1b73364a95945a350' ;; \t\t*) goRelArch='src'; goRelSha256='95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-23T20:37:49.873689333Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:37:50.357078394Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:37:51.897164725Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-23T20:37:52.460702985Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df6d53900cd9bc9ff729f7f395049c1671edbdc3cf63eddb389589a84e16cd51",
                    "sha256:34ae3dff8661999bdb9d4fcd068bd7e4b62ec5ebfbf2c153c34fdd93bcbddd11",
                    "sha256:8bf1636e7f9271b2a0f88783b79be09ff674cd5320c582c9b44aee2a8ae21e84",
                    "sha256:898d81efab46fe801c62f26acfc84fc67f8fbf1e94430bd83891f616945ec6b5",
                    "sha256:4a402bcc2568864aab54ae6e8188aec7be38c5568458f121c6845c780454dbb8",
                    "sha256:e9b73afda1ccdeb8cfeb108d0e48fa7f9401906f5c882179195f51c480c22d91",
                    "sha256:35cf2181c743c5c8000c11e2eb68e937c83421811309a1611bef4624034b0c07"
                ]
            }
        },
        "1.13.4-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5e06ea3b77f3cd08ba8b127f554f269998bfaf1847b49470850a1217b03ed3f1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e8c9a1be4d2cfba05908aa0e29fd4cc1e7fd2a4ffa4436832c53d0262880fac4",
            "container_config": {
                "Hostname": "e8c9a1be4d2c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5e06ea3b77f3cd08ba8b127f554f269998bfaf1847b49470850a1217b03ed3f1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-23T20:38:47.074304548Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T13:27:54.700003197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3893b8a7336301b4a2a741f62c99805c3c7b2bee21e4f026b6885060becfc03d in / "
                },
                {
                    "created": "2019-11-22T13:27:57.481673179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T23:24:42.915203166Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T23:24:56.611805769Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T23:25:44.081552288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T20:38:19.350290568Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-23T20:38:21.302029564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:38:38.203209245Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='692d17071736f74be04a72a06dab9cac1cd759377bd85316e52b2227604c004c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f76e6353c9ae2dcad1731b7239531eb8be2fe171f29f2a9c5040945a930fd41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8b8d99eb07206f082468fb4d0ec962a819ae45d54065fc1ed6e2c502e774aaf0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='497934398ca57c7c207ce3388f099823923b4c7b74394d6ed64cd2d3751aecb8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='815bf3c7100e73cfac50c4a07c8eeb4b0458a49ffa0e13a74a6cf7ad8e2a6499' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='efc6947e8eb0a6409f4c8ba62b00ae4e54404064bc221df1b73364a95945a350' ;; \t\t*) goRelArch='src'; goRelSha256='95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-23T20:38:43.21733523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:38:44.102206617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-23T20:38:46.175031627Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-23T20:38:47.074304548Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:92694e08924c2a2638bb0a6d3327f28f51fb9773c9f328e74233d6010b9bfa77",
                    "sha256:d025ef71dbe09790aef199d1cea264c4dd7f7e9704d43d6cbed78b289d165d8f",
                    "sha256:5814c0c1afb56ba553e5dd7810f328a38000fb0d8a3af9b313d7efd08457d415",
                    "sha256:d6cd56eab0d84bd4b3da2cb4180a20707ceeca295646eb8288f97f4b736af78a",
                    "sha256:61cfea81d091af79f4356333f969f8be60d9536b05cf90fe92463daaedf9d645",
                    "sha256:543f860fb6dd4d9ac71d33cbf5fec242dd987ad57c28a79505aa11f131269f1b",
                    "sha256:0de9b9bcd3cc4a3e48e06511908179c221870d8d6b506fd6dd518dc20f712893"
                ]
            }
        },
        "1.13.5-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c76576e8be05e021344049a83c57f63d7099b6d45050956d580a87ca8120e2f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "93538a8ac2261804a11504859e2573e8e7281945858b1419a58014a07aa5b99b",
            "container_config": {
                "Hostname": "93538a8ac226",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c76576e8be05e021344049a83c57f63d7099b6d45050956d580a87ca8120e2f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:09:34.941949512Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T18:59:09.61386684Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:caf7ca25875eddd2bfa2d1e56663bb52d278a85f6ee1314f9ccf01dc4da8070a in / "
                },
                {
                    "created": "2019-12-24T18:59:10.412982599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:04:23.646440848Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T21:04:25.76907405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T21:07:19.410280847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:09:28.774682173Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:09:32.241760783Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:09:32.825013157Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:09:34.325573498Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:09:34.941949512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95bc3dfd6e5aa4a58b18663c321171e15c27a4fb0532b121f6d632c0f83b41d4",
                    "sha256:4b378abef4d2f2b5f4c89655c1401f02892ee503e5d7ff24a1ffe6ac60f25b4e",
                    "sha256:29c9b8e0a0c15026bbb277a731f79ca44acdabb9eadef933a405d1313357cd11",
                    "sha256:32e4b47ff3493856208119461538ff3fad0f5b2bb79d15fb4b4fbaf4b36a2727",
                    "sha256:b950da272291f28905f11168eb7ea9b96d3b2ac02fbf767b21f9b8b20639bcc3"
                ]
            }
        },
        "1.13.5-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d4c3fc36ebf738adf7ec7cdf6ef7111f4a9c6854f974dfade296ee3f21cc4916",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a46eded3f5885554a0cccfef419e49d5f8578091cb4e1bca656a61eea2f05bbf",
            "container_config": {
                "Hostname": "a46eded3f588",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d4c3fc36ebf738adf7ec7cdf6ef7111f4a9c6854f974dfade296ee3f21cc4916",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:12:11.43150345Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:59:27.130236571Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:12:04.91404192Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:12:08.578532743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:12:09.206010711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:12:10.802972377Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:12:11.43150345Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:87e174a5d898cf5d2e3f62589787b8a4c787e052bf9427f655841450267ab6b7",
                    "sha256:39fab82593a05197c3a8b6fe110627c7f9a3d5f6e9684488b06dda36ea7f01c8"
                ]
            }
        },
        "1.13.5-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c76576e8be05e021344049a83c57f63d7099b6d45050956d580a87ca8120e2f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "93538a8ac2261804a11504859e2573e8e7281945858b1419a58014a07aa5b99b",
            "container_config": {
                "Hostname": "93538a8ac226",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c76576e8be05e021344049a83c57f63d7099b6d45050956d580a87ca8120e2f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T21:09:34.941949512Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T18:59:09.61386684Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:caf7ca25875eddd2bfa2d1e56663bb52d278a85f6ee1314f9ccf01dc4da8070a in / "
                },
                {
                    "created": "2019-12-24T18:59:10.412982599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:04:23.646440848Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T21:04:25.76907405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T21:07:19.410280847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:09:28.774682173Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T21:09:32.241760783Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:09:32.825013157Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T21:09:34.325573498Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T21:09:34.941949512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95bc3dfd6e5aa4a58b18663c321171e15c27a4fb0532b121f6d632c0f83b41d4",
                    "sha256:4b378abef4d2f2b5f4c89655c1401f02892ee503e5d7ff24a1ffe6ac60f25b4e",
                    "sha256:29c9b8e0a0c15026bbb277a731f79ca44acdabb9eadef933a405d1313357cd11",
                    "sha256:32e4b47ff3493856208119461538ff3fad0f5b2bb79d15fb4b4fbaf4b36a2727",
                    "sha256:b950da272291f28905f11168eb7ea9b96d3b2ac02fbf767b21f9b8b20639bcc3"
                ]
            }
        },
        "1.13.5-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:76f18d8debed7d26e7ec3fdd57a324996ecad97e374a948f2c52631a15490a22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c1c057d8fbe58c40456ed148afbb49c721ff51c0d480414d3e72f2a727433891",
            "container_config": {
                "Hostname": "c1c057d8fbe5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:76f18d8debed7d26e7ec3fdd57a324996ecad97e374a948f2c52631a15490a22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-29T03:42:30.156962061Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:58:42.401065681Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:26fba5cd6ba1fe45f19fb80d1c8e54eac5189e2b93e521b2ba6d5a6b54175e81 in / "
                },
                {
                    "created": "2019-12-28T04:58:45.087367866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:43:14.306636446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:43:30.867219598Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:44:14.608350699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:40:56.973713424Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:42:00.065601818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:42:25.331120011Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='512103d7ad296467814a6e3f635631bd35574cab3369a97a323c9a585ccaa569' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='26259f61d52ee2297b1e8feef3a0fc82144b666a2b95512402c31cc49713c133' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='227b718923e20c846460bbecddde9cb86bad73acc5fb6f8e1a96b81b5c84668b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3b830fa25f79ab08b476f02c84ea4125f41296b074017b492ac1ff748cf1c7c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='292814a5ea42a6fc43e1d1ea61c01334e53959e7ab34de86eb5f6efa9742afb6' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cfbb2959f243880abd1e2efd85d798b8d7ae4a502ab87c4b722c1bd3541e5dc3' ;; \t\t*) goRelArch='src'; goRelSha256='27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-29T03:42:26.895090257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:42:28.016159481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:42:29.627714946Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-29T03:42:30.156962061Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eee5b7f6e28aff3944f870f1cea1fbdf0c794b2fa9c84ddf6ddc009b9de3ac0b",
                    "sha256:46c22901cd9f12d91feac019823678c89e0fff06e53b23a4a4870ee89028ddcc",
                    "sha256:b4462ea7378389e9c5bb7f0c5ebca1fd2e7d7bd27cd47a1ae39a803de6a8d0da",
                    "sha256:4d3420dd001fcd981445244854d348f217b83e218c96bcaac414b1e6c6d15917",
                    "sha256:ab92d88bee9d2af59a44c102b2183c67d4dbc8c6dbfa72f475b8c5ff69ccebeb",
                    "sha256:878b820b4ecbed4036b3fea304ecb1ca27a897baaf35593b3e4cc2eb6075870b",
                    "sha256:d9ec68a653b660b4125214774fe07e1d04b066c8f26a13290c9fe31d670272ef"
                ]
            }
        },
        "1.13.5-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b24a9355f557960592ac3f2408687af0e3064c28975f26e2cdca76e7c24a8f30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6b479960794c49cb90ad730d44ea255735c49a94d6f379f41126a97cb31798ea",
            "container_config": {
                "Hostname": "6b479960794c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b24a9355f557960592ac3f2408687af0e3064c28975f26e2cdca76e7c24a8f30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-29T03:43:51.423050995Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T05:03:19.284699458Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5692a55e4805d33baa21e559cc0bb86fb91422171345ddd332fa5514285a3401 in / "
                },
                {
                    "created": "2019-12-28T05:03:25.100956471Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:59:48.86972173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T07:00:00.714206652Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T07:00:53.270742682Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:43:18.013956801Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:43:20.229053073Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:43:38.449187013Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='512103d7ad296467814a6e3f635631bd35574cab3369a97a323c9a585ccaa569' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='26259f61d52ee2297b1e8feef3a0fc82144b666a2b95512402c31cc49713c133' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='227b718923e20c846460bbecddde9cb86bad73acc5fb6f8e1a96b81b5c84668b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3b830fa25f79ab08b476f02c84ea4125f41296b074017b492ac1ff748cf1c7c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='292814a5ea42a6fc43e1d1ea61c01334e53959e7ab34de86eb5f6efa9742afb6' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cfbb2959f243880abd1e2efd85d798b8d7ae4a502ab87c4b722c1bd3541e5dc3' ;; \t\t*) goRelArch='src'; goRelSha256='27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-29T03:43:47.798869954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:43:48.926453611Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-29T03:43:50.759132284Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-29T03:43:51.423050995Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec2c013414a254c5c8516dd1c17a5740cd4c9aae192408786547b1d567759e8f",
                    "sha256:f17e98e6d0db6f91a36440aff5091fa6e59a442b3b77225360a689662e89467e",
                    "sha256:7fbe953f69462dc01fdd98a1949926c76fc35effbe024f18b1bc5f483c70ce32",
                    "sha256:d9047b4143f5e19b257ccdc81d32ae6b541a5df85373b8233450456b071a9614",
                    "sha256:761e616b9906d54c43567f3fc19dd9a041bcb5dd7120820a0a11077d0f0ff1f0",
                    "sha256:af6a305c50d2bb397947ee68fb6962f335adfe43628ff99cc80ac1b4f6537d3c",
                    "sha256:d358535d77957e989e6b18fd22828bee9b3c19e8e2abc2dd5677923b3c3c57b2"
                ]
            }
        },
        "1.13.6-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4db848d543cb81dcfd7859ee3d57b65a9c22dc3c7e18fb5fed952148691f35b8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0e476c8e066f657bfce81c502bb45a470862b549eae33e00df9dd0072b786fd8",
            "container_config": {
                "Hostname": "0e476c8e066f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4db848d543cb81dcfd7859ee3d57b65a9c22dc3c7e18fb5fed952148691f35b8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T03:12:00.813807267Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T03:09:08.419836843Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:11:40.053157271Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T03:11:45.160429319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:11:50.908923803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:11:58.04626235Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T03:12:00.813807267Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:b1faef4a3cb8a0811ea1f3d68687720b931607862e3d30f121996bba587609df",
                    "sha256:e0e43e6a2777f6ec49494bf574c4a7e458d19b4ba32079a0b7950a55574d7cc7"
                ]
            }
        },
        "1.13.6-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:64b1a1db89a5da38ac07cb8e2b744e5997eaad2e854359ed430cdd7b4bb96169",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "76568909d6f77c015d480a9a56bf615ed378a6ec11e8a9ac034da514583b5546",
            "container_config": {
                "Hostname": "76568909d6f7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:64b1a1db89a5da38ac07cb8e2b744e5997eaad2e854359ed430cdd7b4bb96169",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-23T17:29:05.82224827Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-23T17:26:28.913162395Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:29:00.817984254Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-23T17:29:02.642095095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:29:03.315009246Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:29:05.170065625Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-23T17:29:05.82224827Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:bb2cc5dd79261f0ec1141938dead5e00e5fc8a3e63bce86d793f6eac5c5f4bed",
                    "sha256:41b7924b461e5c8f8f23790526b8218a7ce227abd91cc8e93083759f59a77922"
                ]
            }
        },
        "1.13.6-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4db848d543cb81dcfd7859ee3d57b65a9c22dc3c7e18fb5fed952148691f35b8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0e476c8e066f657bfce81c502bb45a470862b549eae33e00df9dd0072b786fd8",
            "container_config": {
                "Hostname": "0e476c8e066f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4db848d543cb81dcfd7859ee3d57b65a9c22dc3c7e18fb5fed952148691f35b8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T03:12:00.813807267Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T03:09:08.419836843Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:11:40.053157271Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T03:11:45.160429319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:11:50.908923803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:11:58.04626235Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T03:12:00.813807267Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:b1faef4a3cb8a0811ea1f3d68687720b931607862e3d30f121996bba587609df",
                    "sha256:e0e43e6a2777f6ec49494bf574c4a7e458d19b4ba32079a0b7950a55574d7cc7"
                ]
            }
        },
        "1.13.6-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:232104b5611aba30ecb59f894e76858c459f4dacc2516b69636affac022c7a90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a555e843a117a871f8f040224ac1f90772e90895c54e389cd03e87729a6720fa",
            "container_config": {
                "Hostname": "a555e843a117",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:232104b5611aba30ecb59f894e76858c459f4dacc2516b69636affac022c7a90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-09T23:59:33.284058254Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:58:42.401065681Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:26fba5cd6ba1fe45f19fb80d1c8e54eac5189e2b93e521b2ba6d5a6b54175e81 in / "
                },
                {
                    "created": "2019-12-28T04:58:45.087367866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:43:14.306636446Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T06:43:30.867219598Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T06:44:14.608350699Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:40:56.973713424Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-09T23:59:05.338734802Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:59:27.559461303Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a1bc06deb070155c4f67c579f896a45eeda5a8fa54f35ba233304074c4abbbbd' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='37a1a83e363dcf146a67fa839d170fd1afb13009585fdd493d0a3370fbe6f785' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0a18125c4ed80f9c3045cf92384670907c4796b43ed63c4307210fe93e5bbca5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='27feb013106da784f09e560720aa41ab395c67f7eed4c4a0fce04bc6e3d01c7d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='26a977a8af5dc50a562f0a57b58dded5fa3bacfe77722cf8a84ea54ca54728dd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5cd9900a1fa0f0cac657930b648381cad9b8c5e2bbc77caf86a6fb5cedad0017' ;; \t\t*) goRelArch='src'; goRelSha256='aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-09T23:59:30.120470313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:59:30.803821063Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:59:32.656200258Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-09T23:59:33.284058254Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eee5b7f6e28aff3944f870f1cea1fbdf0c794b2fa9c84ddf6ddc009b9de3ac0b",
                    "sha256:46c22901cd9f12d91feac019823678c89e0fff06e53b23a4a4870ee89028ddcc",
                    "sha256:b4462ea7378389e9c5bb7f0c5ebca1fd2e7d7bd27cd47a1ae39a803de6a8d0da",
                    "sha256:4d3420dd001fcd981445244854d348f217b83e218c96bcaac414b1e6c6d15917",
                    "sha256:ab92d88bee9d2af59a44c102b2183c67d4dbc8c6dbfa72f475b8c5ff69ccebeb",
                    "sha256:943e3165d28d3a93ee2903168c9bb4b771b669f2d8f8644424f836d83c024f00",
                    "sha256:235a9f50186a913166624e880a672b24198ac25a33d8cf87c42f657981b52194"
                ]
            }
        },
        "1.13.6-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8674ea39dcf190d5210fd512998980930b1ea3c79c1eb0cd11cbc4e2bb05cbee",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7729bfd9cc00598d82f5c0214719face68aea63acdf4a3d3c1ba12619693fd9e",
            "container_config": {
                "Hostname": "7729bfd9cc00",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8674ea39dcf190d5210fd512998980930b1ea3c79c1eb0cd11cbc4e2bb05cbee",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-10T00:00:10.708835711Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T05:03:19.284699458Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5692a55e4805d33baa21e559cc0bb86fb91422171345ddd332fa5514285a3401 in / "
                },
                {
                    "created": "2019-12-28T05:03:25.100956471Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T06:59:48.86972173Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T07:00:00.714206652Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T07:00:53.270742682Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-29T03:43:18.013956801Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-09T23:59:41.3073612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:00:04.744011076Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a1bc06deb070155c4f67c579f896a45eeda5a8fa54f35ba233304074c4abbbbd' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='37a1a83e363dcf146a67fa839d170fd1afb13009585fdd493d0a3370fbe6f785' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0a18125c4ed80f9c3045cf92384670907c4796b43ed63c4307210fe93e5bbca5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='27feb013106da784f09e560720aa41ab395c67f7eed4c4a0fce04bc6e3d01c7d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='26a977a8af5dc50a562f0a57b58dded5fa3bacfe77722cf8a84ea54ca54728dd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5cd9900a1fa0f0cac657930b648381cad9b8c5e2bbc77caf86a6fb5cedad0017' ;; \t\t*) goRelArch='src'; goRelSha256='aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-10T00:00:06.707129377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:00:07.476781933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-10T00:00:09.987483674Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-10T00:00:10.708835711Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ec2c013414a254c5c8516dd1c17a5740cd4c9aae192408786547b1d567759e8f",
                    "sha256:f17e98e6d0db6f91a36440aff5091fa6e59a442b3b77225360a689662e89467e",
                    "sha256:7fbe953f69462dc01fdd98a1949926c76fc35effbe024f18b1bc5f483c70ce32",
                    "sha256:d9047b4143f5e19b257ccdc81d32ae6b541a5df85373b8233450456b071a9614",
                    "sha256:761e616b9906d54c43567f3fc19dd9a041bcb5dd7120820a0a11077d0f0ff1f0",
                    "sha256:854a76c7ae03ff3ff3775329b4cb25834e61e22bd89cba238214b94a61b84526",
                    "sha256:11c69e167579ba99f0a94ab53c9c78a76d691372fb26aaab61d522addae0709e"
                ]
            }
        },
        "1.13.7-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:391770184c9ac3f1d4bfc7fbfea068781c0e9eaf1116eb6116e577fa0841c588",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c763fe24ef9fac119ce5087965ab05ec6065db1d57e83e54fb3c52b5d42a297",
            "container_config": {
                "Hostname": "8c763fe24ef9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:391770184c9ac3f1d4bfc7fbfea068781c0e9eaf1116eb6116e577fa0841c588",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T22:01:56.562265198Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:59:13.890777415Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:01:47.354167952Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T22:01:52.914928261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:01:53.41766018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:01:55.890632106Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T22:01:56.562265198Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:70d43a9944d903884d20b23edd5ea5e698d22d90087c26dbc0d0d488af5ccd26",
                    "sha256:78630e2be84ae757641fed1f9abdd143c35e46b304d1b245710bfbf9f1e04143"
                ]
            }
        },
        "1.13.7-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f623437f76a704bbc5d0109cd40116bdf06710a8168be0d58bb05cc523e5e6b5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "716756cafb14ec7793b25a8c3d0061e796ac087aaa87f483374061bca9654c71",
            "container_config": {
                "Hostname": "716756cafb14",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f623437f76a704bbc5d0109cd40116bdf06710a8168be0d58bb05cc523e5e6b5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T22:04:44.474889177Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T22:02:17.725678917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:04:38.500153839Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T22:04:41.263752771Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:04:41.894111191Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:04:43.842660908Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T22:04:44.474889177Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:1e9237d8af58e36c0c2ccd4f051f57d46985c0b70938471f805a108c844afccb",
                    "sha256:ec5230c2de5b8364fcafc8376b913108a3133e3ddb5c108c7bf1d7ac7dbd2211"
                ]
            }
        },
        "1.13.7-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:391770184c9ac3f1d4bfc7fbfea068781c0e9eaf1116eb6116e577fa0841c588",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c763fe24ef9fac119ce5087965ab05ec6065db1d57e83e54fb3c52b5d42a297",
            "container_config": {
                "Hostname": "8c763fe24ef9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:391770184c9ac3f1d4bfc7fbfea068781c0e9eaf1116eb6116e577fa0841c588",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T22:01:56.562265198Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:59:13.890777415Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:01:47.354167952Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T22:01:52.914928261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:01:53.41766018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T22:01:55.890632106Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T22:01:56.562265198Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:70d43a9944d903884d20b23edd5ea5e698d22d90087c26dbc0d0d488af5ccd26",
                    "sha256:78630e2be84ae757641fed1f9abdd143c35e46b304d1b245710bfbf9f1e04143"
                ]
            }
        },
        "1.13.7-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a52c97b9622d28199f4362b4acdba307176bed68a93fb46c9f328d75c96edada",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7d4814f4e63efd7305b24e9da1abb5bf4f53d4599e2a0b205c0cc3c9849ccd46",
            "container_config": {
                "Hostname": "7d4814f4e63e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a52c97b9622d28199f4362b4acdba307176bed68a93fb46c9f328d75c96edada",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T14:32:43.828667276Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:00:06.417453205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a57a312731f174c4b03031908ff95f49d7055d8c196439f0ed07ed9c4834d993 in / "
                },
                {
                    "created": "2020-02-01T17:00:08.178400051Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:08.819492837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:24.122069875Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:01:04.229273367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:30:56.418836912Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:32:15.746107501Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:32:38.322315412Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3dd4bd781a0271b33168e627f7f43886b4c5d1c794a4015abf34e99c6526ca3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ff8b870222d82c38a0108810706811dcbd1fcdbddc877789184a0f903cbdf11a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8717de6c662ada01b7bf318f5025c046b57f8c10cd39a88268bdc171cc7e4eab' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='93e82683f32d9fe7fda9b686415aeee599a92c4e450b69519bb53e1d62144a85' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fe0aeb41e87fd901845c9598f17f1aae90dca25d2d2744e9664c173fbf7f784' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d405e515029d19131bae2820310681c31b665178998335ecc4494e8de01dfeb' ;; \t\t*) goRelArch='src'; goRelSha256='e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T14:32:40.057810326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:32:40.669888292Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:32:42.735719961Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T14:32:43.828667276Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:46e7cfd0c0f3284f02b2135e1918547bf991c36d75e54e40fe9db34cab65c290",
                    "sha256:27ed451d5d653095e610ab9f87626a6fa5fe21f2306f133aba07d5fff2d5eea0",
                    "sha256:fcfd58af280ca13e4e7cbe28921a46524be5346a4493b805ad1aacb9415e5580",
                    "sha256:70a91d1a8c327a6ab23a26e61b554eba49e3c99cdd34813056717afb62c20aba",
                    "sha256:871721b76996f935774c1fc4ec711463fe4d75bc24e643acbcb6599a06f5f76e",
                    "sha256:b565dc50e84d4bccb19bb6deb7c5570f7118f9e1e19ecc989c2866c7040b39d1",
                    "sha256:2aa69c650bb64dddf4ecc0c706ddd73de886be264f5d1b7ba06c7fb2937c3d52"
                ]
            }
        },
        "1.13.7-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25de3a3f58939f5578092a7d2b5063b8ca2dc4dff5d1ae7d2e6240d3b20c58ef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "39583e4d418d5ec07e2a31e39a2ce1e67da1fb0f2df7ca9729fb8717b33c4303",
            "container_config": {
                "Hostname": "39583e4d418d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:25de3a3f58939f5578092a7d2b5063b8ca2dc4dff5d1ae7d2e6240d3b20c58ef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T14:33:35.433419425Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:04:08.434471765Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7fc54d004d962f2cfb469a1aaa9e689e46dfa2554e0cf44c33981d688adc31b in / "
                },
                {
                    "created": "2020-02-01T17:04:09.985480911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:18:17.210178472Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:18:29.74152444Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:19:26.254828182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:33:10.603594656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:33:11.465530895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:33:30.967893249Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3dd4bd781a0271b33168e627f7f43886b4c5d1c794a4015abf34e99c6526ca3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ff8b870222d82c38a0108810706811dcbd1fcdbddc877789184a0f903cbdf11a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8717de6c662ada01b7bf318f5025c046b57f8c10cd39a88268bdc171cc7e4eab' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='93e82683f32d9fe7fda9b686415aeee599a92c4e450b69519bb53e1d62144a85' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fe0aeb41e87fd901845c9598f17f1aae90dca25d2d2744e9664c173fbf7f784' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d405e515029d19131bae2820310681c31b665178998335ecc4494e8de01dfeb' ;; \t\t*) goRelArch='src'; goRelSha256='e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T14:33:32.538328598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:33:33.055202548Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:33:34.835600409Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T14:33:35.433419425Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7025fd153916d67aed12af624ffb223bea6bd8ad0837cd220648bb6fafb0c15",
                    "sha256:d8dccd79f6a8f10c1636cbd82d919eed8c95166d302f48b992af102693a2e0a2",
                    "sha256:48d889636708d63da0061ef1e64042d7e6cfbf430b274af2a6637e4fca94a8ab",
                    "sha256:d335f8e4986334af3faba57d57b78f72d53e70c36ff5f6e3a6482611bd13a490",
                    "sha256:1f8a54d1f09d462613b546c4a599f7a2fce5db959952a252413c5f28f23760a3",
                    "sha256:184841a7549658c3d62af5bd5b9180e21d11caf200bf10f15973e38acac22d96",
                    "sha256:1716b483464cddc5c5fa7ab019252950e8513c52b1317c959e47d4c0637ff6ee"
                ]
            }
        },
        "1.13.8-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:53cc22ab1d7d3edb8297a48095a34a0b3743e29ff24396e64d3b9800fae51e42",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1eea1fd9a165534471252147cc140521286eebbf1a15b3bd31b0ea310e81c79d",
            "container_config": {
                "Hostname": "1eea1fd9a165",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:53cc22ab1d7d3edb8297a48095a34a0b3743e29ff24396e64d3b9800fae51e42",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:13:14.840963128Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:10:49.948060806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:13:08.003199364Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:13:12.018220599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:13:12.521513081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:13:14.127729656Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:13:14.840963128Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:2b04895ddcb6d21b831e4d0378744462443eb0d236f6899f10c2fc247698ab21",
                    "sha256:6d46abf24e51528d01e08e671da349fdf277f1ec4e7755f842ffdd126537f295"
                ]
            }
        },
        "1.13.8-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1724af2f8c6bfe7f5b9771825118557df091e02c5c2a5dca56774e1f10ce37c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7e574e68ebe00f885d3103fa8eb85e3ce88f51b7c8bdf2e063e0900e069b5df6",
            "container_config": {
                "Hostname": "7e574e68ebe0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1724af2f8c6bfe7f5b9771825118557df091e02c5c2a5dca56774e1f10ce37c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:15:46.969522907Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:13:22.227221112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:15:39.783643724Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:15:43.861394298Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:15:44.480081948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:15:46.339654777Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:15:46.969522907Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:af129d96ba87438590f0c3b252c5585aced1975f0800946887fc3a5303051721",
                    "sha256:0e18b85db3a62e12294c354f81e8644baa1bac293476ca7779f6af7a79ae1c05"
                ]
            }
        },
        "1.13.8-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:53cc22ab1d7d3edb8297a48095a34a0b3743e29ff24396e64d3b9800fae51e42",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1eea1fd9a165534471252147cc140521286eebbf1a15b3bd31b0ea310e81c79d",
            "container_config": {
                "Hostname": "1eea1fd9a165",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:53cc22ab1d7d3edb8297a48095a34a0b3743e29ff24396e64d3b9800fae51e42",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:13:14.840963128Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:10:49.948060806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:13:08.003199364Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:13:12.018220599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:13:12.521513081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:13:14.127729656Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:13:14.840963128Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:2b04895ddcb6d21b831e4d0378744462443eb0d236f6899f10c2fc247698ab21",
                    "sha256:6d46abf24e51528d01e08e671da349fdf277f1ec4e7755f842ffdd126537f295"
                ]
            }
        },
        "1.13.8-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:16f09d4938c7d1374f2e39561a1c3a629a75b1a3d3cd8a1ded3bf2c29dabf8ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "72d6f157d43f38a3be87e9d0adb7161cc75f6f34991c1c6c9fe0fdd0e5f899cc",
            "container_config": {
                "Hostname": "72d6f157d43f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:16f09d4938c7d1374f2e39561a1c3a629a75b1a3d3cd8a1ded3bf2c29dabf8ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T18:43:52.484939341Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:50:58.58268675Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38fdfcc3155e437ce162aa0ed9dcdc5893b8145e2f3ede2858ed2187d79bf718 in / "
                },
                {
                    "created": "2020-02-26T00:51:08.173627097Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T02:11:43.30708847Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T02:11:56.140059628Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T02:12:38.722806551Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T18:36:07.117693841Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T18:43:26.196059336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:46.145753447Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0567734d558aef19112f2b2873caa0c600f1b4a5827930eb5a7f35235219e9d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='75f590d8e048a97cbf8b09837b15b3e6b44e1374718a96a5c3a994843ef44a4d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b46c0235054d0eb69a295a2634aec8a11c7ae19b3dc53556a626b89dc1f8cdb0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2305c1c46b3eaf574c7b03cfa6b167c199a2b52da85872317438c90074fdb46e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4c987b3969d33a93880a218064d2330d7f55c9b58698e78db6b56012058e91a9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='994f961df0d7bdbfa6f7eed604539acf9159444dabdff3ce8e938d095d85f756' ;; \t\t*) goRelArch='src'; goRelSha256='b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T18:43:48.438000241Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:49.327704877Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:51.622732025Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T18:43:52.484939341Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45719d601b1cf23f2a4d16de1999f66c3962185273cfc84384fbc1cd6833c174",
                    "sha256:cccbad7971c69f547da11c235a3cd3b64a5c008f1a8505c7b85fe1e4b2f9166d",
                    "sha256:aa2c6445cae5c178586062aa68c02af054b51d2e97c5dd2896709d7bf1ef360a",
                    "sha256:f43b13993cf77a3ae8ec235c6be6091a9294b7c449ae09f265c4dd6428d7c8b6",
                    "sha256:6232a58d2d470cf35233e90f894459035c983fc3938860a9e47662bcbae7583f",
                    "sha256:2dcebcaa7e2a3761150891e0cb32318f031de0ec2f5a52d5e6528d88d9f01f3a",
                    "sha256:5c202ed8b8584085853938e98ac6c9f5b0e8586d6f640f0801fa664a04b0ddb8"
                ]
            }
        },
        "1.13.8-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2958dbd8f802962eb6d94633a3ca33d4a5f12f0236ef0a7cdf3c488420cbddf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0ada5c63dce71c288d9df4d9e86047e9f2156bed7c54d300e545792ae9bd69ed",
            "container_config": {
                "Hostname": "0ada5c63dce7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2958dbd8f802962eb6d94633a3ca33d4a5f12f0236ef0a7cdf3c488420cbddf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T18:44:25.627339117Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:59:40.507641061Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6497e2f777f4487d9221931005a8b4b81c021442a769b581e223cf30c81ff553 in / "
                },
                {
                    "created": "2020-02-26T00:59:53.017070652Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T02:27:04.338840938Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T02:27:16.447857829Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T02:28:08.935993748Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T18:37:03.548758867Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T18:44:00.278240936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:44:21.29354148Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0567734d558aef19112f2b2873caa0c600f1b4a5827930eb5a7f35235219e9d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='75f590d8e048a97cbf8b09837b15b3e6b44e1374718a96a5c3a994843ef44a4d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b46c0235054d0eb69a295a2634aec8a11c7ae19b3dc53556a626b89dc1f8cdb0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2305c1c46b3eaf574c7b03cfa6b167c199a2b52da85872317438c90074fdb46e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4c987b3969d33a93880a218064d2330d7f55c9b58698e78db6b56012058e91a9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='994f961df0d7bdbfa6f7eed604539acf9159444dabdff3ce8e938d095d85f756' ;; \t\t*) goRelArch='src'; goRelSha256='b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T18:44:22.749364989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:44:23.344694551Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:44:25.025954624Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T18:44:25.627339117Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ed7271ed31178209383fc281672d51ddf301e8c9b67b8621c84f8a6ce0388a2",
                    "sha256:4a6fae0401ecd5f018e47c763963a58b40f96f975af32334f095cd00f33b743a",
                    "sha256:7b8afefa681b8c59adcac2b9bc5574bbac8cd073054af5d209007c4ffb4ca961",
                    "sha256:b3dfb6729fb6f99e31d5fbd5bd06471bc4a0c683b8a8787d6bcbd7762f69b17c",
                    "sha256:fc27f4c37e75ad30d3727cb4922c95d5b05b2d057d548e8df09861e2bd8ea702",
                    "sha256:2c1c639a8ad2a16d30001eff736f016332fb1fea5aa57f110e9186952ca82fab",
                    "sha256:b35da30d2600f49b0ecff180153227ea8ac287f2385b032816c4a8282c229d11"
                ]
            }
        },
        "1.13.9-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4685efa93d1b06525b182255da4fff020e76eda9136a97d58bf07670ae56dd53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4176e3c752407e43c3c79333dae208de94466f60abeb6904041347e8cd29706c",
            "container_config": {
                "Hostname": "4176e3c75240",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4685efa93d1b06525b182255da4fff020e76eda9136a97d58bf07670ae56dd53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:52:47.773981812Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:57:55.543162645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3bde6b6fd06efbf24e66446c6d32f72294fc749ae9ee6191776242e92b2f8ab4 in / "
                },
                {
                    "created": "2020-03-23T21:57:56.462969555Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:47:15.215768773Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T23:47:17.410192728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:50:22.31870981Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:52:36.632301235Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:52:40.773505739Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:52:41.881844032Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:52:46.290845554Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:52:47.773981812Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cadbe4638b1a083ca625c1585b225acc8f5354b235930b820fd3c1f0768b6e3e",
                    "sha256:3c8882d11649b36e1d91baeb5ee6a40f66fcdb16ec3e329e9bc504cd2f46f3cc",
                    "sha256:e97f27b6752f65411c9777e1a2cd7f4603df3298906a60418dc045a3dde9bf68",
                    "sha256:38a68ae9a6b044e91858680a5c91d36a67079d0311ae2ccf5c4d3ea1701906d2",
                    "sha256:27b25a8a9613a31e2477ac72b25c42e654e2380a8e0170295ea007dc68e3410e"
                ]
            }
        },
        "1.13.9-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f49e7a579626b1652aec918cab3ba9bb1c94e21242e3887acf876429de1049de",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "020da173dbdcafe48b976cd696ed0f538287f89940033f2c9e7afd52d48cd74e",
            "container_config": {
                "Hostname": "020da173dbdc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f49e7a579626b1652aec918cab3ba9bb1c94e21242e3887acf876429de1049de",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-20T03:09:33.335584218Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:31.330876068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05c9f9143d11d12045d4faef882e5985e6b38fabe52237dd8d8c0627a9620ab in / "
                },
                {
                    "created": "2020-01-23T16:53:32.727020319Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T17:26:26.384823851Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T17:26:28.315096187Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-20T02:50:16.281299902Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T03:09:22.599188057Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-20T03:09:28.136703915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T03:09:29.03335581Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-20T03:09:32.058256252Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-20T03:09:33.335584218Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6a4e2cc29605ebe999068e75d49b94ef2ad4b9564426fe4b316259dd31fcd76",
                    "sha256:f40b6f13b14496ce384969415b24d9eedb88e3ec0242e3b3e08a7bccecdf6d54",
                    "sha256:2dd7ff73b36ce2e823f82f732e2ff158701636c803f13176722182ac2b7ab9e5",
                    "sha256:08a413c20b66089ec165c1bb50c84d33f52c074ad4e2a01235b749a44958b571",
                    "sha256:46295502b1c868effc08441a7eb3b59518f1ec7c00060c20758be5266a83e5e0"
                ]
            }
        },
        "1.13.9-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4685efa93d1b06525b182255da4fff020e76eda9136a97d58bf07670ae56dd53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4176e3c752407e43c3c79333dae208de94466f60abeb6904041347e8cd29706c",
            "container_config": {
                "Hostname": "4176e3c75240",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4685efa93d1b06525b182255da4fff020e76eda9136a97d58bf07670ae56dd53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:52:47.773981812Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:57:55.543162645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3bde6b6fd06efbf24e66446c6d32f72294fc749ae9ee6191776242e92b2f8ab4 in / "
                },
                {
                    "created": "2020-03-23T21:57:56.462969555Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:47:15.215768773Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T23:47:17.410192728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:50:22.31870981Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:52:36.632301235Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:52:40.773505739Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:52:41.881844032Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:52:46.290845554Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:52:47.773981812Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cadbe4638b1a083ca625c1585b225acc8f5354b235930b820fd3c1f0768b6e3e",
                    "sha256:3c8882d11649b36e1d91baeb5ee6a40f66fcdb16ec3e329e9bc504cd2f46f3cc",
                    "sha256:e97f27b6752f65411c9777e1a2cd7f4603df3298906a60418dc045a3dde9bf68",
                    "sha256:38a68ae9a6b044e91858680a5c91d36a67079d0311ae2ccf5c4d3ea1701906d2",
                    "sha256:27b25a8a9613a31e2477ac72b25c42e654e2380a8e0170295ea007dc68e3410e"
                ]
            }
        },
        "1.13.9-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b80faef94fdb7ae041ccebec5e989c8874a8ec944596bfd0421d66017bf0cda3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "68cae78736f214af59b96d95c694a2c02b548e4b4007a2221b24e10e79fc38cb",
            "container_config": {
                "Hostname": "68cae78736f2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b80faef94fdb7ae041ccebec5e989c8874a8ec944596bfd0421d66017bf0cda3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-31T20:24:47.674449554Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T01:47:44.622064569Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:57841d22461f051368fcd3488aab2f2ce27ec7583af772026a228feeb5d00cd9 in / "
                },
                {
                    "created": "2020-03-31T01:47:47.625234059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T03:38:12.161646045Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T03:38:29.57666841Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T03:39:16.043919418Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T20:22:36.627844924Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T20:24:21.353861014Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:24:42.567108438Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f4ad8180dd0aaf7d7cda7e2b0a2bf27e84131320896d376549a7d849ecf237d7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a3c2941a1fde8692514ece7e2180a0e3ca70609f52756a66bc0ab68c63572361' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b53cb466d7986e5e17a3d4c196bc95df08a35968eced5efd7e128387a246c46e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a2744aa2ddc68d888e9f65c2cbe4c8b527b139688ce232ead90dc2961f8d51a8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='90beb01962202f332be0a7c8dad2db3d30242759ba863db3f36c45d241940efc' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a40949aaf55912b06df8fda511c33fde3e52d377706bdc095332652c1ad225e3' ;; \t\t*) goRelArch='src'; goRelSha256='34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-31T20:24:44.574335069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:24:45.209563852Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:24:47.012005486Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-31T20:24:47.674449554Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acd64cf80796fa745620ac4dc88adc43a042b9a5b929629d3279d2b34ebb4a48",
                    "sha256:f6f567328ccdddae9f11bc4b9556d6b3dd36d69ddcc07782aab006a38c148968",
                    "sha256:47e89e45e0a29be847aa9af2cc9bf1abe1a8dacc8d3d3947889518cc37d2722f",
                    "sha256:a63107b00266cdacee433a33418512b0f3489cc7256de5be60e7db970dc7b262",
                    "sha256:29b94d3146742e22020974d94856f74c80afff3ccdf8df7466bd22753f0a9a36",
                    "sha256:17fd64cbfbfbf42535b4d2ac3c11db5f02902e4355168a33d6c61e2ea1b1241f",
                    "sha256:80ee5a8d1318b82b6580b73e3d669985ef0c65a142d8a89767d45fcb59e1731e"
                ]
            }
        },
        "1.13.9-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bc796c12f5a0716b6baa0c5ac27961f48a7fd7f8c8fcd9446a7e2be7d28bb85",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6ba1b3cf4d3fbb48f4771499b77c7addce3a240f8c33580a41867b24b068845",
            "container_config": {
                "Hostname": "b6ba1b3cf4d3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bc796c12f5a0716b6baa0c5ac27961f48a7fd7f8c8fcd9446a7e2be7d28bb85",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-31T20:25:23.421749754Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T01:52:24.0546012Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b047b0c4dbfbcc048385195e807283b9386c4aac13a4841112cb3f76cd932b06 in / "
                },
                {
                    "created": "2020-03-31T01:52:26.390941353Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T03:53:04.387507398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T03:53:18.17912287Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T03:53:59.706602429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T20:23:38.580870136Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T20:24:55.709526011Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:25:17.106501371Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f4ad8180dd0aaf7d7cda7e2b0a2bf27e84131320896d376549a7d849ecf237d7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a3c2941a1fde8692514ece7e2180a0e3ca70609f52756a66bc0ab68c63572361' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b53cb466d7986e5e17a3d4c196bc95df08a35968eced5efd7e128387a246c46e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a2744aa2ddc68d888e9f65c2cbe4c8b527b139688ce232ead90dc2961f8d51a8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='90beb01962202f332be0a7c8dad2db3d30242759ba863db3f36c45d241940efc' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a40949aaf55912b06df8fda511c33fde3e52d377706bdc095332652c1ad225e3' ;; \t\t*) goRelArch='src'; goRelSha256='34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-31T20:25:20.308021538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:25:21.018648524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:25:22.797942473Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-31T20:25:23.421749754Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0d8d8dd7be72ae44f9e4be3f366e4c2e686ac12b3b37acb70595885b0b4053ad",
                    "sha256:c747df50635a23ebe2d46eb9d90aef219504c2746a7c1a374fa78403049770e9",
                    "sha256:11db9c5c9f60aa0df39b1fa2f6bd18404a2ef824d7ce8dc14984d9f2ff6d8a76",
                    "sha256:0a240661d017018f0ac1feb6941e9332b64680de2c18a3568b5f932cf342c177",
                    "sha256:98c734a5e135916ef01856eb97818f35c7787ca8acb2db0fa0ef956a04632b2c",
                    "sha256:1dfce3abc28a5845886045c415769adaefaddbef75f73f3395039f88410e9a08",
                    "sha256:8e1b4b40dcc6fb1577734e8e9fc6c528988827b1866041b0bfd44eeacd78c7fe"
                ]
            }
        },
        "1.13beta1-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e0c8a0fffa5b67ce479896fd45f6906e284141e2d2e911e188c6aba4e13054e3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b2d3b01d329a5f22587614fe4f928810d4687821a59fcbe49f56a773ce7eacf6",
            "container_config": {
                "Hostname": "b2d3b01d329a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e0c8a0fffa5b67ce479896fd45f6906e284141e2d2e911e188c6aba4e13054e3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:14:58.924885281Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:10:40.23373616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:14:54.972318659Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:14:56.680944903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:14:57.036841108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:14:58.501684519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:14:58.924885281Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:5df7e96d7787e915366c6feae78c7224ef6221ecbcddd7f1506d5469997a6270",
                    "sha256:165b54954e9ea3ceb142f8caf56dcbe4a5044bfe06fee8ad6f0cbbbc4cfa06d3"
                ]
            }
        },
        "1.13beta1-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e0c8a0fffa5b67ce479896fd45f6906e284141e2d2e911e188c6aba4e13054e3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b2d3b01d329a5f22587614fe4f928810d4687821a59fcbe49f56a773ce7eacf6",
            "container_config": {
                "Hostname": "b2d3b01d329a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e0c8a0fffa5b67ce479896fd45f6906e284141e2d2e911e188c6aba4e13054e3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:14:58.924885281Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:10:40.23373616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:14:54.972318659Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:14:56.680944903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:14:57.036841108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:14:58.501684519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:14:58.924885281Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:5df7e96d7787e915366c6feae78c7224ef6221ecbcddd7f1506d5469997a6270",
                    "sha256:165b54954e9ea3ceb142f8caf56dcbe4a5044bfe06fee8ad6f0cbbbc4cfa06d3"
                ]
            }
        },
        "1.13beta1-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ae78ea10b1e8fe55cc1489217e587a49e0cd1bd6c1225847109061edc7149d64",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "39ee7422f8f8ab6a320ed063b381951fc2f89bd39d21343e7795d0151cbcb66a",
            "container_config": {
                "Hostname": "39ee7422f8f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ae78ea10b1e8fe55cc1489217e587a49e0cd1bd6c1225847109061edc7149d64",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T15:58:23.388818452Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:59:44.029442993Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9c8bae31876c4f1a65b716e728f9b7e1573ec698b6fe8daaeb5f3dc080bb131 in / "
                },
                {
                    "created": "2019-08-14T00:59:45.225380675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:07:03.984167697Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:07:14.698888205Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:07:49.504945911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:01.52711595Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:02.504530015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:58:19.549788457Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='dbd131c92f381a5bc5ca1f0cfd942cb8be7d537007b6f412b5be41ff38a7d0d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='77993f1dce5b4d080cbd06a4553e5e1c6caa7ad6817ea3c62254b89d6f079504' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='298a325d8eeba561a26312a9cdc821a96873c10fca7f48a7f98bbd8848bd8bd4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='38039e4f7b6eea8f55e91d90607150d5d397f9063c06445c45009dd1e6dba8cc' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='0f3c5c7b7956911ed8d1fc4e9dbeb2584d0be695c5c15b528422e3bb2d5989f0' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='877065ac7d1729e5de1bbfe1e712788bf9dee5613a5502cf0ba76e65c2521b26' ;; \t\t*) goRelArch='src'; goRelSha256='e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T15:58:21.144255586Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:58:21.51830689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T15:58:22.961337221Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T15:58:23.388818452Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd55307db9b60c191231d44adbe5f4c2dda3c7cfedf51fed934dbcac33583bd",
                    "sha256:ffe59162282799874b7e5c25bfe9b30a8dd63abc8c5400b5aa75e10cd6021112",
                    "sha256:b03ae013300698b9326982514f3ed998d6f1974875945bddb1ca7c4b34f88586",
                    "sha256:ae9e1918717cae0fc72b7bc4763eed8cadd09354d0d635beea1f24942ff0fbfb",
                    "sha256:17e3e4434a9b309d3fef8d6bfd711562bc720973e7ba619d0463044326fa5b0b",
                    "sha256:d65f34fe512e79dd10c1112e286f1891c68f420848433627d41a0f4b78c502b7",
                    "sha256:f3e0e0c3dfe0bd5dd5c2e23502588b307efd83366706d5e2f50e8394e795ce47"
                ]
            }
        },
        "1.13rc1-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a293be92d7bd52cda0fed0d9b1406f5e1615a5d53cb6667c392518fa8cb07320",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "79da5b070ed55a3e43e79dc1d862f0fc42419bbde2794c80e986f54b7dc17357",
            "container_config": {
                "Hostname": "79da5b070ed5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a293be92d7bd52cda0fed0d9b1406f5e1615a5d53cb6667c392518fa8cb07320",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T23:01:35.673252958Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-21T22:59:00.189489673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T23:01:31.921929238Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T23:01:33.169481597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T23:01:33.658281966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T23:01:35.241496837Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T23:01:35.673252958Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:6bd05a7bb32267c1c7784308e37c479efb477c31c9b5cbad11fde2127d7b5214",
                    "sha256:e16b0b3d6af5452454fb4b137d9b41997ed05070408fb1c28b8e2ce9d9ea748c"
                ]
            }
        },
        "1.13rc1-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a293be92d7bd52cda0fed0d9b1406f5e1615a5d53cb6667c392518fa8cb07320",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "79da5b070ed55a3e43e79dc1d862f0fc42419bbde2794c80e986f54b7dc17357",
            "container_config": {
                "Hostname": "79da5b070ed5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a293be92d7bd52cda0fed0d9b1406f5e1615a5d53cb6667c392518fa8cb07320",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T23:01:35.673252958Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-21T22:59:00.189489673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T23:01:31.921929238Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T23:01:33.169481597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T23:01:33.658281966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T23:01:35.241496837Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T23:01:35.673252958Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:6bd05a7bb32267c1c7784308e37c479efb477c31c9b5cbad11fde2127d7b5214",
                    "sha256:e16b0b3d6af5452454fb4b137d9b41997ed05070408fb1c28b8e2ce9d9ea748c"
                ]
            }
        },
        "1.13rc1-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d68757594962cdce5df6f4e75c9780397d2b4945782ff314e38441c8c41c25cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ea23372b8474a004b0ee5b090b97fc0d73a70af9c9d497d363913dbb214d8edb",
            "container_config": {
                "Hostname": "ea23372b8474",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d68757594962cdce5df6f4e75c9780397d2b4945782ff314e38441c8c41c25cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T22:58:50.494156793Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:59:44.029442993Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9c8bae31876c4f1a65b716e728f9b7e1573ec698b6fe8daaeb5f3dc080bb131 in / "
                },
                {
                    "created": "2019-08-14T00:59:45.225380675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:07:03.984167697Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:07:14.698888205Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:07:49.504945911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:01.52711595Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-21T22:58:25.461398507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:58:46.319087702Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b45d086aefcfb9d0ebe7fc9ffbe470e45f9c104a6a97ea275512152cdbfead1' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d0118038c68276179523dfffba3ad49662842b8e4e37b5801d753c731241d745' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='be16145c9fa218340766b19edd175b109adab826155add2fd504430a751aaa19' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='98368195013a6140573835db93038a7977c61cabff53618a785659edb9378bb1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e351c396262b3c411459e08a2ff9bec9d720760bd8811fd1f59262d02f9f504f' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2fd64292498fb70074ff4560da4a7e444d3325c219a6987f4b2186d231244921' ;; \t\t*) goRelArch='src'; goRelSha256='dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T22:58:48.219547642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:58:48.637376578Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:58:50.04929493Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T22:58:50.494156793Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd55307db9b60c191231d44adbe5f4c2dda3c7cfedf51fed934dbcac33583bd",
                    "sha256:ffe59162282799874b7e5c25bfe9b30a8dd63abc8c5400b5aa75e10cd6021112",
                    "sha256:b03ae013300698b9326982514f3ed998d6f1974875945bddb1ca7c4b34f88586",
                    "sha256:ae9e1918717cae0fc72b7bc4763eed8cadd09354d0d635beea1f24942ff0fbfb",
                    "sha256:17e3e4434a9b309d3fef8d6bfd711562bc720973e7ba619d0463044326fa5b0b",
                    "sha256:4be0a82582530555f8d4f9b1a036132fc1df0a4cb0bc6a834162b18324e7cf42",
                    "sha256:6b2d13a6b33b7acc537a6d95d92cd31bdaa24608185acf1d9bf9e132dea3193d"
                ]
            }
        },
        "1.13rc2-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e12f7faac8fb0416de64314438501433d7febab405a9a8274d86e0a0745fb53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d73451a96e7a2831cf798e1ea00840c92df687283b3cfaae3b02c1c796b74860",
            "container_config": {
                "Hostname": "d73451a96e7a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e12f7faac8fb0416de64314438501433d7febab405a9a8274d86e0a0745fb53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:19:48.728772277Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:16:34.260645428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:44.898214827Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:19:46.91675099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:47.232596063Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:48.365152198Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:19:48.728772277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:1e9d2f5b7a5be80d5bd860c9d7110cea61a5c9fa29920662f41a5446d1d50656",
                    "sha256:c6747c07a50e4c33cfe601069345fa21d25136928b086ebb24738282d369561f"
                ]
            }
        },
        "1.13rc2-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e12f7faac8fb0416de64314438501433d7febab405a9a8274d86e0a0745fb53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d73451a96e7a2831cf798e1ea00840c92df687283b3cfaae3b02c1c796b74860",
            "container_config": {
                "Hostname": "d73451a96e7a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e12f7faac8fb0416de64314438501433d7febab405a9a8274d86e0a0745fb53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:19:48.728772277Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T19:57:31.991567923Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb8f939a5c1daf46111639106cd1ae6ee37e1cda1e10da42617adfcbd3f9b2cb in / "
                },
                {
                    "created": "2019-08-20T19:57:32.444992946Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:46:02.573306463Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:46:04.387148573Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:16:34.260645428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:44.898214827Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:19:46.91675099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:47.232596063Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:19:48.365152198Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:19:48.728772277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32a6ffe3b4ab74c2b053f36e00816d7f2cf97eff85ee31d62f1059eeab70da9a",
                    "sha256:49d4bf43536296fb871058cdd0d8a00ad80b165113ec6c642ab3aba1e954f0f9",
                    "sha256:e470baf310304f5c66f5a0786ba35deea845feb89010ed9f3599af8733afe9cf",
                    "sha256:1e9d2f5b7a5be80d5bd860c9d7110cea61a5c9fa29920662f41a5446d1d50656",
                    "sha256:c6747c07a50e4c33cfe601069345fa21d25136928b086ebb24738282d369561f"
                ]
            }
        },
        "1.13rc2-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7330436c6a85510c044f5fd2f9f74388dc90b93cdaed92e40d0040f8162dbe12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "05b9069c1ce18f1cf4abd8512390f6d8d2ec7e2ddf62bf55ae6caaecab1e929a",
            "container_config": {
                "Hostname": "05b9069c1ce1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7330436c6a85510c044f5fd2f9f74388dc90b93cdaed92e40d0040f8162dbe12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:16:26.596786625Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:59:44.029442993Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9c8bae31876c4f1a65b716e728f9b7e1573ec698b6fe8daaeb5f3dc080bb131 in / "
                },
                {
                    "created": "2019-08-14T00:59:45.225380675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:07:03.984167697Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:07:14.698888205Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:07:49.504945911Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T15:58:01.52711595Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-29T21:16:05.23279637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:16:22.860581596Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3cd4490021a5f1f25a7440edca03910e40a38e587b578cf52ab7143a81db1861' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='deebe2b723c818293046629344f09ead1610fba608aea038bcf25da70766f944' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='184c9fff6bba9da1cf23ba7f52561cc777ac7feaf73621b3824f4a30ffa4648d' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5f5d235b73672ee5d26917d3907f8f1966af60d4391477a5afd4300d070ca852' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7656da8bb13e450754d5df35c7d21dafb5847b00779dcc08f3c41eec7d817037' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6016103bab62f1fe6b8f90665888a23ae8c825a8e7db7a607877298148e593cf' ;; \t\t*) goRelArch='src'; goRelSha256='0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:16:24.729040732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:16:25.052792803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:16:26.233140385Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:16:26.596786625Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebd55307db9b60c191231d44adbe5f4c2dda3c7cfedf51fed934dbcac33583bd",
                    "sha256:ffe59162282799874b7e5c25bfe9b30a8dd63abc8c5400b5aa75e10cd6021112",
                    "sha256:b03ae013300698b9326982514f3ed998d6f1974875945bddb1ca7c4b34f88586",
                    "sha256:ae9e1918717cae0fc72b7bc4763eed8cadd09354d0d635beea1f24942ff0fbfb",
                    "sha256:17e3e4434a9b309d3fef8d6bfd711562bc720973e7ba619d0463044326fa5b0b",
                    "sha256:f26f013f40e67ff79ad35c120dafd22beb2af71bf44cdd8eb5867492004bafb9",
                    "sha256:def6711095f85df5fa3569199d0ac21c8521d5e96de10593dab84871f88dded9"
                ]
            }
        },
        "1.14-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:7d1a9faaefbd89ec5be4d8cea5ad7a1ae817e347ccea4861b20a98b8408035a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "254c03b73b002753c7d24527fcdf3755f8edb6ad7173a6ae95463d9c6dd3f4b7",
            "container_config": {
                "Hostname": "254c03b73b00",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7d1a9faaefbd89ec5be4d8cea5ad7a1ae817e347ccea4861b20a98b8408035a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:44:27.755578885Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:58:03.263157043Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98a89b90a8b442eed5301790dd2bd3a27391c5e4426126eed9d1cf44e70f8857 in / "
                },
                {
                    "created": "2021-01-28T23:58:04.19249348Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:40:32.200697251Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:40:34.598666866Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:40:35.350796312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:40:59.860944517Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:17.558042453Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:44:22.667707673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:23.707605372Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:26.692793171Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:44:27.755578885Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a015b81e4aacb46ff7618b5d344104ee58d26f5e950b3197bf493e22640bf092",
                    "sha256:5c103fe8d7cb0fc3bd3b55c15d22e07349ae7e149e51b12127db6ce9bdf203a5",
                    "sha256:6fd18d26a41e9ce371618cd929762e319ea2891987e367e17e1d2aeaa2badd44",
                    "sha256:09c6cecf868d317562a302e165fa0d782a7396e57d69165a424f23dd2adb59fe",
                    "sha256:c3ba2001727220021153dd3577698f0bd7d5a9a702af569b32b9d1bef245c4d2"
                ]
            }
        },
        "1.14-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:0bea06b82535079dc82c16c5d4df7437b2e998de8a1c966c35a093e3b0585366",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8f587dc218f407ee620a585cd0dd9c2cd67a645f83a1604099d251a96970923c",
            "container_config": {
                "Hostname": "8f587dc218f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0bea06b82535079dc82c16c5d4df7437b2e998de8a1c966c35a093e3b0585366",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:49:43.659871812Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:58:28.227313437Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6757438ec5b22931a1c6a274c9c1eca94f0715a405d2ba91bd8b95704ba969ca in / "
                },
                {
                    "created": "2020-12-16T23:58:29.610280694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:31:21.507209418Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:31:23.708874342Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:31:24.282622576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:47:10.763867706Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:49:36.19012217Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:49:40.208975976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:49:40.812404677Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:49:42.610038903Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:49:43.659871812Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123b380a5454fddab6acaa39aae24d6e014c8cd1769666fba4799961a143a445",
                    "sha256:aa28bfafb5dbc30e0f1d13786d8fc0c2d4aa19bd751046f9af18feae36853e8b",
                    "sha256:da7558bbbfca5cd86373b11ece6b706d7be906b0d86f418e66795c922472072b",
                    "sha256:f36c8271ad37dd3c6001d5b995a1a9a1d0e2ab59992b80dca9cd4852b1686984",
                    "sha256:be57fb8e61c8035134c1e8eaddd605c5db46471f1c928fedce7645e23e5adce9"
                ]
            }
        },
        "1.14-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:1caf6b0a4de3b1ab2428fde7916b5557a1159304e3df544ab087b5194e6a4833",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6ab5ee5a59e50b57b6a39c78a81f1c5c6405f14432fe891054d75c685640c185",
            "container_config": {
                "Hostname": "6ab5ee5a59e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1caf6b0a4de3b1ab2428fde7916b5557a1159304e3df544ab087b5194e6a4833",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:47:02.452206394Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:58:14.671390111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd07f77a2b2741ca6bda80d9203be9c7274cf73145bff778cf000db0d8d4e903 in / "
                },
                {
                    "created": "2020-12-16T23:58:15.972713651Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:25:33.553746856Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:25:37.823411087Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:25:38.880042126Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:35.84597944Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:46:54.24799464Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:46:58.60870939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:46:59.397435985Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:47:01.605021871Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:47:02.452206394Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:72bbe6b5204e7df9466d6597c4888cf950f0b379bf476a76925feabf17e94aa9",
                    "sha256:9fd922773d91aa676b776015430607b98bd6ed70b23c249f58a8107da7044493",
                    "sha256:5b53f63682e42e9ae4032a4066425b37019f87bb5dbee22312b5484222dd7e9f",
                    "sha256:27ca82007b8d89aeef09d8e36da5812b27b6ed67eb90b04f306b40b7c024f5f5",
                    "sha256:64ea7a2980181647fe624c004612943a85124af390b46ed1145a7ecd702a3b0e"
                ]
            }
        },
        "1.14-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:7d1a9faaefbd89ec5be4d8cea5ad7a1ae817e347ccea4861b20a98b8408035a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "254c03b73b002753c7d24527fcdf3755f8edb6ad7173a6ae95463d9c6dd3f4b7",
            "container_config": {
                "Hostname": "254c03b73b00",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7d1a9faaefbd89ec5be4d8cea5ad7a1ae817e347ccea4861b20a98b8408035a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:44:27.755578885Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:58:03.263157043Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98a89b90a8b442eed5301790dd2bd3a27391c5e4426126eed9d1cf44e70f8857 in / "
                },
                {
                    "created": "2021-01-28T23:58:04.19249348Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:40:32.200697251Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:40:34.598666866Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:40:35.350796312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:40:59.860944517Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:17.558042453Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:44:22.667707673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:23.707605372Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:26.692793171Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:44:27.755578885Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a015b81e4aacb46ff7618b5d344104ee58d26f5e950b3197bf493e22640bf092",
                    "sha256:5c103fe8d7cb0fc3bd3b55c15d22e07349ae7e149e51b12127db6ce9bdf203a5",
                    "sha256:6fd18d26a41e9ce371618cd929762e319ea2891987e367e17e1d2aeaa2badd44",
                    "sha256:09c6cecf868d317562a302e165fa0d782a7396e57d69165a424f23dd2adb59fe",
                    "sha256:c3ba2001727220021153dd3577698f0bd7d5a9a702af569b32b9d1bef245c4d2"
                ]
            }
        },
        "1.14-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d7c471cad7123135c6de2d0167c3fee979889e60f4c4a59b97e60e38c68bd855",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7aff7a518e1520d76d745cee4a1ac4c1de7b79e6ab516889536a313d9f40b65d",
            "container_config": {
                "Hostname": "7aff7a518e15",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d7c471cad7123135c6de2d0167c3fee979889e60f4c4a59b97e60e38c68bd855",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T19:43:31.251232724Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T03:00:29.807868315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:817a4ff41fcac0be44e95d3f0a51c9fa878d16dac7cdab68bfc445f630c43c22 in / "
                },
                {
                    "created": "2021-02-09T03:00:33.461043597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T04:25:53.411262318Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T04:26:05.34705974Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T04:26:44.355510104Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T19:41:17.881834851Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T19:41:19.852532414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:42:59.910218668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:43:24.942734357Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T19:43:27.84941387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:43:28.52025471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:43:30.424983889Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T19:43:31.251232724Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e875d96c6e0f67f89a84cd8d9ac07df28f9430a5af1f4a654659c9410c26c11",
                    "sha256:969b7ca2e690c7e108b51efe8c365ad41afe0490d1c90e9b9235ca86e8757e6d",
                    "sha256:5955349453e7d64b48490b5b264bc34220644ee13da3fbb118b82cf999c6eb98",
                    "sha256:ee1f2c9874aac24f4a15b1d67a5d9f9a825eb0b3e1f7fb669f774e13d9b1a180",
                    "sha256:a73f63fe58f2673436e3bd2c4dbc7d15ed0c4757a65313eb35d83244a096e9b1",
                    "sha256:042be7159fd17b37795272c16989e42d3afd55301d89c13d0dd9ce25b6046cac",
                    "sha256:acd08f37ff55608ce30f9b1cf585b88289a925be0e226160c7bbf21c17aa6ba6"
                ]
            }
        },
        "1.14-rc-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1f3071105ddd7e345bfc5b4e41d037bc6c8337e6a74f9c0da0d754bca90198e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c0e5518fbf96d4fb477bce9e0b5eafc60abed440eced85c9dc958e9144ad9baa",
            "container_config": {
                "Hostname": "c0e5518fbf96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1f3071105ddd7e345bfc5b4e41d037bc6c8337e6a74f9c0da0d754bca90198e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:28:12.905425522Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-06T01:24:03.938337266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:00.437633654Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:28:06.350884725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:07.902305377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:11.757210957Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:28:12.905425522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:d7288b7f6a23ad8f2a27a39f40b2a506df1296d957487fdb68eed1be728de0de",
                    "sha256:8383bba6c52c2086b8c8dba30c0ee095efe02c808968f245442d45aaf96200a9"
                ]
            }
        },
        "1.14-rc-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c364c133592109afc8c9a70b123236ebd09c319a6290af0193b8a225ebe7b583",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c22539121ea6734632534f69bb6c7ac94c9f3a10c2a152a38a9775d82b03229f",
            "container_config": {
                "Hostname": "c22539121ea6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c364c133592109afc8c9a70b123236ebd09c319a6290af0193b8a225ebe7b583",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-18T01:01:09.977140762Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-18T00:58:18.164209687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T01:00:53.9608374Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af952217fcb408180006f29e77f1c3b871192fba7f99abd5aa421cf2f0358fea *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-18T01:01:04.265017234Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T01:01:06.675151552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T01:01:09.001253007Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-18T01:01:09.977140762Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:f12dfa4eeee163d9200f47fbac79a13196a9d77f2f53769bfae8c8e6a313fb26",
                    "sha256:1b50c8fb7a870f9004e1b37210c4a7b0f08f62dfcd57d12bddb8fc5ec0def802"
                ]
            }
        },
        "1.14-rc-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1f3071105ddd7e345bfc5b4e41d037bc6c8337e6a74f9c0da0d754bca90198e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c0e5518fbf96d4fb477bce9e0b5eafc60abed440eced85c9dc958e9144ad9baa",
            "container_config": {
                "Hostname": "c0e5518fbf96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1f3071105ddd7e345bfc5b4e41d037bc6c8337e6a74f9c0da0d754bca90198e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:28:12.905425522Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-06T01:24:03.938337266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:00.437633654Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:28:06.350884725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:07.902305377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:11.757210957Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:28:12.905425522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:d7288b7f6a23ad8f2a27a39f40b2a506df1296d957487fdb68eed1be728de0de",
                    "sha256:8383bba6c52c2086b8c8dba30c0ee095efe02c808968f245442d45aaf96200a9"
                ]
            }
        },
        "1.14-rc-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4e6daae305b359297a1a194426ee358bb012d63ffc00c1a9038fe20c24dd4cb7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8185d7d4953ffabbdc179e3795215a5060b5069d0a9c364a5d96eb613622df92",
            "container_config": {
                "Hostname": "8185d7d4953f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4e6daae305b359297a1a194426ee358bb012d63ffc00c1a9038fe20c24dd4cb7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:23:54.755899969Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:00:06.417453205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a57a312731f174c4b03031908ff95f49d7055d8c196439f0ed07ed9c4834d993 in / "
                },
                {
                    "created": "2020-02-01T17:00:08.178400051Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:08.819492837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:24.122069875Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:01:04.229273367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:30:56.418836912Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-06T01:22:46.981918326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:23:44.39034359Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='69398d41e5f6b87cdf3969aae665be4dfd3cc2ef36a61ab47a261f96130ed788' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bfe041f7d2a62f895f2d11703a29bdd31a48cca9a3c36418d59680bc1cbb8a6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5509448b06f02f5198fe8bbf5af88ab483af9c46f231c3f308748016fbc32c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='831087aa0eba8b6dfa221036d00641613996ac66d7c635f1e34c53d5f0922623' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='fe1bf34d2b117d785f2fb33151c44ca8bc2188678c9e903fa0ad30573547b412' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2302fa0e30144a969cb1879eed8aeb9a82c2b520fcda8aebbb20a539ad427c25' ;; \t\t*) goRelArch='src'; goRelSha256='76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:23:48.072422611Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:23:49.224356434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:23:53.500369839Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:23:54.755899969Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:46e7cfd0c0f3284f02b2135e1918547bf991c36d75e54e40fe9db34cab65c290",
                    "sha256:27ed451d5d653095e610ab9f87626a6fa5fe21f2306f133aba07d5fff2d5eea0",
                    "sha256:fcfd58af280ca13e4e7cbe28921a46524be5346a4493b805ad1aacb9415e5580",
                    "sha256:70a91d1a8c327a6ab23a26e61b554eba49e3c99cdd34813056717afb62c20aba",
                    "sha256:871721b76996f935774c1fc4ec711463fe4d75bc24e643acbcb6599a06f5f76e",
                    "sha256:724158507b748658751cff44001b4509cca537871484f5a409de6df0e19a17fe",
                    "sha256:7624a89a008ccdaa35712bfbb03a4fe73e6ea955389808270279ba024f417e38"
                ]
            }
        },
        "1.14-rc-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6adf7743954584c77bd45f94937176655284e709d2d11eca92684b8fd9f26d8b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "caf664874fb9247e83374f98278769903513a8a6ff896e3b3728bd9e459db5ff",
            "container_config": {
                "Hostname": "caf664874fb9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6adf7743954584c77bd45f94937176655284e709d2d11eca92684b8fd9f26d8b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-11T00:13:59.869409713Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:04:08.434471765Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7fc54d004d962f2cfb469a1aaa9e689e46dfa2554e0cf44c33981d688adc31b in / "
                },
                {
                    "created": "2020-02-01T17:04:09.985480911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:18:17.210178472Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:18:29.74152444Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:19:26.254828182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:33:10.603594656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-11T00:13:34.48654929Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-11T00:13:54.730201809Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='69398d41e5f6b87cdf3969aae665be4dfd3cc2ef36a61ab47a261f96130ed788' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bfe041f7d2a62f895f2d11703a29bdd31a48cca9a3c36418d59680bc1cbb8a6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5509448b06f02f5198fe8bbf5af88ab483af9c46f231c3f308748016fbc32c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='831087aa0eba8b6dfa221036d00641613996ac66d7c635f1e34c53d5f0922623' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='fe1bf34d2b117d785f2fb33151c44ca8bc2188678c9e903fa0ad30573547b412' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2302fa0e30144a969cb1879eed8aeb9a82c2b520fcda8aebbb20a539ad427c25' ;; \t\t*) goRelArch='src'; goRelSha256='76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-11T00:13:56.84825053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-11T00:13:57.525899303Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-11T00:13:59.234590662Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-11T00:13:59.869409713Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7025fd153916d67aed12af624ffb223bea6bd8ad0837cd220648bb6fafb0c15",
                    "sha256:d8dccd79f6a8f10c1636cbd82d919eed8c95166d302f48b992af102693a2e0a2",
                    "sha256:48d889636708d63da0061ef1e64042d7e6cfbf430b274af2a6637e4fca94a8ab",
                    "sha256:d335f8e4986334af3faba57d57b78f72d53e70c36ff5f6e3a6482611bd13a490",
                    "sha256:1f8a54d1f09d462613b546c4a599f7a2fce5db959952a252413c5f28f23760a3",
                    "sha256:4f2e2214ab8ea37c075c2075998b2f2fef436de5a7cdee05f1c4ac156c18746d",
                    "sha256:c4c4109d773f9fc7fd584e5b0c22576f2513988a1f48b23b6f4b75e025f4524b"
                ]
            }
        },
        "1.14-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:71e87fc7478e4664f2b2386aa093b834d877ac358467e7c1701a89d73eeac1b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59d37de2e1cb77ae88fab7fd78d33061d138ca8a1d9e27a5c11f0541c8960bba",
            "container_config": {
                "Hostname": "59d37de2e1cb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:71e87fc7478e4664f2b2386aa093b834d877ac358467e7c1701a89d73eeac1b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T19:44:37.065200358Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T03:04:53.544734173Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f884b9fc23d1b8ad0bd21aa823afd0ee186bdebb6829ccba72f77caaeffd8d12 in / "
                },
                {
                    "created": "2021-02-09T03:04:55.33212389Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T04:32:28.93199466Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T04:32:39.005902544Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T04:33:19.066565538Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T19:44:03.687432788Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T19:44:05.505257113Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:44:06.160970121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:44:30.20141318Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T19:44:33.538094494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:44:34.152648989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:44:36.246883872Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T19:44:37.065200358Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ed066485a37e7e3c5bed6164c5d238f2199f2fd3f834e90ff4a6d6a39c865b7e",
                    "sha256:4614a32470a6c1737ce72ca271c911015fd49f2ac809a7594fcdc0beb56f43e8",
                    "sha256:69719eee70cfa2b96de6c488bab87bedc8a016b076cf1ab66a5e60428ced0001",
                    "sha256:d70775839f494a04e66247c65dbfbfcdd687f570d1dc5ab202dac1f4cdb01686",
                    "sha256:f9b2945534b8d6a32b58bbb7648caac8ca6553877eeef94316d1fa5c04e2caa9",
                    "sha256:70a72c6064709f70a36cd369145e02e7a27cbc20c2b380baacae0bf09bf70382",
                    "sha256:f0926715ba0232b328bae15594a6d42e25fc6e29643ea9369f6ca4a3a689549c"
                ]
            }
        },
        "1.14.0-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b98f222dafcee716f84f8e02aa1faeae2006d51c0cd660cbc24613c9d0b7ea5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56ce68c201fd3b5c1906f098d4d6e5fcbb7dc55fc5423b83d5d3949ed58e7e51",
            "container_config": {
                "Hostname": "56ce68c201fd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b98f222dafcee716f84f8e02aa1faeae2006d51c0cd660cbc24613c9d0b7ea5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T18:43:12.919792136Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-26T18:37:49.514498244Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:04.82428293Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T18:43:08.891949114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:09.795295239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:12.266001298Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T18:43:12.919792136Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:dda187be3ce2a74036e006e909be400a7f2839652fde365ab002ad9adb9dc8b7",
                    "sha256:43be00cf15bbc5194c25e3d95ce008cf7c5939df93c797591be93c1d505578f2"
                ]
            }
        },
        "1.14.0-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b98f222dafcee716f84f8e02aa1faeae2006d51c0cd660cbc24613c9d0b7ea5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56ce68c201fd3b5c1906f098d4d6e5fcbb7dc55fc5423b83d5d3949ed58e7e51",
            "container_config": {
                "Hostname": "56ce68c201fd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b98f222dafcee716f84f8e02aa1faeae2006d51c0cd660cbc24613c9d0b7ea5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T18:43:12.919792136Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-26T18:37:49.514498244Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:04.82428293Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T18:43:08.891949114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:09.795295239Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:43:12.266001298Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T18:43:12.919792136Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:dda187be3ce2a74036e006e909be400a7f2839652fde365ab002ad9adb9dc8b7",
                    "sha256:43be00cf15bbc5194c25e3d95ce008cf7c5939df93c797591be93c1d505578f2"
                ]
            }
        },
        "1.14.0-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8bc266fc361acb750b47170e2075d075f32a689475f0a5b53d915609f424d16a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "329e91a5f5b8fcff1ae3ec2e3e7c15f56cb3e646d3fbdd00e03d13cad2d5f294",
            "container_config": {
                "Hostname": "329e91a5f5b8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8bc266fc361acb750b47170e2075d075f32a689475f0a5b53d915609f424d16a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T18:36:34.685631796Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:50:58.58268675Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38fdfcc3155e437ce162aa0ed9dcdc5893b8145e2f3ede2858ed2187d79bf718 in / "
                },
                {
                    "created": "2020-02-26T00:51:08.173627097Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T02:11:43.30708847Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T02:11:56.140059628Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T02:12:38.722806551Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T18:36:07.117693841Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T18:36:08.60986257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:36:29.964514009Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='08df79b46b0adf498ea9f320a0f23d6ec59e9003660b4c9c1ce8e5e2c6f823ca' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b5e682176d7ad3944404619a39b585453a740a2f82683e789f4279ec285b7ecd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cd813387f770c07819912f8ff4b9796a4e317dee92548b7226a19e60ac79eb27' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cdcdab6c8d1f2dcea3bbec793352ef84db167a2eb6c60ff69e5cf94dca575f9a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b896b5eba616d27fd3bb8218de6bef557cb62221e42f73c84ae4b89cdb602dec' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='22e67470fe872c893face196f02323a11ffe89999260c136b9c50f06619e0243' ;; \t\t*) goRelArch='src'; goRelSha256='6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T18:36:31.408629094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:36:32.318914111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:36:34.065699112Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T18:36:34.685631796Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45719d601b1cf23f2a4d16de1999f66c3962185273cfc84384fbc1cd6833c174",
                    "sha256:cccbad7971c69f547da11c235a3cd3b64a5c008f1a8505c7b85fe1e4b2f9166d",
                    "sha256:aa2c6445cae5c178586062aa68c02af054b51d2e97c5dd2896709d7bf1ef360a",
                    "sha256:f43b13993cf77a3ae8ec235c6be6091a9294b7c449ae09f265c4dd6428d7c8b6",
                    "sha256:6232a58d2d470cf35233e90f894459035c983fc3938860a9e47662bcbae7583f",
                    "sha256:85f8c8dba206fe4ddd5f088b268bf0171c76a6e1e444d26cbeb1ac05348b57ec",
                    "sha256:88253ff027e531892d58305db96fceb260ea5e32bca4025fd5b745a8f0762a6c"
                ]
            }
        },
        "1.14.0-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1d6f3d19e1de06f9be4d1c029859c9efb8827321084bd0e7b1a5175515dfbbe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "14976530c19334c3c8a4fb6bbd1f1294b0a405d37fc973f894f583a9b019be40",
            "container_config": {
                "Hostname": "14976530c193",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1d6f3d19e1de06f9be4d1c029859c9efb8827321084bd0e7b1a5175515dfbbe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T18:37:37.290378931Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:59:40.507641061Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6497e2f777f4487d9221931005a8b4b81c021442a769b581e223cf30c81ff553 in / "
                },
                {
                    "created": "2020-02-26T00:59:53.017070652Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T02:27:04.338840938Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T02:27:16.447857829Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T02:28:08.935993748Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T18:37:03.548758867Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T18:37:04.671226361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:37:30.65486667Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='08df79b46b0adf498ea9f320a0f23d6ec59e9003660b4c9c1ce8e5e2c6f823ca' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b5e682176d7ad3944404619a39b585453a740a2f82683e789f4279ec285b7ecd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cd813387f770c07819912f8ff4b9796a4e317dee92548b7226a19e60ac79eb27' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cdcdab6c8d1f2dcea3bbec793352ef84db167a2eb6c60ff69e5cf94dca575f9a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b896b5eba616d27fd3bb8218de6bef557cb62221e42f73c84ae4b89cdb602dec' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='22e67470fe872c893face196f02323a11ffe89999260c136b9c50f06619e0243' ;; \t\t*) goRelArch='src'; goRelSha256='6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T18:37:32.410947238Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:37:33.614994566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:37:36.419085011Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T18:37:37.290378931Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8ed7271ed31178209383fc281672d51ddf301e8c9b67b8621c84f8a6ce0388a2",
                    "sha256:4a6fae0401ecd5f018e47c763963a58b40f96f975af32334f095cd00f33b743a",
                    "sha256:7b8afefa681b8c59adcac2b9bc5574bbac8cd073054af5d209007c4ffb4ca961",
                    "sha256:b3dfb6729fb6f99e31d5fbd5bd06471bc4a0c683b8a8787d6bcbd7762f69b17c",
                    "sha256:fc27f4c37e75ad30d3727cb4922c95d5b05b2d057d548e8df09861e2bd8ea702",
                    "sha256:45cecd6ffba5a77ba63d40ab224feee701c77143ef344d26d560e1fa919b8064",
                    "sha256:869f45c5a7e327293d8cd0ed18a316356c3c3ada5faf0cba3433f38249e676ac"
                ]
            }
        },
        "1.14.1-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f99bf39832077b0c42766218a438f528069e1f681ed8dee9c7bbb7f19d82356e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "812c1d36de2554748ee48b6ed9f024170cb3d8488e3726a157a3f17ecb298a43",
            "container_config": {
                "Hostname": "812c1d36de25",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f99bf39832077b0c42766218a438f528069e1f681ed8dee9c7bbb7f19d82356e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:49:55.177667666Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:57:55.543162645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3bde6b6fd06efbf24e66446c6d32f72294fc749ae9ee6191776242e92b2f8ab4 in / "
                },
                {
                    "created": "2020-03-23T21:57:56.462969555Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:47:15.215768773Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T23:47:17.410192728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:47:18.145409219Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:49:46.5201026Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:49:52.393240442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:49:52.923734935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:49:54.526020771Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:49:55.177667666Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cadbe4638b1a083ca625c1585b225acc8f5354b235930b820fd3c1f0768b6e3e",
                    "sha256:3c8882d11649b36e1d91baeb5ee6a40f66fcdb16ec3e329e9bc504cd2f46f3cc",
                    "sha256:e97f27b6752f65411c9777e1a2cd7f4603df3298906a60418dc045a3dde9bf68",
                    "sha256:d12f49ed88f40416a72b241195cb69d319a01b4dab50c22e18ac7ce8ac433598",
                    "sha256:e9751da1720c467e7149a723498153455ee0f7a919fc4cf90d700be651966f3e"
                ]
            }
        },
        "1.14.1-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f99bf39832077b0c42766218a438f528069e1f681ed8dee9c7bbb7f19d82356e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "812c1d36de2554748ee48b6ed9f024170cb3d8488e3726a157a3f17ecb298a43",
            "container_config": {
                "Hostname": "812c1d36de25",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f99bf39832077b0c42766218a438f528069e1f681ed8dee9c7bbb7f19d82356e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:49:55.177667666Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:57:55.543162645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3bde6b6fd06efbf24e66446c6d32f72294fc749ae9ee6191776242e92b2f8ab4 in / "
                },
                {
                    "created": "2020-03-23T21:57:56.462969555Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:47:15.215768773Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T23:47:17.410192728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:47:18.145409219Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:49:46.5201026Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:49:52.393240442Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:49:52.923734935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:49:54.526020771Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:49:55.177667666Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cadbe4638b1a083ca625c1585b225acc8f5354b235930b820fd3c1f0768b6e3e",
                    "sha256:3c8882d11649b36e1d91baeb5ee6a40f66fcdb16ec3e329e9bc504cd2f46f3cc",
                    "sha256:e97f27b6752f65411c9777e1a2cd7f4603df3298906a60418dc045a3dde9bf68",
                    "sha256:d12f49ed88f40416a72b241195cb69d319a01b4dab50c22e18ac7ce8ac433598",
                    "sha256:e9751da1720c467e7149a723498153455ee0f7a919fc4cf90d700be651966f3e"
                ]
            }
        },
        "1.14.1-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e9a5dd1b98bea4268824f07b24bc5a52a72e3c7a83a15d397ddcace60daa037",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "293c5a0c98415e9ba9326710d06898ff69ad40533f2c50ed5fd9a81dd841f916",
            "container_config": {
                "Hostname": "293c5a0c9841",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e9a5dd1b98bea4268824f07b24bc5a52a72e3c7a83a15d397ddcace60daa037",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-31T20:23:06.786261113Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T01:47:44.622064569Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:57841d22461f051368fcd3488aab2f2ce27ec7583af772026a228feeb5d00cd9 in / "
                },
                {
                    "created": "2020-03-31T01:47:47.625234059Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T03:38:12.161646045Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T03:38:29.57666841Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T03:39:16.043919418Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T20:22:36.627844924Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T20:22:38.425583416Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:23:00.036760934Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2f49eb17ce8b48c680cdb166ffd7389702c0dec6effa090c324804a5cac8a7f8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='04f10e345dae0d7c6c32ffd6356b47f2d4d0e8a0cb757f4ef48ead6c5bef206f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5d8f2c202f35481617e24e63cca30c6afb1ec2585006c4a6ecf16c5f4928ab3c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='92d465accdebbe2d0749b2f90c22ecb1fd2492435144923f88ce410cd56b6546' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6559201d452ee2782dfd684d59c05e3ecf789dc40a7ec0ad9ae2dd9f489c0fe1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='af009bd6e7729c441fec78af427743fefbf11f919c562e01b37836d835f74226' ;; \t\t*) goRelArch='src'; goRelSha256='2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-31T20:23:03.493846935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:23:04.158103793Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:23:06.057666929Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-31T20:23:06.786261113Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acd64cf80796fa745620ac4dc88adc43a042b9a5b929629d3279d2b34ebb4a48",
                    "sha256:f6f567328ccdddae9f11bc4b9556d6b3dd36d69ddcc07782aab006a38c148968",
                    "sha256:47e89e45e0a29be847aa9af2cc9bf1abe1a8dacc8d3d3947889518cc37d2722f",
                    "sha256:a63107b00266cdacee433a33418512b0f3489cc7256de5be60e7db970dc7b262",
                    "sha256:29b94d3146742e22020974d94856f74c80afff3ccdf8df7466bd22753f0a9a36",
                    "sha256:85e9b979a8c7ed81f754a0ee9bda0f6d8d69fff12420aac649d431e0719c179a",
                    "sha256:021931d043e3e17fd0dcc365f13399e0d2b81a4ca29b6fcfabbdef2267951c68"
                ]
            }
        },
        "1.14.1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c13a9ba39c6409c8317f8b3b966e686208b2f3af4a3a58fb2bca7cc946f211b1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "12b1486ed62db7b2983d4d9ff3da646dfa917abaf04094d0ddff0e4f24ae655c",
            "container_config": {
                "Hostname": "12b1486ed62d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c13a9ba39c6409c8317f8b3b966e686208b2f3af4a3a58fb2bca7cc946f211b1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-31T20:24:08.203714016Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T01:52:24.0546012Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b047b0c4dbfbcc048385195e807283b9386c4aac13a4841112cb3f76cd932b06 in / "
                },
                {
                    "created": "2020-03-31T01:52:26.390941353Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T03:53:04.387507398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T03:53:18.17912287Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T03:53:59.706602429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T20:23:38.580870136Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T20:23:40.242745539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:24:01.791393428Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2f49eb17ce8b48c680cdb166ffd7389702c0dec6effa090c324804a5cac8a7f8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='04f10e345dae0d7c6c32ffd6356b47f2d4d0e8a0cb757f4ef48ead6c5bef206f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5d8f2c202f35481617e24e63cca30c6afb1ec2585006c4a6ecf16c5f4928ab3c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='92d465accdebbe2d0749b2f90c22ecb1fd2492435144923f88ce410cd56b6546' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6559201d452ee2782dfd684d59c05e3ecf789dc40a7ec0ad9ae2dd9f489c0fe1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='af009bd6e7729c441fec78af427743fefbf11f919c562e01b37836d835f74226' ;; \t\t*) goRelArch='src'; goRelSha256='2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-31T20:24:05.032497389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:24:05.616728899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T20:24:07.453379177Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-31T20:24:08.203714016Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0d8d8dd7be72ae44f9e4be3f366e4c2e686ac12b3b37acb70595885b0b4053ad",
                    "sha256:c747df50635a23ebe2d46eb9d90aef219504c2746a7c1a374fa78403049770e9",
                    "sha256:11db9c5c9f60aa0df39b1fa2f6bd18404a2ef824d7ce8dc14984d9f2ff6d8a76",
                    "sha256:0a240661d017018f0ac1feb6941e9332b64680de2c18a3568b5f932cf342c177",
                    "sha256:98c734a5e135916ef01856eb97818f35c7787ca8acb2db0fa0ef956a04632b2c",
                    "sha256:45073122e8056c6494a55c1a9c31c5e0848bf4c29d672e43452b14c86960e0e5",
                    "sha256:e116f5dd9b3431d0497cfc81da37eb381163da8c38c39675673f9b820f9a9635"
                ]
            }
        },
        "1.14.10-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:bdf4c8815be8000da6e10120762d60af1158903e883a22eda9716bcc553684e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dfb97d811d8d85251f9bd9874de4db043d5b6bbed86983f3fe807a13d3888517",
            "container_config": {
                "Hostname": "dfb97d811d8d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:bdf4c8815be8000da6e10120762d60af1158903e883a22eda9716bcc553684e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-22T05:58:54.569041632Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:58:13.484174214Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:46f89172426e9f5b1d669a2ca7ab218fc2deaef1caeeab88f2b5bd443ac9773d in / "
                },
                {
                    "created": "2020-10-22T01:58:14.573391545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T03:21:35.369925202Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T03:23:06.314640017Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T03:23:25.984805858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:42:40.795266219Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T05:58:07.365777063Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-22T05:58:14.717733675Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T05:58:21.368894038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T05:58:47.41091463Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-22T05:58:54.569041632Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6ce530549bb4b4529d16de3818d13cf3ceede76177a0929f9d2be6c44037fac",
                    "sha256:5c89599a9669f6ffdee945ae26f241fdba6cc08829c008b66655f9f8ca2286f3",
                    "sha256:f5a11fa36c5815059452ee2b327ffc2e22d699047d67933215822c5148d0f518",
                    "sha256:6d885163561abd4ef2049ad98fae80b46f43871575f3551726781fe52fbc984b",
                    "sha256:405117a1a1a20971b41d7fc94f4141c7c01f0624b435bf9afbbd17db6aa722b8"
                ]
            }
        },
        "1.14.10-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:17310754cacd972c3144595103824f2fbf8a011bcb491401c8a7ad9b3ee7dc8f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "93e5f7420a7c94b6910542aa6596d8964e443bc45872404e03c53e5f760ea567",
            "container_config": {
                "Hostname": "93e5f7420a7c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:17310754cacd972c3144595103824f2fbf8a011bcb491401c8a7ad9b3ee7dc8f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-15T06:17:40.475009196Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T03:07:42.695169257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T05:00:53.193698777Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T06:16:11.662843029Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-15T06:16:28.809956058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T06:16:37.025082066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T06:17:26.128148404Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-15T06:17:40.475009196Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:a68e10776e8ef3ed8a6445bb1beb645e9b4f8dec1e1ad2ced5d161c9a4e5cd05",
                    "sha256:80f9451fa4c577e276071330123805ad08610e6722bb5444d4b53334caf5cc5e"
                ]
            }
        },
        "1.14.10-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:bdf4c8815be8000da6e10120762d60af1158903e883a22eda9716bcc553684e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dfb97d811d8d85251f9bd9874de4db043d5b6bbed86983f3fe807a13d3888517",
            "container_config": {
                "Hostname": "dfb97d811d8d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:bdf4c8815be8000da6e10120762d60af1158903e883a22eda9716bcc553684e5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-22T05:58:54.569041632Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:58:13.484174214Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:46f89172426e9f5b1d669a2ca7ab218fc2deaef1caeeab88f2b5bd443ac9773d in / "
                },
                {
                    "created": "2020-10-22T01:58:14.573391545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T03:21:35.369925202Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T03:23:06.314640017Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T03:23:25.984805858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T04:42:40.795266219Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T05:58:07.365777063Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-22T05:58:14.717733675Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T05:58:21.368894038Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T05:58:47.41091463Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-22T05:58:54.569041632Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6ce530549bb4b4529d16de3818d13cf3ceede76177a0929f9d2be6c44037fac",
                    "sha256:5c89599a9669f6ffdee945ae26f241fdba6cc08829c008b66655f9f8ca2286f3",
                    "sha256:f5a11fa36c5815059452ee2b327ffc2e22d699047d67933215822c5148d0f518",
                    "sha256:6d885163561abd4ef2049ad98fae80b46f43871575f3551726781fe52fbc984b",
                    "sha256:405117a1a1a20971b41d7fc94f4141c7c01f0624b435bf9afbbd17db6aa722b8"
                ]
            }
        },
        "1.14.10-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1bc84c2d6b588206e88cb598a10f7419194cf185df041968a22ca1c61fb9234e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a1352f68425e835a5b03f16b2692ff4eca51b9c98fbff4ebc2f0ff9f3d8b9b2",
            "container_config": {
                "Hostname": "8a1352f68425",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1bc84c2d6b588206e88cb598a10f7419194cf185df041968a22ca1c61fb9234e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-15T03:35:31.744885722Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T00:59:02.601526467Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e03270d36cef8171f1f6303860ff31bb1c0eb10642b8173bfdfef9f77fa4f89c in / "
                },
                {
                    "created": "2020-10-13T00:59:04.166915387Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T01:34:21.130187177Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T01:34:35.04655891Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T01:35:14.890494811Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:04:09.367471902Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:04:21.196112538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T03:31:45.023193674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T03:33:36.524902979Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-amd64.tar.gz'; \t\t\tsha256='66eb6858f375731ba07b0b33f5c813b141a81253e7e74071eec3ae85e9b37098'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-armv6l.tar.gz'; \t\t\tsha256='b601dbb186d786488470d73d4637c2144896bf6f499a4122bdd30f4e8dd79e70'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-arm64.tar.gz'; \t\t\tsha256='30700f7a9df3148df81013bd38715acd09ca5203b8e0aafa8b985306d5e9882e'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-386.tar.gz'; \t\t\tsha256='0e8e955cc80d2d7046312d16d800be82aa8ce9c5165b936348851923a75b4484'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-ppc64le.tar.gz'; \t\t\tsha256='ed5f7ab928ad8414598626740feac5918f7a915da943f21b41a81ad5c1dfa940'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-s390x.tar.gz'; \t\t\tsha256='0bd8b4ad9f4c5a766013cff898770cc1af63910ab680799c78b264d934cf8aab'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \t\t\tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-10-15T03:34:00.333079826Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T03:34:22.315303904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T03:35:20.810066992Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-15T03:35:31.744885722Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc85a59c8122eabf07151a9c9924966dd3d755fc62ba7a17837b2a9c32dec35b",
                    "sha256:1297bcbe3654ccacd86c585dc5548504da52114567c499d0db3e7f4e81831d16",
                    "sha256:0002120456f01ee4ea07136d268477a8a6ce46b5a6f8dab56eeadd26fe9a3623",
                    "sha256:9a1a662621a2f83de6e2698a6e1ea0cc6b5c044ce4db3a5b83df78dffbcebf50",
                    "sha256:13a73fcfe0bd4628faf5ebb14b082e184fda4af9ab0100e05abadd91bfe76832",
                    "sha256:b85d0974477135cf3c93f34a8671d302150772b3d02eab1f29472c0e13bc1ab7",
                    "sha256:bd02105aae356f78c0ce4ff243db81f128677dc7c3dd9b3faa1d16d29011a3db"
                ]
            }
        },
        "1.14.10-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c8735eca2505e27dceafafd71404eeea3619e3ed0a35f081f140049f91771922",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5a2f5ba8e27679895839f1843eec6882e1efc8a302a9ca7c3d039685e902f95b",
            "container_config": {
                "Hostname": "5a2f5ba8e276",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c8735eca2505e27dceafafd71404eeea3619e3ed0a35f081f140049f91771922",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-15T03:39:31.530220453Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T01:04:04.016557023Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb1dab6b0ac08f52870fca9435eedd2f707a3b8a5d28e5d1c2ff88e096f695ec in / "
                },
                {
                    "created": "2020-10-13T01:04:05.881444206Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T01:47:59.789265762Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T01:48:15.733400892Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T01:49:33.88157336Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:06:34.856754333Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:06:37.23752687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T03:36:19.010681814Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T03:37:41.657432906Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-amd64.tar.gz'; \t\t\tsha256='66eb6858f375731ba07b0b33f5c813b141a81253e7e74071eec3ae85e9b37098'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-armv6l.tar.gz'; \t\t\tsha256='b601dbb186d786488470d73d4637c2144896bf6f499a4122bdd30f4e8dd79e70'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-arm64.tar.gz'; \t\t\tsha256='30700f7a9df3148df81013bd38715acd09ca5203b8e0aafa8b985306d5e9882e'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-386.tar.gz'; \t\t\tsha256='0e8e955cc80d2d7046312d16d800be82aa8ce9c5165b936348851923a75b4484'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-ppc64le.tar.gz'; \t\t\tsha256='ed5f7ab928ad8414598626740feac5918f7a915da943f21b41a81ad5c1dfa940'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-s390x.tar.gz'; \t\t\tsha256='0bd8b4ad9f4c5a766013cff898770cc1af63910ab680799c78b264d934cf8aab'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \t\t\tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-10-15T03:38:00.475838525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T03:38:20.057084032Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T03:39:14.813760512Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-15T03:39:31.530220453Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3c605af5f171d78a37df9f97239a5df31cb4182a639334e8c774a6a99924383",
                    "sha256:b8959ac7fd3c9662e76c2eb4870759a57e0b0a129b8721ef2274e477c2c44d87",
                    "sha256:82287d983b62dac66e4aa250ab690588426fe5c206fadfcbc43bd9aa1a8dc83a",
                    "sha256:8eaced566f2ce06e91b3ae1c5dcb79b1b2bcbb22292e04c71957dfa621be7025",
                    "sha256:1767b206ce4eee744cb7f41dc0914d8a402b02e75bc66ce286b84ef2ec660361",
                    "sha256:994584561a081d1c9cd6f39f1a1e2a8643970c77229266ad2b71e9ab45132456",
                    "sha256:08812cff6bd5806f40394358cc231fc217a915051a2f3df3767281d86a9ce31b"
                ]
            }
        },
        "1.14.11-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:faec3f8eaa26807b93683613aaa07900d19dd89e7c41edcb748738b3f80db459",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b4f474160643decafb44b4e16a0157c175d63ed2229311d8a2766e237736fa1",
            "container_config": {
                "Hostname": "3b4f47416064",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:faec3f8eaa26807b93683613aaa07900d19dd89e7c41edcb748738b3f80db459",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:45:19.493358172Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:58:13.484174214Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:46f89172426e9f5b1d669a2ca7ab218fc2deaef1caeeab88f2b5bd443ac9773d in / "
                },
                {
                    "created": "2020-10-22T01:58:14.573391545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T03:21:35.369925202Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T03:23:06.314640017Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T03:23:25.984805858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:43:07.367165071Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:45:13.079768886Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:45:16.564055342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:45:17.092814222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:45:18.880134621Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:45:19.493358172Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6ce530549bb4b4529d16de3818d13cf3ceede76177a0929f9d2be6c44037fac",
                    "sha256:5c89599a9669f6ffdee945ae26f241fdba6cc08829c008b66655f9f8ca2286f3",
                    "sha256:f5a11fa36c5815059452ee2b327ffc2e22d699047d67933215822c5148d0f518",
                    "sha256:7c5dccba072cedf4d6583119e93404df915fdbb3316601b7e104e72b2e6e8daa",
                    "sha256:da0696e3b8cd1bfb3a0419d7d81c84596b729765bcf23e977230ed3106acc571"
                ]
            }
        },
        "1.14.11-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b8f6c1ecbb27b0598a5efa205e2eb66fa8bb79fbda52ca509de3f2b0a266bda2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c36164910f6f81528baf738b9d88c0ac25427184198164555407693066e51940",
            "container_config": {
                "Hostname": "c36164910f6f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b8f6c1ecbb27b0598a5efa205e2eb66fa8bb79fbda52ca509de3f2b0a266bda2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:47:53.413543083Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T03:07:42.695169257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:45:26.809852819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:47:47.072800977Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:47:50.077095626Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:47:50.739685131Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:47:52.554591765Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:47:53.413543083Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:4e1dac4e689f517c06522bf2b2a1d840b596fb0c0d34cc96453b2b2c92a19b5f",
                    "sha256:e973e20ef8e6d106c09882e20bc44c316506f462b5a80b5bbc86a3ca9717d1fb"
                ]
            }
        },
        "1.14.11-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:faec3f8eaa26807b93683613aaa07900d19dd89e7c41edcb748738b3f80db459",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b4f474160643decafb44b4e16a0157c175d63ed2229311d8a2766e237736fa1",
            "container_config": {
                "Hostname": "3b4f47416064",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:faec3f8eaa26807b93683613aaa07900d19dd89e7c41edcb748738b3f80db459",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:45:19.493358172Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:58:13.484174214Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:46f89172426e9f5b1d669a2ca7ab218fc2deaef1caeeab88f2b5bd443ac9773d in / "
                },
                {
                    "created": "2020-10-22T01:58:14.573391545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T03:21:35.369925202Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T03:23:06.314640017Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T03:23:25.984805858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:43:07.367165071Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:45:13.079768886Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:45:16.564055342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:45:17.092814222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:45:18.880134621Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:45:19.493358172Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6ce530549bb4b4529d16de3818d13cf3ceede76177a0929f9d2be6c44037fac",
                    "sha256:5c89599a9669f6ffdee945ae26f241fdba6cc08829c008b66655f9f8ca2286f3",
                    "sha256:f5a11fa36c5815059452ee2b327ffc2e22d699047d67933215822c5148d0f518",
                    "sha256:7c5dccba072cedf4d6583119e93404df915fdbb3316601b7e104e72b2e6e8daa",
                    "sha256:da0696e3b8cd1bfb3a0419d7d81c84596b729765bcf23e977230ed3106acc571"
                ]
            }
        },
        "1.14.11-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0820e8203e3bb90a90bb200728930b71f1c010f10c5dee7cc392f0e8d850a785",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1aaaf9d78bcfeefa867866600415b659e33509fbb8888c4d9aaf85a72f663db0",
            "container_config": {
                "Hostname": "1aaaf9d78bcf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0820e8203e3bb90a90bb200728930b71f1c010f10c5dee7cc392f0e8d850a785",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:42:17.88221555Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T00:59:02.601526467Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e03270d36cef8171f1f6303860ff31bb1c0eb10642b8173bfdfef9f77fa4f89c in / "
                },
                {
                    "created": "2020-10-13T00:59:04.166915387Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T01:34:21.130187177Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T01:34:35.04655891Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T01:35:14.890494811Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:04:09.367471902Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:04:21.196112538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:41:49.127946181Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:42:10.692311515Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-amd64.tar.gz'; \t\t\tsha256='ef150041e1af0890ecdd98ebdd6c759096884052a584c09ce50b2b5bb9bab2cd'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-armv6l.tar.gz'; \t\t\tsha256='14ecce9dc6d9225d5686ff6c517c27d1d9189d7967b78a596d5f4325516fd093'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-arm64.tar.gz'; \t\t\tsha256='6a2dc3c8d41683cf5dbb695d58556ec187fea7ae1afd913e25fc0750ab9c162c'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-386.tar.gz'; \t\t\tsha256='3789de3f29cccb31004885f72065e947a5020cdc33ecd94db0b5f20d319c49f0'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-ppc64le.tar.gz'; \t\t\tsha256='e9c5edcbba0b7cb46ef4a00891ceb1f64f84d0849071638027194a52943a7c95'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-s390x.tar.gz'; \t\t\tsha256='e5eb70a16d19ee9d25420d1eafd1e4710bc6197c162a95a32217e49e1bd6055c'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \t\t\tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:42:14.597063745Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:42:15.179515903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:42:17.124683338Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:42:17.88221555Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc85a59c8122eabf07151a9c9924966dd3d755fc62ba7a17837b2a9c32dec35b",
                    "sha256:1297bcbe3654ccacd86c585dc5548504da52114567c499d0db3e7f4e81831d16",
                    "sha256:0002120456f01ee4ea07136d268477a8a6ce46b5a6f8dab56eeadd26fe9a3623",
                    "sha256:9a1a662621a2f83de6e2698a6e1ea0cc6b5c044ce4db3a5b83df78dffbcebf50",
                    "sha256:13a73fcfe0bd4628faf5ebb14b082e184fda4af9ab0100e05abadd91bfe76832",
                    "sha256:6eebde2102fca3acbc0aa9aea6019ce3ca297587c079a9324740a9cb09dfde7f",
                    "sha256:b0f9d77e34dfb89965b6240ce4fc145967948313dac0db34c78cfea8acc636a0"
                ]
            }
        },
        "1.14.11-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a70b8ee50abf525abca7757f3818508e1b2f0e326b5cb118668b98749441c563",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4bf17af00516b812c2ccd7bd8a82b4d0b3221304e2add9b8644be9cbefc91e36",
            "container_config": {
                "Hostname": "4bf17af00516",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:a70b8ee50abf525abca7757f3818508e1b2f0e326b5cb118668b98749441c563",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:43:00.784708971Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T01:04:04.016557023Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb1dab6b0ac08f52870fca9435eedd2f707a3b8a5d28e5d1c2ff88e096f695ec in / "
                },
                {
                    "created": "2020-10-13T01:04:05.881444206Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T01:47:59.789265762Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T01:48:15.733400892Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T01:49:33.88157336Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:06:34.856754333Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:06:37.23752687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:42:26.151859949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:42:53.654880288Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-amd64.tar.gz'; \t\t\tsha256='ef150041e1af0890ecdd98ebdd6c759096884052a584c09ce50b2b5bb9bab2cd'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-armv6l.tar.gz'; \t\t\tsha256='14ecce9dc6d9225d5686ff6c517c27d1d9189d7967b78a596d5f4325516fd093'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-arm64.tar.gz'; \t\t\tsha256='6a2dc3c8d41683cf5dbb695d58556ec187fea7ae1afd913e25fc0750ab9c162c'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-386.tar.gz'; \t\t\tsha256='3789de3f29cccb31004885f72065e947a5020cdc33ecd94db0b5f20d319c49f0'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-ppc64le.tar.gz'; \t\t\tsha256='e9c5edcbba0b7cb46ef4a00891ceb1f64f84d0849071638027194a52943a7c95'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-s390x.tar.gz'; \t\t\tsha256='e5eb70a16d19ee9d25420d1eafd1e4710bc6197c162a95a32217e49e1bd6055c'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \t\t\tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:42:57.766348948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:42:58.262863289Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:43:00.153742803Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:43:00.784708971Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3c605af5f171d78a37df9f97239a5df31cb4182a639334e8c774a6a99924383",
                    "sha256:b8959ac7fd3c9662e76c2eb4870759a57e0b0a129b8721ef2274e477c2c44d87",
                    "sha256:82287d983b62dac66e4aa250ab690588426fe5c206fadfcbc43bd9aa1a8dc83a",
                    "sha256:8eaced566f2ce06e91b3ae1c5dcb79b1b2bcbb22292e04c71957dfa621be7025",
                    "sha256:1767b206ce4eee744cb7f41dc0914d8a402b02e75bc66ce286b84ef2ec660361",
                    "sha256:bac3d9c1bfe36a2603235aba63a52231ac52e45921628a27a3bd270a5b319ae7",
                    "sha256:771c147b771cc2db0fde9fa8e327871b724b17f8e020642ef12260c0c3323d4a"
                ]
            }
        },
        "1.14.12-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:d9ce46e4695382b088b99781a9515628fb56f102ff11a972d4d5323012876d89",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2eddee2e57ca89ccb646ff5b3d6f585d1359b9424bb16135cff0bb658478a89f",
            "container_config": {
                "Hostname": "2eddee2e57ca",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d9ce46e4695382b088b99781a9515628fb56f102ff11a972d4d5323012876d89",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T22:08:54.061788055Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:58:13.484174214Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:46f89172426e9f5b1d669a2ca7ab218fc2deaef1caeeab88f2b5bd443ac9773d in / "
                },
                {
                    "created": "2020-10-22T01:58:14.573391545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T03:21:35.369925202Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T03:23:06.314640017Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T03:23:25.984805858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:06:46.107926252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:08:48.084757921Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T22:08:51.11659554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:08:51.743800824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:08:53.388127171Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T22:08:54.061788055Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6ce530549bb4b4529d16de3818d13cf3ceede76177a0929f9d2be6c44037fac",
                    "sha256:5c89599a9669f6ffdee945ae26f241fdba6cc08829c008b66655f9f8ca2286f3",
                    "sha256:f5a11fa36c5815059452ee2b327ffc2e22d699047d67933215822c5148d0f518",
                    "sha256:95d6d77dbf6f8ad987b5f0444b023e57d03f5dea511860abcebf5e3006a449bc",
                    "sha256:56039e6055d09f8a65e9bc0a25f092e176ba486f5ff698ea6051ca77fa3e2a33"
                ]
            }
        },
        "1.14.12-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45512f1adbbfe1d31662127ae5f373349a61ddb9dc670f8981aed02294731f9b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cad8f25414f43e7e66c454b4231e80de5ed2b4ad938975cf2360e8d577b2eec3",
            "container_config": {
                "Hostname": "cad8f25414f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45512f1adbbfe1d31662127ae5f373349a61ddb9dc670f8981aed02294731f9b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T22:11:25.984769444Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T03:07:42.695169257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:09:05.468344144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:11:19.989696151Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T22:11:23.028518088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:11:23.664897943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:11:25.314168757Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T22:11:25.984769444Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:b577fdf028d42c05e5d88d6641d0e5330c27ba368284b03e63fb2a25f148310d",
                    "sha256:937f4b5175ce75dde09578b47b6a34e835ddb26ab18771604ce46a3ffe55596e"
                ]
            }
        },
        "1.14.12-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:d9ce46e4695382b088b99781a9515628fb56f102ff11a972d4d5323012876d89",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2eddee2e57ca89ccb646ff5b3d6f585d1359b9424bb16135cff0bb658478a89f",
            "container_config": {
                "Hostname": "2eddee2e57ca",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d9ce46e4695382b088b99781a9515628fb56f102ff11a972d4d5323012876d89",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T22:08:54.061788055Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:58:13.484174214Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:46f89172426e9f5b1d669a2ca7ab218fc2deaef1caeeab88f2b5bd443ac9773d in / "
                },
                {
                    "created": "2020-10-22T01:58:14.573391545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T03:21:35.369925202Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T03:23:06.314640017Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T03:23:25.984805858Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:06:46.107926252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:08:48.084757921Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T22:08:51.11659554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:08:51.743800824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T22:08:53.388127171Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T22:08:54.061788055Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6ce530549bb4b4529d16de3818d13cf3ceede76177a0929f9d2be6c44037fac",
                    "sha256:5c89599a9669f6ffdee945ae26f241fdba6cc08829c008b66655f9f8ca2286f3",
                    "sha256:f5a11fa36c5815059452ee2b327ffc2e22d699047d67933215822c5148d0f518",
                    "sha256:95d6d77dbf6f8ad987b5f0444b023e57d03f5dea511860abcebf5e3006a449bc",
                    "sha256:56039e6055d09f8a65e9bc0a25f092e176ba486f5ff698ea6051ca77fa3e2a33"
                ]
            }
        },
        "1.14.12-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b05ff984eaeb3907e6bb3b7fa3fd1a005a3c70593591fa4121641f6fb4647222",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "60245235a2ca78221bf841d91709929c14719b9c7c888906e88f61128119fe7f",
            "container_config": {
                "Hostname": "60245235a2ca",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b05ff984eaeb3907e6bb3b7fa3fd1a005a3c70593591fa4121641f6fb4647222",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-18T19:33:51.549841527Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-11-17T20:20:30.796851061Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:81141d8fa450e1e5af67bb3757057f3fc34d3ed35cfd0caedb0aab64c5da9aaf in / "
                },
                {
                    "created": "2020-11-17T20:20:33.595925507Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-17T21:41:33.946412213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-17T21:41:50.685937347Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-11-17T21:42:46.189323869Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T19:32:29.332906015Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T19:32:30.915765384Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T19:33:20.961814514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T19:33:44.718867374Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-amd64.tar.gz'; \t\t\tsha256='fb26f951c88c0685d7df393611189c58e6eabd3c17bdaef37df11355ab8db9d3'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-armv6l.tar.gz'; \t\t\tsha256='548d0d93884d4c30684125a19ea169acf6195cf0fe467efb325adb595fffeacf'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-arm64.tar.gz'; \t\t\tsha256='833c762bf205ae5caaca246d5c2205ae919bad7484f7c38db72941937e28fa24'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-386.tar.gz'; \t\t\tsha256='80d1aa5c2a22cf57da97c71bbb3ee96f2600f15212f0fe8d6e07c7fc2744cf82'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-ppc64le.tar.gz'; \t\t\tsha256='7c51a32851ae8331e1bc9ebc439a71f430053bd3c8e739a72df4354a377982e8'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-s390x.tar.gz'; \t\t\tsha256='e0d3cd0112edcd820d4860c2b95d7b32ef8900ca7f7207f15cc7675de7efe7cf'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \t\t\tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-18T19:33:47.433375541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T19:33:48.169056348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T19:33:50.722517439Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-18T19:33:51.549841527Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:352c3217a0e0b0e937d6373aa2cb511332147a65124f83758697692add99b313",
                    "sha256:b385600f036d4990b948ac5d081397a422887e104841397a62137683a8924037",
                    "sha256:2e1f9d61e7cc7a896359c9634898105efb274b75b6ab03d3a253b3c6f31f810f",
                    "sha256:09d1b038adf586da0a29cedd71783fd5f95ba5b1d6912899c3c9f6e06643801f",
                    "sha256:78cb3a3764ba41728510c2e899b3cdee5a1e0140bb58ffb6c0f410e0af56b94c",
                    "sha256:ba3de87dfd376d98db7b6858f422885cbb2d1e70da3cf6320b3ba4276669fd1f",
                    "sha256:023c3c711fac81051d0fe224998dd2693bd831ef9c52ee0cbbc3f75342fd8697"
                ]
            }
        },
        "1.14.12-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:218506da54d1cc1fa476e08073ba703744581af050a6546d9543df28cb0a288d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8e68ca341193c505fa4be1c8f463d48a9fcf4d734c2ca22693c7d894b27d161e",
            "container_config": {
                "Hostname": "8e68ca341193",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:218506da54d1cc1fa476e08073ba703744581af050a6546d9543df28cb0a288d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-18T19:34:56.816886501Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-11-17T20:26:47.074240023Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:58b80132bbfb3cae1eb2a9345e362cce1e39de41055fdcef8e5a8a8a447f69b0 in / "
                },
                {
                    "created": "2020-11-17T20:26:50.001199696Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-17T21:57:39.356564038Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-17T21:57:51.626438145Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-11-17T21:58:49.87199126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T19:34:23.331150301Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T19:34:24.844699233Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T19:34:25.531671522Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T19:34:46.089776683Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-amd64.tar.gz'; \t\t\tsha256='fb26f951c88c0685d7df393611189c58e6eabd3c17bdaef37df11355ab8db9d3'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-armv6l.tar.gz'; \t\t\tsha256='548d0d93884d4c30684125a19ea169acf6195cf0fe467efb325adb595fffeacf'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-arm64.tar.gz'; \t\t\tsha256='833c762bf205ae5caaca246d5c2205ae919bad7484f7c38db72941937e28fa24'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-386.tar.gz'; \t\t\tsha256='80d1aa5c2a22cf57da97c71bbb3ee96f2600f15212f0fe8d6e07c7fc2744cf82'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-ppc64le.tar.gz'; \t\t\tsha256='7c51a32851ae8331e1bc9ebc439a71f430053bd3c8e739a72df4354a377982e8'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-s390x.tar.gz'; \t\t\tsha256='e0d3cd0112edcd820d4860c2b95d7b32ef8900ca7f7207f15cc7675de7efe7cf'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \t\t\tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-18T19:34:49.773526404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T19:34:50.629153233Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T19:34:54.711149739Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-18T19:34:56.816886501Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:844f01ee930146a7dce3fbebc3091625e6959e53d2f2aeb187dd7ee8beeb621f",
                    "sha256:6a1d9a14dfe5566ded99550cb8be8558dc86de4cd925600f2146a64de58bd263",
                    "sha256:7d9042bf597159a70497d4fd43b4a35725a95ad1c7105051fd6d586a0d3877c8",
                    "sha256:803f96f5c554c5cb40044397147b315017569f64fdefa42cf7b54b89739ba6fc",
                    "sha256:02c09d5db13cd1e5e344ba3c03d55758538459151c6ebcc67b81eb05c81992e5",
                    "sha256:f9c803f51e89aa948b7c7f533830e7b30ca66baf397782c9b78cefbb7bdb6030",
                    "sha256:544c7fa9652d988a3016299ac853b7128e69326cb1890f850b374788249568da"
                ]
            }
        },
        "1.14.13-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:d299e7eb7388fe5055f4d43823e3094b22640a996b4411aea2c9680c63462fe3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b82f14011b165256b807c79d99d0faff51ebb4fe710912583a3c49ba31cc9a10",
            "container_config": {
                "Hostname": "b82f14011b16",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d299e7eb7388fe5055f4d43823e3094b22640a996b4411aea2c9680c63462fe3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-19T23:08:06.327908747Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-15T01:58:27.939752972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:718d7c24a8d6ff0feb2843cf8c3ca4b7ef1fb523a45dea568404259a7b4e6f10 in / "
                },
                {
                    "created": "2021-01-15T01:58:29.483602647Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:59:15.209919396Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-19T22:59:18.040293757Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-19T22:59:18.689494606Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T23:05:31.576580697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T23:07:59.440112369Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-19T23:08:02.464724867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T23:08:03.160070751Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T23:08:05.276996464Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-19T23:08:06.327908747Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3060ff9b490de7e6169d1b3289be5c12b4a28b50c75d25b7f82b5303c1a0a444",
                    "sha256:b224b6c8e1207076f8449bd6ea8230f5df09a5e57dd0d52397ede78c2851660d",
                    "sha256:ba216dc18b02602778acce17ab4397afd7751362e6db7242e9433f87296eba2f",
                    "sha256:1cb5826995587f1d9b290102279afb2ea4f3d796de033cfe6c79c5cc1d14db2e",
                    "sha256:6d8566e0360e8ffbd8deb4b2fc990f6ba9fa6ecd2d5dd08f792c99d3a4ec1d27"
                ]
            }
        },
        "1.14.13-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:cbca9e0a9cdbf7314ff96eb17974ce1fba227394185c9a038827911d1017414b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1316df21fe3a0b2c6f831842aa1a147bb3104808edfac0d6654d2eb8c02bf0e9",
            "container_config": {
                "Hostname": "1316df21fe3a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cbca9e0a9cdbf7314ff96eb17974ce1fba227394185c9a038827911d1017414b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-12-17T01:34:01.597003716Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:58:28.227313437Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6757438ec5b22931a1c6a274c9c1eca94f0715a405d2ba91bd8b95704ba969ca in / "
                },
                {
                    "created": "2020-12-16T23:58:29.610280694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:31:21.507209418Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:31:23.708874342Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:31:24.282622576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:31:24.992268094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:33:48.964313263Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-12-17T01:33:56.602200412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:33:57.516273875Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:34:00.286769652Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-12-17T01:34:01.597003716Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123b380a5454fddab6acaa39aae24d6e014c8cd1769666fba4799961a143a445",
                    "sha256:aa28bfafb5dbc30e0f1d13786d8fc0c2d4aa19bd751046f9af18feae36853e8b",
                    "sha256:da7558bbbfca5cd86373b11ece6b706d7be906b0d86f418e66795c922472072b",
                    "sha256:0bfed689fc1ab19bfd5a358b4009d9db5578f3f15119bfd83fc3c4bebd8fcf90",
                    "sha256:339ea0bf086c509e910c2e3fd4414c99bc24568abbb0ca9824019b478ac69214"
                ]
            }
        },
        "1.14.13-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:7db76df6e174bacdbcbd607c5b92ce3fdbb2e060703850e482e9fd5c980f063c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b52a95e061670d88ccc8cdd99f60b5f2cf7708c0551a178842668ac379b626e6",
            "container_config": {
                "Hostname": "b52a95e06167",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7db76df6e174bacdbcbd607c5b92ce3fdbb2e060703850e482e9fd5c980f063c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-12-17T01:31:07.892703395Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:58:14.671390111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd07f77a2b2741ca6bda80d9203be9c7274cf73145bff778cf000db0d8d4e903 in / "
                },
                {
                    "created": "2020-12-16T23:58:15.972713651Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:25:33.553746856Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:25:37.823411087Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:25:38.880042126Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:28:50.212575022Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:30:58.378328885Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-12-17T01:31:03.395168147Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:31:04.452200501Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:31:06.506715875Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-12-17T01:31:07.892703395Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:72bbe6b5204e7df9466d6597c4888cf950f0b379bf476a76925feabf17e94aa9",
                    "sha256:9fd922773d91aa676b776015430607b98bd6ed70b23c249f58a8107da7044493",
                    "sha256:5b53f63682e42e9ae4032a4066425b37019f87bb5dbee22312b5484222dd7e9f",
                    "sha256:ad6ed9cceebe51aa6aa6b60f5b89ea906942f22e547ff4288a8d4f7a818c56be",
                    "sha256:ab05578838fa910323c759eab86c316ef29f3611b14496c870b0700abaf2558d"
                ]
            }
        },
        "1.14.13-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:d299e7eb7388fe5055f4d43823e3094b22640a996b4411aea2c9680c63462fe3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b82f14011b165256b807c79d99d0faff51ebb4fe710912583a3c49ba31cc9a10",
            "container_config": {
                "Hostname": "b82f14011b16",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d299e7eb7388fe5055f4d43823e3094b22640a996b4411aea2c9680c63462fe3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-19T23:08:06.327908747Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-15T01:58:27.939752972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:718d7c24a8d6ff0feb2843cf8c3ca4b7ef1fb523a45dea568404259a7b4e6f10 in / "
                },
                {
                    "created": "2021-01-15T01:58:29.483602647Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:59:15.209919396Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-19T22:59:18.040293757Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-19T22:59:18.689494606Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T23:05:31.576580697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T23:07:59.440112369Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-19T23:08:02.464724867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T23:08:03.160070751Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T23:08:05.276996464Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-19T23:08:06.327908747Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3060ff9b490de7e6169d1b3289be5c12b4a28b50c75d25b7f82b5303c1a0a444",
                    "sha256:b224b6c8e1207076f8449bd6ea8230f5df09a5e57dd0d52397ede78c2851660d",
                    "sha256:ba216dc18b02602778acce17ab4397afd7751362e6db7242e9433f87296eba2f",
                    "sha256:1cb5826995587f1d9b290102279afb2ea4f3d796de033cfe6c79c5cc1d14db2e",
                    "sha256:6d8566e0360e8ffbd8deb4b2fc990f6ba9fa6ecd2d5dd08f792c99d3a4ec1d27"
                ]
            }
        },
        "1.14.13-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:814105d08d39a1c623db8f83248491e8024593f49117928fd7c45cdfedced5af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c2d5052b9e512e903bb59b7b6fe407c9a4ee12fa79a8abeb7ad83b3a2209b1b",
            "container_config": {
                "Hostname": "0c2d5052b9e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:814105d08d39a1c623db8f83248491e8024593f49117928fd7c45cdfedced5af",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-12T19:51:22.558261064Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:00:37.794826366Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:216371f6fe8c803a0191f84e555c809a3301d1344c62b831dddb5e0c595fe0ef in / "
                },
                {
                    "created": "2021-01-12T00:00:46.290634916Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T01:14:54.606452501Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T01:15:06.869721247Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T01:15:48.669102117Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T19:49:12.001530947Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T19:49:13.78078326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T19:50:49.275825381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T19:51:15.025190587Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-amd64.tar.gz'; \t\t\tsha256='bfea0c8d7b70c1ad99b0266b321608db57df75820e8f4333efa448a43da01992'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-armv6l.tar.gz'; \t\t\tsha256='cee8785fad978693c7b68ea635e76412a0a44917c3d58efa82b2edbf538a2868'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-arm64.tar.gz'; \t\t\tsha256='445b719ebf46d8825360dabad65226db154ca8053de60609bc20f80a17452cbb'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-386.tar.gz'; \t\t\tsha256='a168c7e03e305d33a5651acb5bfdbfb5141053a0d98f06af3e1e5081167af963'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-ppc64le.tar.gz'; \t\t\tsha256='1bd057adc1004b22e530ac738ccb077b56f89e84209df9bb755aacb37668c547'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-s390x.tar.gz'; \t\t\tsha256='263a9bef1b8d695cc459b83fd7c4cee06f7e435adec0d0c948309b0655d0770e'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \t\t\tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-12T19:51:17.674871952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T19:51:18.617593776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T19:51:21.331255538Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-12T19:51:22.558261064Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cec56f80f3ce238ae05b59b462cb3825aad919b09a8ee9c313e7b43114d6d73",
                    "sha256:2422ef7b9360f66daafa6091b59deb7c8738b02d2a8493b0a2acf2665a98c6a8",
                    "sha256:3a9843560303a35cb798e6d3d8f3dc0b2a719e144e88b88abf73d075eee0bfe3",
                    "sha256:21473445101d61c799e725895f75695989258e8c161f8059fbf441ad266a8e96",
                    "sha256:3a1582dc6830b80eacdfdbb1c24e318c1a882194fed7c5f90f31938c344edf9f",
                    "sha256:371c0d48366a367c3c9c059bad8d6daad008aeaa1689e7327236f84c75ea4ccb",
                    "sha256:aebd6bc03a2d1214785716e80d3355af6797d49dfda1a7bfaf37e1343c21f480"
                ]
            }
        },
        "1.14.13-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5008bda2654cfd320d4a74c63b8d3eeb00039ef5638922d3f08a5baabbebb9bf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "58ad22254826d51f500d91dc0cb57337e7c2d4bad73e7d43d084c92ee31c0bd4",
            "container_config": {
                "Hostname": "58ad22254826",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5008bda2654cfd320d4a74c63b8d3eeb00039ef5638922d3f08a5baabbebb9bf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-12T19:52:31.552378558Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:05:19.397188922Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c744a203d36aa8c515bbc11873a4a479cdf3fe9f020ca1ef207b53e6b3a251e in / "
                },
                {
                    "created": "2021-01-12T00:05:23.147705242Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T01:21:24.671301105Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T01:21:37.325786298Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T01:22:25.615231791Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T19:51:58.760787211Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T19:52:00.964302909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T19:52:01.974666632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T19:52:25.6088089Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-amd64.tar.gz'; \t\t\tsha256='bfea0c8d7b70c1ad99b0266b321608db57df75820e8f4333efa448a43da01992'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-armv6l.tar.gz'; \t\t\tsha256='cee8785fad978693c7b68ea635e76412a0a44917c3d58efa82b2edbf538a2868'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-arm64.tar.gz'; \t\t\tsha256='445b719ebf46d8825360dabad65226db154ca8053de60609bc20f80a17452cbb'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-386.tar.gz'; \t\t\tsha256='a168c7e03e305d33a5651acb5bfdbfb5141053a0d98f06af3e1e5081167af963'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-ppc64le.tar.gz'; \t\t\tsha256='1bd057adc1004b22e530ac738ccb077b56f89e84209df9bb755aacb37668c547'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-s390x.tar.gz'; \t\t\tsha256='263a9bef1b8d695cc459b83fd7c4cee06f7e435adec0d0c948309b0655d0770e'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \t\t\tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-12T19:52:27.560029934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T19:52:28.389235553Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T19:52:30.572385924Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-12T19:52:31.552378558Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0afc7c9287e89088623b3e9cb4e301234c19f2c59c4f55b5713b63b58445b844",
                    "sha256:a6393d736fab0879dfd44bf39f660238c4521e6200d2e85724f0007cddc75d31",
                    "sha256:8429d08ec5a8ccf6e99b71fa65b54f3902caa40c1b3df9699a5efadabd166bf6",
                    "sha256:20a7650a490daa85ad1a1dabc098729d2d6bc02bf1bc8fa0723edd05e8b5aaad",
                    "sha256:1d4be592ae6cd2b70feeb209d651bab7535b02f8c85f0bb6cf1e9753799d1b5d",
                    "sha256:5ebc0b677ca4f3b9ca6700fe427cd4c3885ced0456624a5d0746ad0b733d78b3",
                    "sha256:92ad5ceb170a8c8a785976253165272bf6c09c09dff85d36c83a578944dd4487"
                ]
            }
        },
        "1.14.14-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:f52f26836f074ebb8444e6adf2ff1f29050e220053937c2d14676031e2378d08",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b3b2a733a871cb75c0508d97ad9c4f83c5cc69340b6e4acfde1639d6398f922d",
            "container_config": {
                "Hostname": "b3b2a733a871",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f52f26836f074ebb8444e6adf2ff1f29050e220053937c2d14676031e2378d08",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-29T00:49:36.361589273Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:58:03.263157043Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98a89b90a8b442eed5301790dd2bd3a27391c5e4426126eed9d1cf44e70f8857 in / "
                },
                {
                    "created": "2021-01-28T23:58:04.19249348Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:40:32.200697251Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:40:34.598666866Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:40:35.350796312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:47:02.570277367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:49:25.340239352Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-29T00:49:32.233336481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:49:33.037007123Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:49:35.320621881Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-29T00:49:36.361589273Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a015b81e4aacb46ff7618b5d344104ee58d26f5e950b3197bf493e22640bf092",
                    "sha256:5c103fe8d7cb0fc3bd3b55c15d22e07349ae7e149e51b12127db6ce9bdf203a5",
                    "sha256:6fd18d26a41e9ce371618cd929762e319ea2891987e367e17e1d2aeaa2badd44",
                    "sha256:f5fd66a2eb282dae9623674a5025e148d9830a80480acb7a2699a4b5adae41bd",
                    "sha256:10b8185d559c6dd46ba1c8b0952052a4ac245fe9dfee1a3dc1ea3dd72975a8b5"
                ]
            }
        },
        "1.14.14-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:0b6c2b186779de1d1bc078ed01af3a43c1dfc00e430bd176c51f27f9ff88905a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cf69b6c3ec0f37cc27a5475d3c355d93dd9a67ee90a806488bef404c27d9d425",
            "container_config": {
                "Hostname": "cf69b6c3ec0f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0b6c2b186779de1d1bc078ed01af3a43c1dfc00e430bd176c51f27f9ff88905a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:34:41.030244795Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:58:28.227313437Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6757438ec5b22931a1c6a274c9c1eca94f0715a405d2ba91bd8b95704ba969ca in / "
                },
                {
                    "created": "2020-12-16T23:58:29.610280694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:31:21.507209418Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:31:23.708874342Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:31:24.282622576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:31:25.46472524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:34:34.363159726Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:34:37.810449975Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:34:38.432055435Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:34:40.328865097Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:34:41.030244795Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123b380a5454fddab6acaa39aae24d6e014c8cd1769666fba4799961a143a445",
                    "sha256:aa28bfafb5dbc30e0f1d13786d8fc0c2d4aa19bd751046f9af18feae36853e8b",
                    "sha256:da7558bbbfca5cd86373b11ece6b706d7be906b0d86f418e66795c922472072b",
                    "sha256:0442642797fa6d4205d90ec2de5bba8c4549d087bf3e0b8a88a7f315c23bf2b5",
                    "sha256:dea941a851b072819390c678839a965ae3d1a9f0c839873658fde1a7de26fc35"
                ]
            }
        },
        "1.14.14-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:dc27f84b24c381caec0de86d7f00d2b041e9dd925bd1ae49a1a2a8328138338e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2afad79c0dcd4686cef2f3cf151e1659f89d9510c0402d009ceeede21c82d63",
            "container_config": {
                "Hostname": "e2afad79c0dc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:dc27f84b24c381caec0de86d7f00d2b041e9dd925bd1ae49a1a2a8328138338e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:31:18.577807922Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:58:14.671390111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd07f77a2b2741ca6bda80d9203be9c7274cf73145bff778cf000db0d8d4e903 in / "
                },
                {
                    "created": "2020-12-16T23:58:15.972713651Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:25:33.553746856Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:25:37.823411087Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:25:38.880042126Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:28:36.653731567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:31:07.422160137Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:31:13.981898611Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:31:14.703924746Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:31:17.496302057Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:31:18.577807922Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:72bbe6b5204e7df9466d6597c4888cf950f0b379bf476a76925feabf17e94aa9",
                    "sha256:9fd922773d91aa676b776015430607b98bd6ed70b23c249f58a8107da7044493",
                    "sha256:5b53f63682e42e9ae4032a4066425b37019f87bb5dbee22312b5484222dd7e9f",
                    "sha256:e66a4359a42ebcd1067cd93d5ce816cfcf7164baab167417dad3831c64e40da7",
                    "sha256:b885cc1fceb38e45293f462e31bedbd0a657807f5ba094f2feec93ea83b4537f"
                ]
            }
        },
        "1.14.14-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:f52f26836f074ebb8444e6adf2ff1f29050e220053937c2d14676031e2378d08",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b3b2a733a871cb75c0508d97ad9c4f83c5cc69340b6e4acfde1639d6398f922d",
            "container_config": {
                "Hostname": "b3b2a733a871",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f52f26836f074ebb8444e6adf2ff1f29050e220053937c2d14676031e2378d08",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-29T00:49:36.361589273Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:58:03.263157043Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98a89b90a8b442eed5301790dd2bd3a27391c5e4426126eed9d1cf44e70f8857 in / "
                },
                {
                    "created": "2021-01-28T23:58:04.19249348Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:40:32.200697251Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:40:34.598666866Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:40:35.350796312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:47:02.570277367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:49:25.340239352Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-29T00:49:32.233336481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:49:33.037007123Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:49:35.320621881Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-29T00:49:36.361589273Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a015b81e4aacb46ff7618b5d344104ee58d26f5e950b3197bf493e22640bf092",
                    "sha256:5c103fe8d7cb0fc3bd3b55c15d22e07349ae7e149e51b12127db6ce9bdf203a5",
                    "sha256:6fd18d26a41e9ce371618cd929762e319ea2891987e367e17e1d2aeaa2badd44",
                    "sha256:f5fd66a2eb282dae9623674a5025e148d9830a80480acb7a2699a4b5adae41bd",
                    "sha256:10b8185d559c6dd46ba1c8b0952052a4ac245fe9dfee1a3dc1ea3dd72975a8b5"
                ]
            }
        },
        "1.14.14-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7d3226a45ecb66d0a767a9da2ba8bf06f5f99d280b988db85e92a45a01296fff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ec5eaba30ac41388711a745b8716864fe713743683cef0a27a69a6be4493a604",
            "container_config": {
                "Hostname": "ec5eaba30ac4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7d3226a45ecb66d0a767a9da2ba8bf06f5f99d280b988db85e92a45a01296fff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:24:01.76618732Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:00:37.794826366Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:216371f6fe8c803a0191f84e555c809a3301d1344c62b831dddb5e0c595fe0ef in / "
                },
                {
                    "created": "2021-01-12T00:00:46.290634916Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T01:14:54.606452501Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T01:15:06.869721247Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T01:15:48.669102117Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T19:49:12.001530947Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T19:49:13.78078326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:19.259320883Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:48.666218204Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-amd64.tar.gz'; \t\t\tsha256='6f1354c9040d65d1622b451f43c324c1e5197aa9242d00c5a117d0e2625f3e0d'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-armv6l.tar.gz'; \t\t\tsha256='e4d614c23b77a367becaeac3032cf4911793363a33efa299d29440be3d66234b'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-arm64.tar.gz'; \t\t\tsha256='511d764197121f212d130724afb9c296f0cb4a22424e5ae956a5cc043b0f4a29'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-386.tar.gz'; \t\t\tsha256='b08e088ba99134035782c71aeaf139f36d2306eb88eddc22c1278b8b446f157e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-ppc64le.tar.gz'; \t\t\tsha256='f24eddfac754b48d9c28a459f0e4fc5af8f037dac0e9b3159b9bb98b6b1ab88c'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-s390x.tar.gz'; \t\t\tsha256='fcd84558e80257d3c308342964c10c1de8bd1c031c579bb02c5c07bf86fd86d7'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \t\t\tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:23:54.730293028Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:56.95866578Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:24:00.686679193Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:24:01.76618732Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cec56f80f3ce238ae05b59b462cb3825aad919b09a8ee9c313e7b43114d6d73",
                    "sha256:2422ef7b9360f66daafa6091b59deb7c8738b02d2a8493b0a2acf2665a98c6a8",
                    "sha256:3a9843560303a35cb798e6d3d8f3dc0b2a719e144e88b88abf73d075eee0bfe3",
                    "sha256:21473445101d61c799e725895f75695989258e8c161f8059fbf441ad266a8e96",
                    "sha256:3a1582dc6830b80eacdfdbb1c24e318c1a882194fed7c5f90f31938c344edf9f",
                    "sha256:3649a648f81da015892b57926c374f4313bf9f76db177da1cbb5237a383b36bd",
                    "sha256:601f8c1ae90ffceb8e52a36d6b1c467f86013940573ce9c868c3299e96d64e92"
                ]
            }
        },
        "1.14.14-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5d3ed9c54c02bb2ed1895b4c222bac2476f64c5492ed6d753a1c2e62949e683f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a6c061c6731611341e79550e9fe3771af43256d1cf595939c473b934543e9b6b",
            "container_config": {
                "Hostname": "a6c061c67316",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5d3ed9c54c02bb2ed1895b4c222bac2476f64c5492ed6d753a1c2e62949e683f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:25:04.201554856Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:05:19.397188922Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c744a203d36aa8c515bbc11873a4a479cdf3fe9f020ca1ef207b53e6b3a251e in / "
                },
                {
                    "created": "2021-01-12T00:05:23.147705242Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T01:21:24.671301105Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T01:21:37.325786298Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T01:22:25.615231791Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T19:51:58.760787211Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T19:52:00.964302909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:24:19.710589173Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:24:53.231075133Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-amd64.tar.gz'; \t\t\tsha256='6f1354c9040d65d1622b451f43c324c1e5197aa9242d00c5a117d0e2625f3e0d'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-armv6l.tar.gz'; \t\t\tsha256='e4d614c23b77a367becaeac3032cf4911793363a33efa299d29440be3d66234b'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-arm64.tar.gz'; \t\t\tsha256='511d764197121f212d130724afb9c296f0cb4a22424e5ae956a5cc043b0f4a29'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-386.tar.gz'; \t\t\tsha256='b08e088ba99134035782c71aeaf139f36d2306eb88eddc22c1278b8b446f157e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-ppc64le.tar.gz'; \t\t\tsha256='f24eddfac754b48d9c28a459f0e4fc5af8f037dac0e9b3159b9bb98b6b1ab88c'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-s390x.tar.gz'; \t\t\tsha256='fcd84558e80257d3c308342964c10c1de8bd1c031c579bb02c5c07bf86fd86d7'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \t\t\tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:24:59.410061224Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:25:00.689151199Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:25:03.201080263Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:25:04.201554856Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0afc7c9287e89088623b3e9cb4e301234c19f2c59c4f55b5713b63b58445b844",
                    "sha256:a6393d736fab0879dfd44bf39f660238c4521e6200d2e85724f0007cddc75d31",
                    "sha256:8429d08ec5a8ccf6e99b71fa65b54f3902caa40c1b3df9699a5efadabd166bf6",
                    "sha256:20a7650a490daa85ad1a1dabc098729d2d6bc02bf1bc8fa0723edd05e8b5aaad",
                    "sha256:1d4be592ae6cd2b70feeb209d651bab7535b02f8c85f0bb6cf1e9753799d1b5d",
                    "sha256:4034af5040c140eddfb69c7bb47bfa4b6e0498b32b1bb27d4e90c2a209409d9e",
                    "sha256:c9f9239e3a65ce2504f60be76c7819e19b4d6dd8ddb1f0d879e3150051a12b5a"
                ]
            }
        },
        "1.14.15-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:7d1a9faaefbd89ec5be4d8cea5ad7a1ae817e347ccea4861b20a98b8408035a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "254c03b73b002753c7d24527fcdf3755f8edb6ad7173a6ae95463d9c6dd3f4b7",
            "container_config": {
                "Hostname": "254c03b73b00",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7d1a9faaefbd89ec5be4d8cea5ad7a1ae817e347ccea4861b20a98b8408035a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:44:27.755578885Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:58:03.263157043Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98a89b90a8b442eed5301790dd2bd3a27391c5e4426126eed9d1cf44e70f8857 in / "
                },
                {
                    "created": "2021-01-28T23:58:04.19249348Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:40:32.200697251Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:40:34.598666866Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:40:35.350796312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:40:59.860944517Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:17.558042453Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:44:22.667707673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:23.707605372Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:26.692793171Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:44:27.755578885Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a015b81e4aacb46ff7618b5d344104ee58d26f5e950b3197bf493e22640bf092",
                    "sha256:5c103fe8d7cb0fc3bd3b55c15d22e07349ae7e149e51b12127db6ce9bdf203a5",
                    "sha256:6fd18d26a41e9ce371618cd929762e319ea2891987e367e17e1d2aeaa2badd44",
                    "sha256:09c6cecf868d317562a302e165fa0d782a7396e57d69165a424f23dd2adb59fe",
                    "sha256:c3ba2001727220021153dd3577698f0bd7d5a9a702af569b32b9d1bef245c4d2"
                ]
            }
        },
        "1.14.15-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:0bea06b82535079dc82c16c5d4df7437b2e998de8a1c966c35a093e3b0585366",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8f587dc218f407ee620a585cd0dd9c2cd67a645f83a1604099d251a96970923c",
            "container_config": {
                "Hostname": "8f587dc218f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0bea06b82535079dc82c16c5d4df7437b2e998de8a1c966c35a093e3b0585366",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:49:43.659871812Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:58:28.227313437Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6757438ec5b22931a1c6a274c9c1eca94f0715a405d2ba91bd8b95704ba969ca in / "
                },
                {
                    "created": "2020-12-16T23:58:29.610280694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:31:21.507209418Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:31:23.708874342Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:31:24.282622576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:47:10.763867706Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:49:36.19012217Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:49:40.208975976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:49:40.812404677Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:49:42.610038903Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:49:43.659871812Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:123b380a5454fddab6acaa39aae24d6e014c8cd1769666fba4799961a143a445",
                    "sha256:aa28bfafb5dbc30e0f1d13786d8fc0c2d4aa19bd751046f9af18feae36853e8b",
                    "sha256:da7558bbbfca5cd86373b11ece6b706d7be906b0d86f418e66795c922472072b",
                    "sha256:f36c8271ad37dd3c6001d5b995a1a9a1d0e2ab59992b80dca9cd4852b1686984",
                    "sha256:be57fb8e61c8035134c1e8eaddd605c5db46471f1c928fedce7645e23e5adce9"
                ]
            }
        },
        "1.14.15-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:1caf6b0a4de3b1ab2428fde7916b5557a1159304e3df544ab087b5194e6a4833",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6ab5ee5a59e50b57b6a39c78a81f1c5c6405f14432fe891054d75c685640c185",
            "container_config": {
                "Hostname": "6ab5ee5a59e5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1caf6b0a4de3b1ab2428fde7916b5557a1159304e3df544ab087b5194e6a4833",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:47:02.452206394Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:58:14.671390111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd07f77a2b2741ca6bda80d9203be9c7274cf73145bff778cf000db0d8d4e903 in / "
                },
                {
                    "created": "2020-12-16T23:58:15.972713651Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:25:33.553746856Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:25:37.823411087Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:25:38.880042126Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:35.84597944Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:46:54.24799464Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:46:58.60870939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:46:59.397435985Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:47:01.605021871Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:47:02.452206394Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:72bbe6b5204e7df9466d6597c4888cf950f0b379bf476a76925feabf17e94aa9",
                    "sha256:9fd922773d91aa676b776015430607b98bd6ed70b23c249f58a8107da7044493",
                    "sha256:5b53f63682e42e9ae4032a4066425b37019f87bb5dbee22312b5484222dd7e9f",
                    "sha256:27ca82007b8d89aeef09d8e36da5812b27b6ed67eb90b04f306b40b7c024f5f5",
                    "sha256:64ea7a2980181647fe624c004612943a85124af390b46ed1145a7ecd702a3b0e"
                ]
            }
        },
        "1.14.15-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:7d1a9faaefbd89ec5be4d8cea5ad7a1ae817e347ccea4861b20a98b8408035a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "254c03b73b002753c7d24527fcdf3755f8edb6ad7173a6ae95463d9c6dd3f4b7",
            "container_config": {
                "Hostname": "254c03b73b00",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:7d1a9faaefbd89ec5be4d8cea5ad7a1ae817e347ccea4861b20a98b8408035a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T02:44:27.755578885Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:58:03.263157043Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:98a89b90a8b442eed5301790dd2bd3a27391c5e4426126eed9d1cf44e70f8857 in / "
                },
                {
                    "created": "2021-01-28T23:58:04.19249348Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:40:32.200697251Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:40:34.598666866Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:40:35.350796312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:40:59.860944517Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:17.558042453Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T02:44:22.667707673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:23.707605372Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T02:44:26.692793171Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T02:44:27.755578885Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a015b81e4aacb46ff7618b5d344104ee58d26f5e950b3197bf493e22640bf092",
                    "sha256:5c103fe8d7cb0fc3bd3b55c15d22e07349ae7e149e51b12127db6ce9bdf203a5",
                    "sha256:6fd18d26a41e9ce371618cd929762e319ea2891987e367e17e1d2aeaa2badd44",
                    "sha256:09c6cecf868d317562a302e165fa0d782a7396e57d69165a424f23dd2adb59fe",
                    "sha256:c3ba2001727220021153dd3577698f0bd7d5a9a702af569b32b9d1bef245c4d2"
                ]
            }
        },
        "1.14.15-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d7c471cad7123135c6de2d0167c3fee979889e60f4c4a59b97e60e38c68bd855",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7aff7a518e1520d76d745cee4a1ac4c1de7b79e6ab516889536a313d9f40b65d",
            "container_config": {
                "Hostname": "7aff7a518e15",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d7c471cad7123135c6de2d0167c3fee979889e60f4c4a59b97e60e38c68bd855",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T19:43:31.251232724Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T03:00:29.807868315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:817a4ff41fcac0be44e95d3f0a51c9fa878d16dac7cdab68bfc445f630c43c22 in / "
                },
                {
                    "created": "2021-02-09T03:00:33.461043597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T04:25:53.411262318Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T04:26:05.34705974Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T04:26:44.355510104Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T19:41:17.881834851Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T19:41:19.852532414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:42:59.910218668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:43:24.942734357Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T19:43:27.84941387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:43:28.52025471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:43:30.424983889Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T19:43:31.251232724Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e875d96c6e0f67f89a84cd8d9ac07df28f9430a5af1f4a654659c9410c26c11",
                    "sha256:969b7ca2e690c7e108b51efe8c365ad41afe0490d1c90e9b9235ca86e8757e6d",
                    "sha256:5955349453e7d64b48490b5b264bc34220644ee13da3fbb118b82cf999c6eb98",
                    "sha256:ee1f2c9874aac24f4a15b1d67a5d9f9a825eb0b3e1f7fb669f774e13d9b1a180",
                    "sha256:a73f63fe58f2673436e3bd2c4dbc7d15ed0c4757a65313eb35d83244a096e9b1",
                    "sha256:042be7159fd17b37795272c16989e42d3afd55301d89c13d0dd9ce25b6046cac",
                    "sha256:acd08f37ff55608ce30f9b1cf585b88289a925be0e226160c7bbf21c17aa6ba6"
                ]
            }
        },
        "1.14.15-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:71e87fc7478e4664f2b2386aa093b834d877ac358467e7c1701a89d73eeac1b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59d37de2e1cb77ae88fab7fd78d33061d138ca8a1d9e27a5c11f0541c8960bba",
            "container_config": {
                "Hostname": "59d37de2e1cb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:71e87fc7478e4664f2b2386aa093b834d877ac358467e7c1701a89d73eeac1b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T19:44:37.065200358Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T03:04:53.544734173Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f884b9fc23d1b8ad0bd21aa823afd0ee186bdebb6829ccba72f77caaeffd8d12 in / "
                },
                {
                    "created": "2021-02-09T03:04:55.33212389Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T04:32:28.93199466Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T04:32:39.005902544Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T04:33:19.066565538Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T19:44:03.687432788Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T19:44:05.505257113Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:44:06.160970121Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:44:30.20141318Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T19:44:33.538094494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:44:34.152648989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T19:44:36.246883872Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T19:44:37.065200358Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ed066485a37e7e3c5bed6164c5d238f2199f2fd3f834e90ff4a6d6a39c865b7e",
                    "sha256:4614a32470a6c1737ce72ca271c911015fd49f2ac809a7594fcdc0beb56f43e8",
                    "sha256:69719eee70cfa2b96de6c488bab87bedc8a016b076cf1ab66a5e60428ced0001",
                    "sha256:d70775839f494a04e66247c65dbfbfcdd687f570d1dc5ab202dac1f4cdb01686",
                    "sha256:f9b2945534b8d6a32b58bbb7648caac8ca6553877eeef94316d1fa5c04e2caa9",
                    "sha256:70a72c6064709f70a36cd369145e02e7a27cbc20c2b380baacae0bf09bf70382",
                    "sha256:f0926715ba0232b328bae15594a6d42e25fc6e29643ea9369f6ca4a3a689549c"
                ]
            }
        },
        "1.14.2-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff0e393afb881e60285305421091a7629e1916431c84751e5077364b8498536e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2099db52ad5dcd1a52de0e06a527e62ca3d9b033ca6d29eaf103cf6a6bd525a",
            "container_config": {
                "Hostname": "e2099db52ad5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff0e393afb881e60285305421091a7629e1916431c84751e5077364b8498536e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T02:51:44.648791975Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-24T02:27:43.722194959Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:51:31.904798504Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '98de84e69726a66da7b4e58eac41b99cbe274d7e8906eeb8a5b7eb0aadee7f7c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-24T02:51:38.046555255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:51:39.865978854Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:51:43.730125588Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-24T02:51:44.648791975Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:bcd327f0b6621f8b78719bfbaa67fe61c0b7a6c0b537cd46f5a4f834f72b825f",
                    "sha256:7657f0510fa8906651a74a87d7ed8f0c1bcd36b8951c484dd215622ee1f56f94"
                ]
            }
        },
        "1.14.2-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff0e393afb881e60285305421091a7629e1916431c84751e5077364b8498536e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e2099db52ad5dcd1a52de0e06a527e62ca3d9b033ca6d29eaf103cf6a6bd525a",
            "container_config": {
                "Hostname": "e2099db52ad5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff0e393afb881e60285305421091a7629e1916431c84751e5077364b8498536e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-24T02:51:44.648791975Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-24T02:27:43.722194959Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:51:31.904798504Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '98de84e69726a66da7b4e58eac41b99cbe274d7e8906eeb8a5b7eb0aadee7f7c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-24T02:51:38.046555255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:51:39.865978854Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:51:43.730125588Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-24T02:51:44.648791975Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:bcd327f0b6621f8b78719bfbaa67fe61c0b7a6c0b537cd46f5a4f834f72b825f",
                    "sha256:7657f0510fa8906651a74a87d7ed8f0c1bcd36b8951c484dd215622ee1f56f94"
                ]
            }
        },
        "1.14.2-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8ed3eaea5a1956e13a9ee092d35b4e11224793e1f536cb248ecb669a5139acc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d3f6b5bbde9600eafa37f0c61532210b3995a833f225870cc7d7263cc8c68d90",
            "container_config": {
                "Hostname": "d3f6b5bbde96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c8ed3eaea5a1956e13a9ee092d35b4e11224793e1f536cb248ecb669a5139acc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T19:32:40.226758994Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T01:03:01.732247541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:67087d9a080132a9a5865637874fa3dab5059ac619630d071c563e75a7a5d977 in / "
                },
                {
                    "created": "2020-04-23T01:03:02.683167789Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T04:07:54.291761436Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T04:08:09.356123774Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-04-23T04:08:49.238115274Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T19:32:08.573018847Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T19:32:11.437984301Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:32:31.851007196Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6272d6e940ecb71ea5636ddb5fab3933e087c1356173c61f4a803895e947ebb3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='eb4550ba741506c2a4057ea4d3a5ad7ed5a887de67c7232f1e4795464361c83c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='bb6d22fe5806352c3d0826676654e09b6e41eb1af52e8d506d3fa85adf7f8d88' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cab5f51e6ffb616c6ee963c3d0650ca4e3c4108307c44f2baf233fcb8ff098f6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='48c22268c81ced9084a43bbe2c1596d3e636b5560b30a32434a7f15e561de160' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='501cc919648c9d85b901963303c5061ea6814c80f0d35fda9e62980d3ff58cf4' ;; \t\t*) goRelArch='src'; goRelSha256='98de84e69726a66da7b4e58eac41b99cbe274d7e8906eeb8a5b7eb0aadee7f7c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T19:32:35.631434566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:32:36.611426711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:32:39.395241707Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T19:32:40.226758994Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3dd398bff6c9b25fbf6459da668851c285f1285c4f34297d8c5e9dc83e4ba1a8",
                    "sha256:29f29ea03ca5e6eb32a225bb49aeb09a9508cd51e052ef35fc6f556eef7015b3",
                    "sha256:fe2cd8182c65fbcb7dadda209dec95c389c906ea9d54b18f85135f4730d0b5b3",
                    "sha256:ee1da15fc58f713421396676b62514326628e9a3b6d2dc9dbb622423784ac18e",
                    "sha256:95f2d08540053a9145cb879f44d064878fcf87bb6cdafcc01da59e0b000decc0",
                    "sha256:fff841c4089806c9afd58ef611fa893368bc22105ad3a370a705d8c4f50c7c07",
                    "sha256:6015ba418a8b68da9aa6e16a21539985ec317aecad5f40d0af5bc7deb5959589"
                ]
            }
        },
        "1.14.2-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f26565ef1026cc0c3352fc8cb86518a10b251084a399f064fa62d7ec54e436e0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3c898ff95f2264e8ee878287e523fc851c7d14e8f1015c26898a56dbd711ce1c",
            "container_config": {
                "Hostname": "3c898ff95f22",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f26565ef1026cc0c3352fc8cb86518a10b251084a399f064fa62d7ec54e436e0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T19:33:46.455392482Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T01:07:13.233759087Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af00fcaffcce2a55b74d080d33cbc9ce5bcf91faf659b887f508c06803fa64bd in / "
                },
                {
                    "created": "2020-04-23T01:07:15.686716341Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T04:23:24.254013385Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T04:23:38.186168124Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-04-23T04:24:29.005678333Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T19:33:14.06999749Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-23T19:33:15.886909789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:33:36.6978134Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6272d6e940ecb71ea5636ddb5fab3933e087c1356173c61f4a803895e947ebb3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='eb4550ba741506c2a4057ea4d3a5ad7ed5a887de67c7232f1e4795464361c83c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='bb6d22fe5806352c3d0826676654e09b6e41eb1af52e8d506d3fa85adf7f8d88' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cab5f51e6ffb616c6ee963c3d0650ca4e3c4108307c44f2baf233fcb8ff098f6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='48c22268c81ced9084a43bbe2c1596d3e636b5560b30a32434a7f15e561de160' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='501cc919648c9d85b901963303c5061ea6814c80f0d35fda9e62980d3ff58cf4' ;; \t\t*) goRelArch='src'; goRelSha256='98de84e69726a66da7b4e58eac41b99cbe274d7e8906eeb8a5b7eb0aadee7f7c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T19:33:41.305549066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:33:41.96731846Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T19:33:45.246188828Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T19:33:46.455392482Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b476170020ddcba271820e9d647ee245d6ef93c85b63d4e35edabee0680b64f5",
                    "sha256:1e794c5efb36ad525582636452b12d237c643e3a792ba18786369112af70dc4c",
                    "sha256:8a0eebbc108015d9e0fb3f37061c156206a5fe7a6f4a96929f97b829175fb7fd",
                    "sha256:960b941d22b23924a8b813b89f653cb5811e11bc93d322da8dee57378da087a1",
                    "sha256:f345e871ef23c33ddd9ee31fbb4aed39cefd980b782094405c42923a8ed78797",
                    "sha256:bf3069bc27f31127d08a5bfc8418ab978431a8c2c4dc8d97505ff9d38b3e0a50",
                    "sha256:d8b0c72362dbba29dffc93fea26c467a89d663e68c4f39d2f4fcb5320f74cb34"
                ]
            }
        },
        "1.14.3-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:435a6445a83f2f47ea18fbc61a56ead52aadfe33cf4f7899a614c1732e813648",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d3320acf4854bd6a1a83aa635a56f461e25ee66dd5361b25682dfd7a52cc515d",
            "container_config": {
                "Hostname": "d3320acf4854",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:435a6445a83f2f47ea18fbc61a56ead52aadfe33cf4f7899a614c1732e813648",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T01:12:55.88270908Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T00:47:38.194573737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:12:44.459214156Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '93023778d4d1797b7bc6a53e86c3a9b150c923953225f8a48a2d5fabc971af56 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T01:12:52.8600622Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:12:53.427065884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:12:55.145280308Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T01:12:55.88270908Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:fb1d68d3a38e2c866a9714cc978967c767ce25fe2a2405ec745b052a3c7e1ae4",
                    "sha256:7c5170eef6b83c8bc2b2f6f6eee0b45ce47ea8e31c21e771fffb5e566f93e957"
                ]
            }
        },
        "1.14.3-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:435a6445a83f2f47ea18fbc61a56ead52aadfe33cf4f7899a614c1732e813648",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d3320acf4854bd6a1a83aa635a56f461e25ee66dd5361b25682dfd7a52cc515d",
            "container_config": {
                "Hostname": "d3320acf4854",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:435a6445a83f2f47ea18fbc61a56ead52aadfe33cf4f7899a614c1732e813648",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T01:12:55.88270908Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-16T00:47:38.194573737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:12:44.459214156Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '93023778d4d1797b7bc6a53e86c3a9b150c923953225f8a48a2d5fabc971af56 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T01:12:52.8600622Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:12:53.427065884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T01:12:55.145280308Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T01:12:55.88270908Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:fb1d68d3a38e2c866a9714cc978967c767ce25fe2a2405ec745b052a3c7e1ae4",
                    "sha256:7c5170eef6b83c8bc2b2f6f6eee0b45ce47ea8e31c21e771fffb5e566f93e957"
                ]
            }
        },
        "1.14.3-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c05e527fddb91fadc874c2f308cd0f415b22c8212f5494665cd442c0318936d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ab43dccc314dd8b77f04c33b58d80fac6f0d9cab8a7215238fe9596c782c1b6c",
            "container_config": {
                "Hostname": "ab43dccc314d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c05e527fddb91fadc874c2f308cd0f415b22c8212f5494665cd442c0318936d7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T00:46:02.47086034Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-15T00:59:31.840323154Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3b126babe4f145c735dff1d1a8828e523967279b9f25d547fce6f4d5422d0a4 in / "
                },
                {
                    "created": "2020-05-15T00:59:33.668285267Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T10:34:04.535186078Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T10:34:17.63694016Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T10:35:01.812588654Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T00:45:25.052766449Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T00:45:27.640014496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T00:45:54.069671705Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1c39eac4ae95781b066c144c58e45d6859652247f7515f0d2cba7be7d57d2226' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b1c3a648c3c8877b98dfba1996dec604c8fb8899db07994b2dfd47b0063367c8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7a593e2ee079d83a1943edcd1c9ed2dae7529666fce04de8c142fb61c7cdd3e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='46f8c744788103e8aeceb12c7d71eb16a58fe43e7e4711055fa9ef4bae50bff7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='329359e2b72839696e78b6c0a96fd939e28e7435d852f31107f68037dd5f7442' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='1aad312fc7fa85d663e8226237cc7519b2599b88a213098abc10de8e84d6cfab' ;; \t\t*) goRelArch='src'; goRelSha256='93023778d4d1797b7bc6a53e86c3a9b150c923953225f8a48a2d5fabc971af56'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T00:45:57.827259902Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T00:45:59.018480342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T00:46:01.518904049Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T00:46:02.47086034Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7362fe59fbc7c68c038ffc778fdd6154ce23d10e2027075d1bf2116daaac998",
                    "sha256:3db0492984853cb0886ad4beecad3b01b60b25d9b06b4a8c92edd691a03b1b05",
                    "sha256:4e95aa05a98dec786c7383dad2b821b12640f496bc2f3b1406cdaaff04dbd437",
                    "sha256:2b0daa557f6c1091d46ee5acc76437c3a108589d7bf4fb47b07afe31d1494ade",
                    "sha256:682a447ffeaf2d9a5a86b05cbe4e82d35e1f80f484170313e411472fac7e4bae",
                    "sha256:a6870bd212760386110bcf87545dc42e8f5c5acf1a7e65c7b9ae3d0022b62c06",
                    "sha256:67a81841dba0b3c21a28b30bea226a4829df66f740f5cb6832ebe4f06802250f"
                ]
            }
        },
        "1.14.3-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:997d6deb5b62b1bc6dd3304069fc5ec283d41785a0550988cc9ddab2fb5c9301",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6b431f8ce20389479b03244721fa0f4a7161ebf332b7763f0368bf6eaa3f3021",
            "container_config": {
                "Hostname": "6b431f8ce203",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:997d6deb5b62b1bc6dd3304069fc5ec283d41785a0550988cc9ddab2fb5c9301",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-16T00:47:27.582608687Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-15T01:06:22.053100565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:89db8453485648b09e63411b6e2ad84f08844ee55cb115e59cdc8c8cb1c29a1f in / "
                },
                {
                    "created": "2020-05-15T01:06:23.309959849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T10:48:54.710879293Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T10:49:06.971801308Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T10:49:50.757263824Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T00:46:54.089429947Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-16T00:46:56.043203933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T00:47:17.041018571Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1c39eac4ae95781b066c144c58e45d6859652247f7515f0d2cba7be7d57d2226' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b1c3a648c3c8877b98dfba1996dec604c8fb8899db07994b2dfd47b0063367c8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7a593e2ee079d83a1943edcd1c9ed2dae7529666fce04de8c142fb61c7cdd3e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='46f8c744788103e8aeceb12c7d71eb16a58fe43e7e4711055fa9ef4bae50bff7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='329359e2b72839696e78b6c0a96fd939e28e7435d852f31107f68037dd5f7442' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='1aad312fc7fa85d663e8226237cc7519b2599b88a213098abc10de8e84d6cfab' ;; \t\t*) goRelArch='src'; goRelSha256='93023778d4d1797b7bc6a53e86c3a9b150c923953225f8a48a2d5fabc971af56'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-16T00:47:21.082196354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T00:47:22.42314563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-16T00:47:25.971189757Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-16T00:47:27.582608687Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9c974cf55649aa78a8d6e556d4022b9e4d15c5534fe016493a93af28ed14e11",
                    "sha256:71fe1b566166d1f59c3b2fe19edb5e2332be0e66a5dbcee5a268816c5aeb21b0",
                    "sha256:456b2904672c5d965f8817687221a1337d75afb154e5dce765ceb7d75d97d0e5",
                    "sha256:725edce3811514b4044fb2efe339abee7f1a63466cb5e0f25d9650d680afb8bc",
                    "sha256:c0ecc3b0a77a911d3d82156c1f30d1af4f445cc12982b0892121c7386e6726ca",
                    "sha256:84352eff6c691c3a97189d7a9e4b29cc3035676122f73cbaba34afe7c6f3b4da",
                    "sha256:b4a9c41e2ac945547cfe20cb2375ca78e9bc7a1db5a34f3efda2c5e907d286d9"
                ]
            }
        },
        "1.14.4-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ca24e308a73cde2e421d2945749fbc84a7b9bc1d8161c34861070d9d5f65097",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f90d995072d2a45b0515871ff99f0f9a3c32db12eb2183e6969b984e07db5261",
            "container_config": {
                "Hostname": "f90d995072d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ca24e308a73cde2e421d2945749fbc84a7b9bc1d8161c34861070d9d5f65097",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T01:34:44.257347106Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T01:11:01.535226203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:34:36.300749427Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T01:34:38.192972114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:34:39.296776152Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:34:43.576706887Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T01:34:44.257347106Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:316a7f74635e1d5a71d35202224a34377c6d260e1de2f8d3dd9a47fdd3772fa1",
                    "sha256:96fc7556f88d921ae5ab47b5c08724d34fa51269af80ae72130a339696b46881"
                ]
            }
        },
        "1.14.4-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:14111af8e8e1e506d0b707060fc7fa1fcf119b177292bdf18eeeb0ff7b776fc3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2420a57d103d5ac40e2fa3741919f3779b31f1f95f6d33d0d7e42417ab638496",
            "container_config": {
                "Hostname": "2420a57d103d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:14111af8e8e1e506d0b707060fc7fa1fcf119b177292bdf18eeeb0ff7b776fc3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T01:59:54.887656766Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T01:35:08.630418803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:59:38.386653274Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T01:59:49.811974056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:59:51.823871373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:59:54.214500301Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T01:59:54.887656766Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:5161ed9198f8bea5e7b87d30c1df3bcb27597011a3edd96907c564d2ebe2b36f",
                    "sha256:5f4b8bd3feb48ec24343be41acc92629d198d35830fec6a663e63b348d2bad76"
                ]
            }
        },
        "1.14.4-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ca24e308a73cde2e421d2945749fbc84a7b9bc1d8161c34861070d9d5f65097",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f90d995072d2a45b0515871ff99f0f9a3c32db12eb2183e6969b984e07db5261",
            "container_config": {
                "Hostname": "f90d995072d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ca24e308a73cde2e421d2945749fbc84a7b9bc1d8161c34861070d9d5f65097",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T01:34:44.257347106Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T01:11:01.535226203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:34:36.300749427Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T01:34:38.192972114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:34:39.296776152Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:34:43.576706887Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T01:34:44.257347106Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:316a7f74635e1d5a71d35202224a34377c6d260e1de2f8d3dd9a47fdd3772fa1",
                    "sha256:96fc7556f88d921ae5ab47b5c08724d34fa51269af80ae72130a339696b46881"
                ]
            }
        },
        "1.14.4-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01707cb8913822aaefb5d8b92b3450d47b4354d4f550d00a9e2c388db4412c4a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9509cc3c191fe28c119398aa98564830c73c91628d49c50240cc1004adc88f21",
            "container_config": {
                "Hostname": "9509cc3c191f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01707cb8913822aaefb5d8b92b3450d47b4354d4f550d00a9e2c388db4412c4a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-23T21:27:13.684211367Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:00:40.240297572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:35073a186411c4b773a9d4d540ec0693ced845cb847b43d8465f9579174cd2b0 in / "
                },
                {
                    "created": "2020-06-09T01:00:45.422649393Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T01:46:25.589392797Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T01:46:57.954146341Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T01:48:31.958640374Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T18:36:04.519824732Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:26:08.292062009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:26:49.249443474Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:27:08.92050626Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aed845e4185a0b2a3c3d5e1d0a35491702c55889192bb9c30e67a3de6849c067' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='e20211425b3f797ca6cd5e9a99ab6d5eaf1b009d08d19fc8a7835544fa58c703' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='05dc46ada4e23a1f58e72349f7c366aae2e9c7a7f1e7653095538bc5bba5e077' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4179f406ea0efd455a8071eaaaf1dea92cac5c17aab89fbad18ea2a37623c810' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b335f85bc935ca3f553ad1bac37da311aaec887ffd8a48cb58a0abb0d8adf324' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='17f2ae0bae968b3d909daabc5cc4a37471ddb70ec49076b78702291e6772d71a' ;; \t\t*) goRelArch='src'; goRelSha256='7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-06-23T21:27:10.919076693Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:27:11.455970676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:27:13.078024005Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-23T21:27:13.684211367Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e6070c2111110dc7d213895db88659b4146b537f9446c6aa29f2e13ebae8dfaf",
                    "sha256:8894abcd4aadb18aa97f0ac8a6f99699090681285abf6308391487831016fa01",
                    "sha256:8fa1c8dbd532c2a24e90650ea026a575ead946241546acff4cb6d7298a2e5bcf",
                    "sha256:b0e9797952fd90698009450953abae1bc3f66de554ab77c476fb0264f4c93d4b",
                    "sha256:c7c3017811e15af8e37d5430edea241e597393f8e2358e835cb2fe0d331744f6",
                    "sha256:e7ea0a3d946e18f03153849293c997b62c49968e7dab389041e74bdbb68889c5",
                    "sha256:20de2a71903c53419a957de3db8f63e669c57b186fec317a14f27f0be5c44793"
                ]
            }
        },
        "1.14.4-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4626ee96fe2719c4a998e005cc1d7ba7b827aa26cdc3fae1c903946cc148b533",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5b9b7da1c2020b6f91c44c07f2e421d66a27bd3958d81702d117f1facaf6004e",
            "container_config": {
                "Hostname": "5b9b7da1c202",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4626ee96fe2719c4a998e005cc1d7ba7b827aa26cdc3fae1c903946cc148b533",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-23T21:27:47.725914212Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:06:07.3208771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c0b9ed1244ec0acfc9054c7cb80c768878e3da99740f981ba3a82bdd854305db in / "
                },
                {
                    "created": "2020-06-09T01:06:09.662318409Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:02:44.875653819Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:02:56.42312136Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:03:44.991347616Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T18:37:09.849868686Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:27:20.773737061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:27:21.380430826Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:27:42.296717157Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aed845e4185a0b2a3c3d5e1d0a35491702c55889192bb9c30e67a3de6849c067' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='e20211425b3f797ca6cd5e9a99ab6d5eaf1b009d08d19fc8a7835544fa58c703' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='05dc46ada4e23a1f58e72349f7c366aae2e9c7a7f1e7653095538bc5bba5e077' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4179f406ea0efd455a8071eaaaf1dea92cac5c17aab89fbad18ea2a37623c810' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b335f85bc935ca3f553ad1bac37da311aaec887ffd8a48cb58a0abb0d8adf324' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='17f2ae0bae968b3d909daabc5cc4a37471ddb70ec49076b78702291e6772d71a' ;; \t\t*) goRelArch='src'; goRelSha256='7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-06-23T21:27:44.55794969Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:27:45.155035342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:27:47.090034527Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-23T21:27:47.725914212Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c03baeddd805de01cf6073d95c620bfd3120692906e38ee2c8aef0f8259cf106",
                    "sha256:69519c783cb4c65e2ca7791b2dcfd29b2e46dac7142ced6b54ba04797c2d700c",
                    "sha256:753ee8f241c2b86398b8c50eea3f5056a192a902daa22ee4a5f0d188ef674c37",
                    "sha256:399077523746363bdcac90919a1c85caea9a6247115b66a0c4a75690d2430bb3",
                    "sha256:491600dbaba6a580f911a92f0cab3b2b8927da1fbe6399a104f8fb73fc766544",
                    "sha256:65f14a87b96b48ad8f30f4ba611a292370b7aab28e974ac8a294f1c3e2a845d0",
                    "sha256:00f17efcb55d58b707abaeb6fa8855926ac3cf1e246604be45abbf80730f6d81"
                ]
            }
        },
        "1.14.5-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ca70b1061abae9ba1a0048702dcc14eccb8a26a10e767a630ecef0b1b6058a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ee91ff57f124e1e7aeafcf157dc3d3e05da4cc0b0a72e27f9cd3bbfcee09543",
            "container_config": {
                "Hostname": "2ee91ff57f12",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ca70b1061abae9ba1a0048702dcc14eccb8a26a10e767a630ecef0b1b6058a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:02:54.071089727Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T17:59:05.877394894Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:02:47.592416887Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ca4c080c90735e56152ac52cd77ae57fe573d1debb1a58e03da9cc362440315c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:02:50.85807301Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:02:51.456998708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:02:53.468265588Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:02:54.071089727Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:a81056adad52d49e1883d970367d2f5e05e4b31f4e815dcaff488ade74fd2aa6",
                    "sha256:a4006daf873dcca5f7868f2ee6e7f921bf97a1ab9c9e29d7bb1d0d333a9e7429"
                ]
            }
        },
        "1.14.5-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dd20757eb1c8dea975c632dd78443f7e46573de52187eafe13032921db3a166c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "27133d0f1c9703110e202264c10985ebe26a08a1193cf073c9c948364d4841ae",
            "container_config": {
                "Hostname": "27133d0f1c97",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dd20757eb1c8dea975c632dd78443f7e46573de52187eafe13032921db3a166c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:05:46.049853478Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:03:13.482117069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:05:40.292548373Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ca4c080c90735e56152ac52cd77ae57fe573d1debb1a58e03da9cc362440315c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:05:43.217530477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:05:43.755812004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:05:45.374711007Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:05:46.049853478Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:74c75797d097806c3c18e5873ef35a6c6ddb34178ad1252c806d05fe26fa8641",
                    "sha256:e531abdc9bdcf37c08c708924b41a28684621c0257bc56fbd60c0505fc492f70"
                ]
            }
        },
        "1.14.5-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ca70b1061abae9ba1a0048702dcc14eccb8a26a10e767a630ecef0b1b6058a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ee91ff57f124e1e7aeafcf157dc3d3e05da4cc0b0a72e27f9cd3bbfcee09543",
            "container_config": {
                "Hostname": "2ee91ff57f12",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4ca70b1061abae9ba1a0048702dcc14eccb8a26a10e767a630ecef0b1b6058a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:02:54.071089727Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T17:59:05.877394894Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:02:47.592416887Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ca4c080c90735e56152ac52cd77ae57fe573d1debb1a58e03da9cc362440315c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:02:50.85807301Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:02:51.456998708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:02:53.468265588Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:02:54.071089727Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:a81056adad52d49e1883d970367d2f5e05e4b31f4e815dcaff488ade74fd2aa6",
                    "sha256:a4006daf873dcca5f7868f2ee6e7f921bf97a1ab9c9e29d7bb1d0d333a9e7429"
                ]
            }
        },
        "1.14.5-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01fa6a9dcae42ba7ba9189a65e0cfd70758e3aa51ce44a810b1e55563b9b5639",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f586f2c1ed7a60217db89ff5d3145c3e85c395cb530d664f7b672cd91e34c9d3",
            "container_config": {
                "Hostname": "f586f2c1ed7a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01fa6a9dcae42ba7ba9189a65e0cfd70758e3aa51ce44a810b1e55563b9b5639",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T17:58:22.610807904Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:00:40.240297572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:35073a186411c4b773a9d4d540ec0693ced845cb847b43d8465f9579174cd2b0 in / "
                },
                {
                    "created": "2020-06-09T01:00:45.422649393Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T01:46:25.589392797Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T01:46:57.954146341Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T01:48:31.958640374Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T18:36:04.519824732Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:26:08.292062009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T17:57:57.229607062Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T17:58:17.290518388Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='82a1b84f16858db03231eb201f90cce2a991078dda543879b87e738e2586854b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='fc99d9cea2f2699d338f7e0ceb40d89c02019eec2b6500011a8743104274a46c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='27a3b3ca4fd60c8680cd2235d5ca38cad41ee8c41bd61891d39a8501ada5f677' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a2f8e961b2eb4b477f0e938e9e6f08d1aac6d677c6d934ac1e532d5c9314bf3e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='581b858092e2a471c06e484f62206d3cde72f89e1cbde6284cfa09f824457b24' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3ef0d07ecfcfe0a4bdf1cd68e769887a3a4d3279f5edc84ea08cc2c9a6ef1d1b' ;; \t\t*) goRelArch='src'; goRelSha256='ca4c080c90735e56152ac52cd77ae57fe573d1debb1a58e03da9cc362440315c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-14T17:58:19.741449728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T17:58:20.291794843Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T17:58:21.947111012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T17:58:22.610807904Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e6070c2111110dc7d213895db88659b4146b537f9446c6aa29f2e13ebae8dfaf",
                    "sha256:8894abcd4aadb18aa97f0ac8a6f99699090681285abf6308391487831016fa01",
                    "sha256:8fa1c8dbd532c2a24e90650ea026a575ead946241546acff4cb6d7298a2e5bcf",
                    "sha256:b0e9797952fd90698009450953abae1bc3f66de554ab77c476fb0264f4c93d4b",
                    "sha256:c7c3017811e15af8e37d5430edea241e597393f8e2358e835cb2fe0d331744f6",
                    "sha256:8f489d7bf3c33a5403a90146d121e314b69e58c1a3509ec570ea0de1338512cd",
                    "sha256:61be590bc67984dc76cd5b27b540b89933034f60bc010c6a280652482ce79e99"
                ]
            }
        },
        "1.14.5-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7bc5cf6e57dd9533cdb3d0de930a45ee5e8b6f3b447897e3bfd02e4ccec214c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b04d649d9c03f3d925e21b227a4e4fed3e70cf94ba70ca3002b3cecc397ec0fe",
            "container_config": {
                "Hostname": "b04d649d9c03",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7bc5cf6e57dd9533cdb3d0de930a45ee5e8b6f3b447897e3bfd02e4ccec214c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T17:58:56.365362909Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:06:07.3208771Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c0b9ed1244ec0acfc9054c7cb80c768878e3da99740f981ba3a82bdd854305db in / "
                },
                {
                    "created": "2020-06-09T01:06:09.662318409Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:02:44.875653819Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:02:56.42312136Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:03:44.991347616Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T18:37:09.849868686Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:27:20.773737061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T17:58:29.599986983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T17:58:51.078868059Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='82a1b84f16858db03231eb201f90cce2a991078dda543879b87e738e2586854b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='fc99d9cea2f2699d338f7e0ceb40d89c02019eec2b6500011a8743104274a46c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='27a3b3ca4fd60c8680cd2235d5ca38cad41ee8c41bd61891d39a8501ada5f677' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a2f8e961b2eb4b477f0e938e9e6f08d1aac6d677c6d934ac1e532d5c9314bf3e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='581b858092e2a471c06e484f62206d3cde72f89e1cbde6284cfa09f824457b24' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3ef0d07ecfcfe0a4bdf1cd68e769887a3a4d3279f5edc84ea08cc2c9a6ef1d1b' ;; \t\t*) goRelArch='src'; goRelSha256='ca4c080c90735e56152ac52cd77ae57fe573d1debb1a58e03da9cc362440315c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-14T17:58:53.418632572Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T17:58:53.978369878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T17:58:55.650445858Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T17:58:56.365362909Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c03baeddd805de01cf6073d95c620bfd3120692906e38ee2c8aef0f8259cf106",
                    "sha256:69519c783cb4c65e2ca7791b2dcfd29b2e46dac7142ced6b54ba04797c2d700c",
                    "sha256:753ee8f241c2b86398b8c50eea3f5056a192a902daa22ee4a5f0d188ef674c37",
                    "sha256:399077523746363bdcac90919a1c85caea9a6247115b66a0c4a75690d2430bb3",
                    "sha256:491600dbaba6a580f911a92f0cab3b2b8927da1fbe6399a104f8fb73fc766544",
                    "sha256:dff09deaec45e16546109c56ad3529bfe6e3afbb25c49b6f3c7bee72161c46e0",
                    "sha256:2a448d45e3aefcf973e89555f503078205650dac87c9faed42ddf3fc67b47321"
                ]
            }
        },
        "1.14.6-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:28cc2524ae9cfc3a9bb16712d0b3198151fc5b4c1fa42e729a5415ddc7642a68",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a2263dc74639e4a86c98ab31c0a4a9d749749dc97396880b927de7efe2b73528",
            "container_config": {
                "Hostname": "a2263dc74639",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:28cc2524ae9cfc3a9bb16712d0b3198151fc5b4c1fa42e729a5415ddc7642a68",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T03:12:31.612324322Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T02:04:27.422893014Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:11:12.4300063Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '73fc9d781815d411928eccb92bf20d5b4264797be69410eac854babe44c94c09 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T03:11:28.684062134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:11:35.226734522Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:12:18.411735147Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T03:12:31.612324322Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:a73430b07013ef191cf3730fca81ae2796ee6d458a2355048db1aed8ab29fc41",
                    "sha256:e4f504b5c33cd664272eab429548273aef1f909c9715fd2aeeb9e8facfe4375c"
                ]
            }
        },
        "1.14.6-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cd08a925ee4049fce21c2d99b15146c0771c66bbdec065553d854dd35d56a5a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "739b5e6b0538f50a77c614f3448e7bd1ea4cf143ac753a6916f17547b27902e4",
            "container_config": {
                "Hostname": "739b5e6b0538",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cd08a925ee4049fce21c2d99b15146c0771c66bbdec065553d854dd35d56a5a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T04:14:29.645631099Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T03:12:53.534722897Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T04:13:39.574258817Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '73fc9d781815d411928eccb92bf20d5b4264797be69410eac854babe44c94c09 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T04:13:48.398502819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T04:13:58.09264966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T04:14:23.72249502Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T04:14:29.645631099Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:5837550a244761d80567852b5b4fd1de494dfb36e00cbde68338861e958ebd4c",
                    "sha256:259dd9a9121a9dbb3ea8c896ea73ddb9e562d78e0a7a48ba0c461e471bd0ed0a"
                ]
            }
        },
        "1.14.6-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:28cc2524ae9cfc3a9bb16712d0b3198151fc5b4c1fa42e729a5415ddc7642a68",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a2263dc74639e4a86c98ab31c0a4a9d749749dc97396880b927de7efe2b73528",
            "container_config": {
                "Hostname": "a2263dc74639",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:28cc2524ae9cfc3a9bb16712d0b3198151fc5b4c1fa42e729a5415ddc7642a68",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T03:12:31.612324322Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T02:04:27.422893014Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:11:12.4300063Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '73fc9d781815d411928eccb92bf20d5b4264797be69410eac854babe44c94c09 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T03:11:28.684062134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:11:35.226734522Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T03:12:18.411735147Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T03:12:31.612324322Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:a73430b07013ef191cf3730fca81ae2796ee6d458a2355048db1aed8ab29fc41",
                    "sha256:e4f504b5c33cd664272eab429548273aef1f909c9715fd2aeeb9e8facfe4375c"
                ]
            }
        },
        "1.14.6-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:75aee90986c4fbd6b047a3084eeb3840a9cdfbd602a8f821dec5b08e22467f5c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b553756611f5c1682a808c1dbe6e437456fb45836245c3417412bc8ad0481b55",
            "container_config": {
                "Hostname": "b553756611f5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:75aee90986c4fbd6b047a3084eeb3840a9cdfbd602a8f821dec5b08e22467f5c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-05T01:42:03.575570457Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:41:26.134248914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:41:52.232462616Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='5c566ddc2e0bcfc25c26a5dc44a440fcc0177f7350c1f01952b34d5989a0d287' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='cab39cc0fdf9731476a339af9d7bcd8fc661bfa323abb1ce9d1633fb31daeb07' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='291bccfd7d7f1915599bbcc90e49d9fccfcb0004b7c62a2f5cdf0f96a09d6a3e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='17b2c4e26bd3a82a0a44499ae2d36e3f2155d0fe2f6b9a14ac6b7c5afac3ca6a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eb4c84e7b6aa9edb966c467dd6764d131a57d27afbd87cc8f6d10535df9e898' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cb1f2d001ce15e51f7c4bd43f15045ea23d49268010bb981110242a532138749' ;; \t\t*) goRelArch='src'; goRelSha256='73fc9d781815d411928eccb92bf20d5b4264797be69410eac854babe44c94c09'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-05T01:41:56.746908564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:41:57.518461652Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:42:02.686321171Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-05T01:42:03.575570457Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:659b92e6196812fab6602eb4a00075842a51b3630e70bfaebdbf2e8b16434cd3",
                    "sha256:6262f5844e2c7c18c299b586450837e9112b9b9845a5c2d30475cf26d8a7ffda"
                ]
            }
        },
        "1.14.6-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:fc666b041ffe483f1933dcf03aba6cddc1e6ddb72a5de8dbdc0f8a13f9c4166a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9eb53465e3b5da16894c2270d1f62da5ba00d8595bcf77e6dbc41ed0671cab36",
            "container_config": {
                "Hostname": "9eb53465e3b5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:fc666b041ffe483f1933dcf03aba6cddc1e6ddb72a5de8dbdc0f8a13f9c4166a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-05T01:43:17.834240682Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T05:01:04.874841639Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ba6f3203fb10e66124d03088d234e92fc908c572ec7eed268e866623a383a7d in / "
                },
                {
                    "created": "2020-08-04T05:01:07.939350474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T08:16:04.465529549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T08:16:44.245416999Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T08:18:19.547854109Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:38.536613259Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:40.729936373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:42:41.658642981Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:43:06.86804379Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='5c566ddc2e0bcfc25c26a5dc44a440fcc0177f7350c1f01952b34d5989a0d287' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='cab39cc0fdf9731476a339af9d7bcd8fc661bfa323abb1ce9d1633fb31daeb07' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='291bccfd7d7f1915599bbcc90e49d9fccfcb0004b7c62a2f5cdf0f96a09d6a3e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='17b2c4e26bd3a82a0a44499ae2d36e3f2155d0fe2f6b9a14ac6b7c5afac3ca6a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eb4c84e7b6aa9edb966c467dd6764d131a57d27afbd87cc8f6d10535df9e898' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cb1f2d001ce15e51f7c4bd43f15045ea23d49268010bb981110242a532138749' ;; \t\t*) goRelArch='src'; goRelSha256='73fc9d781815d411928eccb92bf20d5b4264797be69410eac854babe44c94c09'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-05T01:43:09.497737167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:43:12.188973688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-05T01:43:17.122689624Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-05T01:43:17.834240682Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7352564cb071e9fe8088197f4901584095f1e55fdc9ba28cc77b91045be23467",
                    "sha256:9dd7fe8f21549089acbd73452166a5697ac31784ca821330d7b05cf9b6b7f2fc",
                    "sha256:b5fe9b0ba4a73f8ca29f530ec91f65a7176c09183793ad44bf1cfffa5041ca22",
                    "sha256:d52fc9488b3ec18dc8b3724b27e506fc825f5f74788f4e3258868408bdf266e3",
                    "sha256:02d2df8ece5e9513b029bf95088173f339b912987e12e99cc1d7de65c6c9c76d",
                    "sha256:df1de5ef0d0101489a0efae1fccbd1f5df0df37d88d5fee584704bd5ee7a6470",
                    "sha256:902900576cb9c1e45a3f685b98beabcd825743a9403bb3442caa491eb69be9e4"
                ]
            }
        },
        "1.14.7-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:18d0b1f738de5bc880c2e5ff9ddb5b9c82a2b506b9c0a1641aaf5c31fc22dcdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dec58f908263cf843d90a36cec437b4af5edae88850d199000759a488350cb80",
            "container_config": {
                "Hostname": "dec58f908263",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:18d0b1f738de5bc880c2e5ff9ddb5b9c82a2b506b9c0a1641aaf5c31fc22dcdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T03:07:15.864019909Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:57:09.691136369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T03:06:16.158896177Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.7.src.tar.gz'; \tsha256='064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-01T03:06:29.69347454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T03:06:39.702787053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T03:07:04.163023418Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T03:07:15.864019909Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:cb1ef52a06b74aabc289c34bdf76c27abe687f1510e9607c56d68e4df5c033d8",
                    "sha256:25b706bb3b41ae2c6c2d63ffb7edaff5af422b19dfe4f277c69ba273fc5307c4"
                ]
            }
        },
        "1.14.7-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d6c95a91f80fdb626d314f3f01d120fa8927bec215f34d4c3104bf403c64217",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6f551b056b666d88e07a3aaa725de32faf0f514ce6337ddf330936d98552c877",
            "container_config": {
                "Hostname": "6f551b056b66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d6c95a91f80fdb626d314f3f01d120fa8927bec215f34d4c3104bf403c64217",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T04:15:04.450577746Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T03:07:42.695169257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T03:07:54.378387953Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T04:14:07.684424367Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.7.src.tar.gz'; \tsha256='064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-01T04:14:21.071473646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T04:14:28.118142019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T04:14:57.488752947Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T04:15:04.450577746Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:6e68ed6acc0d55e3e2fd74061598ecf2845473299e863d60cc71109194d4c059",
                    "sha256:9eed84436cd4e2aae6e39f0986c6490af5c0a6c72120058f379b36abb4905f09"
                ]
            }
        },
        "1.14.7-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:18d0b1f738de5bc880c2e5ff9ddb5b9c82a2b506b9c0a1641aaf5c31fc22dcdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dec58f908263cf843d90a36cec437b4af5edae88850d199000759a488350cb80",
            "container_config": {
                "Hostname": "dec58f908263",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:18d0b1f738de5bc880c2e5ff9ddb5b9c82a2b506b9c0a1641aaf5c31fc22dcdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T03:07:15.864019909Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:57:09.691136369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T03:06:16.158896177Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.7.src.tar.gz'; \tsha256='064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-01T03:06:29.69347454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T03:06:39.702787053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T03:07:04.163023418Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T03:07:15.864019909Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:cb1ef52a06b74aabc289c34bdf76c27abe687f1510e9607c56d68e4df5c033d8",
                    "sha256:25b706bb3b41ae2c6c2d63ffb7edaff5af422b19dfe4f277c69ba273fc5307c4"
                ]
            }
        },
        "1.14.7-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:50c38c50934c78b3d48da7780e50b41249af3cf4f7aa3035145a4233e80d198f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "279243559ae8b4e134c9cc099565bb42734045b82f11268a2cad2cdee20d479b",
            "container_config": {
                "Hostname": "279243559ae8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:50c38c50934c78b3d48da7780e50b41249af3cf4f7aa3035145a4233e80d198f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T01:53:44.18570617Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T01:17:07.96030563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:52:56.442801135Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-amd64.tar.gz'; \t\t\tsha256='4a7fa60f323ee1416a4b1425aefc37ea359e9d64df19c326a58953a97ad41ea5'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-armv6l.tar.gz'; \t\t\tsha256='6079eb82bcf24b33dda0e32777c7fdddcc3b1ec70e374308cc8311562449b107'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-arm64.tar.gz'; \t\t\tsha256='fe5b6f6e441f3cb7b53ebf1a010bbebcb720ac98124984cfe2e51d72b8a58c71'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-386.tar.gz'; \t\t\tsha256='2f5793f10bb6b08eedecd376aa3d594e10193c6b5cf198ada46200259ff76547'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-ppc64le.tar.gz'; \t\t\tsha256='bd1f12a2271a6d1689bcf3ec01d123c81cbaca5d16c3f7df294a2d725ac4d3d1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-s390x.tar.gz'; \t\t\tsha256='ea570b3caa0c271da440f568ab646cfea80d712c51fb4d08189bb66bd5eb949c'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.src.tar.gz'; \t\t\tsha256='064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-09-01T01:53:05.752416354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:53:10.130152864Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:53:36.79052542Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T01:53:44.18570617Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:da681910f2c1d8273491bb541d46e823a809cb1ba6393a15abcd9cb09fedf8a5",
                    "sha256:282188b3b27e0e8f176123646773d5bcbc9704c966ad97a068472427cf1cb038"
                ]
            }
        },
        "1.14.7-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:8e664c2703ec3244e216df6ca9fd9f4bb58fff51b05312483d2ad8b83002ff35",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "66e07a350b7f68bcac4c48f4ec8f747103d17d76549dda912ee920accaf8a1d6",
            "container_config": {
                "Hostname": "66e07a350b7f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:8e664c2703ec3244e216df6ca9fd9f4bb58fff51b05312483d2ad8b83002ff35",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T01:56:29.807458776Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T05:01:04.874841639Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ba6f3203fb10e66124d03088d234e92fc908c572ec7eed268e866623a383a7d in / "
                },
                {
                    "created": "2020-08-04T05:01:07.939350474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T08:16:04.465529549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T08:16:44.245416999Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T08:18:19.547854109Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:38.536613259Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:40.729936373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T01:18:36.533965723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:55:03.6313043Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-amd64.tar.gz'; \t\t\tsha256='4a7fa60f323ee1416a4b1425aefc37ea359e9d64df19c326a58953a97ad41ea5'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-armv6l.tar.gz'; \t\t\tsha256='6079eb82bcf24b33dda0e32777c7fdddcc3b1ec70e374308cc8311562449b107'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-arm64.tar.gz'; \t\t\tsha256='fe5b6f6e441f3cb7b53ebf1a010bbebcb720ac98124984cfe2e51d72b8a58c71'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-386.tar.gz'; \t\t\tsha256='2f5793f10bb6b08eedecd376aa3d594e10193c6b5cf198ada46200259ff76547'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-ppc64le.tar.gz'; \t\t\tsha256='bd1f12a2271a6d1689bcf3ec01d123c81cbaca5d16c3f7df294a2d725ac4d3d1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.linux-s390x.tar.gz'; \t\t\tsha256='ea570b3caa0c271da440f568ab646cfea80d712c51fb4d08189bb66bd5eb949c'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.7.src.tar.gz'; \t\t\tsha256='064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-09-01T01:55:20.308041981Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:55:34.9812172Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:56:17.644585795Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T01:56:29.807458776Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7352564cb071e9fe8088197f4901584095f1e55fdc9ba28cc77b91045be23467",
                    "sha256:9dd7fe8f21549089acbd73452166a5697ac31784ca821330d7b05cf9b6b7f2fc",
                    "sha256:b5fe9b0ba4a73f8ca29f530ec91f65a7176c09183793ad44bf1cfffa5041ca22",
                    "sha256:d52fc9488b3ec18dc8b3724b27e506fc825f5f74788f4e3258868408bdf266e3",
                    "sha256:02d2df8ece5e9513b029bf95088173f339b912987e12e99cc1d7de65c6c9c76d",
                    "sha256:97bdf3b0ca9e8a99a57faaf5465f9e00f077eaff60c255f771ec70ff276f5941",
                    "sha256:347281933c5521da198a66ac0168d6dd549ad557d0e0494fa44b6991cf769f52"
                ]
            }
        },
        "1.14.8-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ceeca14bc50abe028f10ea2b6dec40ee10dcd549e312ecc8e2d004d6d05ab366",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9171b8957017efb9c5b8c533c7ed56051b7ef76a7dfff758282853403d186eff",
            "container_config": {
                "Hostname": "9171b8957017",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ceeca14bc50abe028f10ea2b6dec40ee10dcd549e312ecc8e2d004d6d05ab366",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-02T00:11:35.407554831Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T23:03:51.463221225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T00:10:50.597415664Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.8.src.tar.gz'; \tsha256='d9a613fb55f508cf84e753456a7c6a113c8265839d5b7fe060da335c93d6e36a'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-02T00:11:00.838942882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T00:11:05.314943831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T00:11:30.57439946Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-02T00:11:35.407554831Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:b7a542f243516c0ea16bfb3f5bf2b7046aa944177044e60f6dc09e6a9825305f",
                    "sha256:dc8beaac3e455d4fe59d4303a83b1f36e9eb63843c8579329f1340c20a2bb625"
                ]
            }
        },
        "1.14.8-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4f72a057001d485e5286a6132831a262b530366be59986d09535e7cd8d72b558",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0f42059d10bf9bca530d89e6b13bd45360bb51d818003bef2fe58ad979b8362d",
            "container_config": {
                "Hostname": "0f42059d10bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4f72a057001d485e5286a6132831a262b530366be59986d09535e7cd8d72b558",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-02T01:15:30.30171838Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T03:07:42.695169257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T00:11:58.381821224Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T01:14:51.884684709Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.8.src.tar.gz'; \tsha256='d9a613fb55f508cf84e753456a7c6a113c8265839d5b7fe060da335c93d6e36a'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-02T01:14:58.151781496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T01:15:02.129717834Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T01:15:25.665076197Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-02T01:15:30.30171838Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:78a47b3c8fedd260d7c42894a9b84c8b07eec658e14cdf9f7fc5ce6d17269b22",
                    "sha256:0cf5d7d7b1900012254647861caaa6aabb0ff7c06ea9bb16257838447f87ad34"
                ]
            }
        },
        "1.14.8-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ceeca14bc50abe028f10ea2b6dec40ee10dcd549e312ecc8e2d004d6d05ab366",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9171b8957017efb9c5b8c533c7ed56051b7ef76a7dfff758282853403d186eff",
            "container_config": {
                "Hostname": "9171b8957017",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ceeca14bc50abe028f10ea2b6dec40ee10dcd549e312ecc8e2d004d6d05ab366",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-02T00:11:35.407554831Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T23:03:51.463221225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T00:10:50.597415664Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.8.src.tar.gz'; \tsha256='d9a613fb55f508cf84e753456a7c6a113c8265839d5b7fe060da335c93d6e36a'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-02T00:11:00.838942882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T00:11:05.314943831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-02T00:11:30.57439946Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-02T00:11:35.407554831Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:b7a542f243516c0ea16bfb3f5bf2b7046aa944177044e60f6dc09e6a9825305f",
                    "sha256:dc8beaac3e455d4fe59d4303a83b1f36e9eb63843c8579329f1340c20a2bb625"
                ]
            }
        },
        "1.14.8-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:651896a113192d66db9cb0e0b16a982e688911b4a5815d05f91095c5aba70ad5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "91070312c5c926300a94b73af47eb8af334b9e296bff7f08dfd3b989ce85c001",
            "container_config": {
                "Hostname": "91070312c5c9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:651896a113192d66db9cb0e0b16a982e688911b4a5815d05f91095c5aba70ad5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T22:58:50.499103343Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:54:00.933560585Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:55:51.947004671Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-amd64.tar.gz'; \t\t\tsha256='5504e077a29d0bd6649ca7b66e317f1a4b264e960f74115d6f0f405c49a8e738'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-armv6l.tar.gz'; \t\t\tsha256='5d0c7a1cf79b044ad14414676c945a0e2ed61ae8167142d4e493118a66fafcb5'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-arm64.tar.gz'; \t\t\tsha256='52219e5508cbd8c93070d85f5ac8f1049eac5e89399666c46aa9edd9b1112725'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-386.tar.gz'; \t\t\tsha256='8176ebc3a61caba3d7955cf28461268c987fea1fc11611e7031fcdf8e112a62d'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-ppc64le.tar.gz'; \t\t\tsha256='4a5ad85db2039d8b6fa6c27aa3ccc8522b0116780fbaf3c6804e579b33edf098'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-s390x.tar.gz'; \t\t\tsha256='e31d92496ac01af2c6f31023123430f0d143c4a05cc680cc91b446c5a4e4a664'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.src.tar.gz'; \t\t\tsha256='d9a613fb55f508cf84e753456a7c6a113c8265839d5b7fe060da335c93d6e36a'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-09-01T22:56:12.2840215Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:56:45.775070604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:58:23.184728979Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T22:58:50.499103343Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:3bacf3d76fae4e3eaf863e345f966088224b17dbe49b21eb18b610aa91412805",
                    "sha256:22bb6ca34f2474f415b106ab453aca90f9e5602cbc49dd0f0bc0bbace6513318"
                ]
            }
        },
        "1.14.8-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:92ba436385b8989a080f450e476ee370da70f503d2f7d7bdc4f68f4759a8f19b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "093c668780c8878ecfcb6e85561e93db269aff4c7d9d0287444b8820fc73b40b",
            "container_config": {
                "Hostname": "093c668780c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:92ba436385b8989a080f450e476ee370da70f503d2f7d7bdc4f68f4759a8f19b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T23:03:08.500521786Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T05:01:04.874841639Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0ba6f3203fb10e66124d03088d234e92fc908c572ec7eed268e866623a383a7d in / "
                },
                {
                    "created": "2020-08-04T05:01:07.939350474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T08:16:04.465529549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T08:16:44.245416999Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T08:18:19.547854109Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:38.536613259Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:42:40.729936373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:59:36.801889588Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T23:01:07.750615806Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-amd64.tar.gz'; \t\t\tsha256='5504e077a29d0bd6649ca7b66e317f1a4b264e960f74115d6f0f405c49a8e738'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-armv6l.tar.gz'; \t\t\tsha256='5d0c7a1cf79b044ad14414676c945a0e2ed61ae8167142d4e493118a66fafcb5'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-arm64.tar.gz'; \t\t\tsha256='52219e5508cbd8c93070d85f5ac8f1049eac5e89399666c46aa9edd9b1112725'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-386.tar.gz'; \t\t\tsha256='8176ebc3a61caba3d7955cf28461268c987fea1fc11611e7031fcdf8e112a62d'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-ppc64le.tar.gz'; \t\t\tsha256='4a5ad85db2039d8b6fa6c27aa3ccc8522b0116780fbaf3c6804e579b33edf098'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.linux-s390x.tar.gz'; \t\t\tsha256='e31d92496ac01af2c6f31023123430f0d143c4a05cc680cc91b446c5a4e4a664'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.8.src.tar.gz'; \t\t\tsha256='d9a613fb55f508cf84e753456a7c6a113c8265839d5b7fe060da335c93d6e36a'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-09-01T23:01:24.501039172Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T23:01:45.301669936Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T23:02:50.654492954Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T23:03:08.500521786Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7352564cb071e9fe8088197f4901584095f1e55fdc9ba28cc77b91045be23467",
                    "sha256:9dd7fe8f21549089acbd73452166a5697ac31784ca821330d7b05cf9b6b7f2fc",
                    "sha256:b5fe9b0ba4a73f8ca29f530ec91f65a7176c09183793ad44bf1cfffa5041ca22",
                    "sha256:d52fc9488b3ec18dc8b3724b27e506fc825f5f74788f4e3258868408bdf266e3",
                    "sha256:02d2df8ece5e9513b029bf95088173f339b912987e12e99cc1d7de65c6c9c76d",
                    "sha256:15191eac40d1bfd41ae44b732d76fb7d432ec79851801dcba711b9dce180ee4b",
                    "sha256:26f3e03511509f69e2fb59c16cfafd28460ccd4d68c0419bc8b0f784e4399393"
                ]
            }
        },
        "1.14.9-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a04f89715d765191bbc9a3331b66f5b3545bfa1a321740c217348e900a8c735c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6d51cb9b4d73fdf053dfe057daf95ab72113829f481d913e29cb454528c3f419",
            "container_config": {
                "Hostname": "6d51cb9b4d73",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a04f89715d765191bbc9a3331b66f5b3545bfa1a321740c217348e900a8c735c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-09T22:07:54.833690178Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:05:40.532304533Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:07:47.362741757Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.9.src.tar.gz'; \tsha256='c687c848cc09bcabf2b5e534c3fc4259abebbfc9014dd05a1a2dc6106f404554'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-09T22:07:51.697767611Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:07:52.401441791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:07:54.151495999Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-09T22:07:54.833690178Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:f0418d1f4ab1945753be7620b19af47abf037bbac3b84f2e075cb0d756efd855",
                    "sha256:34d06b422cceef2cf70119bde91f042d06a45ff56f68da8b5cce0b7a8a0b822d"
                ]
            }
        },
        "1.14.9-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45dfa9304d7b573298f3312bdbec88cd383e590e4675055367b5db87de19cdea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "baaf4b97268dd94ace29633dc7d4105f420e97514f2ba654671e87dc826b1cef",
            "container_config": {
                "Hostname": "baaf4b97268d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45dfa9304d7b573298f3312bdbec88cd383e590e4675055367b5db87de19cdea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-09T22:10:38.722433049Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T22:04:19.452978168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:33578d3cacfab86c195d99396dd012ec511796a1d2d8d6f0a02b8a055673c294 in / "
                },
                {
                    "created": "2020-04-23T22:04:22.546460839Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T02:27:40.383720862Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T02:27:42.888975482Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T03:07:42.695169257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:08:15.310708463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:10:31.107996812Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.9.src.tar.gz'; \tsha256='c687c848cc09bcabf2b5e534c3fc4259abebbfc9014dd05a1a2dc6106f404554'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-09T22:10:35.537541332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:10:36.219425868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:10:37.966328875Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-09T22:10:38.722433049Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:093b0aa59d568b7b9472633c090a409cb2958fc337253680bc88ba591379d4f4",
                    "sha256:255c96d3156d23447ba684c82694ee2b97175f7bb16dff8259e66340140a256e",
                    "sha256:212c8220b4c1ace235f459191d381242f1c037d25066941d3f3ea1f7677bbe47",
                    "sha256:b220433284856977b0b7097f165b2cf59d34be98d1095b03b80d1a2267641963",
                    "sha256:0f429454e02c1dfa511e5ad1fa9fdaa448684119609e53a4ca8e8ac2a671fd08"
                ]
            }
        },
        "1.14.9-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a04f89715d765191bbc9a3331b66f5b3545bfa1a321740c217348e900a8c735c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6d51cb9b4d73fdf053dfe057daf95ab72113829f481d913e29cb454528c3f419",
            "container_config": {
                "Hostname": "6d51cb9b4d73",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a04f89715d765191bbc9a3331b66f5b3545bfa1a321740c217348e900a8c735c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-09T22:07:54.833690178Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:05:40.532304533Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:07:47.362741757Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.9.src.tar.gz'; \tsha256='c687c848cc09bcabf2b5e534c3fc4259abebbfc9014dd05a1a2dc6106f404554'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-09T22:07:51.697767611Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:07:52.401441791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-09T22:07:54.151495999Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-09T22:07:54.833690178Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:f0418d1f4ab1945753be7620b19af47abf037bbac3b84f2e075cb0d756efd855",
                    "sha256:34d06b422cceef2cf70119bde91f042d06a45ff56f68da8b5cce0b7a8a0b822d"
                ]
            }
        },
        "1.14.9-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:fb286b2c225cab829eff622de271158b7134fcef7d0521447b00a0320dd0907a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4d50e768e8231acba9712fc1a0e6360c15a57d476bbf1e2b2a5ffb83217695fe",
            "container_config": {
                "Hostname": "4d50e768e823",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:fb286b2c225cab829eff622de271158b7134fcef7d0521447b00a0320dd0907a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-13T23:05:59.621098785Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T00:59:02.601526467Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e03270d36cef8171f1f6303860ff31bb1c0eb10642b8173bfdfef9f77fa4f89c in / "
                },
                {
                    "created": "2020-10-13T00:59:04.166915387Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T01:34:21.130187177Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T01:34:35.04655891Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T01:35:14.890494811Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:04:09.367471902Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:04:21.196112538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T23:05:22.63434252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T23:05:46.846230768Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-amd64.tar.gz'; \t\t\tsha256='f0d26ff572c72c9823ae752d3c81819a81a60c753201f51f89637482531c110a'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-armv6l.tar.gz'; \t\t\tsha256='e85dc09608dc9fc245ebc5daea0826898ac0eb0d48ed24e2300427850876c442'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-arm64.tar.gz'; \t\t\tsha256='65e6cef5c474a3514e754f6a7987c49388bb85a7b370370c1318087ac35427fa'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-386.tar.gz'; \t\t\tsha256='14982ef997ec323023a11cffe1a4afc3aacd1b5edebf70a00e17b67f888d8cdb'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-ppc64le.tar.gz'; \t\t\tsha256='5880a37faf93b2396edc3ff231e0f8df14d0520505cc13d01116e24d7d1d0147'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-s390x.tar.gz'; \t\t\tsha256='381fc24aff153c4affcb00f4547683212157af29b8f9e3de5952d78ac35f5a0f'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.src.tar.gz'; \t\t\tsha256='c687c848cc09bcabf2b5e534c3fc4259abebbfc9014dd05a1a2dc6106f404554'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-10-13T23:05:54.409630643Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T23:05:55.442609491Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T23:05:58.578363062Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-13T23:05:59.621098785Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dc85a59c8122eabf07151a9c9924966dd3d755fc62ba7a17837b2a9c32dec35b",
                    "sha256:1297bcbe3654ccacd86c585dc5548504da52114567c499d0db3e7f4e81831d16",
                    "sha256:0002120456f01ee4ea07136d268477a8a6ce46b5a6f8dab56eeadd26fe9a3623",
                    "sha256:9a1a662621a2f83de6e2698a6e1ea0cc6b5c044ce4db3a5b83df78dffbcebf50",
                    "sha256:13a73fcfe0bd4628faf5ebb14b082e184fda4af9ab0100e05abadd91bfe76832",
                    "sha256:67c3c70717e8a298a09c2b1c61640ae75d706f589355bbfbb8df6598b9763cb2",
                    "sha256:500303bcdc9d29393dc06fd6636ccc8124664b214a1fa4ad4f94e5f056fde8ea"
                ]
            }
        },
        "1.14.9-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:59e930f0c9e259ca03647a1609791e689ac56b4e206589fa0a2c3a1ab7981ea2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9685c04262b30898acdacc79c2bf0e290adfeaf20c7a6e90c1ca43410ea4a7c6",
            "container_config": {
                "Hostname": "9685c04262b3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:59e930f0c9e259ca03647a1609791e689ac56b4e206589fa0a2c3a1ab7981ea2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-13T23:07:12.393684774Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T01:04:04.016557023Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb1dab6b0ac08f52870fca9435eedd2f707a3b8a5d28e5d1c2ff88e096f695ec in / "
                },
                {
                    "created": "2020-10-13T01:04:05.881444206Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T01:47:59.789265762Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T01:48:15.733400892Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T01:49:33.88157336Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:06:34.856754333Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T23:06:37.23752687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T23:06:38.247443231Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T23:07:03.293799058Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-amd64.tar.gz'; \t\t\tsha256='f0d26ff572c72c9823ae752d3c81819a81a60c753201f51f89637482531c110a'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-armv6l.tar.gz'; \t\t\tsha256='e85dc09608dc9fc245ebc5daea0826898ac0eb0d48ed24e2300427850876c442'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-arm64.tar.gz'; \t\t\tsha256='65e6cef5c474a3514e754f6a7987c49388bb85a7b370370c1318087ac35427fa'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-386.tar.gz'; \t\t\tsha256='14982ef997ec323023a11cffe1a4afc3aacd1b5edebf70a00e17b67f888d8cdb'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-ppc64le.tar.gz'; \t\t\tsha256='5880a37faf93b2396edc3ff231e0f8df14d0520505cc13d01116e24d7d1d0147'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.linux-s390x.tar.gz'; \t\t\tsha256='381fc24aff153c4affcb00f4547683212157af29b8f9e3de5952d78ac35f5a0f'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.9.src.tar.gz'; \t\t\tsha256='c687c848cc09bcabf2b5e534c3fc4259abebbfc9014dd05a1a2dc6106f404554'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-10-13T23:07:06.539028807Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T23:07:07.466415928Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T23:07:11.427217715Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-13T23:07:12.393684774Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3c605af5f171d78a37df9f97239a5df31cb4182a639334e8c774a6a99924383",
                    "sha256:b8959ac7fd3c9662e76c2eb4870759a57e0b0a129b8721ef2274e477c2c44d87",
                    "sha256:82287d983b62dac66e4aa250ab690588426fe5c206fadfcbc43bd9aa1a8dc83a",
                    "sha256:8eaced566f2ce06e91b3ae1c5dcb79b1b2bcbb22292e04c71957dfa621be7025",
                    "sha256:1767b206ce4eee744cb7f41dc0914d8a402b02e75bc66ce286b84ef2ec660361",
                    "sha256:611cc84f4cc690980bd6b8bdf97ae1d04c7eabc0ac993e97229ac57f7dbb36f6",
                    "sha256:754dde2f9f4f69f1b14bcebe5046ce75c1b6b2a09d9e1892dcfee9c46095ea6e"
                ]
            }
        },
        "1.14beta1-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3218c633e2c10a66e9ef1b556e1dd5defc0667352f6694ba175cac553cd74a42",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f8d67f85ccd601de699fac6671003236c4bc809af9d8a348f58d771b7f37e6b7",
            "container_config": {
                "Hostname": "f8d67f85ccd6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3218c633e2c10a66e9ef1b556e1dd5defc0667352f6694ba175cac553cd74a42",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T03:08:48.510201524Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T03:05:47.979796733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14beta1",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:08:31.038515529Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af952217fcb408180006f29e77f1c3b871192fba7f99abd5aa421cf2f0358fea *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T03:08:39.76506722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:08:41.286126946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:08:46.280136904Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T03:08:48.510201524Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:3e7262f2f08b45dc5b2dd33d605c23993732adc5dcb595ece938240655383d32",
                    "sha256:2cf4dde9bbe96873fa1f0368aa440230e506e86251a0fbf6ab8ed5f55107f926"
                ]
            }
        },
        "1.14beta1-alpine3.10": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c364c133592109afc8c9a70b123236ebd09c319a6290af0193b8a225ebe7b583",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c22539121ea6734632534f69bb6c7ac94c9f3a10c2a152a38a9775d82b03229f",
            "container_config": {
                "Hostname": "c22539121ea6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c364c133592109afc8c9a70b123236ebd09c319a6290af0193b8a225ebe7b583",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-18T01:01:09.977140762Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T18:15:18.131558821Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b2893134302eabeb80e356fc4e5a29d9cd442362c382b3504688c014a734bb9 in / "
                },
                {
                    "created": "2019-10-21T18:15:31.195225971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T18:52:36.722919371Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T18:52:40.139001824Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-18T00:58:18.164209687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T01:00:53.9608374Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af952217fcb408180006f29e77f1c3b871192fba7f99abd5aa421cf2f0358fea *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-18T01:01:04.265017234Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T01:01:06.675151552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T01:01:09.001253007Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-18T01:01:09.977140762Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:30a0150d2171ea876ccf57ecd34d56a8938c4a6ebe34589b9c59509e33a56e9a",
                    "sha256:1d804f9f2f69305a84d8d283fb102cb23f9f145c2d52732140c3cd87cda09be8",
                    "sha256:23680c95421b378598c4a64e1affac3222452af84e1f26c6de448caae36de02b",
                    "sha256:f12dfa4eeee163d9200f47fbac79a13196a9d77f2f53769bfae8c8e6a313fb26",
                    "sha256:1b50c8fb7a870f9004e1b37210c4a7b0f08f62dfcd57d12bddb8fc5ec0def802"
                ]
            }
        },
        "1.14beta1-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3218c633e2c10a66e9ef1b556e1dd5defc0667352f6694ba175cac553cd74a42",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f8d67f85ccd601de699fac6671003236c4bc809af9d8a348f58d771b7f37e6b7",
            "container_config": {
                "Hostname": "f8d67f85ccd6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3218c633e2c10a66e9ef1b556e1dd5defc0667352f6694ba175cac553cd74a42",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T03:08:48.510201524Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T03:05:47.979796733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14beta1",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:08:31.038515529Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af952217fcb408180006f29e77f1c3b871192fba7f99abd5aa421cf2f0358fea *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T03:08:39.76506722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:08:41.286126946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:08:46.280136904Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T03:08:48.510201524Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:3e7262f2f08b45dc5b2dd33d605c23993732adc5dcb595ece938240655383d32",
                    "sha256:2cf4dde9bbe96873fa1f0368aa440230e506e86251a0fbf6ab8ed5f55107f926"
                ]
            }
        },
        "1.14beta1-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3be1d985e53152e90a99140e670d93571acc6ef7eb87fa412c6df9f6f1593e13",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "52eb93eb9d725fe3a225c4dc96fbdbcc0c8559e620c29b45cc5bed8be503fcb9",
            "container_config": {
                "Hostname": "52eb93eb9d72",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3be1d985e53152e90a99140e670d93571acc6ef7eb87fa412c6df9f6f1593e13",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-02T14:31:47.201782949Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:00:06.417453205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a57a312731f174c4b03031908ff95f49d7055d8c196439f0ed07ed9c4834d993 in / "
                },
                {
                    "created": "2020-02-01T17:00:08.178400051Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:08.819492837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:24.122069875Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:01:04.229273367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:30:56.418836912Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:30:58.761648664Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14beta1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:31:29.088390133Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ebe68aa4219b673dbd060b8a6d9a339b6b6b0383772aa4349c8183f0a8f339e4' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f0542513b997ef6b5f6ff4b9a2b9502fe6743746f2639ffd48dd53d7cb958f6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='91a92cfb7644c59c4b51d50fb7225b898675effaa65659a71c06aa6a42c0ada5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='bcbfb2ea92cfef54c587427435ae5cbe50473d9158beef97aa5d5edd43d1a9d8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='69f8d16e13912cd3caa2fe70addae9929d518d6c875cfd581bd914e0ce2d6d80' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3252c14611af17e435a5160467c581acc31b4a4ce4e8e17688befabba3ba710f' ;; \t\t*) goRelArch='src'; goRelSha256='af952217fcb408180006f29e77f1c3b871192fba7f99abd5aa421cf2f0358fea'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-02T14:31:40.755123942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:31:43.043361242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T14:31:46.285316339Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-02T14:31:47.201782949Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:46e7cfd0c0f3284f02b2135e1918547bf991c36d75e54e40fe9db34cab65c290",
                    "sha256:27ed451d5d653095e610ab9f87626a6fa5fe21f2306f133aba07d5fff2d5eea0",
                    "sha256:fcfd58af280ca13e4e7cbe28921a46524be5346a4493b805ad1aacb9415e5580",
                    "sha256:70a91d1a8c327a6ab23a26e61b554eba49e3c99cdd34813056717afb62c20aba",
                    "sha256:871721b76996f935774c1fc4ec711463fe4d75bc24e643acbcb6599a06f5f76e",
                    "sha256:0c1d12f565acb830ec6381160b5c6dcc4f46d59eb45adc76589b3a92f7215cda",
                    "sha256:a3f4fb7878dfbca479dd86c37d638c7fbda58375c4721398144070a0ffbab0f9"
                ]
            }
        },
        "1.14rc1-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1f3071105ddd7e345bfc5b4e41d037bc6c8337e6a74f9c0da0d754bca90198e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c0e5518fbf96d4fb477bce9e0b5eafc60abed440eced85c9dc958e9144ad9baa",
            "container_config": {
                "Hostname": "c0e5518fbf96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1f3071105ddd7e345bfc5b4e41d037bc6c8337e6a74f9c0da0d754bca90198e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:28:12.905425522Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-06T01:24:03.938337266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:00.437633654Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:28:06.350884725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:07.902305377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:11.757210957Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:28:12.905425522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:d7288b7f6a23ad8f2a27a39f40b2a506df1296d957487fdb68eed1be728de0de",
                    "sha256:8383bba6c52c2086b8c8dba30c0ee095efe02c808968f245442d45aaf96200a9"
                ]
            }
        },
        "1.14rc1-alpine3.11": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1f3071105ddd7e345bfc5b4e41d037bc6c8337e6a74f9c0da0d754bca90198e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c0e5518fbf96d4fb477bce9e0b5eafc60abed440eced85c9dc958e9144ad9baa",
            "container_config": {
                "Hostname": "c0e5518fbf96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f1f3071105ddd7e345bfc5b4e41d037bc6c8337e6a74f9c0da0d754bca90198e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:28:12.905425522Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T02:03:19.368656642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c815f4461ff3b8d481f43d84eb2548cb1adbb3015d370cab86dd7f4d3d94279 in / "
                },
                {
                    "created": "2020-01-18T02:03:22.450337122Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T03:05:43.034307061Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T03:05:47.226128615Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-06T01:24:03.938337266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:00.437633654Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:28:06.350884725Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:07.902305377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:28:11.757210957Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:28:12.905425522Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f1fbf8a09329e4903e8c8ea1e429cce666ad39f92e2ed39ca02bf5f7db89026",
                    "sha256:c871200fa32264f87d0e2a7ea21757d5f3f555e38f4b7d266936702effa6b097",
                    "sha256:11c97287c0e3d8634ba371caea36d3e87d7195c99d722ee53f4eb0aa8d1faa6f",
                    "sha256:d7288b7f6a23ad8f2a27a39f40b2a506df1296d957487fdb68eed1be728de0de",
                    "sha256:8383bba6c52c2086b8c8dba30c0ee095efe02c808968f245442d45aaf96200a9"
                ]
            }
        },
        "1.14rc1-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4e6daae305b359297a1a194426ee358bb012d63ffc00c1a9038fe20c24dd4cb7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8185d7d4953ffabbdc179e3795215a5060b5069d0a9c364a5d96eb613622df92",
            "container_config": {
                "Hostname": "8185d7d4953f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4e6daae305b359297a1a194426ee358bb012d63ffc00c1a9038fe20c24dd4cb7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-06T01:23:54.755899969Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:00:06.417453205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a57a312731f174c4b03031908ff95f49d7055d8c196439f0ed07ed9c4834d993 in / "
                },
                {
                    "created": "2020-02-01T17:00:08.178400051Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:08.819492837Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:24.122069875Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:01:04.229273367Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:30:56.418836912Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-06T01:22:46.981918326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:23:44.39034359Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='69398d41e5f6b87cdf3969aae665be4dfd3cc2ef36a61ab47a261f96130ed788' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bfe041f7d2a62f895f2d11703a29bdd31a48cca9a3c36418d59680bc1cbb8a6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5509448b06f02f5198fe8bbf5af88ab483af9c46f231c3f308748016fbc32c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='831087aa0eba8b6dfa221036d00641613996ac66d7c635f1e34c53d5f0922623' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='fe1bf34d2b117d785f2fb33151c44ca8bc2188678c9e903fa0ad30573547b412' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2302fa0e30144a969cb1879eed8aeb9a82c2b520fcda8aebbb20a539ad427c25' ;; \t\t*) goRelArch='src'; goRelSha256='76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-06T01:23:48.072422611Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:23:49.224356434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-06T01:23:53.500369839Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-06T01:23:54.755899969Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:46e7cfd0c0f3284f02b2135e1918547bf991c36d75e54e40fe9db34cab65c290",
                    "sha256:27ed451d5d653095e610ab9f87626a6fa5fe21f2306f133aba07d5fff2d5eea0",
                    "sha256:fcfd58af280ca13e4e7cbe28921a46524be5346a4493b805ad1aacb9415e5580",
                    "sha256:70a91d1a8c327a6ab23a26e61b554eba49e3c99cdd34813056717afb62c20aba",
                    "sha256:871721b76996f935774c1fc4ec711463fe4d75bc24e643acbcb6599a06f5f76e",
                    "sha256:724158507b748658751cff44001b4509cca537871484f5a409de6df0e19a17fe",
                    "sha256:7624a89a008ccdaa35712bfbb03a4fe73e6ea955389808270279ba024f417e38"
                ]
            }
        },
        "1.14rc1-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6adf7743954584c77bd45f94937176655284e709d2d11eca92684b8fd9f26d8b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "caf664874fb9247e83374f98278769903513a8a6ff896e3b3728bd9e459db5ff",
            "container_config": {
                "Hostname": "caf664874fb9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6adf7743954584c77bd45f94937176655284e709d2d11eca92684b8fd9f26d8b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-11T00:13:59.869409713Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:04:08.434471765Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b7fc54d004d962f2cfb469a1aaa9e689e46dfa2554e0cf44c33981d688adc31b in / "
                },
                {
                    "created": "2020-02-01T17:04:09.985480911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:18:17.210178472Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:18:29.74152444Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:19:26.254828182Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:33:10.603594656Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-11T00:13:34.48654929Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-11T00:13:54.730201809Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='69398d41e5f6b87cdf3969aae665be4dfd3cc2ef36a61ab47a261f96130ed788' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bfe041f7d2a62f895f2d11703a29bdd31a48cca9a3c36418d59680bc1cbb8a6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5509448b06f02f5198fe8bbf5af88ab483af9c46f231c3f308748016fbc32c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='831087aa0eba8b6dfa221036d00641613996ac66d7c635f1e34c53d5f0922623' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='fe1bf34d2b117d785f2fb33151c44ca8bc2188678c9e903fa0ad30573547b412' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2302fa0e30144a969cb1879eed8aeb9a82c2b520fcda8aebbb20a539ad427c25' ;; \t\t*) goRelArch='src'; goRelSha256='76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-11T00:13:56.84825053Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-11T00:13:57.525899303Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-11T00:13:59.234590662Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-11T00:13:59.869409713Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7025fd153916d67aed12af624ffb223bea6bd8ad0837cd220648bb6fafb0c15",
                    "sha256:d8dccd79f6a8f10c1636cbd82d919eed8c95166d302f48b992af102693a2e0a2",
                    "sha256:48d889636708d63da0061ef1e64042d7e6cfbf430b274af2a6637e4fca94a8ab",
                    "sha256:d335f8e4986334af3faba57d57b78f72d53e70c36ff5f6e3a6482611bd13a490",
                    "sha256:1f8a54d1f09d462613b546c4a599f7a2fce5db959952a252413c5f28f23760a3",
                    "sha256:4f2e2214ab8ea37c075c2075998b2f2fef436de5a7cdee05f1c4ac156c18746d",
                    "sha256:c4c4109d773f9fc7fd584e5b0c22576f2513988a1f48b23b6f4b75e025f4524b"
                ]
            }
        },
        "1.15-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:0f4ad81260b0572b30a2daaf9c4b85cd14fbecf815dc983d1512ab7cd56e0a6b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "24c9c3904acc9973db27147043a03c2ff9fe445fd3e8e92fd90f5d1076dcb61a",
            "container_config": {
                "Hostname": "24c9c3904acc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0f4ad81260b0572b30a2daaf9c4b85cd14fbecf815dc983d1512ab7cd56e0a6b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-06T19:41:23.489393746Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-06T17:57:32.128346085Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a35ff3ac0d80289d419a4d6d8319610c38e1936d296addafb9aaf506946230f in / "
                },
                {
                    "created": "2021-08-06T17:57:32.603288333Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:27:52.96909599Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-08-06T19:27:54.940737848Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-08-06T19:27:55.470960414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:38:00.072163276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:41:15.933142992Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.15.src.tar.gz'; \tsha256='0662ae3813330280d5f1a97a2ee23bbdbe3a5a7cfa6001b24a9873a19a0dc7ec'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ -n \"${GO386:-}\" ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ -n \"${GO386:-}\" ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-08-06T19:41:17.555995788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:41:18.516167193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:41:22.732606347Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-08-06T19:41:23.489393746Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:680c6f24786b53640e37f56c4f3e5781fa1aeded0588efc878d655ba8414e013",
                    "sha256:3d1f7e820b56c22dd38ff1f6a136662159be87d6a004f853091b63681f481664",
                    "sha256:61bdd7308be5f42352c6ae12a4e816d5466975c5504f8fc72ad70a55b5461a54",
                    "sha256:02e4bed7c9a886d35d3d25a7c7dc2e4ed56b7a2eafa2dd8d11fae2e848e81b0b",
                    "sha256:9a73b217eca0722b94d7deb4ef06e79be20452c3fcf5a06675cede42eaaece78"
                ]
            },
            "variant": "v7"
        },
        "1.15-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:0280c9a9416a5a5ad74b24910090b880583a8c824a84bb814eaddded81482ae9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "84c1073cd1f2b44b31b5293a6623f42596405db0f7c2f5af1bc2f1abeaa4cba3",
            "container_config": {
                "Hostname": "84c1073cd1f2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0280c9a9416a5a5ad74b24910090b880583a8c824a84bb814eaddded81482ae9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-16T11:36:14.519591738Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-06-15T23:15:24.829163828Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d844cc7b5e00fb62be39d903a2fb4a08f700e75112c8eef1f31101e846ed010d in / "
                },
                {
                    "created": "2021-06-15T23:15:25.156291082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:22:37.859158736Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-06-16T11:22:38.638344309Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-06-16T11:22:38.826205451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:34:04.603426171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:36:12.427356689Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.13.src.tar.gz'; \tsha256='99069e7223479cce4553f84f874b9345f6f4045f27cf5089489b546da619a244'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-06-16T11:36:13.372328731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:36:13.579099678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:36:14.303400267Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-06-16T11:36:14.519591738Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a8925b2335ff0b7938966250274c51afa56fbf8c367f94ea4704919c2abbb9c6",
                    "sha256:2bdfbacdf97e1f47f77762291dafc53b17e19649034640276dadc1ea6053a6b7",
                    "sha256:7aa88935c2932ee04fa5bfa7e6c8cdee3fdb16b27841076f503f5726d1db4f89",
                    "sha256:1189b41f5762ef9e045aa31a5a9b0480bfe76ca6f7380038979f13cf3a543bc9",
                    "sha256:8e63ab5d87804e0387187350b52968fb30813ba08079dffb061108827b0fb1c5"
                ]
            }
        },
        "1.15-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c2349611f913a48138bb51216073ea06d2658726a11f9fc724b774e1aac3814b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c2f26c0d021bd788401a880872d4a820c89956174bcf171dbd69849817debdb2",
            "container_config": {
                "Hostname": "c2f26c0d021b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c2349611f913a48138bb51216073ea06d2658726a11f9fc724b774e1aac3814b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-05T23:15:49.802572938Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-07-30T18:36:39.384310778Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:028c5b473d862250586e174c5dd19b37f8fc3bffbc02d888e72df30f32fd6129 in / "
                },
                {
                    "created": "2021-07-30T18:36:39.871568001Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-31T02:20:17.18932398Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-07-31T02:20:18.819139687Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-07-31T02:20:19.218587832Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:13:21.929699315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:15:45.477274305Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.15.src.tar.gz'; \tsha256='0662ae3813330280d5f1a97a2ee23bbdbe3a5a7cfa6001b24a9873a19a0dc7ec'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t./make.bash; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-08-05T23:15:47.249329048Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:15:47.677403785Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:15:49.304500773Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-08-05T23:15:49.802572938Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e678d54c933532243e4ca1cb0b7ef7d6fa4969783100e0022246bc14d83972e9",
                    "sha256:f34af11f6ceda127cbaab70baccbc8b523f90d2562cae5ba2ead69eae319aaf1",
                    "sha256:1ccd1fd4f7aaa6d25229d300eae6fae4cc5d403eef1ebfb8d44a902b214fcc6a",
                    "sha256:50df74af56523bcdf7f8f9d727019b1eb6dcd91f70c774e76ba4b1546838ad31",
                    "sha256:256daa49e0883bf9dbb2d850c94d1a12c0dfd974f02e6218594f065427301ab7"
                ]
            },
            "variant": "v7"
        },
        "1.15-alpine3.14": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:0f4ad81260b0572b30a2daaf9c4b85cd14fbecf815dc983d1512ab7cd56e0a6b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "24c9c3904acc9973db27147043a03c2ff9fe445fd3e8e92fd90f5d1076dcb61a",
            "container_config": {
                "Hostname": "24c9c3904acc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0f4ad81260b0572b30a2daaf9c4b85cd14fbecf815dc983d1512ab7cd56e0a6b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-06T19:41:23.489393746Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-08-06T17:57:32.128346085Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a35ff3ac0d80289d419a4d6d8319610c38e1936d296addafb9aaf506946230f in / "
                },
                {
                    "created": "2021-08-06T17:57:32.603288333Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:27:52.96909599Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-08-06T19:27:54.940737848Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-08-06T19:27:55.470960414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:38:00.072163276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:41:15.933142992Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.15.src.tar.gz'; \tsha256='0662ae3813330280d5f1a97a2ee23bbdbe3a5a7cfa6001b24a9873a19a0dc7ec'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ -n \"${GO386:-}\" ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ -n \"${GO386:-}\" ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-08-06T19:41:17.555995788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:41:18.516167193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-06T19:41:22.732606347Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-08-06T19:41:23.489393746Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:680c6f24786b53640e37f56c4f3e5781fa1aeded0588efc878d655ba8414e013",
                    "sha256:3d1f7e820b56c22dd38ff1f6a136662159be87d6a004f853091b63681f481664",
                    "sha256:61bdd7308be5f42352c6ae12a4e816d5466975c5504f8fc72ad70a55b5461a54",
                    "sha256:02e4bed7c9a886d35d3d25a7c7dc2e4ed56b7a2eafa2dd8d11fae2e848e81b0b",
                    "sha256:9a73b217eca0722b94d7deb4ef06e79be20452c3fcf5a06675cede42eaaece78"
                ]
            },
            "variant": "v7"
        },
        "1.15-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9586798eafe3ae5461759405004052401f80cee7c6e42dddd0ba1a675b16a8a1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8d8a950d6400fcd025cce242043ae587913575399e8c62116ff3cddd6f20d968",
            "container_config": {
                "Hostname": "8d8a950d6400",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9586798eafe3ae5461759405004052401f80cee7c6e42dddd0ba1a675b16a8a1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-05T23:09:30.416402636Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-07-22T02:03:13.285006369Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c33137dc0d277fe210ea6387a8be105c625fdf777a541a6392896766df9919d4 in / "
                },
                {
                    "created": "2021-07-22T02:03:14.14109338Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T04:14:53.298845685Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-22T04:15:06.236847484Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-07-22T04:15:56.73685409Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-23T04:46:09.899907649Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-23T04:46:10.802566801Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:08:48.398627507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:09:24.996080561Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \turl=; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-amd64.tar.gz'; \t\t\tsha256='0885cf046a9f099e260d98d9ec5d19ea9328f34c8dc4956e1d3cd87daaddb345'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-armv6l.tar.gz'; \t\t\tsha256='7192603af50afb23c9d8cd14d2b2c19e0985a34d3eca685fa098df7893000d19'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-arm64.tar.gz'; \t\t\tsha256='714abb01af210473dd6af331094ad6847162eff81a7fc7241d24f5a85496c9fa'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-386.tar.gz'; \t\t\tsha256='3310fb0e48b0907bb520f6e3c6dcff63cc0913b92a76456f12980d0eb13b77d4'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-ppc64le.tar.gz'; \t\t\tsha256='37f3b99e21d0324a6583159e14e42e57e56561abbf7bf68bef3d8f57b29e39c0'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-s390x.tar.gz'; \t\t\tsha256='eae39d97df6b758636d5427be0b083dbf9d49007b302825ac6c8645de039aaab'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$dpkgArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.15.15.src.tar.gz'; \t\tsha256='0662ae3813330280d5f1a97a2ee23bbdbe3a5a7cfa6001b24a9873a19a0dc7ec'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-08-05T23:09:27.688992285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:09:28.171104482Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:09:29.925481397Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-08-05T23:09:30.416402636Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f161f865af2d7cfe1dab3eb978d5efa622621fa53ca2121b4637ac0d64870ce6",
                    "sha256:ee72e47caf13c85407f922e721dfbbeb133f39c38baedc52fda8b8f8f7b0d0cd",
                    "sha256:11bc5f589bf6f2412adf4ab9bcb5cc59ebeef5f6fc878c7ce2f156e9cb4b8aa4",
                    "sha256:443c89b1ea543f1fdc25655b2155c364c15fa7981f64d527e9643e35baa055d4",
                    "sha256:a4329f7f304185ee525d827e52ae7d848806abb2e35db880fe5bca8392acec8f",
                    "sha256:795ab832537dd382a2c81621e961744a0660e1b008a6fac2874116a699269209",
                    "sha256:26b663912e051fb13e055063d1854e82a94d376deac83853d43c38838d04f289"
                ]
            },
            "variant": "v7"
        },
        "1.15-rc-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5a454db0594123662d7c8c2d05751cdd6998b2ade354db14e6cb93ade67ce36",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b8f7008a69065b8c601bc6ef9ebce6a5121621680f5a62fd95063b5807be948c",
            "container_config": {
                "Hostname": "b8f7008a6906",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5a454db0594123662d7c8c2d05751cdd6998b2ade354db14e6cb93ade67ce36",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-08T01:13:05.218625634Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-08T00:02:56.401764137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15rc2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T01:10:31.338254501Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '3c6b4db00ec6d8958bb5693729343d08c245b634267130a966f052758579626b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-08T01:11:00.590491454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T01:11:30.584059952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T01:12:51.69228981Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-08T01:13:05.218625634Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:6d1020ff0c3d1b843e4ee3598a24d48c15042b7257108fc5cbfc4ffaedf374ce",
                    "sha256:cb8261f7e425af252a683b194b6ec7f503a64feb495cdf863b2f209eefb6f871"
                ]
            }
        },
        "1.15-rc-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5a454db0594123662d7c8c2d05751cdd6998b2ade354db14e6cb93ade67ce36",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b8f7008a69065b8c601bc6ef9ebce6a5121621680f5a62fd95063b5807be948c",
            "container_config": {
                "Hostname": "b8f7008a6906",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5a454db0594123662d7c8c2d05751cdd6998b2ade354db14e6cb93ade67ce36",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-08T01:13:05.218625634Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-08T00:02:56.401764137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15rc2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T01:10:31.338254501Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '3c6b4db00ec6d8958bb5693729343d08c245b634267130a966f052758579626b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-08T01:11:00.590491454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T01:11:30.584059952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T01:12:51.69228981Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-08T01:13:05.218625634Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:6d1020ff0c3d1b843e4ee3598a24d48c15042b7257108fc5cbfc4ffaedf374ce",
                    "sha256:cb8261f7e425af252a683b194b6ec7f503a64feb495cdf863b2f209eefb6f871"
                ]
            }
        },
        "1.15-rc-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:75ca4df2aa8b73ee05178c109490a1d1af025271e0e0ad38fe8a91c656373f8c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f096eefcd02bf818a9f15b1e2a15015435621151c7b76b8221cd1c4fa329b9f0",
            "container_config": {
                "Hostname": "f096eefcd02b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:75ca4df2aa8b73ee05178c109490a1d1af025271e0e0ad38fe8a91c656373f8c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-08T00:02:22.536463153Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T23:58:11.868334307Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15rc2",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T00:00:20.882491741Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f41a08f630f018bc5d9fd100bd9899516e4965356c78165157eb0eda9a17ac09' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='60d4d7723ef55d49bbf8326f37011f967048ae9167ef462ee4b9af311c4f3244' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e3e2cd95df2491d3cd74af9f73235dbf031dd2ecaf1140ab2793756be87d915f' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9c1f1ed42bd5f776f3585e39e3ba165a9b8ac8fde45dafbb6e41e04bae44bb3d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9eb1d694eaf5104bf80187b6a3c3f0201c598b095f23e8af2bbb19ca3fb12d21' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='272793157e27c5a09e216f61f6a84d70808a901b89cc69b9e8cd6f8e019be27a' ;; \t\t*) goRelArch='src'; goRelSha256='3c6b4db00ec6d8958bb5693729343d08c245b634267130a966f052758579626b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-08T00:00:41.97580088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T00:01:02.264630276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-08T00:02:05.759556157Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-08T00:02:22.536463153Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:40cabcb566d7342b3df0e0e03042ab0a97e600e75e0856a85eb5c075b91160b4",
                    "sha256:29ea20d200a61e303e9b21a9a51101d169eb1e4b786d7e8beff61aa1e396ae49"
                ]
            }
        },
        "1.15-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:954077f73c215dc0c1f49003d9c98ef04a836e4943dda865b20e6c4cef3a0db7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb01528d7e3dfd11ce750b5926f6a050f83c01d4cd45acbd1cc7872207951f1a",
            "container_config": {
                "Hostname": "eb01528d7e3d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:954077f73c215dc0c1f49003d9c98ef04a836e4943dda865b20e6c4cef3a0db7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-08-05T23:10:19.392616714Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-07-22T02:06:56.42930525Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:544c40297b94c3ecc6561cf7bfef1cdf9763a18ce5e24b6841a1b70d0516d41d in / "
                },
                {
                    "created": "2021-07-22T02:06:57.219633033Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-22T04:21:59.654281954Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-22T04:22:10.596116958Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-07-22T04:23:00.683113372Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-23T04:47:26.69017935Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-23T04:47:27.579290116Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:09:45.389888025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:10:15.19126093Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \turl=; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-amd64.tar.gz'; \t\t\tsha256='0885cf046a9f099e260d98d9ec5d19ea9328f34c8dc4956e1d3cd87daaddb345'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-armv6l.tar.gz'; \t\t\tsha256='7192603af50afb23c9d8cd14d2b2c19e0985a34d3eca685fa098df7893000d19'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-arm64.tar.gz'; \t\t\tsha256='714abb01af210473dd6af331094ad6847162eff81a7fc7241d24f5a85496c9fa'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-386.tar.gz'; \t\t\tsha256='3310fb0e48b0907bb520f6e3c6dcff63cc0913b92a76456f12980d0eb13b77d4'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-ppc64le.tar.gz'; \t\t\tsha256='37f3b99e21d0324a6583159e14e42e57e56561abbf7bf68bef3d8f57b29e39c0'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.15.15.linux-s390x.tar.gz'; \t\t\tsha256='eae39d97df6b758636d5427be0b083dbf9d49007b302825ac6c8645de039aaab'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$dpkgArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.15.15.src.tar.gz'; \t\tsha256='0662ae3813330280d5f1a97a2ee23bbdbe3a5a7cfa6001b24a9873a19a0dc7ec'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-08-05T23:10:16.966053144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:10:17.373345756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-05T23:10:18.911005443Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-08-05T23:10:19.392616714Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8a24fb67b3207aaf20758e5f14e9519f6f19d9b25d191f6f33948b7717a02df1",
                    "sha256:aab43e9ce80bb147adb42d7fa90b7ffc9c02fa8401d7181e97441ff32865fba0",
                    "sha256:6ccfb762bd9bab6272acd97e8b1cf8ff940abd00d9a4e1541e2d5a7f8ab27dfa",
                    "sha256:472bc457ea1e30acd8ef35468d4022e5ea4db02b7366a8b52918c4d247967015",
                    "sha256:55edad55fda9fe0946ba7933846dc0b586f45762f85c76477ee9c58148ccfffd",
                    "sha256:2fea64186d0f281a57da9b1cc6ab1f3a282ddbfc267fdc89f3c700c58d4426e0",
                    "sha256:f82826ff098172a5909282dc81020a10ae05037e26ce7c08e130bd99e9154976"
                ]
            },
            "variant": "v7"
        },
        "1.15.0-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cf472132626c9668e7a0c6aa955624e4c8038663602fcbeb22585abb564e499c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "420fcb00a2dcbbca58a80da3905952b3147d9247bd12c47380e5c176cb6fe7f2",
            "container_config": {
                "Hostname": "420fcb00a2dc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cf472132626c9668e7a0c6aa955624e4c8038663602fcbeb22585abb564e499c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T01:51:23.127511171Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T00:47:07.94860748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:50:10.718566431Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.15.src.tar.gz'; \tsha256='69438f7ed4f532154ffaf878f3dfd83747e7a00b70b3556eddabf7aaee28ac3a'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-01T01:50:21.017415225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:50:32.795859668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:51:09.653630725Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T01:51:23.127511171Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:ff07f1d292a24bfbab60925ced660a86d1e79bc6e409fa69fcc7c204273cfae9",
                    "sha256:3f699b788e7625c0b1d56e504432f12dfdba8896f6dc193b49da965e9357d55f"
                ]
            }
        },
        "1.15.0-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cf472132626c9668e7a0c6aa955624e4c8038663602fcbeb22585abb564e499c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "420fcb00a2dcbbca58a80da3905952b3147d9247bd12c47380e5c176cb6fe7f2",
            "container_config": {
                "Hostname": "420fcb00a2dc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cf472132626c9668e7a0c6aa955624e4c8038663602fcbeb22585abb564e499c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T01:51:23.127511171Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T00:47:07.94860748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:50:10.718566431Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.15.src.tar.gz'; \tsha256='69438f7ed4f532154ffaf878f3dfd83747e7a00b70b3556eddabf7aaee28ac3a'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-01T01:50:21.017415225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:50:32.795859668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T01:51:09.653630725Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T01:51:23.127511171Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:ff07f1d292a24bfbab60925ced660a86d1e79bc6e409fa69fcc7c204273cfae9",
                    "sha256:3f699b788e7625c0b1d56e504432f12dfdba8896f6dc193b49da965e9357d55f"
                ]
            }
        },
        "1.15.0-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d2e77d463b81cc5b36ddf18dd88547adc5bbb507ecce0e8b8a6ea78d3c5f1794",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9354c79b23451dfc5bdc80cc09f1947fcbe0e70ad0292dfd6e88b81a627e750",
            "container_config": {
                "Hostname": "c9354c79b234",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d2e77d463b81cc5b36ddf18dd88547adc5bbb507ecce0e8b8a6ea78d3c5f1794",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T00:46:37.65094326Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-12T01:07:59.933732922Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T00:45:28.799642125Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.linux-amd64.tar.gz'; \t\t\tsha256='2d75848ac606061efe52a8068d0e647b35ce487a15bb52272c427df485193602'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.linux-armv6l.tar.gz'; \t\t\tsha256='6d8914ddd25f85f2377c269ccfb359acf53adf71a42cdbf53434a7c76fa7a9bd'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.linux-arm64.tar.gz'; \t\t\tsha256='7e18d92f61ddf480a4f9a57db09389ae7b9dadf68470d0cb9c00d734a0c57f8d'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.linux-386.tar.gz'; \t\t\tsha256='68ce979083126694ceef60233f69efe870f54af24d81a120f76265107a9e9aab'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.linux-ppc64le.tar.gz'; \t\t\tsha256='4603736a158b3d8ac52b9245f39bf715936c801e05bb5ad7c44b1edd6d5ef6a2'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.linux-s390x.tar.gz'; \t\t\tsha256='8825f93caaf87465e32f298408c48b98d4180f3ddb885bd027f2926e711d23e8'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.src.tar.gz'; \t\t\tsha256='69438f7ed4f532154ffaf878f3dfd83747e7a00b70b3556eddabf7aaee28ac3a'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-09-01T00:45:40.87446469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T00:45:53.527520247Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T00:46:32.845290107Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T00:46:37.65094326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:ed122630e71083c2ad11b3d3b75d5183a316ad1ac28213ba3b0ce66dbcd95f45",
                    "sha256:08e1e49b1404417e1b83f86f73759d5850530b7ac6ae78036048a672168969a2"
                ]
            }
        },
        "1.15.1-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d39714df6ed0a1958305b688d3ca015fda1764b4d8fe304a5f4f07d382841b15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bc699da1350eca0459052bbb5e69580542359beeccdce0646853a25cfb5885c1",
            "container_config": {
                "Hostname": "bc699da1350e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d39714df6ed0a1958305b688d3ca015fda1764b4d8fe304a5f4f07d382841b15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T22:53:16.427472208Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T21:44:31.544603927Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:51:29.88826211Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.15.1.src.tar.gz'; \tsha256='d3743752a421881b5cc007c76b4b68becc3ad053e61275567edab1c99e154d30'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-01T22:51:46.261315399Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:52:14.068975934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:52:56.599228525Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T22:53:16.427472208Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:fa72992bcd806822141c8aca1d52b2710d85245307c3f4f9d52b27237f7db533",
                    "sha256:51d58b0843c373e5a09cbf090d9d99b5c7bb1fcb2a31448fb3f9e35d1e9d5653"
                ]
            }
        },
        "1.15.1-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d39714df6ed0a1958305b688d3ca015fda1764b4d8fe304a5f4f07d382841b15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bc699da1350eca0459052bbb5e69580542359beeccdce0646853a25cfb5885c1",
            "container_config": {
                "Hostname": "bc699da1350e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d39714df6ed0a1958305b688d3ca015fda1764b4d8fe304a5f4f07d382841b15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T22:53:16.427472208Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-05-29T21:02:07.502756243Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e97bf0d217846312b19a9f7264604851aedd125c23b4d291eed4c69b880dce26 in / "
                },
                {
                    "created": "2020-05-29T21:02:08.154513911Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:10:58.080762248Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:11:00.531398207Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-09-01T00:46:57.145823321Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T21:44:31.544603927Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:51:29.88826211Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.15.1.src.tar.gz'; \tsha256='d3743752a421881b5cc007c76b4b68becc3ad053e61275567edab1c99e154d30'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-09-01T22:51:46.261315399Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:52:14.068975934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T22:52:56.599228525Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T22:53:16.427472208Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3bf7ae36eb430a361768b06778233860311ddb37679126a5586e2d80f27dff58",
                    "sha256:58b3f24beaaa7342588179ced81a879a924db29a3ccb4b58bb9aeffc6386f93a",
                    "sha256:dc4e02e6ac64ea579e6d6be7b594cee8a835c5bfac55a0c912aabeef31cff54b",
                    "sha256:fa72992bcd806822141c8aca1d52b2710d85245307c3f4f9d52b27237f7db533",
                    "sha256:51d58b0843c373e5a09cbf090d9d99b5c7bb1fcb2a31448fb3f9e35d1e9d5653"
                ]
            }
        },
        "1.15.1-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:739d66790ee0866d801609f43a80b03d941115e89a80784c699f95a2f309e7ee",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0179b633e5b6e1f1ae04cdc04889c71afafb84cb003760a77adff4358f0f087d",
            "container_config": {
                "Hostname": "0179b633e5b6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:739d66790ee0866d801609f43a80b03d941115e89a80784c699f95a2f309e7ee",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-09-01T21:43:43.133269071Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-04T04:56:26.663477692Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aaf5c6340b3d662631775fa4536c2e48e9f68b6cc8d53e18fb8fd76ae41b305e in / "
                },
                {
                    "created": "2020-08-04T04:56:28.333814401Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T07:52:20.957454576Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T07:53:19.391813025Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T07:54:54.619370466Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:29.728878393Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-05T01:40:31.466349024Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T21:40:12.230600381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T21:41:40.504941507Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.1.linux-amd64.tar.gz'; \t\t\tsha256='70ac0dbf60a8ee9236f337ed0daa7a4c3b98f6186d4497826f68e97c0c0413f6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.1.linux-armv6l.tar.gz'; \t\t\tsha256='62db2fac55309f4bc1f73577165dcb331a4c649e39bdbe04943579e0b2b0c06e'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.1.linux-arm64.tar.gz'; \t\t\tsha256='ca21c771d906fbba8840b3a4831b1aa118f6e09b5d028323592faba382787a03'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.1.linux-386.tar.gz'; \t\t\tsha256='7e0c8e9749be69c28d3333a81ce8386916ba1306b40476a43f7794dc309eaf4c'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.1.linux-ppc64le.tar.gz'; \t\t\tsha256='50bdca87edc30bdc12956dab765c1b85249373a156a7a00eb998cdc70790fb94'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.1.linux-s390x.tar.gz'; \t\t\tsha256='2c3823790fc5508bd53bb104e6cc0052d1892855546a0eae0ea7809c84160543'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.15.1.src.tar.gz'; \t\t\tsha256='d3743752a421881b5cc007c76b4b68becc3ad053e61275567edab1c99e154d30'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-09-01T21:42:06.194505273Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T21:42:17.585918428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-01T21:43:15.796364428Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-09-01T21:43:43.133269071Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07aaf212e4f3206fe3b4fc705381d562e3c6dc50239694d3cf64f905f3d463ff",
                    "sha256:b8676a7dda390e0132b6cbb43cacda7731bec23987bbdf84266277a0bd941567",
                    "sha256:02beba293b78e27d745fddd55ab93cfc82e9252d76d56f779f321c2a3160f8da",
                    "sha256:5d41b231536080ead51c353c18c7bc1dac94217598eb735829ba49afa978d3be",
                    "sha256:b90d1e3090876e84442b85c2f9435d6d2fbc6975f5f9364eee1b0155ac2d882c",
                    "sha256:4619052289ec8a9203445ee90492d569b5c90b9a4a902b957b03dd551db7d549",
                    "sha256:397626333ce149b34fb376f5e91e7e96cf5bd880992805cd9a1453ccd59d5afa"
                ]
            }
        },
        "1.15.10-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c0b5b1e8dcce6c9d53043b6a8d436acf0db4646f49c3c5f25c1713cbda98327d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5511b8302b6f2370e74fe2d93145d07161536e2b1c1abb6eb74b62db2e143f69",
            "container_config": {
                "Hostname": "5511b8302b6f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c0b5b1e8dcce6c9d53043b6a8d436acf0db4646f49c3c5f25c1713cbda98327d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T12:36:47.633204585Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-31T18:13:27.999252098Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56e92c06393237a87e0a1ff475e9c9dc80e897d69ec20f45359b587906da345b in / "
                },
                {
                    "created": "2021-03-31T18:13:31.478936086Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T11:43:30.356994665Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-04-01T11:43:33.428789484Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-04-01T11:43:34.250559243Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:16:26.696583708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:36:36.440207887Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.15.10.src.tar.gz'; \tsha256='c1dbca6e0910b41d61a95bf9878f6d6e93d15d884c226b91d9d4b1113c10dd65'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-04-01T12:36:42.692832993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:36:43.798932668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:36:46.255965361Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-04-01T12:36:47.633204585Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c214add26489042a7f2c0bc2dc102dfd57f459dce2d54cb99f1acca4cd3ad9f",
                    "sha256:8a0b477e710b0d019c7257c5e3967585918391b4639066aaab96e7012b42138e",
                    "sha256:cd8ec54d40f1694c9883f08b5ef65d16eec3731ad261b3b755efef5502de36ea",
                    "sha256:080c5fcc246960fd0f8294ab35b3ec6d9e1d6f2dc4ca3ff7a8326df6f1994076",
                    "sha256:7e16d84a0dca1f790ea10c969b49f332754e72cb1b043e7002571b9c93045b22"
                ]
            }
        },
        "1.15.10-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:cdbddb36303dbe12ea9d9716afd0ba160599fcaab58ea02adc1f2d2f24c5e989",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bf28bd9ade64a3d5fd5c31dcc2bfcb47bd4b21cb770f005959e573984a130450",
            "container_config": {
                "Hostname": "bf28bd9ade64",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cdbddb36303dbe12ea9d9716afd0ba160599fcaab58ea02adc1f2d2f24c5e989",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T12:59:25.776493698Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-31T18:13:45.871209578Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1270a9135e4e3d6bcd51f9c8bb7a5129c493366412591f1a6885db98056a572e in / "
                },
                {
                    "created": "2021-03-31T18:13:47.946761632Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T11:56:35.237989938Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-04-01T11:56:38.400972536Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-04-01T11:56:39.352356961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:36:58.577848856Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:59:13.117785881Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.15.10.src.tar.gz'; \tsha256='c1dbca6e0910b41d61a95bf9878f6d6e93d15d884c226b91d9d4b1113c10dd65'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-04-01T12:59:20.249647582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:59:21.277314629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:59:24.706085984Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-04-01T12:59:25.776493698Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f0043b3282b298286343a472aead7c208c481a0dc2f3a38c91be66e7827530af",
                    "sha256:638a58600f0819525c1b52f2dd67f07bd31336af8a30c737fa4a81766807c7f9",
                    "sha256:f9ba8a876d958708689e2f963e40005a1d43c4ca87d36030eb040465031a4303",
                    "sha256:638f03117582006712a1fd362d3526ce0f8cb2a0993cc24db879cd93f93c9301",
                    "sha256:c89c805e0df278e689708ec66396390041777e1338853f6c8a04b3c1e55ca08b"
                ]
            }
        },
        "1.15.10-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c0b5b1e8dcce6c9d53043b6a8d436acf0db4646f49c3c5f25c1713cbda98327d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5511b8302b6f2370e74fe2d93145d07161536e2b1c1abb6eb74b62db2e143f69",
            "container_config": {
                "Hostname": "5511b8302b6f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c0b5b1e8dcce6c9d53043b6a8d436acf0db4646f49c3c5f25c1713cbda98327d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-01T12:36:47.633204585Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-31T18:13:27.999252098Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56e92c06393237a87e0a1ff475e9c9dc80e897d69ec20f45359b587906da345b in / "
                },
                {
                    "created": "2021-03-31T18:13:31.478936086Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T11:43:30.356994665Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-04-01T11:43:33.428789484Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-04-01T11:43:34.250559243Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:16:26.696583708Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:36:36.440207887Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.15.10.src.tar.gz'; \tsha256='c1dbca6e0910b41d61a95bf9878f6d6e93d15d884c226b91d9d4b1113c10dd65'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-04-01T12:36:42.692832993Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:36:43.798932668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-01T12:36:46.255965361Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-04-01T12:36:47.633204585Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c214add26489042a7f2c0bc2dc102dfd57f459dce2d54cb99f1acca4cd3ad9f",
                    "sha256:8a0b477e710b0d019c7257c5e3967585918391b4639066aaab96e7012b42138e",
                    "sha256:cd8ec54d40f1694c9883f08b5ef65d16eec3731ad261b3b755efef5502de36ea",
                    "sha256:080c5fcc246960fd0f8294ab35b3ec6d9e1d6f2dc4ca3ff7a8326df6f1994076",
                    "sha256:7e16d84a0dca1f790ea10c969b49f332754e72cb1b043e7002571b9c93045b22"
                ]
            }
        },
        "1.15.10-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:cf542aa17a56232b0a69a413aeb0754024c3f77c0cc1e9667d690f22a3f660df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dedcd985a74b4c90bdae9c7401028fe5960e3034094b625606ba44ba5ffaddf7",
            "container_config": {
                "Hostname": "dedcd985a74b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:cf542aa17a56232b0a69a413aeb0754024c3f77c0cc1e9667d690f22a3f660df",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-03-31T16:39:45.275165694Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T23:08:08.121254843Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd48b3fec0eec547919c9e90c2055f1d879c78e4eb7d92598bf55c0f83c44836 in / "
                },
                {
                    "created": "2021-03-30T23:08:12.687859756Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T01:22:10.087380283Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T01:22:23.358148579Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-03-31T01:23:11.185021709Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T16:36:46.629936134Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T16:36:49.146495853Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T16:39:13.609211874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T16:39:37.128328481Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \turl=; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-amd64.tar.gz'; \t\t\tsha256='4aa1267517df32f2bf1cc3d55dfc27d0c6b2c2b0989449c96dd19273ccca051d'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-armv6l.tar.gz'; \t\t\tsha256='10739f7a87544acca49c9f1c025ae1821ce83601228a968bd7102357ae89887b'; \t\t\t;; \t\t'arm64') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-arm64.tar.gz'; \t\t\tsha256='ca3f3e84d863d8e758bfaab65430b12b6cff8f5a5648139245321d3401da64a7'; \t\t\t;; \t\t'i386') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-386.tar.gz'; \t\t\tsha256='69a29473c9e8eded5b5885a45773e4f1b9661383ce577199c4c70efe4c67bc59'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-ppc64le.tar.gz'; \t\t\tsha256='49128af704c37a356b1d14d814e4cf64218a8c6cabb22249e0c0068b35f710d3'; \t\t\t;; \t\t's390x') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-s390x.tar.gz'; \t\t\tsha256='230e0e50fe0df0ba380804c02f1d88a801c6dee38582c4a9502e79dc744c7bb0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$dpkgArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://storage.googleapis.com/golang/go1.15.10.src.tar.gz'; \t\tsha256='c1dbca6e0910b41d61a95bf9878f6d6e93d15d884c226b91d9d4b1113c10dd65'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-03-31T16:39:41.016998878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T16:39:41.713103046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T16:39:44.234569865Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-03-31T16:39:45.275165694Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b23767c6fabdfb2aeda5d9e21044bd628375bd831956c46eabf576d59709272b",
                    "sha256:dda5f897270cb4884e2de77723bbf5010eac958da17926c837fdad669b211b36",
                    "sha256:cd303bae28661060bae62b037c55ed1dbf778e3ca35f143a006a6be1573baa72",
                    "sha256:c149bed6ddbdd8e5b79125b70902e6344be7f9401049f0dff6cb7e3b16a155b3",
                    "sha256:de401f83d1e5bb35f0ed894f9368b70673cfaebc946f4319cfbfc07da7f2be55",
                    "sha256:3d72c15f55b478b4e242d44f5865960b790007b55eb2ffa7444c01a65b3a93d7",
                    "sha256:c2a503eec81043b194e43800eae19c70966fb78bb88c3814ba5c74cf77a90300"
                ]
            }
        },
        "1.15.10-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:f00c3d12b0ea611f2f85bf43d91a9892a3c31386a01f45e42ea3dda864d83042",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4e7555468efec7d668352a0f5826b1678150830e089d622472481171cb394698",
            "container_config": {
                "Hostname": "4e7555468efe",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:f00c3d12b0ea611f2f85bf43d91a9892a3c31386a01f45e42ea3dda864d83042",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-03-31T16:40:27.677238718Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-03-30T23:11:31.772288286Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:65b5cf73b0b90f1f459a64d5706f2420deed7cdc5a9e13abacf5bcb05cc3138d in / "
                },
                {
                    "created": "2021-03-30T23:11:34.829839188Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T01:29:01.257338144Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T01:29:13.499006863Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-03-31T01:30:03.602989556Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T16:38:02.781850979Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-31T16:38:04.957450453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T16:39:57.15103126Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.10",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T16:40:21.180207102Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \turl=; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-amd64.tar.gz'; \t\t\tsha256='4aa1267517df32f2bf1cc3d55dfc27d0c6b2c2b0989449c96dd19273ccca051d'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-armv6l.tar.gz'; \t\t\tsha256='10739f7a87544acca49c9f1c025ae1821ce83601228a968bd7102357ae89887b'; \t\t\t;; \t\t'arm64') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-arm64.tar.gz'; \t\t\tsha256='ca3f3e84d863d8e758bfaab65430b12b6cff8f5a5648139245321d3401da64a7'; \t\t\t;; \t\t'i386') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-386.tar.gz'; \t\t\tsha256='69a29473c9e8eded5b5885a45773e4f1b9661383ce577199c4c70efe4c67bc59'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-ppc64le.tar.gz'; \t\t\tsha256='49128af704c37a356b1d14d814e4cf64218a8c6cabb22249e0c0068b35f710d3'; \t\t\t;; \t\t's390x') \t\t\turl='https://storage.googleapis.com/golang/go1.15.10.linux-s390x.tar.gz'; \t\t\tsha256='230e0e50fe0df0ba380804c02f1d88a801c6dee38582c4a9502e79dc744c7bb0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$dpkgArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://storage.googleapis.com/golang/go1.15.10.src.tar.gz'; \t\tsha256='c1dbca6e0910b41d61a95bf9878f6d6e93d15d884c226b91d9d4b1113c10dd65'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-03-31T16:40:24.349183701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T16:40:24.988056329Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-31T16:40:26.882016169Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-03-31T16:40:27.677238718Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61564c14099b4d40df26a76eb22c1449ace67da22091557b843f4e3adaec9ee0",
                    "sha256:54268841ddbf4070f097e4ed8bfae1a7720d92e55169d4cca1b587dd77501816",
                    "sha256:1843f0664b1bda288104cf7f9ea557acfd28932002993cb24b2439c01df3eaf8",
                    "sha256:1bb5ebac38a99dd5406a194cf5c3d7ff569ef7abd6c83b4c68df01e98adb7ad0",
                    "sha256:8f294f49ea29482bb8f3e448d14bb0e8d46284c47b317848657cb1791f8dac5a",
                    "sha256:59ac74122ebf13236016ef8febc1c17041e68a3d12f943dfdff54f885479a1ab",
                    "sha256:0f4243dbcb0149c3ec4aacdf16a3f4732fdcea5b0aeeaa5602458fe631c4547c"
                ]
            }
        },
        "1.15.11-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:eebbb6ad525a03870663c5085637834e1c34c5f4155fedc042537eae47289db1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "622f107036a5894e70ea9e04d526381d4f0564722faddf6d29870694da60ba51",
            "container_config": {
                "Hostname": "622f107036a5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:eebbb6ad525a03870663c5085637834e1c34c5f4155fedc042537eae47289db1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-22T01:48:00.991912167Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T18:57:39.165051003Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:028c5b473d862250586e174c5dd19b37f8fc3bffbc02d888e72df30f32fd6129 in / "
                },
                {
                    "created": "2021-04-14T18:57:39.95607105Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T21:00:38.276705345Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-04-14T21:01:31.228445293Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-04-14T21:01:41.249088891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T21:55:20.962621843Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:47:51.787937836Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.11.src.tar.gz'; \tsha256='f25b2441d4c76cf63cde94d59bab237cc33e8a2a139040d904c8630f46d061e5'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-04-22T01:47:57.34795721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:47:58.265708286Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:48:00.368548345Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-04-22T01:48:00.991912167Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e678d54c933532243e4ca1cb0b7ef7d6fa4969783100e0022246bc14d83972e9",
                    "sha256:3cadb9cc3bf65e144f8a9feb7c26a590d57adc73cefe8b2ffe47ed0c8a4aeb19",
                    "sha256:e0ab2b1eb565f9a2ff22c6edc725d8acc2446bef356eade8e7968ad5b3b09b5d",
                    "sha256:7088d815b07fb5d0c8cb97a802c56d6065a72b865da201b371062d51e033612e",
                    "sha256:a8e22459ad7419122e06ee3db875ef8b2e9864aad0f4bff19083ca657e89cdbe"
                ]
            }
        },
        "1.15.11-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:225dfc9be86bd573a11e312c316f647a13736f4bb3599ef7447398462551ec82",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "df8b60a28d9a09e5215f1d39115fe057836620ed6abb0ebdb56eca98ab0d5407",
            "container_config": {
                "Hostname": "df8b60a28d9a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:225dfc9be86bd573a11e312c316f647a13736f4bb3599ef7447398462551ec82",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-22T02:11:40.544933524Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T18:57:50.498735928Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d844cc7b5e00fb62be39d903a2fb4a08f700e75112c8eef1f31101e846ed010d in / "
                },
                {
                    "created": "2021-04-14T18:57:52.59855339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T21:28:16.985960476Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-04-14T21:28:21.279852293Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-04-14T21:28:26.474707838Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T22:19:25.689931978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T02:11:27.637233679Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.11.src.tar.gz'; \tsha256='f25b2441d4c76cf63cde94d59bab237cc33e8a2a139040d904c8630f46d061e5'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-04-22T02:11:30.314284251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T02:11:31.95347112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T02:11:39.331310626Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-04-22T02:11:40.544933524Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a8925b2335ff0b7938966250274c51afa56fbf8c367f94ea4704919c2abbb9c6",
                    "sha256:02a19857aa8b9b25128f82d41d823feeb31108647d0da05d3215b55dca23feb3",
                    "sha256:933e7ea95bb7496bebd3be6165b31982b81c8a8fa2eaa8c3d2d01b5b578e8781",
                    "sha256:9abc2f8973333fa3cd1a92903c594d086c2ebd6c2c8676c7d76953686056cb28",
                    "sha256:b3d7eb1e341f7d8b7a412ca5285154e0fdd5f79404355111fa7f999690d9fe3a"
                ]
            }
        },
        "1.15.11-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:eebbb6ad525a03870663c5085637834e1c34c5f4155fedc042537eae47289db1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "622f107036a5894e70ea9e04d526381d4f0564722faddf6d29870694da60ba51",
            "container_config": {
                "Hostname": "622f107036a5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:eebbb6ad525a03870663c5085637834e1c34c5f4155fedc042537eae47289db1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-22T01:48:00.991912167Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T18:57:39.165051003Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:028c5b473d862250586e174c5dd19b37f8fc3bffbc02d888e72df30f32fd6129 in / "
                },
                {
                    "created": "2021-04-14T18:57:39.95607105Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T21:00:38.276705345Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-04-14T21:01:31.228445293Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-04-14T21:01:41.249088891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T21:55:20.962621843Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:47:51.787937836Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.11.src.tar.gz'; \tsha256='f25b2441d4c76cf63cde94d59bab237cc33e8a2a139040d904c8630f46d061e5'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-04-22T01:47:57.34795721Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:47:58.265708286Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:48:00.368548345Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-04-22T01:48:00.991912167Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e678d54c933532243e4ca1cb0b7ef7d6fa4969783100e0022246bc14d83972e9",
                    "sha256:3cadb9cc3bf65e144f8a9feb7c26a590d57adc73cefe8b2ffe47ed0c8a4aeb19",
                    "sha256:e0ab2b1eb565f9a2ff22c6edc725d8acc2446bef356eade8e7968ad5b3b09b5d",
                    "sha256:7088d815b07fb5d0c8cb97a802c56d6065a72b865da201b371062d51e033612e",
                    "sha256:a8e22459ad7419122e06ee3db875ef8b2e9864aad0f4bff19083ca657e89cdbe"
                ]
            }
        },
        "1.15.11-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:8313d64d0ac028d08824e0f3a112aa101e8a6d0d7d62737be2d7319cf01755a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f609cff47071e79c6243a9f0769243d9d4273fd3444472fc95515a78d8eba385",
            "container_config": {
                "Hostname": "f609cff47071",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:8313d64d0ac028d08824e0f3a112aa101e8a6d0d7d62737be2d7319cf01755a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-22T01:38:48.07113488Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-10T00:59:18.251027301Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd2081229497eea2b33310cb1582b965581ca78b00b87cc8e42bdc8b9f350678 in / "
                },
                {
                    "created": "2021-04-10T00:59:20.589047436Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T06:05:29.222712881Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-10T06:05:42.213329741Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-04-10T06:06:25.997388398Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-10T22:21:36.08482981Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-10T22:21:38.275023389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T22:23:49.857263264Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:38:41.140872473Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \turl=; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-amd64.tar.gz'; \t\t\tsha256='8825b72d74b14e82b54ba3697813772eb94add3abf70f021b6bdebe193ed01ec'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-armv6l.tar.gz'; \t\t\tsha256='dba11ed018fc7b5774ca996c4bdb847f8f9535cdc4932eb09a43c390813af4c9'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-arm64.tar.gz'; \t\t\tsha256='bfc8f07945296e97c6d28c7999d86b5cab51c7a87eb2b22ca6781c41a6bb6f2d'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-386.tar.gz'; \t\t\tsha256='2de51fc6873d8b688d7451cfc87443ef49404af98bbab9c8a36fb6c4bc95e4de'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-ppc64le.tar.gz'; \t\t\tsha256='4916ef0fc4c40db2dcc503a3473b325ed21d100cc77f1cc7e0a3aede19eec628'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-s390x.tar.gz'; \t\t\tsha256='2fb25504fa525e24dbba7e8e7fa2d91c42c66272dc176d5270dec77099124c75'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$dpkgArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.15.11.src.tar.gz'; \t\tsha256='f25b2441d4c76cf63cde94d59bab237cc33e8a2a139040d904c8630f46d061e5'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-04-22T01:38:44.772390175Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:38:45.409634991Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:38:47.286286282Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-04-22T01:38:48.07113488Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c8cfc425d8c27c6735640f23bb13e9173f23f611462a6675ad68796f2f02db8c",
                    "sha256:f109b778bbffc35801b673121a55445dcc2420959bd4a5da6b605e30c04058cc",
                    "sha256:5cbab99fdcef91f9c05b41acd266a91942fbfebe2fb6f9fcfd32765411f258cc",
                    "sha256:f9d9020f0841c025902d32520f66fe2c9e746da06fa16c7208cf36abc9b698ae",
                    "sha256:5e625792dedb5270c3b76a38642b6dd7bd7c118c42a3b358e6686f3be43bb525",
                    "sha256:af4b4fab8fa897259c6ff5b3bc6b6cb13dfc1f62c982f9347e2cee40b6f82964",
                    "sha256:51f792ea9921d219e4b2546876ff4798b0868b006a88cad2a0bfb08f2ef45771"
                ]
            }
        },
        "1.15.11-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ba46c38f26e3fabc19c52d4c492eda2e34791f0f793b251fb8787d87d1580861",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7e8459acf2e08edb72e8e78aeb77ec2f583803427e5ba4ff55be730c7932f6f6",
            "container_config": {
                "Hostname": "7e8459acf2e0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ba46c38f26e3fabc19c52d4c492eda2e34791f0f793b251fb8787d87d1580861",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-04-22T01:39:39.071886869Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-10T01:02:42.560088902Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c101c517b88a8d25a4997ab4d938ea50aaa265c7f88a4e63edaaed37d89a288 in / "
                },
                {
                    "created": "2021-04-10T01:02:43.43005969Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T06:12:32.536534833Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-10T06:12:51.391478051Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-04-10T06:13:42.185588192Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-10T22:22:47.051353831Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-04-10T22:22:49.850767846Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-10T22:24:38.109807882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.11",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:39:32.982409795Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \turl=; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-amd64.tar.gz'; \t\t\tsha256='8825b72d74b14e82b54ba3697813772eb94add3abf70f021b6bdebe193ed01ec'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-armv6l.tar.gz'; \t\t\tsha256='dba11ed018fc7b5774ca996c4bdb847f8f9535cdc4932eb09a43c390813af4c9'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-arm64.tar.gz'; \t\t\tsha256='bfc8f07945296e97c6d28c7999d86b5cab51c7a87eb2b22ca6781c41a6bb6f2d'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-386.tar.gz'; \t\t\tsha256='2de51fc6873d8b688d7451cfc87443ef49404af98bbab9c8a36fb6c4bc95e4de'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-ppc64le.tar.gz'; \t\t\tsha256='4916ef0fc4c40db2dcc503a3473b325ed21d100cc77f1cc7e0a3aede19eec628'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.15.11.linux-s390x.tar.gz'; \t\t\tsha256='2fb25504fa525e24dbba7e8e7fa2d91c42c66272dc176d5270dec77099124c75'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$dpkgArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.15.11.src.tar.gz'; \t\tsha256='f25b2441d4c76cf63cde94d59bab237cc33e8a2a139040d904c8630f46d061e5'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-04-22T01:39:35.880139275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:39:36.495978157Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-22T01:39:38.361575957Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-04-22T01:39:39.071886869Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:12b61ad7bd7a2a86b7da3a366de3f7a1658de7c30c8acb0b0ffa922980a4a637",
                    "sha256:d82066c8f3674d4f63e375aabc3bc115493f4635c46da49e2fa7170b8eab8dae",
                    "sha256:87d5bc956fb3166fcf025b34d671e26488b55f17165cab9ab13e17ed2a799831",
                    "sha256:c1482cebded7615ffcdef0b09c46f6d9838c3198b5df523706fc22742b49fb0c",
                    "sha256:fdb742e21dc0fc233f85936ea509b6dc31a6c1331e56b2aa3aa5b4e90c858bae",
                    "sha256:fa74f245e7682f5960dd40da81ac79652bda7f7ffe2cca98c0a56580be46b804",
                    "sha256:51a5e133df40681f34e678afc70a6ee7065bbdcf951e58a79b3ab58bb69d07ec"
                ]
            }
        },
        "1.15.12-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:d1f83a518d17d8935cb508ec73b2c2479f88202e667fd47a98f5137f8e78a364",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c42c37dbd87e45afdaf587ceeb087d0688c0034120d3eb0934a856f109784c5",
            "container_config": {
                "Hostname": "2c42c37dbd87",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d1f83a518d17d8935cb508ec73b2c2479f88202e667fd47a98f5137f8e78a364",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-05-27T15:14:05.439282209Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T18:57:39.165051003Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:028c5b473d862250586e174c5dd19b37f8fc3bffbc02d888e72df30f32fd6129 in / "
                },
                {
                    "created": "2021-04-14T18:57:39.95607105Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:06:45.723695847Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-05-27T15:06:46.472264306Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-05-27T15:06:46.652383926Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:12:05.539820029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:14:03.477368852Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.12.src.tar.gz'; \tsha256='1c6911937df4a277fa74e7b7efc3d08594498c4c4adc0b6c4ae3566137528091'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-05-27T15:14:04.356758108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:14:04.564287205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:14:05.237155864Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-05-27T15:14:05.439282209Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e678d54c933532243e4ca1cb0b7ef7d6fa4969783100e0022246bc14d83972e9",
                    "sha256:2ff9af51b211bdc72bf3437b9aa8d151acc74601c04367ad054e152f2e510c8c",
                    "sha256:ab5e023a1727aaa26efe76a3f336f3d6d4a721a214cfc6ccc3f89196d8b0aa71",
                    "sha256:5bf7a1652fb76ca355763a9d98e96a436c9264be8660a6c2fdbbdf3008cbb2ed",
                    "sha256:4e3a28d893ed01dff1fbaa625ea1169fdfe20bed53f2820194aee1257e789082"
                ]
            }
        },
        "1.15.12-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:fe67f75978981440b1c99025eafcbc2e27db90a4576d7497ec635625752b653b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4f02353692e3c204224c2a806d8ae9fd7c35ec3ccc0dce9960e27cf0f9d5c838",
            "container_config": {
                "Hostname": "4f02353692e3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:fe67f75978981440b1c99025eafcbc2e27db90a4576d7497ec635625752b653b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-05-27T15:15:56.900596238Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T18:57:50.498735928Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d844cc7b5e00fb62be39d903a2fb4a08f700e75112c8eef1f31101e846ed010d in / "
                },
                {
                    "created": "2021-04-14T18:57:52.59855339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:09:03.348139703Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-05-27T15:09:04.130750172Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-05-27T15:09:04.351696017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:14:18.295846469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:15:54.90900316Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.12.src.tar.gz'; \tsha256='1c6911937df4a277fa74e7b7efc3d08594498c4c4adc0b6c4ae3566137528091'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-05-27T15:15:55.751811463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:15:55.979932612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:15:56.69589304Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-05-27T15:15:56.900596238Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a8925b2335ff0b7938966250274c51afa56fbf8c367f94ea4704919c2abbb9c6",
                    "sha256:410d8d9c4ebbe2d8c75f93347832158acc1fb33a991cbd63313ce1fe5a62b074",
                    "sha256:153562ab227d4f60bfb52982ebe2e6fdcadcd032e5906011268a365577014ffc",
                    "sha256:762fb52e32a4e44158efa674b222ab8408599ca35b48e1b8db12dbcdae3bfd2e",
                    "sha256:5fb9c6d1dd116adba5c8cdc3608ba1a6e70a4989c40b8317473ee81f28e81c35"
                ]
            }
        },
        "1.15.12-alpine3.13": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:d1f83a518d17d8935cb508ec73b2c2479f88202e667fd47a98f5137f8e78a364",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2c42c37dbd87e45afdaf587ceeb087d0688c0034120d3eb0934a856f109784c5",
            "container_config": {
                "Hostname": "2c42c37dbd87",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d1f83a518d17d8935cb508ec73b2c2479f88202e667fd47a98f5137f8e78a364",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-05-27T15:14:05.439282209Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T18:57:39.165051003Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:028c5b473d862250586e174c5dd19b37f8fc3bffbc02d888e72df30f32fd6129 in / "
                },
                {
                    "created": "2021-04-14T18:57:39.95607105Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:06:45.723695847Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-05-27T15:06:46.472264306Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-05-27T15:06:46.652383926Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:12:05.539820029Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:14:03.477368852Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.12.src.tar.gz'; \tsha256='1c6911937df4a277fa74e7b7efc3d08594498c4c4adc0b6c4ae3566137528091'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-05-27T15:14:04.356758108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:14:04.564287205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:14:05.237155864Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-05-27T15:14:05.439282209Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e678d54c933532243e4ca1cb0b7ef7d6fa4969783100e0022246bc14d83972e9",
                    "sha256:2ff9af51b211bdc72bf3437b9aa8d151acc74601c04367ad054e152f2e510c8c",
                    "sha256:ab5e023a1727aaa26efe76a3f336f3d6d4a721a214cfc6ccc3f89196d8b0aa71",
                    "sha256:5bf7a1652fb76ca355763a9d98e96a436c9264be8660a6c2fdbbdf3008cbb2ed",
                    "sha256:4e3a28d893ed01dff1fbaa625ea1169fdfe20bed53f2820194aee1257e789082"
                ]
            }
        },
        "1.15.12-buster": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:330e7b30561efa6b0d4db808d117441a291a8a8ddb8fe13fd5c376062d2bd32d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a231b7a8a6d8046664eafed4db3aea27dd5ec8707ea47f0285350dab04bc773a",
            "container_config": {
                "Hostname": "a231b7a8a6d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:330e7b30561efa6b0d4db808d117441a291a8a8ddb8fe13fd5c376062d2bd32d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-05-27T15:11:32.907913046Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-05-12T01:02:10.120840826Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:51a0472692adf18117444dc1f35d6eb3b4d6d672f28a7f6631f9d5d269b0b85d in / "
                },
                {
                    "created": "2021-05-12T01:02:15.470295718Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T00:40:05.006888058Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-27T00:40:15.273554291Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-05-27T00:40:49.200710238Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-27T15:05:37.285746668Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-27T15:05:37.635642446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:11:18.540202573Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:11:30.985080534Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \turl=; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-amd64.tar.gz'; \t\t\tsha256='bbdb935699e0b24d90e2451346da76121b2412d30930eabcd80907c230d098b7'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-armv6l.tar.gz'; \t\t\tsha256='6a20048f7061d06f590d869a5298e8c0ffc325e8faf0bb8b6a622ad007a53028'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-arm64.tar.gz'; \t\t\tsha256='a10161e6f0389c45ecd810e114acaba967ea3a4def551fcbb0b1e270996103ed'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-386.tar.gz'; \t\t\tsha256='d186ccaa0080e301d35fa49a244877da6f08a1aeda3ed90438fee835538f7ece'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-ppc64le.tar.gz'; \t\t\tsha256='c94c105e4e985b5675aa434845cced73a64bb050a8a96fa0e9b17dbea3ac6684'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-s390x.tar.gz'; \t\t\tsha256='9f1daa296e44ec0ce6b648e4e6d63210584b6c1ae2e46c77c8030b77514e8a8e'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$dpkgArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.15.12.src.tar.gz'; \t\tsha256='1c6911937df4a277fa74e7b7efc3d08594498c4c4adc0b6c4ae3566137528091'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-05-27T15:11:31.77660429Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:11:31.972633384Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:11:32.683472838Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-05-27T15:11:32.907913046Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:14d815ad89c74bdfec388f17cc77f22785940af706a0086081e3fb528acf0eed",
                    "sha256:c62a123909222df9261924aacfcb2d6a10006ca8ac1004e98333655436f36cf6",
                    "sha256:58715e3e9cd9d31b231c54c4eb76b78b6b944d5efc4896a37f2968acad7cbb5b",
                    "sha256:179d94b93d7c3909536b0b628e6e1217d5773f6eb7cea0eba146c42102897649",
                    "sha256:d244d8972ed3abcb578dd38549e4a342200df01e2536b79d5514dd88cda7cebc",
                    "sha256:5a1425ef0f5fff3a0afa6984a0f1f9c06b514ec1477babb44f05e10a238e2610",
                    "sha256:4895e548cc44e3e0b5160a7df91c763053c7bb3b899ef2775b9d54013a27b3e0"
                ]
            }
        },
        "1.15.12-stretch": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4ec0916c775e135ee5b89f84cad62d57353fced6bfc42e4d8afccad3cad3656e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3a1385f5fcb04a6ab7824a81525344dfdfc6405a7f4c807ed203158df4c82cbf",
            "container_config": {
                "Hostname": "3a1385f5fcb0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:4ec0916c775e135ee5b89f84cad62d57353fced6bfc42e4d8afccad3cad3656e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-05-27T15:11:57.552339091Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-05-12T01:11:51.00617613Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:81cfd4e746bdfcc19847240b77012487652be22dbd5741ccb2485a4207f2b73f in / "
                },
                {
                    "created": "2021-05-12T01:11:56.14253328Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T00:45:16.861326981Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-27T00:45:25.344307692Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-05-27T00:46:00.095012361Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-27T15:06:20.16652175Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-27T15:06:20.603710704Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:11:41.764106323Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.12",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:11:55.442948205Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \turl=; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-amd64.tar.gz'; \t\t\tsha256='bbdb935699e0b24d90e2451346da76121b2412d30930eabcd80907c230d098b7'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-armv6l.tar.gz'; \t\t\tsha256='6a20048f7061d06f590d869a5298e8c0ffc325e8faf0bb8b6a622ad007a53028'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-arm64.tar.gz'; \t\t\tsha256='a10161e6f0389c45ecd810e114acaba967ea3a4def551fcbb0b1e270996103ed'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-386.tar.gz'; \t\t\tsha256='d186ccaa0080e301d35fa49a244877da6f08a1aeda3ed90438fee835538f7ece'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-ppc64le.tar.gz'; \t\t\tsha256='c94c105e4e985b5675aa434845cced73a64bb050a8a96fa0e9b17dbea3ac6684'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.15.12.linux-s390x.tar.gz'; \t\t\tsha256='9f1daa296e44ec0ce6b648e4e6d63210584b6c1ae2e46c77c8030b77514e8a8e'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$dpkgArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.15.12.src.tar.gz'; \t\tsha256='1c6911937df4a277fa74e7b7efc3d08594498c4c4adc0b6c4ae3566137528091'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-05-27T15:11:56.34014219Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:11:56.522961818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T15:11:57.312226211Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-05-27T15:11:57.552339091Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6795c7e22039e30ee8f9a47c4bf0759c7ff49fdacf20a771642d4f2b41a5d297",
                    "sha256:5867308aff37774d7d332a8173cbf47820b38f5648fe144b93a4d6bac74fbb4b",
                    "sha256:750247652f823d425c726b2d2f70a8361098e0a7e57b8e271e8ee329c02af4e7",
                    "sha256:e21d9c33444522f1ae20f155defc98064c20509b591336d37762c302ce5559b8",
                    "sha256:c3450a1fd1be8fc3dc680f994596934844bcd46cb9e701ce9c59e29d2cc86c06",
                    "sha256:e34ec3299253c6ca0c350cb28e5684c6de0ce7f296ee8c5fb11f06d932ad52ce",
                    "sha256:73e3e37f126681dceaa6b22c3ee1940ba97dcd4a11b31f5d2877ae101a71d849"
                ]
            }
        },
        "1.15.13-alpine": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:501e31479e69d1b853c8b8db3eb1ec25102a2af53409f6471cba678dd4da1456",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "197edad19a62e957b25c0f323b7846121ad382e206fad21cbe3afe6bd51a29a1",
            "container_config": {
                "Hostname": "197edad19a62",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:501e31479e69d1b853c8b8db3eb1ec25102a2af53409f6471cba678dd4da1456",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-25T23:01:06.581255606Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-06-15T23:15:05.691591671Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:416a8b507abdc6bdcb22997a4be0a4170796c3f9f77e315b2dbff2b0a212bc68 in / "
                },
                {
                    "created": "2021-06-15T23:15:06.19175595Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-24T17:37:55.670904455Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-06-24T17:37:57.071061321Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-06-24T17:37:57.422928277Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-24T17:49:36.81795748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-25T23:01:02.340170438Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.13.src.tar.gz'; \tsha256='99069e7223479cce4553f84f874b9345f6f4045f27cf5089489b546da619a244'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ -n \"${GO386:-}\" ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ -n \"${GO386:-}\" ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-06-25T23:01:04.11514561Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-25T23:01:04.542916364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-25T23:01:06.133921939Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-06-25T23:01:06.581255606Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3461705ddf3646694bec0ac1cc70d5d39631ca2f4317b451c01d0f0fd0580c90",
                    "sha256:2acbe837f0fcd21d72e296e33231e8027ca516eb14ffa4ad397fee0508e3fb48",
                    "sha256:e93fbbfb9214dfa7c4af59b5f73a1aadfea7964a5b7822d8fa61c5cd36c8ecbb",
                    "sha256:4b4e542c916c50364981954db6a0303721327dc78f4893dae81aec7729ddd373",
                    "sha256:522e5ac2d921e1812e9ffd02baf29d3cae8e50a7cc8ded2b8b44bd39c61c5a47"
                ]
            }
        },
        "1.15.13-alpine3.12": {
            "architecture": "arm",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:0280c9a9416a5a5ad74b24910090b880583a8c824a84bb814eaddded81482ae9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "84c1073cd1f2b44b31b5293a6623f42596405db0f7c2f5af1bc2f1abeaa4cba3",
            "container_config": {
                "Hostname": "84c1073cd1f2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.15.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:0280c9a9416a5a5ad74b24910090b880583a8c824a84bb814eaddded81482ae9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-16T11:36:14.519591738Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-06-15T23:15:24.829163828Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d844cc7b5e00fb62be39d903a2fb4a08f700e75112c8eef1f31101e846ed010d in / "
                },
                {
                    "created": "2021-06-15T23:15:25.156291082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:22:37.859158736Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-06-16T11:22:38.638344309Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-06-16T11:22:38.826205451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:34:04.603426171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.15.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:36:12.427356689Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='387' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.15.13.src.tar.gz'; \tsha256='99069e7223479cce4553f84f874b9345f6f4045f27cf5089489b546da619a244'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-06-16T11:36:13.372328731Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:36:13.579099678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-16T11:36:14.303400267Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-06-16T11:36:14.519591738Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a8925b2335ff0b7938966250274c51afa56fbf8c367f94ea4704919c2abbb9c6",
                    "sha256:2bdfbacdf97e1f47f77762291dafc53b17e19649034640276dadc1ea6053a6b7",
                    "sha256:7aa88935c2932ee04fa5bfa7e6c8cdee3fdb16b27841076f503f5726d1db4f89",
                    "sha256:1189b41f5762ef9e045aa31a5a9b0480bfe76ca6f7380038979f13cf3a543bc9",
                    "sha256:8e63ab5d87804e0387187350b52968fb30813ba08079dffb061108827b0fb1c5"
                ]
            }
        }
    }
}