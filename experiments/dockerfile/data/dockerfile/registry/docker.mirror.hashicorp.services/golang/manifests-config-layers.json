{
    "manifests": {
        "1": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:cafa7552464a8e435f617ed9ce54db28cd69754040e60b3e1d8e3da9e240fb4b",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-14T22:57:07Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:4304d944c421bb279ad1faada14d03ac7e7edca61793d2f6a7ad94681c457887",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2322
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:4304d944c421bb279ad1faada14d03ac7e7edca61793d2f6a7ad94681c457887",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:7180d60eb15287c8a73a34470f9def2ff8439704c06a911ce08f76257cb92a0f",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:5ad58349cdab8f05e695c96c93f840ab90b8dba870e9def0162cbe7d7ae144ac",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T08:35:34Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:ec5c62e7ec034c7d0edd33aa6cc7b85e299c03e495785cbc69b776a929f012aa",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:ec5c62e7ec034c7d0edd33aa6cc7b85e299c03e495785cbc69b776a929f012aa",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:ac9a7a60334785e6d459d950fa943b99ae06cd34ebb785a68151c41bc59d9a15",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:6311d7a4ca52a611c4d8cb4232d1863abc4439069db57c44bcb2a2cbc736a3bf",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T09:07:34Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:ffa2dc4682898a620500bf7a04d7817016fc2fff57215b73265ec5f7096346d5",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:ffa2dc4682898a620500bf7a04d7817016fc2fff57215b73265ec5f7096346d5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:68a1f1bfccb7dd6860ecc2a24747b72bbf55b46368e410c3df2ea4190e4432fd",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:2846b7f71b18acc1dd85300817e2d26ac63121c5fe9a93c780497869fb22e45e",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-14T22:56:31Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:1535d733254ef88f69a207fffa11a2c776fa3ca3a529413e4d794fe4e67ef80c",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 2321
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:1535d733254ef88f69a207fffa11a2c776fa3ca3a529413e4d794fe4e67ef80c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:c0fea66d4acd827e9a81de8996b4ef5f06381ba68ad24e6dd2cee528d45ba9bc",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "org.opencontainers.image.base.digest": "sha256:8cf747af094998ee527bd33e348e9ef1c22c349757f3cde7ea7a0fe0a5b60fa3",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T19:01:11Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:5f5cf9ccda9ebb27f86b60117f5f962af627d564859fd392216fff80e452685b",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 2325
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "vnd.docker.reference.digest": "sha256:5f5cf9ccda9ebb27f86b60117f5f962af627d564859fd392216fff80e452685b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:4816aeb8ba4057497281c23adeb1435b1dffaaee02078aa25654f2b7aa46d071",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:3b8246fbba99cc2e0111674a50e104b1d8137b9d16da58c380178086ef2bce0d",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T04:42:23Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:9133d33f5a9b4fd41768df6ae0add2e5646af87ea4ea2838248075efca5b9998",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:9133d33f5a9b4fd41768df6ae0add2e5646af87ea4ea2838248075efca5b9998",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:6a90b350f6bf898069c361709fe98216212a5642ead00fc7d8c9ff24cb07a9ee",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:59256abb2252e0cda7425a81f7eb7e0b7f4d75fbf878b6bfda2e53dd42bcf37c",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T02:42:49Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:4a2cdadb093177bbfb267b6531c755d00c7c0eb20d7fc1e37260752b74026e1e",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 2322
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:4a2cdadb093177bbfb267b6531c755d00c7c0eb20d7fc1e37260752b74026e1e",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:5f7307815a43a2cebbb9989b4b60deea77bc4c596246ed5787b1ce21548693b4",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:2c833fa6e635a69904dae2764e4f88d46abfbfe9f8bf9ee53a7e71423b6ef904",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    },
                    "size": 3042
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:34ccbb809489bf4932c66706a72dcbda93268200172c613d3c84d05a9a1cc1f1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    },
                    "size": 3042
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        },
        "1-alpine": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:216266c86fc4dcef5619930bd394245824c2af52fd21ba7c6fa0e618657d4c3b",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-22T22:55:26Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:1bddfed44ff69c533c0ec006515afb7350986b0d7eb7383f780ab5525f4f06ff",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1921
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:1bddfed44ff69c533c0ec006515afb7350986b0d7eb7383f780ab5525f4f06ff",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:13210402d18f2c6a89eea7ff260c2b510644af46435318194001026305ba73eb",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v6",
                        "org.opencontainers.image.base.digest": "sha256:4a6ffef76277d8c1d912ad489e0c09ddc09fdf7aefae51750a33dc47478c0cc0",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-29T00:34:49Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:3183a82802a5c55c19b5640dc0183353b363892a058a68c923f26f2acb37f651",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v6",
                        "vnd.docker.reference.digest": "sha256:3183a82802a5c55c19b5640dc0183353b363892a058a68c923f26f2acb37f651",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:aa7b0abfad17911a6504f33d0109cd44efcd02575daf4ab9f82e2501435bf57d",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:71df6ab6f3d87c5271834ff44b0b5fb8b6d4e34f08dc7ad86f75a6394949dd44",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-29T01:38:11Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:5e57aa99281c3ec63bca5261a1f93d77d65218521c46238add612a2b6c0377f2",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:5e57aa99281c3ec63bca5261a1f93d77d65218521c46238add612a2b6c0377f2",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:dcdc524c6fb1376c9a25fdc7b7b00f47da12fd063092a2dcedd9d8036fca148b",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:1c3b93ed450e26eac89b471d6d140e2f99488f489739b8b8ea5e8202dd086f82",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-23T06:26:39Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:638709d35305a16b38f575eabe97e2cab3229169cf555ebd5e98630f794f595c",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:638709d35305a16b38f575eabe97e2cab3229169cf555ebd5e98630f794f595c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:e6feff72e44b3a90aa8df43db17606970ae86ea4d8bca7381ca36eb677e743ff",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:bdea2fc06762f63b168e481c88a732e73d856b98c9a504f2c749c867ef9d41ac",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-22T22:54:26Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:c22e3c6a61734265c5fa044b4feecdd14bfc0d02cf208a4028e05945b1742419",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1920
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:c22e3c6a61734265c5fa044b4feecdd14bfc0d02cf208a4028e05945b1742419",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:bfb4dfa5dbbb979f9879f070472876c384231581c295fcc5a123eae6188aec95",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:d9e1c1363259ba11ca6bda2dbca873603d117811508407e7cf36cb5b627991fe",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-28T23:34:22Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:e88b9c5f48e387f911449cf140141a8dca18d4ee87125aeb6823300253b31401",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:e88b9c5f48e387f911449cf140141a8dca18d4ee87125aeb6823300253b31401",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:87a7e4767879bc652058b5cebbc947c594178b070efb0a43e43e8d8a1d39e3c6",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "riscv64",
                        "org.opencontainers.image.base.digest": "sha256:af3c4e93ff44f75a03482d8a5e81bac84c9d015b53ece9d32ae2b409cb0c239a",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-30T07:14:35Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:ee784839d81b1c63684846ca08e421df2e9510e2bf25cef351b039b61707d5cf",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "riscv64",
                        "os": "linux"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "riscv64",
                        "vnd.docker.reference.digest": "sha256:ee784839d81b1c63684846ca08e421df2e9510e2bf25cef351b039b61707d5cf",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:113aded68982efe4948733bdf42efc9e4afe1c54336615c6d4ea45bacde95c91",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:29e5ba63e79337818e6c63cfcc68e2ab4e9ca483853b2de303bfbfba9372426c",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-23T03:13:19Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:b121b1ec284faa85ddcb896865995c0a77e996172abda14b84bf44dfd16419ab",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1921
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:b121b1ec284faa85ddcb896865995c0a77e996172abda14b84bf44dfd16419ab",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:761a1ed8b6aff9e8d483d929102ec73068841012ed61fe2628c934c84759ac97",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        },
        "1-alpine3.10": {
            "manifests": [
                {
                    "digest": "sha256:ed8598d2bb41be72808d6c32c71d5df3d768aac3f898644ecf9919b31ea609b0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:7fa4cbe63dd79c371e4d6eea77fc0a196b49c0eee3b6d4e2cfccf50fdc9a7030",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:7515f2f11d99091773c041f7061c7581d0c2c4e283b09d08dd5f01700813ecf7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:e251b265aede3d73e9b477a4cf406304db8e130aaac756ad838cf6ba7509c5d0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3aa6dead44b956715ee715105baa3b25d215dd87932a46296d64e8745947b7ee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b24134566443d850ba0eb905ed6036695ac6a81bac2943ff007accfb0530cd8f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:1d2a5d72eb7c0823dc37fbf7569db585c192030fd6e4e6fd37a4fabef11c7f1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-alpine3.11": {
            "manifests": [
                {
                    "digest": "sha256:869030bf72c232cb88abaf4912e1311c0b35f90b731115c7fac87b86764f0d6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3bec58088119fca9dc121d21fa3d46910f81d04545b08eae37c8541de83ccc85",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:fd5018702fb34c2c74dd3db2d46b301669f7128247ceb19132b9130828a7b130",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:632566c8ea6782239f45a0c15ff91563fa6c5c1a845af9be248c7c9d9e020e91",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:26e945650c11ce11f71cf6c822681cb9e9f7bab2a8d7e2f0959ae05251c45060",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:2acdcaa9c26ed79fd8fa74fcc2fe0993cf2187016627ee7faa79b2e7b0561836",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:f13aafb6569c00f8a3effcca0e56001278fe4bcb2fbae2303a6073751cbc033f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-alpine3.12": {
            "manifests": [
                {
                    "digest": "sha256:d7fcd2b37a19330f52ff3cec8a1e26eea21719d23984177ab1b6f97480f5793c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:6c66a02741cb7c6e09a9f62081884c42a4834bd921e856b306dbfe489204e53a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:fcc85a5c48b2db67da956621e180ec9e77c1265ed8115522dc360d654dc5e820",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:713fd0ae7208e119476698fee56a17d12a6b9a92690f25b8e5b0eaf15d9686f9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:be551e674c7aeb2885fc1a03bb4c61a6412835618e9c044c20e75f455933afe7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:eba3165420274fa493d38b7629ed62d2aa2e10f3557843b9fdded897c2c85d69",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1364
                },
                {
                    "digest": "sha256:1bcf516d2af1b71e7dae131facbecc2231266dcb6bae1aa15ae2796c49bdc1aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-alpine3.13": {
            "manifests": [
                {
                    "digest": "sha256:5cae70ebb5ca78778f682a994e4df09bdc8c382c0f647058665cb6186dbe3351",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:f74cfba82b1e4987c0ba0f24153e214c2b37f207701f8759d2bc0b78aa3f7f8d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3a8549ca5f11dc5e2850e514aae8ff3cc10d13f4442b6e32c93a03b1c480cc98",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:a9321c9d6637f000d119635ded9eca8b75f3919cd5bcd642ce5fad766af83ec0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9a2e5aa77659dbe8461a8ce0d60255be0dca15218fb701bc3e60f18d699da78b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:0fe90a04008852aa94603fe05238175ad9220277033c9b18705417d9e59633da",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:7037e5a2b480e2d33eaf0174e3bbfb5fc4975c520733e8665edde8a604f7ed1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-alpine3.14": {
            "manifests": [
                {
                    "digest": "sha256:278ccd055f3edcd2b4764ecd59b1ac36e57c806c6942f82d7288b267ba512c75",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:80e8fb6d6b617c4134bf69634391980bc59c90a318faa1307ce8cfdb8e2aa530",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:58f91310574f2d9fd31b1297a76ea43adad9f8bf5a450843c488d517073c9c85",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:e1ae614cfda5de7a31a3e9162b2d61cf14dbc5e61a60832c23585c455a094aba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:41df5892a589753453cdff5583c74e2930f20277812031f6628dfc54769e6535",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:a7b1baf7b298ff38b83ce6b3a202dc0204d1acfb4972b93e9e103654c09112c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:dd78e985d729ee4aee599bec5f3df9eb78f1fa288e8a9864b4eb9b5d37f5527f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-alpine3.15": {
            "manifests": [
                {
                    "digest": "sha256:3ed44ed6b3ab156cb591b6bae2997a7e7fbb8d2c850ac9e87779b879e317cb23",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:924c364c1f66413504bc601f3d2262d84f5d6c16160148ffa8333a68c6026898",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3498b5cf8c832075743267680294d3236e18df9ea0bf322e278667bc6b20d8fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9eeb4c40196c9e17342ca124b0286b9e84bb7872a4ff4cfce836794e052508ff",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:119e96f99d6722375b8cdd894529d7c1b17b2f1f0b01b9b41d6eaa8812ee607a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:82961838d031b75bafffebd97a181c03b9003a54ab192f6b6aad11209257f2f6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:7878f9de5d4ef805ce1159c113ae8f9667130b16e4a5115c09b90e9b2b94afb2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-alpine3.16": {
            "manifests": [
                {
                    "digest": "sha256:85c0457d7b6dad9997b5956418bb44fae53c831fe992c7c2964a790467dd8bc0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1158
                },
                {
                    "digest": "sha256:0d6e0c77775a76b341928a3b58ec7c9c51653ffb7a4390b38f3b5a5a10c57407",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:a79a35ed3fb7a2d8e1dfd912305d9039b2a5a6068f049176b1c97b3ce44ba04c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:dedb81d7f0cc2274788cb871752dc5398e92e1c924b47651c3e3e8781867ffc5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:a1150999343e9f16fbb68294bf21b092404ff93f4a8127700da78a671d731747",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1158
                },
                {
                    "digest": "sha256:2d3b0a7578c43b916dd7b38b415bff3b573ef12df5565e828de6c29bfb0559a5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:dede66df704bf4105dcc4bd15ebe7a80dbf7f0c3a39493963d79bc9695216dbe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1158
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-alpine3.17": {
            "manifests": [
                {
                    "digest": "sha256:ba884f929e50f0cb303bb604d3b241f3662642b267acdac8c094b2752fe7727c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:10ca87933968764d670cb1547e853487c875a0b20c4efe9c7c4c1eb8ba828be8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:1b19b3d2154849d59c896d14a71c496d3e42648ee8488913a78508dffb32ee8b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:0fa6d715bc62c6e291e00e0013110bcde085c0e33dbda5706ac1da41caf6d293",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:31d09a66c51c0d2fb1814f548686426715a84710d38c931f98182e21dfcecc41",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:65fbff3350c03e453c863ddffd56899ed458281a8bdc3674d31f6b9867f9f322",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1157
                },
                {
                    "digest": "sha256:924642cc20843deb434798a6d103b5f9d8491ac6fad58a6669e8138e54c9914e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1157
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-alpine3.18": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:695ae78b4957fef4e53adc51febd07f5401eb36fcd80fff3e5107a2b4aa42ace",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-14T22:56:36Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    },
                    "digest": "sha256:ddf1daf6f09b678205fc3b066bbd39245358122f3df2a7fb5696469738b2046f",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1921
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:ddf1daf6f09b678205fc3b066bbd39245358122f3df2a7fb5696469738b2046f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:ca5ed4743cf5b36224fea5155f5156ff076e1adb650a074037187701b03f31e6",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v6",
                        "org.opencontainers.image.base.digest": "sha256:c03c55ddd6c90c46de98273e0050ca26077917bb1e0524d0effed7297aa3a1dd",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-14T23:02:06Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    },
                    "digest": "sha256:d40b8b46d73768c7a3741927a8a8e45861569a53fd5b5d65734a88420c1aa4f7",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v6",
                        "vnd.docker.reference.digest": "sha256:d40b8b46d73768c7a3741927a8a8e45861569a53fd5b5d65734a88420c1aa4f7",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:9decaa4c0907918c410bab46a842666a01ee4cc5e069849a477ca493dd8a5153",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:403fe38628345283254b3c5125336529353a53efff061f18574b72bc242f6f84",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-15T08:39:02Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    },
                    "digest": "sha256:9b7dcaa57dfad1b7fb8afd4bb920d89a1f61d58faaaa6c2cb2732809dec2bfd6",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:9b7dcaa57dfad1b7fb8afd4bb920d89a1f61d58faaaa6c2cb2732809dec2bfd6",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:98ed1ae0dc016b6b69b2b67239b27e0f0de1347a5fa145e86daee9218731f277",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:24b42af5b7bdb9ccf1252e508ee0a4fd85eb3286a4596c422739ae6beb3038f4",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-15T10:24:49Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    },
                    "digest": "sha256:434e6430ffd727415707b2893bb1b229846628b1243d6b599673aaa1941a574d",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:434e6430ffd727415707b2893bb1b229846628b1243d6b599673aaa1941a574d",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:0856e78b960b85965caa308bee395ee0daab4947fb47fe9b782cd483a1359e76",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:bc5b7c3ee392a7fac4f3e42456ff85ac0144bc922a88c43e10eac9573e40061a",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-14T22:56:36Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    },
                    "digest": "sha256:f1ae898d09826c33d69b954aac8417ab38ca0c4f5a55a733596ba44339d2a753",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1920
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:f1ae898d09826c33d69b954aac8417ab38ca0c4f5a55a733596ba44339d2a753",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:184bde2bdd303e4ff3b5691b9a8f5ab1bbe99807bfff1ee843e966fe6ee51aac",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:dac864369af228cb8572fe35e367a87293731fead05f8d48cd5004ade87b1226",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-15T04:46:48Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    },
                    "digest": "sha256:f1e7e4da2e7fad01007e1d5963acbf916e51675edc6506d7d486b2724b16f352",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:f1e7e4da2e7fad01007e1d5963acbf916e51675edc6506d7d486b2724b16f352",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:9500c71b0de1b68edeccc885e8fcf504f946342cb2126bb337f8fa969e2094d5",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:0ddaff3bd4a06f7c2ad59838207124315b9bb8f0fa5b8502702a2cd1bb736223",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-15T02:47:16Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    },
                    "digest": "sha256:1dd89ed4c61daf6100f5f50a20d28a1f2ff73949ef877c4a9cd3be3e94b4dc56",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1921
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:1dd89ed4c61daf6100f5f50a20d28a1f2ff73949ef877c4a9cd3be3e94b4dc56",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:d9444f94431309bb7ba725101b7fb7e627fa8f79e27477f677479a52365a7bc0",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        },
        "1-alpine3.19": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:6457d53fb065d6f250e1504b9bc42d5b6c65941d57532c072d929dd0628977d0",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-14T22:58:32Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    },
                    "digest": "sha256:a52ec26b648564b6cef8adf7bea14348b499a32d08de3943823150ad268f0d77",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1921
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:a52ec26b648564b6cef8adf7bea14348b499a32d08de3943823150ad268f0d77",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:b813c5abc473e740e85b634140585df96eb060037547e33a4437481f1f3fda04",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v6",
                        "org.opencontainers.image.base.digest": "sha256:b229a85166aadbde58e73e03c5e2b9737fb4642ffb2d98ba453adc90d144c1d8",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-14T23:01:06Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    },
                    "digest": "sha256:b34e66c3961169336bb03ad1548ae874571c1f74a74577fe1b43cc36c80613c3",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v6",
                        "vnd.docker.reference.digest": "sha256:b34e66c3961169336bb03ad1548ae874571c1f74a74577fe1b43cc36c80613c3",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:ede38240e04f2650dd1b2db98d49228eaf375739134fdc75dba27d1d9129a6f1",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:ec299a7ba3c670e38642b0b62a0c779d84b249a3c889757e2b6f841433b4c6fe",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-15T08:38:19Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    },
                    "digest": "sha256:20b4a52834614903826fc043859f35653a4c568098b3ac5a1e28dc85994f089c",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:20b4a52834614903826fc043859f35653a4c568098b3ac5a1e28dc85994f089c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:e95360c59613517ad8544fbd1c9c42af4fbeb3538a4ec24c12b0ef36f22fa800",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:a0264d60f80df12bc1e6dd98bae6c43debe6667c0ba482711f0d806493467a46",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-15T09:55:35Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    },
                    "digest": "sha256:8d1654b2a3b86c5c7e4f53f2028b78ac7908b9e29bc18f01ae4cf578d01419cd",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:8d1654b2a3b86c5c7e4f53f2028b78ac7908b9e29bc18f01ae4cf578d01419cd",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:22c03a5b12bc2b66393386ac38b23ca722fd3cc0dcb7d1bbd0e731839a97216a",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:15c46ced65c6abed6a27472a7904b04273e9a8091a5627badd6ff016ab073171",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-14T22:56:33Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    },
                    "digest": "sha256:f6f94bd7469a1aeacc39b95a47e882054fda464a85b7e922ef8b8bd28086fb0a",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1920
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:f6f94bd7469a1aeacc39b95a47e882054fda464a85b7e922ef8b8bd28086fb0a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:35e4ca635ba322e36a8356f1285ae5a80b6abb677689da6481184a94572404fc",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:b12b826de1ec8c4237aa09a0287e7be8bd317586f32bf6cd9395ec5dba52a3a2",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-15T04:45:53Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    },
                    "digest": "sha256:66906aeebaf2d2e4c78bb39784b783d77246e455c17395d646f57b7b140354ed",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:66906aeebaf2d2e4c78bb39784b783d77246e455c17395d646f57b7b140354ed",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:a63d2fb17361b3f07519111bc2d832ec5e2159f3bfe144f3ea14e469ae623652",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:5d0da60400afb021f2d8dbfec8b7d26457e77eb8825cba90eba84319133f0efe",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-15T02:46:09Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    },
                    "digest": "sha256:0e5bf747efb8a48b77e96bece4ba3a02ecf5d28c2b3daf2144bddcfc5a848a2b",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1921
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:0e5bf747efb8a48b77e96bece4ba3a02ecf5d28c2b3daf2144bddcfc5a848a2b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:6bb3dfd9218309f0a526787a94534b73fc6f45f0f60c19d5377551d81d70a073",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 840
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        },
        "1-alpine3.20": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:216266c86fc4dcef5619930bd394245824c2af52fd21ba7c6fa0e618657d4c3b",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-22T22:55:26Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:1bddfed44ff69c533c0ec006515afb7350986b0d7eb7383f780ab5525f4f06ff",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1921
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:1bddfed44ff69c533c0ec006515afb7350986b0d7eb7383f780ab5525f4f06ff",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:13210402d18f2c6a89eea7ff260c2b510644af46435318194001026305ba73eb",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v6",
                        "org.opencontainers.image.base.digest": "sha256:4a6ffef76277d8c1d912ad489e0c09ddc09fdf7aefae51750a33dc47478c0cc0",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-29T00:34:49Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:3183a82802a5c55c19b5640dc0183353b363892a058a68c923f26f2acb37f651",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v6",
                        "vnd.docker.reference.digest": "sha256:3183a82802a5c55c19b5640dc0183353b363892a058a68c923f26f2acb37f651",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:aa7b0abfad17911a6504f33d0109cd44efcd02575daf4ab9f82e2501435bf57d",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:71df6ab6f3d87c5271834ff44b0b5fb8b6d4e34f08dc7ad86f75a6394949dd44",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-29T01:38:11Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:5e57aa99281c3ec63bca5261a1f93d77d65218521c46238add612a2b6c0377f2",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:5e57aa99281c3ec63bca5261a1f93d77d65218521c46238add612a2b6c0377f2",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:dcdc524c6fb1376c9a25fdc7b7b00f47da12fd063092a2dcedd9d8036fca148b",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:1c3b93ed450e26eac89b471d6d140e2f99488f489739b8b8ea5e8202dd086f82",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-23T06:26:39Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:638709d35305a16b38f575eabe97e2cab3229169cf555ebd5e98630f794f595c",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:638709d35305a16b38f575eabe97e2cab3229169cf555ebd5e98630f794f595c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:e6feff72e44b3a90aa8df43db17606970ae86ea4d8bca7381ca36eb677e743ff",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:bdea2fc06762f63b168e481c88a732e73d856b98c9a504f2c749c867ef9d41ac",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-22T22:54:26Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:c22e3c6a61734265c5fa044b4feecdd14bfc0d02cf208a4028e05945b1742419",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1920
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:c22e3c6a61734265c5fa044b4feecdd14bfc0d02cf208a4028e05945b1742419",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:bfb4dfa5dbbb979f9879f070472876c384231581c295fcc5a123eae6188aec95",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:d9e1c1363259ba11ca6bda2dbca873603d117811508407e7cf36cb5b627991fe",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-28T23:34:22Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:e88b9c5f48e387f911449cf140141a8dca18d4ee87125aeb6823300253b31401",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:e88b9c5f48e387f911449cf140141a8dca18d4ee87125aeb6823300253b31401",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:87a7e4767879bc652058b5cebbc947c594178b070efb0a43e43e8d8a1d39e3c6",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "riscv64",
                        "org.opencontainers.image.base.digest": "sha256:af3c4e93ff44f75a03482d8a5e81bac84c9d015b53ece9d32ae2b409cb0c239a",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-30T07:14:35Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:ee784839d81b1c63684846ca08e421df2e9510e2bf25cef351b039b61707d5cf",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "riscv64",
                        "os": "linux"
                    },
                    "size": 1923
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "riscv64",
                        "vnd.docker.reference.digest": "sha256:ee784839d81b1c63684846ca08e421df2e9510e2bf25cef351b039b61707d5cf",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:113aded68982efe4948733bdf42efc9e4afe1c54336615c6d4ea45bacde95c91",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:29e5ba63e79337818e6c63cfcc68e2ab4e9ca483853b2de303bfbfba9372426c",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-23T03:13:19Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    },
                    "digest": "sha256:b121b1ec284faa85ddcb896865995c0a77e996172abda14b84bf44dfd16419ab",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1921
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:b121b1ec284faa85ddcb896865995c0a77e996172abda14b84bf44dfd16419ab",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:761a1ed8b6aff9e8d483d929102ec73068841012ed61fe2628c934c84759ac97",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        },
        "1-alpine3.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4144,
                "digest": "sha256:310e63753884d92746f1fa6931fcc917e619adb4ba084d81e7a4431ee071d726"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1970271,
                    "digest": "sha256:019300c8a437a2d60248f27c206795930626dfe7ddc0323d734143bd5eb131a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 350626,
                    "digest": "sha256:ba570f08729ac83b7bc6f5085ee63a7d954e70c2533535b34f20a2de45726822"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 487,
                    "digest": "sha256:65f959ba8ec26796853ce5b7f03901095df431c7033b60e31ccd90004e0d8469"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75627926,
                    "digest": "sha256:43126a124ea63a2f031b5203728ffda8abc62068222c301672e2591af813acfa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:70c83f72e91e2b174f968ea36fac65e6098c3794b968760a9f1c42e23fbb8759"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1349,
                    "digest": "sha256:edfbbcd5d91d8dcce311be6847cff22e9609ee3648e157579b6727d44c5190ed"
                }
            ]
        },
        "1-alpine3.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1573,
                    "digest": "sha256:b6b691076970ddc03ba764f478c468ed0bb9abac748b4e0880497bb44b8df285",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:f7b0c5547ac068e83d6d6a672a120cd47a69896442398250a22961790353f899",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:24eb47630dad408efcaccfd718aaa0206bd2e27aab78cce3ed44d3069231d325",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:e53d5936fd0097da78819a187dea604876cce3fab3801677b15b501a224c93ea",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:f466ee3c3132bdb8ccb9d7b99d6a38064ebd71fdbafb96992a6468c60c3d6fc7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:d6d770dc15e2cc4acb9537ec2c550fbe3a6934484962359a8e9b2c8ce4cf5ef6",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:6de33d5de11bc3dcd68127d11e4832e5dbaf8db8b4609dfac8e5ca32a79e50f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c5aa8cabf5d8302cd01631f68407cd2f28a5c65c4295cda72c04efb172894f71",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e467992be8cfac56148b7b65251f391c1a4d15b6e78977cb8358c4e06cd33cf2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7ac5c7c181c49d49ecd3fcad959477b7ef1b13c42e05f2b456a7a0b0b884571c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4a571f0f5d28092ad77256adb46cfdd497daa602a0cd171da4f16d016f7f2ae7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4740b5793070e6c11f6e53156a0c8ad63ebf7e6092191f175ed90732a7ff8e83",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:31389db6001c5222bef9817a04ae8c8401ae8bed6fb965aac17b0e742f4c3e5e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:9677abaf94d699258b23e107fc6aaa8935938b1f3cb9c79ada24045e5aeebee4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f48e7edbd7299a809a175049b17c441ed2ae202cd1cf3df0976ce4fa38a40a52",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:cacdab5c88cde92b1b5972a79180d123b3078e554f8717f926e4e6027305f580",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c5d405477a7e950438464c4070187bf6dd6efceb7407f148354728f11ca95ce6",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e30b06b1f215f6d647b10b40c1618e926f90f97a5a6682be5f121c4afdd770d0",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:e53b94eabaa545147313fd2d81c0cd6385fb15761e75a9b7c1e7e4275f06d183",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:2457fa1d867375720e366086ea5ef27b379863e94815c5c0fbba0437a7ca06f9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:32e3f6840fe1f0163b650b50beb21cedc7a7f9abe4c8f4d2a8bd77bdf9b7692e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:34c569c7c4a78f441a52ff58b11a512de5fbc60323595c3fb9b71b96eb2107af",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:635c425efb33f8ba2425a5c52d9626cd69249b1c6b7ff2ead96cc13343d3ad2b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:2857664cfe005bb6f8c03e755c726ddf822aa5b1f3e9c193f6561ee6d92206c3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:c982722a690cb08e065b219117c497c7d601f9d6058031d17a28849470e799fc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-bookworm": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:cafa7552464a8e435f617ed9ce54db28cd69754040e60b3e1d8e3da9e240fb4b",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-14T22:57:07Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:4304d944c421bb279ad1faada14d03ac7e7edca61793d2f6a7ad94681c457887",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2322
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:4304d944c421bb279ad1faada14d03ac7e7edca61793d2f6a7ad94681c457887",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:7180d60eb15287c8a73a34470f9def2ff8439704c06a911ce08f76257cb92a0f",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:5ad58349cdab8f05e695c96c93f840ab90b8dba870e9def0162cbe7d7ae144ac",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T08:35:34Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:ec5c62e7ec034c7d0edd33aa6cc7b85e299c03e495785cbc69b776a929f012aa",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:ec5c62e7ec034c7d0edd33aa6cc7b85e299c03e495785cbc69b776a929f012aa",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:ac9a7a60334785e6d459d950fa943b99ae06cd34ebb785a68151c41bc59d9a15",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:6311d7a4ca52a611c4d8cb4232d1863abc4439069db57c44bcb2a2cbc736a3bf",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T09:07:34Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:ffa2dc4682898a620500bf7a04d7817016fc2fff57215b73265ec5f7096346d5",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:ffa2dc4682898a620500bf7a04d7817016fc2fff57215b73265ec5f7096346d5",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:68a1f1bfccb7dd6860ecc2a24747b72bbf55b46368e410c3df2ea4190e4432fd",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:2846b7f71b18acc1dd85300817e2d26ac63121c5fe9a93c780497869fb22e45e",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-14T22:56:31Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:1535d733254ef88f69a207fffa11a2c776fa3ca3a529413e4d794fe4e67ef80c",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 2321
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:1535d733254ef88f69a207fffa11a2c776fa3ca3a529413e4d794fe4e67ef80c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:c0fea66d4acd827e9a81de8996b4ef5f06381ba68ad24e6dd2cee528d45ba9bc",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "org.opencontainers.image.base.digest": "sha256:8cf747af094998ee527bd33e348e9ef1c22c349757f3cde7ea7a0fe0a5b60fa3",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T19:01:11Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:5f5cf9ccda9ebb27f86b60117f5f962af627d564859fd392216fff80e452685b",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 2325
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "vnd.docker.reference.digest": "sha256:5f5cf9ccda9ebb27f86b60117f5f962af627d564859fd392216fff80e452685b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:4816aeb8ba4057497281c23adeb1435b1dffaaee02078aa25654f2b7aa46d071",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:3b8246fbba99cc2e0111674a50e104b1d8137b9d16da58c380178086ef2bce0d",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T04:42:23Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:9133d33f5a9b4fd41768df6ae0add2e5646af87ea4ea2838248075efca5b9998",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:9133d33f5a9b4fd41768df6ae0add2e5646af87ea4ea2838248075efca5b9998",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:6a90b350f6bf898069c361709fe98216212a5642ead00fc7d8c9ff24cb07a9ee",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:59256abb2252e0cda7425a81f7eb7e0b7f4d75fbf878b6bfda2e53dd42bcf37c",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T02:42:49Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    },
                    "digest": "sha256:4a2cdadb093177bbfb267b6531c755d00c7c0eb20d7fc1e37260752b74026e1e",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 2322
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:4a2cdadb093177bbfb267b6531c755d00c7c0eb20d7fc1e37260752b74026e1e",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:5f7307815a43a2cebbb9989b4b60deea77bc4c596246ed5787b1ce21548693b4",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        },
        "1-bullseye": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "org.opencontainers.image.base.digest": "sha256:b9442185675e2e9874b661d6eec33ef42d5c5330fc73b0ddfe40074d49ed4642",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-14T22:57:53Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    },
                    "digest": "sha256:af977b340fde3237836d4ce21ebdb9164c681a9bed74ae07c29c16247bb31f15",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 2322
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "amd64",
                        "vnd.docker.reference.digest": "sha256:af977b340fde3237836d4ce21ebdb9164c681a9bed74ae07c29c16247bb31f15",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:a49c5886fc76611c8bdd3405b2780c5ee7880bd06364b6b3d9487659b88fa4e3",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "org.opencontainers.image.base.digest": "sha256:471ff377e2c4d10a2cd5a4ec1c6fa17c5e190eba5b797233a756e29637816f71",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-15T08:37:01Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    },
                    "digest": "sha256:b61156e2197553fdc9cc45ab5f6de9fdd982a008eda1617b49024911df848d8a",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm32v7",
                        "vnd.docker.reference.digest": "sha256:b61156e2197553fdc9cc45ab5f6de9fdd982a008eda1617b49024911df848d8a",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:c4df93d469171da8e8ba8ca77f161e9ae0ea88d28962d586f8be50067a18cf36",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "org.opencontainers.image.base.digest": "sha256:72e04091b0b2072b523afe12879d8eb3f3677e80cb1968f821624eca6a4d9732",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-15T09:26:09Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    },
                    "digest": "sha256:d64269a55ff38c4ba6519ac568d2d3caf38a11a5cef691b33506e19c6cdc2839",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "arm64v8",
                        "vnd.docker.reference.digest": "sha256:d64269a55ff38c4ba6519ac568d2d3caf38a11a5cef691b33506e19c6cdc2839",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:5d4729b2ec1e031f9700b6e9c6704d7bd01b8fd8b5e51d01d3a687e085599be7",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "org.opencontainers.image.base.digest": "sha256:1a4fa04986d1234224431bfc67df4a2e569029c9925ce8d43ae467b4d6143f39",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-14T22:56:32Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    },
                    "digest": "sha256:77840fdf9e7cafe8a8c34a9973a7c8dff22ef47092bb06276a0b5810c7fbde5e",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 2321
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "i386",
                        "vnd.docker.reference.digest": "sha256:77840fdf9e7cafe8a8c34a9973a7c8dff22ef47092bb06276a0b5810c7fbde5e",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:84d565fbb6e0b66a9c57736d742e48a1c028cca263616b2643df3d0f60ba01e1",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "org.opencontainers.image.base.digest": "sha256:821aee856c729bd832b14ca707a0329f3bd8b297c10e83ad65d463a887c6080b",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-15T19:05:13Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    },
                    "digest": "sha256:6fde08671084ad0d77f5bc3f49b1cdc427138da1d2528e00a1131676c5b03d26",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "mips64le",
                        "os": "linux"
                    },
                    "size": 2325
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "mips64le",
                        "vnd.docker.reference.digest": "sha256:6fde08671084ad0d77f5bc3f49b1cdc427138da1d2528e00a1131676c5b03d26",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:17676c9b4510b42d4f82629585c7c7e57e0f69b20a701edd87c474017f44bca3",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 567
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "org.opencontainers.image.base.digest": "sha256:5817662c9007e71058aef9f7c7d3931f04d9b6ebe960ed655bbe857daad9e757",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-15T04:44:13Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    },
                    "digest": "sha256:fd56e6fdeb589fc1c0741bb9202b9e36cad98a3664337202afa3465941141e2e",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 2324
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "ppc64le",
                        "vnd.docker.reference.digest": "sha256:fd56e6fdeb589fc1c0741bb9202b9e36cad98a3664337202afa3465941141e2e",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:d19566ed3ab0825e3a89e68d24445e1988e0454bc1d7885d84273e4555c6df2e",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:7c87b179715aebeac49997fc2fc35590b0915357ea1f70d2fc616aa7a4d80f0c",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-15T02:44:26Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    },
                    "digest": "sha256:b50a3ceb0251440a5942b50d8d8d8eb6f45d54fefabaf10c3eb991525ad55c6f",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 2322
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:b50a3ceb0251440a5942b50d8d8d8eb6f45d54fefabaf10c3eb991525ad55c6f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "digest": "sha256:d7b30b9ff1305692c865460baf76ceefe6bbe335edc25d682cc4ef13974ed482",
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    },
                    "size": 842
                }
            ],
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2
        },
        "1-buster": {
            "manifests": [
                {
                    "digest": "sha256:f86220e98c9d858143a68158dde675a0178854549511d9fee469767edfefc0d7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1585
                },
                {
                    "digest": "sha256:aafd11c11854d36dc623f2542590f3ea4f891d294c8aca93e39f696ed2f752e2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1584
                },
                {
                    "digest": "sha256:5fe6b31706f89a876af4cc2e7d9daa6aa8704e382067eb175c23e3b3d168df7d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1584
                },
                {
                    "digest": "sha256:dc8b9b29f69492b9d796ed60fd523db67f91da71145a547d9c375e7cc480d6aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1585
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-jessie": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5615,
                "digest": "sha256:6ce094895555aae36643fd1a336b067cee76531b45f00079a431ff27dacaec95"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52605632,
                    "digest": "sha256:ad74af05f5a24bcf9459ae1cf7718628c2aeb6b587eb51b6eeaf639aca3e566f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19263320,
                    "digest": "sha256:2b032b8bbe8bc215ad3337035d0183fc353841ec6478d1c481e6e13628ad9e00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43226131,
                    "digest": "sha256:a9a5b35f6ead105e66a9af969454ac09b5772eeb0c6281972c48d2ce882e8eba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60642742,
                    "digest": "sha256:25d9840c55bc35c89681af78d0ba3814cf499f3370465778397f8497189bde25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90038836,
                    "digest": "sha256:d792ec7d64a3f09ed0d71a18d6282de0d9038953b016a1481b3351d05daa6789"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:be556a93c22ed04da635b66e3bec85a3a165dc1e5b403041017f2fb3bf59a252"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1351,
                    "digest": "sha256:3a5fce283a1e6ca320e5bd4c1adcf2c9dd55de000c096c35d44074ac22dd694d"
                }
            ]
        },
        "1-nanoserver": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:52130fac6fad632b8c50ed7b1e59a77a1ed5847c08c1b89085e6bc0ae2563c50",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    },
                    "size": 2408
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:63976f04d7b9c07aa0288125096b873a243e3b744f338b132ab6a3e79401f706",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    },
                    "size": 2410
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-nanoserver-1803": {
            "manifests": [
                {
                    "digest": "sha256:78c0a98b89e7ce8af9c25e97ece311cdeaf3055f72efb11789c40fd3a4838e91",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1069"
                    },
                    "size": 2816
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-nanoserver-1809": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:63976f04d7b9c07aa0288125096b873a243e3b744f338b132ab6a3e79401f706",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    },
                    "size": 2410
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-nanoserver-ltsc2022": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:52130fac6fad632b8c50ed7b1e59a77a1ed5847c08c1b89085e6bc0ae2563c50",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    },
                    "size": 2408
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:0e6e349c1e9cfd2dd792f67b5525e454d673b7aed0c6d95583da3e15a47f1e51",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1-onbuild": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6516,
                "digest": "sha256:5d82e356477f55c857e52b672d244e4d72f065c81cdd5010efdad6eb26ea5088"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52605632,
                    "digest": "sha256:ad74af05f5a24bcf9459ae1cf7718628c2aeb6b587eb51b6eeaf639aca3e566f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19263320,
                    "digest": "sha256:2b032b8bbe8bc215ad3337035d0183fc353841ec6478d1c481e6e13628ad9e00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43226131,
                    "digest": "sha256:a9a5b35f6ead105e66a9af969454ac09b5772eeb0c6281972c48d2ce882e8eba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 60642742,
                    "digest": "sha256:25d9840c55bc35c89681af78d0ba3814cf499f3370465778397f8497189bde25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 90038836,
                    "digest": "sha256:d792ec7d64a3f09ed0d71a18d6282de0d9038953b016a1481b3351d05daa6789"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:be556a93c22ed04da635b66e3bec85a3a165dc1e5b403041017f2fb3bf59a252"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1351,
                    "digest": "sha256:3a5fce283a1e6ca320e5bd4c1adcf2c9dd55de000c096c35d44074ac22dd694d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134,
                    "digest": "sha256:0621865a0c2ea73859be739de365560aa6753804e27d83e2043dc2a1d2d48d74"
                }
            ]
        },
        "1-stretch": {
            "manifests": [
                {
                    "digest": "sha256:3c4f350c0347083f149d5fd7a3180a5de86142472f150d6c9a8dade9371d41d5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:b50e2a0f626c7751abe0efc578502794cebc938fdb02d288abb59fb5fc0eb4c0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:1c55fabe7b8d5ed791a7d71bfba69abf3ee917ff3dd9524c3b6b8224b6c94834",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:55eeadf50812ece1715ecf47a792deed68ed5602311c65f3ec4dd002234c94b9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-wheezy": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4726,
                "digest": "sha256:f5327166fea4cb558717fb520f9966e827ff0148464d1233b2cacb1b5d319dda"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37284485,
                    "digest": "sha256:d9509b80c497066660d1e7a4e22ba112d025e83f6f7183d53c95bed1513938b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6823701,
                    "digest": "sha256:a0c12b04be6f745f58154eeb7b80403f95b355ca3842d384ffb685acf20432ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37442207,
                    "digest": "sha256:0998595e89ba3755e57a2e3cd79c8dd7805959a77828f622fa3b344a73ca5d50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36448525,
                    "digest": "sha256:d1a331769dd25fbec1b25e2327f4fe4f7c91f6929ed225f5634566367acabe90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83251364,
                    "digest": "sha256:4df815e72d94a6d71a83f8218278394e8776d3262b818e7534e347c606a90382"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:f2dee9e705a476ddf3b4b25c5cfb9eab5d167a29301e6f7d2a579b426c73eb50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1354,
                    "digest": "sha256:e93e8fc0976b99b48d1a422d8ae0d446bdc841afa489110f27e08a131fdb7fb9"
                }
            ]
        },
        "1-windowsservercore": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:2c833fa6e635a69904dae2764e4f88d46abfbfe9f8bf9ee53a7e71423b6ef904",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    },
                    "size": 3042
                },
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:34ccbb809489bf4932c66706a72dcbda93268200172c613d3c84d05a9a1cc1f1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    },
                    "size": 3042
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:3d5c61610e445e33da283a6dec0acf4bc8a9e333a969f46c71aaaad0bd2e536e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1087"
                    }
                }
            ]
        },
        "1-windowsservercore-1803": {
            "manifests": [
                {
                    "digest": "sha256:d2d6a0c75e1fa8c9651bc53e9320b12899ec9def5cd1fb09a5f9fc38c601e925",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1130"
                    },
                    "size": 3322
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-windowsservercore-1809": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:34ccbb809489bf4932c66706a72dcbda93268200172c613d3c84d05a9a1cc1f1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.5820"
                    },
                    "size": 3042
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-windowsservercore-ltsc2016": {
            "manifests": [
                {
                    "digest": "sha256:6f0754f78696154649226d43f7e5b15549ed17dcb1ebb1b0280bd27e9f3116e6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.4886"
                    },
                    "size": 3402
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1-windowsservercore-ltsc2022": {
            "manifests": [
                {
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "windows-amd64"
                    },
                    "digest": "sha256:2c833fa6e635a69904dae2764e4f88d46abfbfe9f8bf9ee53a7e71423b6ef904",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.20348.2461"
                    },
                    "size": 3042
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:eac40ba14416262e26def90a2d6f10d6ff579ea61c267963f6cbfbbe63b0ea7b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ebdc569aaa27cdb892359e8a9981ecbe1402a5fcc5a573e8c7f0dd4625f2377b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:07bcd768294370ba5e91a5ef21d91a746b644809fe9f66cd7cf32a6454d06e29",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5ccd95312168bbdba8b3667491c4e47a49994f0f0e5f48e2570f5f3c5be22a58",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1f36bf2cdb0f8ff1ec2336d516c9deacc6b255967523422c877935f0c07e0d7c",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1aa2a3447762457c32ccd2a75cabeaa0fba7f7c2363e4be19566a726904172a9",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dba9fd6b85ad63f09960e69b13104f4399d202ab2a62ea7259a559fd5cec44f1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:059635c994749a376416be8d59eb81807188a3cab7500836cecf045228bd2f8b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b5dfac0bf63291eba8a90aa186589a519e9c897da86218d913d5143f5e938e9e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3abd27a389bb8f5818b971d81bcb6e4f394a61c75782f7447f3f69d91936afd0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:565ad18e011a417bb20dae206b9aff68d4c1daf84c58b84f30f512b74c57f0c7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:94c5fd97b17d0e9fe89e011446bedda4784cb0af7a60494989e2a21c0dcba92f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:01b898f3eb5ad3ebef23bf51a1fbc39b6984418b9d432ecd4219c1dc969b9adb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:17d91bf593ceed27ade9fde01325347c7aa83d5e8be93340bed43af03156d987",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:7a280b4471effaa64c94f62945260c946d2181016615e3c6c3e2ad1ffc72940f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:21417eb700d261be58f647b7b397b0156e4c771ea5a8228831086e54e63c4571",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:020f05646295cf35af1ec044ea20d671fec0e7e072c615561b11fd3ccfdb857e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:44060fc5799aafb1631895b40f98aa975fccca3c847b7b039e36fd8052e0d35e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:3c84d6625866f61a26f460c812f311e6a710006da48e2a3f0dd5b42fac4b67f2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:862660a099071b3c1fbc6325ae1dcec05e7de54b305696129f1e771da6a9c762",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:e51b4c0941a9be61a9f601660b36e9e6d1bcbe769e59064c9a5142dd1d1b4594",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:4174d1635783ce3c2a2910ac84ff38e5220c96450984f9011157e68f4aeb61e2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:4e2f1325c4559ab4f42dfd0bb710a12778a7717cfc1f9ab172be30ca741ec064",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:a6a9a0b48d555c482bca31048007eca5111a350bca3b1682ced72d0fccb0eb11",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:405f8ceeb0fb49b4c6fd2fc1102bd2690267c9e1d3dc93b64a74a85dcf5de42a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:a76b80d7448d73f1c1c697cfc8a7ec42fa4c8e009f3b6038ced9cfcc1e018c04",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:a8e8d9786931ce200d691bf286e23f466b1850987ee9799b9cf3f4309c73de2b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:fe150247017a4c5469f40657bac521f63b01baa75b702b061fecd6d5a5992348",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:565ad18e011a417bb20dae206b9aff68d4c1daf84c58b84f30f512b74c57f0c7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:94c5fd97b17d0e9fe89e011446bedda4784cb0af7a60494989e2a21c0dcba92f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:01b898f3eb5ad3ebef23bf51a1fbc39b6984418b9d432ecd4219c1dc969b9adb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:17d91bf593ceed27ade9fde01325347c7aa83d5e8be93340bed43af03156d987",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:7a280b4471effaa64c94f62945260c946d2181016615e3c6c3e2ad1ffc72940f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:21417eb700d261be58f647b7b397b0156e4c771ea5a8228831086e54e63c4571",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:4e7fb2dec159a4300ef3ab16b7d504e436a3412c8991441304432033d09cad2b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:4e7fb2dec159a4300ef3ab16b7d504e436a3412c8991441304432033d09cad2b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d85d664727a051408a99fed019bd4c23184cf6e8608fa57c7aa70fec1d14cb1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:68c16ef8ce75230de5bcc24bfec38990e5ad233e3bf36cb6635407bbe500920e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c33da2ac19b5dd38b0e93129a448339841baee36943477f155e069b2eae30853",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:51fde6a44dae0c79737dae00518d74870cb46744962a074d3a2265b02c357d1d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:752ec4ed553648630e0eb157222b7b61ab59d0f0faa8a6ee311913a18421a800",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5b47cad7f6995a130f9a05cc8f693ad11881fe4256755664c65aa6d68ef8d841",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1dbfd4c8891c7109c54295c0f91870b96739e83461b1163051923cb48593e4b5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3f540fcaccd84a8ffc157c43748e84fe3d3ed0b1073301ca8eff73bd328ce380",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:abdf69f7bde4117559bc3af7e2a4857177c93af8c3cf53e98e315d2de9678bc9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c521826e2058c90f7d7b35cf56b0113c5386ca1926dc8658563e316cac7fb9cf",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f5ff83dcc07290fb93ae7d56ccbf3a3ae9a67921d33c9c5f4d65afcfda8c90c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7c4f9d7a59ab420209404112ebb392466cdb1d609b0bfeee126df417660b300e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:9e8b129ccfaf62b96e2a5ad95516f56e0239d4a93345764a7676f9b1fe6dc6a4",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6b28ef0da5a671447e7cbe02149087562c1a9862a932c11cef60292de5952a5c",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-rc-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:abdf69f7bde4117559bc3af7e2a4857177c93af8c3cf53e98e315d2de9678bc9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c521826e2058c90f7d7b35cf56b0113c5386ca1926dc8658563e316cac7fb9cf",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f5ff83dcc07290fb93ae7d56ccbf3a3ae9a67921d33c9c5f4d65afcfda8c90c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7c4f9d7a59ab420209404112ebb392466cdb1d609b0bfeee126df417660b300e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:9e8b129ccfaf62b96e2a5ad95516f56e0239d4a93345764a7676f9b1fe6dc6a4",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6b28ef0da5a671447e7cbe02149087562c1a9862a932c11cef60292de5952a5c",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-rc-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:20f9dac149ae918ceb03130a8a5884e1f5258ab41775d2238d4c125349cf20b9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                }
            ]
        },
        "1.10-rc-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:20f9dac149ae918ceb03130a8a5884e1f5258ab41775d2238d4c125349cf20b9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                }
            ]
        },
        "1.10-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d85d664727a051408a99fed019bd4c23184cf6e8608fa57c7aa70fec1d14cb1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:68c16ef8ce75230de5bcc24bfec38990e5ad233e3bf36cb6635407bbe500920e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c33da2ac19b5dd38b0e93129a448339841baee36943477f155e069b2eae30853",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:51fde6a44dae0c79737dae00518d74870cb46744962a074d3a2265b02c357d1d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:752ec4ed553648630e0eb157222b7b61ab59d0f0faa8a6ee311913a18421a800",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5b47cad7f6995a130f9a05cc8f693ad11881fe4256755664c65aa6d68ef8d841",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-rc-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1dbfd4c8891c7109c54295c0f91870b96739e83461b1163051923cb48593e4b5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3f540fcaccd84a8ffc157c43748e84fe3d3ed0b1073301ca8eff73bd328ce380",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10-rc-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3f540fcaccd84a8ffc157c43748e84fe3d3ed0b1073301ca8eff73bd328ce380",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10-rc-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1dbfd4c8891c7109c54295c0f91870b96739e83461b1163051923cb48593e4b5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                }
            ]
        },
        "1.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:eac40ba14416262e26def90a2d6f10d6ff579ea61c267963f6cbfbbe63b0ea7b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ebdc569aaa27cdb892359e8a9981ecbe1402a5fcc5a573e8c7f0dd4625f2377b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:07bcd768294370ba5e91a5ef21d91a746b644809fe9f66cd7cf32a6454d06e29",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5ccd95312168bbdba8b3667491c4e47a49994f0f0e5f48e2570f5f3c5be22a58",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1f36bf2cdb0f8ff1ec2336d516c9deacc6b255967523422c877935f0c07e0d7c",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1aa2a3447762457c32ccd2a75cabeaa0fba7f7c2363e4be19566a726904172a9",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dba9fd6b85ad63f09960e69b13104f4399d202ab2a62ea7259a559fd5cec44f1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:059635c994749a376416be8d59eb81807188a3cab7500836cecf045228bd2f8b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b5dfac0bf63291eba8a90aa186589a519e9c897da86218d913d5143f5e938e9e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3abd27a389bb8f5818b971d81bcb6e4f394a61c75782f7447f3f69d91936afd0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.10-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:059635c994749a376416be8d59eb81807188a3cab7500836cecf045228bd2f8b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                }
            ]
        },
        "1.10-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b5dfac0bf63291eba8a90aa186589a519e9c897da86218d913d5143f5e938e9e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                }
            ]
        },
        "1.10-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3abd27a389bb8f5818b971d81bcb6e4f394a61c75782f7447f3f69d91936afd0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.10-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dba9fd6b85ad63f09960e69b13104f4399d202ab2a62ea7259a559fd5cec44f1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                }
            ]
        },
        "1.10.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0c4109858680d4cede075491298de88b5d3df24380c328f7be417d22282acb8b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7e4554b17f1b8da05062e167d0f95630e6d56aab51e99b8c80360c2318af553a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:fe4c1aa86d7b7a4c4244b7f2f4e56f43af50fdf746139ec89732630b0c70bc96",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:826eee0133b83be38a83348d49a2f7035e943dd01051b5e2745ff1ab2f2f5e4a",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d6f59c496067e875a25e108e15273fe9279ff5ee28064ec954127973433201b4",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2302e18de3b3165c098ddb7795c9ec1467a147f812149bf49cf0aca4cf91ccdb",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:b0e08676ef60f4273c404227b994b2520fafe3fceacab25dfa67056bc81cf921",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6df0d782fbd7dad5b5cdffec68ec34f8268249e634a688a430e4aca69fd85b9d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:f336d17914ab059ea289f160783845f01ccdff61bb6407d2edb3b7fcd47c15da",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:154ba5757ea95844398d679a9fb3f8f246955cac4f77ea84e68bc9b8d10a1098",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4ee08d87cb2d22c505ad83635b62e63804d986e8e31361efae03cd1bdfca36a7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:be2118ef7d91d3855c5f4a6ed6cafa0e9e28be3b6dcbf56d71a72880fffc569d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e0dc734ce45c634d01b9994c5c481c9833ae69b047b3f163261b790410382996",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:670b02d9d1051a0a32ea9100279cd8411afd14646dd2dfb775a741d486079a1a",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.0-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:f336d17914ab059ea289f160783845f01ccdff61bb6407d2edb3b7fcd47c15da",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:154ba5757ea95844398d679a9fb3f8f246955cac4f77ea84e68bc9b8d10a1098",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4ee08d87cb2d22c505ad83635b62e63804d986e8e31361efae03cd1bdfca36a7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:be2118ef7d91d3855c5f4a6ed6cafa0e9e28be3b6dcbf56d71a72880fffc569d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e0dc734ce45c634d01b9994c5c481c9833ae69b047b3f163261b790410382996",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:670b02d9d1051a0a32ea9100279cd8411afd14646dd2dfb775a741d486079a1a",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.0-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:c2ac03a14673070343790a3c1e0fd68ddbb10e2578c52ab89372733049815065",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2125"
                    }
                }
            ]
        },
        "1.10.0-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:c2ac03a14673070343790a3c1e0fd68ddbb10e2578c52ab89372733049815065",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2125"
                    }
                }
            ]
        },
        "1.10.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0c4109858680d4cede075491298de88b5d3df24380c328f7be417d22282acb8b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7e4554b17f1b8da05062e167d0f95630e6d56aab51e99b8c80360c2318af553a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:fe4c1aa86d7b7a4c4244b7f2f4e56f43af50fdf746139ec89732630b0c70bc96",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:826eee0133b83be38a83348d49a2f7035e943dd01051b5e2745ff1ab2f2f5e4a",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d6f59c496067e875a25e108e15273fe9279ff5ee28064ec954127973433201b4",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2302e18de3b3165c098ddb7795c9ec1467a147f812149bf49cf0aca4cf91ccdb",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.0-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:b0e08676ef60f4273c404227b994b2520fafe3fceacab25dfa67056bc81cf921",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6df0d782fbd7dad5b5cdffec68ec34f8268249e634a688a430e4aca69fd85b9d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10.0-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6df0d782fbd7dad5b5cdffec68ec34f8268249e634a688a430e4aca69fd85b9d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10.0-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:b0e08676ef60f4273c404227b994b2520fafe3fceacab25dfa67056bc81cf921",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                }
            ]
        },
        "1.10.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f0fdc456f6c882319d853d3252d94a1ea80007be095e2547dcca473c5ad39954",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:eff26cd589c34a159853619f5853fcdc875962311e93a26933efb5d17087a914",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:01842011b6960ee4ab3393de05278edf78ba3b16bf001f6b1e1253b8ba7efd4d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:55db959e96ba482afab6a57ec4cccef51a63bb2d0e1a0931f97900c50588ec0d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d3081efe4f5d8977d5c41e3db7431b6506591b26e58cc6917404fe6a9165284d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f591f51a2bcbceab2c533eedd672bb0616fec55bdd3825ccfb5b400a144c297f",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e7a974f6c0d8103521996cd56f6b1318b36365052d3a516c0938c1fda4440ad0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.371"
                    }
                }
            ]
        },
        "1.10.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1158,
                    "digest": "sha256:8feac1bd797378827a82529e8d31290799df5a637235f10220355d6268f6eecd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:d98cc903f00f47488b65984ec9e0fc1c8c8ce2bc123a7e3b661d2c64152d80df",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:f35b216be879a5433a47836e34bb9fb8997e4755b0c27198842bab3753c3f8dd",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:b1ef8107d31d43b9c739ff016f5c8f27d4d71ff998034e4a0813696baa910b9c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:1703213fd4f20f30e38c9e8e308a0e7f8ca58d18089c095bea6d5d170e15a3ff",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:11d80187dc260cc3b2daf9b217948ed2fa07f218275e918c41f2202f64e462a5",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1158,
                    "digest": "sha256:8feac1bd797378827a82529e8d31290799df5a637235f10220355d6268f6eecd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:d98cc903f00f47488b65984ec9e0fc1c8c8ce2bc123a7e3b661d2c64152d80df",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:f35b216be879a5433a47836e34bb9fb8997e4755b0c27198842bab3753c3f8dd",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:b1ef8107d31d43b9c739ff016f5c8f27d4d71ff998034e4a0813696baa910b9c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:1703213fd4f20f30e38c9e8e308a0e7f8ca58d18089c095bea6d5d170e15a3ff",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:11d80187dc260cc3b2daf9b217948ed2fa07f218275e918c41f2202f64e462a5",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.1-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:822e6ee3ce4380666415117a8a1bc84937b3cb6772f2a90eabbce56a4b7b7995",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2189"
                    }
                }
            ]
        },
        "1.10.1-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:822e6ee3ce4380666415117a8a1bc84937b3cb6772f2a90eabbce56a4b7b7995",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2189"
                    }
                }
            ]
        },
        "1.10.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f0fdc456f6c882319d853d3252d94a1ea80007be095e2547dcca473c5ad39954",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:eff26cd589c34a159853619f5853fcdc875962311e93a26933efb5d17087a914",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:01842011b6960ee4ab3393de05278edf78ba3b16bf001f6b1e1253b8ba7efd4d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:55db959e96ba482afab6a57ec4cccef51a63bb2d0e1a0931f97900c50588ec0d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d3081efe4f5d8977d5c41e3db7431b6506591b26e58cc6917404fe6a9165284d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f591f51a2bcbceab2c533eedd672bb0616fec55bdd3825ccfb5b400a144c297f",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.1-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e7a974f6c0d8103521996cd56f6b1318b36365052d3a516c0938c1fda4440ad0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.371"
                    }
                }
            ]
        },
        "1.10.1-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e7a974f6c0d8103521996cd56f6b1318b36365052d3a516c0938c1fda4440ad0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.371"
                    }
                }
            ]
        },
        "1.10.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:252b378f3a6f78e82c9421bd11ab9e95f031f4fc33e21b6a06c3e6501b4d18e9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:06c5614f8af12c1a49465f21c5666dd2a563089210d5c53e5e43606b90143d85",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:229eb6625bbf8daf46f19cebde8956e6823572586dfabfe016453fa747a548d4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:630eeff99a7c19cb15c167889047e2bcf44dd78da08aa4ee7deba77165ceb1bc",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:45488fbd62fa2b2a3e02fb0e777953e4c19d1314d85af9b01f33681dd271ffb8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:df3c6764738ce4abccf9ae8af9ea68c7d333074b8fb6fcaaccd89ad514fba20d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:d473efde0e65ff48e2ab17fe745d33988c181fd0223d848b27b661b99a2d0ffc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2189"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:227a337a2d1a611896f4e8cc517435fac3c486d5293cc89dc699f3ee6316ff77",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.371"
                    }
                }
            ]
        },
        "1.10.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:bb31085d5c5db578edf3d4e5541cfb949b713bb7018bbac4dfd407b2017ef5b8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a6a92e5e1cec66e391d69052c57836ccf1fc135bcd2cc93b3b29adfec2f3641f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:10353895adbaaf5460cd58bfc45a767a02fd81ad197a16bff5419da1f11fb107",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:360ade360ff0147c5f77f544dbefe27d2305d0bce747da912f77382c7568d5fc",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:d9911c09f125d9259eed7a2fa321bbb73924560a7bd1b8f56bdc39b4b399c390",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:5735796f88415e7039162995e5ba42fa29e1ababdaa0ac869158b4bb2c3f33ed",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:bb31085d5c5db578edf3d4e5541cfb949b713bb7018bbac4dfd407b2017ef5b8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a6a92e5e1cec66e391d69052c57836ccf1fc135bcd2cc93b3b29adfec2f3641f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:10353895adbaaf5460cd58bfc45a767a02fd81ad197a16bff5419da1f11fb107",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:360ade360ff0147c5f77f544dbefe27d2305d0bce747da912f77382c7568d5fc",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:d9911c09f125d9259eed7a2fa321bbb73924560a7bd1b8f56bdc39b4b399c390",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:5735796f88415e7039162995e5ba42fa29e1ababdaa0ac869158b4bb2c3f33ed",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.2-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:d605501e4e8bab4d3d81df7a635420d298eaa3690422eb12ff73a257abbe861f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2189"
                    }
                }
            ]
        },
        "1.10.2-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:d605501e4e8bab4d3d81df7a635420d298eaa3690422eb12ff73a257abbe861f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2189"
                    }
                }
            ]
        },
        "1.10.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:252b378f3a6f78e82c9421bd11ab9e95f031f4fc33e21b6a06c3e6501b4d18e9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:06c5614f8af12c1a49465f21c5666dd2a563089210d5c53e5e43606b90143d85",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:229eb6625bbf8daf46f19cebde8956e6823572586dfabfe016453fa747a548d4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:630eeff99a7c19cb15c167889047e2bcf44dd78da08aa4ee7deba77165ceb1bc",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:45488fbd62fa2b2a3e02fb0e777953e4c19d1314d85af9b01f33681dd271ffb8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:df3c6764738ce4abccf9ae8af9ea68c7d333074b8fb6fcaaccd89ad514fba20d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.2-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:d473efde0e65ff48e2ab17fe745d33988c181fd0223d848b27b661b99a2d0ffc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2189"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:227a337a2d1a611896f4e8cc517435fac3c486d5293cc89dc699f3ee6316ff77",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.371"
                    }
                }
            ]
        },
        "1.10.2-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:227a337a2d1a611896f4e8cc517435fac3c486d5293cc89dc699f3ee6316ff77",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.371"
                    }
                }
            ]
        },
        "1.10.2-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:d473efde0e65ff48e2ab17fe745d33988c181fd0223d848b27b661b99a2d0ffc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2189"
                    }
                }
            ]
        },
        "1.10.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:14166e0e15f33b4d09cd274e0b7217ef1075b71ec108719cead2c326717bb60b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:683a6d7a19441379ee55f51c92f4dd9d4796067fef82fe5c346072f6c4908a12",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:eca4e4d8182306fe01dc33e89bf8973c2312358c1b12295445b84a724b2c7da4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:20570d7c419e99c4aa70f5599a09d9674f0bfc2a6f3077c116f9e409e6ff260d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a59938ae8519c3f91ac18286e86057d6976d688b16fd997701194b852e2e7715",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5d5bd49b3897c3649e53f43852de028704b8f0e2d6ec5662136c6a56f6f13afb",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:592a104c33d34b7045367415bdad1d4841c992241e5464fcc7517268d8d84caa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1ae1b5809074ace7ba238eca1c31d6d323106dbe6dc23c3a204e3c7846a67a26",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:f9ec932536dfd6bb94a14ce9cce076f751e29125360843ea721fef68a6133525",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.10.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:0e69918e384104a20955392fb989bcfb054099353e6c51131db0c3646fa066ac",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:71640e0716dd1604c949d3ec9098f637cace3d399131f7ac4926e11bb8fd99f6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:f8b37b4ac14146f3b36e6c494d69a2a1e538cb4aa0f56d22f01f52854b5f5b59",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:bcb9a6586da1bae2e188b4f04707d900c7bf10df25a82c32e60695fac9485471",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:4e37fcb20930b94f8a8c4bed840bf94da65b77d5856864577a43155db74dff44",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:0e40908110922f2d85558a75ba6b4d32e68d1de87da458e048347711b2755eca",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:3823a8f5c8ffaa675acec3c738068a76d3be54c0875005251974c9e0eeb8058b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:baa540d2fc3c26082669464d5d239c79bd72e3191167065b96ff50722c6db793",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:e40d5070952426d04b5da8d8e2aba93cce150ef887ee0fa64409a04667e9649f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:a9026f15b408735575fde163a5dc32f91ffc6b2321b4501d7379bb0c3bcc1009",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:2a8679e0b4d28f66ec859f77647bbfe46041014624b87bd7d4b051b35328d514",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:5fe90714635df67b21693f7affb8b50e33271e63dc5c9e0429e8e83556e9bfa1",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:0e69918e384104a20955392fb989bcfb054099353e6c51131db0c3646fa066ac",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:71640e0716dd1604c949d3ec9098f637cace3d399131f7ac4926e11bb8fd99f6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:f8b37b4ac14146f3b36e6c494d69a2a1e538cb4aa0f56d22f01f52854b5f5b59",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:bcb9a6586da1bae2e188b4f04707d900c7bf10df25a82c32e60695fac9485471",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:4e37fcb20930b94f8a8c4bed840bf94da65b77d5856864577a43155db74dff44",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:0e40908110922f2d85558a75ba6b4d32e68d1de87da458e048347711b2755eca",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.3-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:52e71f910dfc87c113d91dfe6ec30e6e1f429362769cafb4b7cc651ab92655d8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.10.3-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:52e71f910dfc87c113d91dfe6ec30e6e1f429362769cafb4b7cc651ab92655d8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.10.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:14166e0e15f33b4d09cd274e0b7217ef1075b71ec108719cead2c326717bb60b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:683a6d7a19441379ee55f51c92f4dd9d4796067fef82fe5c346072f6c4908a12",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:eca4e4d8182306fe01dc33e89bf8973c2312358c1b12295445b84a724b2c7da4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:20570d7c419e99c4aa70f5599a09d9674f0bfc2a6f3077c116f9e409e6ff260d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a59938ae8519c3f91ac18286e86057d6976d688b16fd997701194b852e2e7715",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5d5bd49b3897c3649e53f43852de028704b8f0e2d6ec5662136c6a56f6f13afb",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.3-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:592a104c33d34b7045367415bdad1d4841c992241e5464fcc7517268d8d84caa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1ae1b5809074ace7ba238eca1c31d6d323106dbe6dc23c3a204e3c7846a67a26",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:f9ec932536dfd6bb94a14ce9cce076f751e29125360843ea721fef68a6133525",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.10.3-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1ae1b5809074ace7ba238eca1c31d6d323106dbe6dc23c3a204e3c7846a67a26",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                }
            ]
        },
        "1.10.3-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:f9ec932536dfd6bb94a14ce9cce076f751e29125360843ea721fef68a6133525",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.10.3-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:592a104c33d34b7045367415bdad1d4841c992241e5464fcc7517268d8d84caa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.10.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a0d942e63310d5076dcc1874ab85f30bfb77fadc1e069fa77d986b237bba8ab2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:7993cd5fcdcb0bf7f170ac269e9782102a386741b4e0079fa410054ffb28ac0e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:8c34ae236b4803dc148f26e6d90c945a3d99ab0923f0d6855c7b901f1facb01c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:052f33c1226d03142fbc73eadd799722c0ad5804456acfd228439f6972e1acdb",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:2aa2592a07afbba97968c595ffab095cfb79ebae2eab282756beeea17a5c391b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fa41b372fa926db911fcb135ba10c16c5e3a665812a406de822f0576d10a18f7",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dc0f8f576d5cd9f14c014b81efcde3198fad6276b3869c9f29caffa47eaa2213",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:8010f9a8b30848966375db6dc92651ac59ad8c505d8cd138bdbe032a1c4a1433",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.665"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:23633e607ce1659a3bd7ebbb7d51735a943588634d3be6dd90cd5ecd8040e9ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.285"
                    }
                }
            ]
        },
        "1.10.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:a54a1c32d0e0222dc95280a6f83e9f888af7d71c6cac164463c10e8582297df3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:d0187bda649e098e80ded870f8bd6715f23369d2d8a78ecdf69e449c7710876f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:5e6e139a2e4df064089a4243a420987c2ebaf4f6b27d5913e2e7167dbcd29a46",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:ac1852e9c58c5f65824c6bee4456efcf800eadb2a4ac8c4e941fad433fbd56aa",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:d850819d6bdbe4ab52acd4e0315e97c6d053002485bbd164cef126c53580bcd3",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:2c59cf880d642de588bb732845a0aacb3f59cecf13fea5da4de4c99f404b117e",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.4-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:79d021ecc6b7c290ab83a833df927d7e2eef23369fb239904f9ee93bb2d51c14",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:10efdeda29fec3f1837e8586ae1a040eb3c58db8fe015e6a4ba725f0fc423f39",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:57c15de07eb39e2b933ab2c06e99c65ad209fe5e27ab8404f750ad58980c8d60",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:8458a19fb8299c681574ade79daae375d276a1ba42399413b502b71465742b5d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:93634939cc5b88c4f5611c78171549145c230c93c3c5c731323dea5e6bc5d7ea",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:c67ae3666154740b0e96ddd7495292a923caadb2ac4a2351f1401a333d12ed41",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.4-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:a54a1c32d0e0222dc95280a6f83e9f888af7d71c6cac164463c10e8582297df3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:d0187bda649e098e80ded870f8bd6715f23369d2d8a78ecdf69e449c7710876f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:5e6e139a2e4df064089a4243a420987c2ebaf4f6b27d5913e2e7167dbcd29a46",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:ac1852e9c58c5f65824c6bee4456efcf800eadb2a4ac8c4e941fad433fbd56aa",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:d850819d6bdbe4ab52acd4e0315e97c6d053002485bbd164cef126c53580bcd3",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:2c59cf880d642de588bb732845a0aacb3f59cecf13fea5da4de4c99f404b117e",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.4-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:1ba7a639a234aff45947295743a2c1fa61d84abee5e9969218a635f08eea6e02",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                }
            ]
        },
        "1.10.4-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:1ba7a639a234aff45947295743a2c1fa61d84abee5e9969218a635f08eea6e02",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                }
            ]
        },
        "1.10.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a0d942e63310d5076dcc1874ab85f30bfb77fadc1e069fa77d986b237bba8ab2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:7993cd5fcdcb0bf7f170ac269e9782102a386741b4e0079fa410054ffb28ac0e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:8c34ae236b4803dc148f26e6d90c945a3d99ab0923f0d6855c7b901f1facb01c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:052f33c1226d03142fbc73eadd799722c0ad5804456acfd228439f6972e1acdb",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:2aa2592a07afbba97968c595ffab095cfb79ebae2eab282756beeea17a5c391b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fa41b372fa926db911fcb135ba10c16c5e3a665812a406de822f0576d10a18f7",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.4-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dc0f8f576d5cd9f14c014b81efcde3198fad6276b3869c9f29caffa47eaa2213",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:8010f9a8b30848966375db6dc92651ac59ad8c505d8cd138bdbe032a1c4a1433",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.665"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:23633e607ce1659a3bd7ebbb7d51735a943588634d3be6dd90cd5ecd8040e9ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.285"
                    }
                }
            ]
        },
        "1.10.4-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:8010f9a8b30848966375db6dc92651ac59ad8c505d8cd138bdbe032a1c4a1433",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.665"
                    }
                }
            ]
        },
        "1.10.4-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:23633e607ce1659a3bd7ebbb7d51735a943588634d3be6dd90cd5ecd8040e9ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.285"
                    }
                }
            ]
        },
        "1.10.4-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dc0f8f576d5cd9f14c014b81efcde3198fad6276b3869c9f29caffa47eaa2213",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                }
            ]
        },
        "1.10.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:74eb677526b02b7bc9a12c9a7202a317a89bb3c145dd6917ca781aa20ad1063b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:b02c765e964e163a9bf7a726a399d8bbe6bae8258fcd370e3e4edc080cfb40f6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:e721e3cb62711f95f1e79128fbfab71da91a1fe9ed00c239c6721caee203f5ac",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:151971146b051907d0cc2903ced49b23cbc248cbb4fccf8274f96752eba39fd2",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:7c27bdc17f6c0a6e2c6d1992d72cf53103ce5df9d406b557efb3dd49d7d24a16",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8f47dee1edd5c2960d325ac508793b182f2ec03700dd24002c14c814bd410b6d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:8f86933310f75d4ab69ad0137370fdde6cc60d5503a05717fea83b1e5997d177",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:df112dafa9e64800aed0e303acec5fb0d10c2385bffa15df0f2c9293bf9ef264",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.726"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b0507fcc70334cd5b0f645b5cac16faed9d7922ce20c6e5912782acd07c55c4e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.345"
                    }
                }
            ]
        },
        "1.10.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:d830d821f1ea39178886c4853e25ec07369f037cb758e07c3cbab832eabc9a14",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:114b3350fefe2bc088e983f3bcd7fbd3326eb9abdb23ae9e1210e213686c93f4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:58ff97ab87610b1631d3b1dc257942d841c8e2685c1262cb361e373211e9eb61",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:5fb0e1ac99a207a5883a34d6c3908b6d3a616776e5788c81d5d184e707ee96c5",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:c0306bf8f0dee4b1da1f30827af578a62b0d7eee7486ec40740f2d6cb3c5f04e",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:980167efc7e78764b799cbb4ffba49ec2ba3f54649c7ccdaa121b9a148880eda",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.5-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:eb4b9b4652cc44070e028c0c471c7d3e189a3ecb80e8a3d4db7e0cb019e2cfbe",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:0d5cd23d168b788fdbdff8bef5186a46d58c02d022a67fec085f44bd862a6d81",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:7f49878b8f1a40caa1576b8894855f35f551370be6f1faf9360f262b4ea48c7b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:21219400875ce8be9dcdf6abec46fac89260f98afe5da5ef26425627eb480840",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:8d3e77170de5649ac036b40177ed36e5438501386db95cf0e1ef567377debf16",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:760ec45e1612a87ca0f9dd11ce97e08bf4f2934fef0be07b4cde6d509783c9ab",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.5-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:d830d821f1ea39178886c4853e25ec07369f037cb758e07c3cbab832eabc9a14",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:114b3350fefe2bc088e983f3bcd7fbd3326eb9abdb23ae9e1210e213686c93f4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:58ff97ab87610b1631d3b1dc257942d841c8e2685c1262cb361e373211e9eb61",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:5fb0e1ac99a207a5883a34d6c3908b6d3a616776e5788c81d5d184e707ee96c5",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:c0306bf8f0dee4b1da1f30827af578a62b0d7eee7486ec40740f2d6cb3c5f04e",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:980167efc7e78764b799cbb4ffba49ec2ba3f54649c7ccdaa121b9a148880eda",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.5-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:e5f90f1d5d9c9df957d31879f381c91793ad5120c59339ab0b6eae8bd4d9e9d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.5-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:e5f90f1d5d9c9df957d31879f381c91793ad5120c59339ab0b6eae8bd4d9e9d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:74eb677526b02b7bc9a12c9a7202a317a89bb3c145dd6917ca781aa20ad1063b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:b02c765e964e163a9bf7a726a399d8bbe6bae8258fcd370e3e4edc080cfb40f6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:e721e3cb62711f95f1e79128fbfab71da91a1fe9ed00c239c6721caee203f5ac",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:151971146b051907d0cc2903ced49b23cbc248cbb4fccf8274f96752eba39fd2",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:7c27bdc17f6c0a6e2c6d1992d72cf53103ce5df9d406b557efb3dd49d7d24a16",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8f47dee1edd5c2960d325ac508793b182f2ec03700dd24002c14c814bd410b6d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.5-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:8f86933310f75d4ab69ad0137370fdde6cc60d5503a05717fea83b1e5997d177",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:df112dafa9e64800aed0e303acec5fb0d10c2385bffa15df0f2c9293bf9ef264",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.726"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b0507fcc70334cd5b0f645b5cac16faed9d7922ce20c6e5912782acd07c55c4e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.345"
                    }
                }
            ]
        },
        "1.10.5-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:df112dafa9e64800aed0e303acec5fb0d10c2385bffa15df0f2c9293bf9ef264",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.726"
                    }
                }
            ]
        },
        "1.10.5-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b0507fcc70334cd5b0f645b5cac16faed9d7922ce20c6e5912782acd07c55c4e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.345"
                    }
                }
            ]
        },
        "1.10.5-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:8f86933310f75d4ab69ad0137370fdde6cc60d5503a05717fea83b1e5997d177",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:af0ffc54ffec0f39288694e1e20f9405e48696b625409459d0957ad5cf59cb9b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:49120df26b9f395e0ea0ae3c07c73294a7b6466a40334882a62e4d415d928970",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:dff54c47f728ee7ed8553d474570a60fe2b5ed207780adf7645fcac33431ef1d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:58a88c823f426dfc8fdabaf99a6db75b647803c8a52be92f6f9caeb216afdc36",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:69587892af71c0634d320872163ccb5b8182b74a3c85e9c68bf39962607c25c2",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e60e08d2630482931c7859fdd0a6eb426ffc4f7f6d56fa8bfdcb841a8b0e8c8c",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:c8d0a140ae8271db33fc7f620ca1945bef8b668ed4d7399a728856445e54f7d6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2665"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6af2daa343423a1c47ee1540c7ca0a9e9a719fd125da63dc540a003f7db2425f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.846"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:6df643e04f106a068514ae63195a03aee319f4d592e073a2d6d3c12cd7af40d8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.469"
                    }
                }
            ]
        },
        "1.10.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:8d114889439070cf9bbbc180e12098d29515318b8346cfe5db48c33af7ad7029",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:1196b0264d21fb0275c0bb975e55c3812fc85394500b3111e5e452a1261948a5",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:9cd72a831afdf2498a50b54dc39fd51bc34ad227f8ac79f4f08cc1b83123a18a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:1c922aace6984baf5565ec930181618bbe6c51551d97ca952a1fd35f89135966",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:d822ae007407fb0bdd6e5d65928f9be1339951e712debe7d62c9737d358a8da7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:200091f84c2fb92a0a949691acf8c4135d06cb5a2266f3f390444758aa68bd77",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.6-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:b58f7ba47f26a097f86c8618a8dc5e41f5c055b83fac77d4099db16d30aacb9d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:61ad6a7c8a15e88fc6a0675096fbc37a451131d26e3e6242d1134483622e0fbb",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:a34feacdb01b533ee37e51685b450319b0f747a20a262b7f352f480e32caadec",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:9f5a3e360f7fd386189ad6b8dfb37969890f05cd871774e0f360d6fdb86d330d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:7567a577a92cc8f0712f6d96b821d0c93d9c9095bb9107145c37a5e1ec71947f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:82c4fe3a1b054527d77c1b1ba9f973d93cf147f8111cb4c5a9128331516829ec",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.6-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:8d114889439070cf9bbbc180e12098d29515318b8346cfe5db48c33af7ad7029",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:1196b0264d21fb0275c0bb975e55c3812fc85394500b3111e5e452a1261948a5",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:9cd72a831afdf2498a50b54dc39fd51bc34ad227f8ac79f4f08cc1b83123a18a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:1c922aace6984baf5565ec930181618bbe6c51551d97ca952a1fd35f89135966",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:d822ae007407fb0bdd6e5d65928f9be1339951e712debe7d62c9737d358a8da7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:200091f84c2fb92a0a949691acf8c4135d06cb5a2266f3f390444758aa68bd77",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.6-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:659fc9b84bab932fb0145027933653b4e787684924f61c4bd77921da82f05aa6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.6-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:659fc9b84bab932fb0145027933653b4e787684924f61c4bd77921da82f05aa6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:af0ffc54ffec0f39288694e1e20f9405e48696b625409459d0957ad5cf59cb9b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:49120df26b9f395e0ea0ae3c07c73294a7b6466a40334882a62e4d415d928970",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:dff54c47f728ee7ed8553d474570a60fe2b5ed207780adf7645fcac33431ef1d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:58a88c823f426dfc8fdabaf99a6db75b647803c8a52be92f6f9caeb216afdc36",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:69587892af71c0634d320872163ccb5b8182b74a3c85e9c68bf39962607c25c2",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e60e08d2630482931c7859fdd0a6eb426ffc4f7f6d56fa8bfdcb841a8b0e8c8c",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.6-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:c8d0a140ae8271db33fc7f620ca1945bef8b668ed4d7399a728856445e54f7d6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2665"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6af2daa343423a1c47ee1540c7ca0a9e9a719fd125da63dc540a003f7db2425f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.846"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:6df643e04f106a068514ae63195a03aee319f4d592e073a2d6d3c12cd7af40d8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.469"
                    }
                }
            ]
        },
        "1.10.6-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6af2daa343423a1c47ee1540c7ca0a9e9a719fd125da63dc540a003f7db2425f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.846"
                    }
                }
            ]
        },
        "1.10.6-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:6df643e04f106a068514ae63195a03aee319f4d592e073a2d6d3c12cd7af40d8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.469"
                    }
                }
            ]
        },
        "1.10.6-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:c8d0a140ae8271db33fc7f620ca1945bef8b668ed4d7399a728856445e54f7d6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2665"
                    }
                }
            ]
        },
        "1.10.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:53be4ccbfa561116bb96ae1f144b6a2d36b710bbf6f78c4a1c1b0737048d1e8c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:436b2fd068cce9409fa8c2978afbb37f45a1870a2f7cb4c0dfcce024691202bd",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:03c1a79ee5f9e6f9dc921058eb6da37e64f36c8130858105569d7daacdcfc386",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8924847831ef7121156df407b913f2ac337944f845a91945a78552b7f5cf8e52",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:cf81a836e705ca5ccb3d2dbc2910b4276419db00d3e3dd244e82530fb7ba5d82",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8908f133e66f365c9188435c8a7476288844b254954d5418ab0e5c6c993fa3ac",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:806d1a91aa692c81008670dcaa22a6bdaa034ca7cd55aa03740b527845caa0fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2724"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:490b82de9a2317cb7769e5a38c0f74b3cf90abcdd4fd9c0b159a142612cd6f89",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.904"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b54dd0a9b8f5c1bde0611a65fd38a3da5f970c7f4835530b0fda947aefc1bbe8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.523"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:65c0bdb48098a3be88820be5dbeb1a2bdc362a12c015e27c971154639844acb6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.253"
                    }
                }
            ]
        },
        "1.10.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:55bea1dd9d07c6f366e84ff51241655b346243f1a33960972002578c85911056",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:955f84534447f99be5c17adfb74050aec6ffc672961752e5c72e10333f70286f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:37ca3f6a00fa005c727647ae2102cb5af496d0d55f791547f739233d0923d90b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:329318440c825f5f60c316e13c6278157f9190cc83351dfa86c9705f52aff744",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:1b5df90287d8e81842b4f4a1654ac781d5a1ce92d1a5dbb03f5e095f97a1fcd5",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:f8df2c2d6eb9f41c792e5c918f233dee7370c550ed7c7202ee1148f7e44708d2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.7-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:11b097193b48412ebe429382f894515729a3fc4f03ed70992a8f1788c720e46a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:80657fe4b1db1c2b987a6ff3478a9d71a8e7da20b9799202b234a6f1a5edb97f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:ae55f0b671c90bbcf833fb7c663a327b97f126d9fe438656038f261fc1f4f5f5",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:2885be270b887ecc95a3ced9d71776f97bd18733019a245020c5025804601ae7",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:d194dde536f0416386c9cafd029d46524fffaed117b7e2d792b5aa71c4db05bf",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:741c00685bb9f05ce62faec5416bcda670b18191335b55724111fb760315b001",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.7-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:55bea1dd9d07c6f366e84ff51241655b346243f1a33960972002578c85911056",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:955f84534447f99be5c17adfb74050aec6ffc672961752e5c72e10333f70286f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:37ca3f6a00fa005c727647ae2102cb5af496d0d55f791547f739233d0923d90b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:329318440c825f5f60c316e13c6278157f9190cc83351dfa86c9705f52aff744",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:1b5df90287d8e81842b4f4a1654ac781d5a1ce92d1a5dbb03f5e095f97a1fcd5",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:f8df2c2d6eb9f41c792e5c918f233dee7370c550ed7c7202ee1148f7e44708d2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.7-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:96940271b6eee89032c9dbb4314f4cf56726dafeb4151de04c3321519dec08a6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.7-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:96940271b6eee89032c9dbb4314f4cf56726dafeb4151de04c3321519dec08a6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:53be4ccbfa561116bb96ae1f144b6a2d36b710bbf6f78c4a1c1b0737048d1e8c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:436b2fd068cce9409fa8c2978afbb37f45a1870a2f7cb4c0dfcce024691202bd",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:03c1a79ee5f9e6f9dc921058eb6da37e64f36c8130858105569d7daacdcfc386",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8924847831ef7121156df407b913f2ac337944f845a91945a78552b7f5cf8e52",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:cf81a836e705ca5ccb3d2dbc2910b4276419db00d3e3dd244e82530fb7ba5d82",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8908f133e66f365c9188435c8a7476288844b254954d5418ab0e5c6c993fa3ac",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.7-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:806d1a91aa692c81008670dcaa22a6bdaa034ca7cd55aa03740b527845caa0fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2724"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:490b82de9a2317cb7769e5a38c0f74b3cf90abcdd4fd9c0b159a142612cd6f89",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.904"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b54dd0a9b8f5c1bde0611a65fd38a3da5f970c7f4835530b0fda947aefc1bbe8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.523"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:65c0bdb48098a3be88820be5dbeb1a2bdc362a12c015e27c971154639844acb6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.253"
                    }
                }
            ]
        },
        "1.10.7-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:490b82de9a2317cb7769e5a38c0f74b3cf90abcdd4fd9c0b159a142612cd6f89",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.904"
                    }
                }
            ]
        },
        "1.10.7-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b54dd0a9b8f5c1bde0611a65fd38a3da5f970c7f4835530b0fda947aefc1bbe8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.523"
                    }
                }
            ]
        },
        "1.10.7-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:65c0bdb48098a3be88820be5dbeb1a2bdc362a12c015e27c971154639844acb6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.253"
                    }
                }
            ]
        },
        "1.10.7-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:806d1a91aa692c81008670dcaa22a6bdaa034ca7cd55aa03740b527845caa0fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2724"
                    }
                }
            ]
        },
        "1.10.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:eac40ba14416262e26def90a2d6f10d6ff579ea61c267963f6cbfbbe63b0ea7b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ebdc569aaa27cdb892359e8a9981ecbe1402a5fcc5a573e8c7f0dd4625f2377b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:07bcd768294370ba5e91a5ef21d91a746b644809fe9f66cd7cf32a6454d06e29",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5ccd95312168bbdba8b3667491c4e47a49994f0f0e5f48e2570f5f3c5be22a58",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1f36bf2cdb0f8ff1ec2336d516c9deacc6b255967523422c877935f0c07e0d7c",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1aa2a3447762457c32ccd2a75cabeaa0fba7f7c2363e4be19566a726904172a9",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dba9fd6b85ad63f09960e69b13104f4399d202ab2a62ea7259a559fd5cec44f1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:059635c994749a376416be8d59eb81807188a3cab7500836cecf045228bd2f8b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b5dfac0bf63291eba8a90aa186589a519e9c897da86218d913d5143f5e938e9e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3abd27a389bb8f5818b971d81bcb6e4f394a61c75782f7447f3f69d91936afd0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.10.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:565ad18e011a417bb20dae206b9aff68d4c1daf84c58b84f30f512b74c57f0c7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:94c5fd97b17d0e9fe89e011446bedda4784cb0af7a60494989e2a21c0dcba92f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:01b898f3eb5ad3ebef23bf51a1fbc39b6984418b9d432ecd4219c1dc969b9adb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:17d91bf593ceed27ade9fde01325347c7aa83d5e8be93340bed43af03156d987",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:7a280b4471effaa64c94f62945260c946d2181016615e3c6c3e2ad1ffc72940f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:21417eb700d261be58f647b7b397b0156e4c771ea5a8228831086e54e63c4571",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.8-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:020f05646295cf35af1ec044ea20d671fec0e7e072c615561b11fd3ccfdb857e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:44060fc5799aafb1631895b40f98aa975fccca3c847b7b039e36fd8052e0d35e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:3c84d6625866f61a26f460c812f311e6a710006da48e2a3f0dd5b42fac4b67f2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:862660a099071b3c1fbc6325ae1dcec05e7de54b305696129f1e771da6a9c762",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:e51b4c0941a9be61a9f601660b36e9e6d1bcbe769e59064c9a5142dd1d1b4594",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:4174d1635783ce3c2a2910ac84ff38e5220c96450984f9011157e68f4aeb61e2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.8-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:4e2f1325c4559ab4f42dfd0bb710a12778a7717cfc1f9ab172be30ca741ec064",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:a6a9a0b48d555c482bca31048007eca5111a350bca3b1682ced72d0fccb0eb11",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:405f8ceeb0fb49b4c6fd2fc1102bd2690267c9e1d3dc93b64a74a85dcf5de42a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:a76b80d7448d73f1c1c697cfc8a7ec42fa4c8e009f3b6038ced9cfcc1e018c04",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:a8e8d9786931ce200d691bf286e23f466b1850987ee9799b9cf3f4309c73de2b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:fe150247017a4c5469f40657bac521f63b01baa75b702b061fecd6d5a5992348",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1364,
                    "digest": "sha256:565ad18e011a417bb20dae206b9aff68d4c1daf84c58b84f30f512b74c57f0c7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:94c5fd97b17d0e9fe89e011446bedda4784cb0af7a60494989e2a21c0dcba92f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:01b898f3eb5ad3ebef23bf51a1fbc39b6984418b9d432ecd4219c1dc969b9adb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:17d91bf593ceed27ade9fde01325347c7aa83d5e8be93340bed43af03156d987",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:7a280b4471effaa64c94f62945260c946d2181016615e3c6c3e2ad1ffc72940f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1571,
                    "digest": "sha256:21417eb700d261be58f647b7b397b0156e4c771ea5a8228831086e54e63c4571",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.8-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:4e7fb2dec159a4300ef3ab16b7d504e436a3412c8991441304432033d09cad2b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.8-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:4e7fb2dec159a4300ef3ab16b7d504e436a3412c8991441304432033d09cad2b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.10.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:eac40ba14416262e26def90a2d6f10d6ff579ea61c267963f6cbfbbe63b0ea7b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ebdc569aaa27cdb892359e8a9981ecbe1402a5fcc5a573e8c7f0dd4625f2377b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:07bcd768294370ba5e91a5ef21d91a746b644809fe9f66cd7cf32a6454d06e29",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5ccd95312168bbdba8b3667491c4e47a49994f0f0e5f48e2570f5f3c5be22a58",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1f36bf2cdb0f8ff1ec2336d516c9deacc6b255967523422c877935f0c07e0d7c",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1aa2a3447762457c32ccd2a75cabeaa0fba7f7c2363e4be19566a726904172a9",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.8-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dba9fd6b85ad63f09960e69b13104f4399d202ab2a62ea7259a559fd5cec44f1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:059635c994749a376416be8d59eb81807188a3cab7500836cecf045228bd2f8b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b5dfac0bf63291eba8a90aa186589a519e9c897da86218d913d5143f5e938e9e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3abd27a389bb8f5818b971d81bcb6e4f394a61c75782f7447f3f69d91936afd0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.10.8-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:059635c994749a376416be8d59eb81807188a3cab7500836cecf045228bd2f8b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                }
            ]
        },
        "1.10.8-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3243,
                    "digest": "sha256:b5dfac0bf63291eba8a90aa186589a519e9c897da86218d913d5143f5e938e9e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                }
            ]
        },
        "1.10.8-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3abd27a389bb8f5818b971d81bcb6e4f394a61c75782f7447f3f69d91936afd0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.10.8-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:dba9fd6b85ad63f09960e69b13104f4399d202ab2a62ea7259a559fd5cec44f1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                }
            ]
        },
        "1.10beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:99e1ab0c8de10334a6628ffb3ced2cd87cd7c3ed9863f1eb18080f93abccbbc9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:0495cc8cc651c9c720ec3c9260b1a7c46f77b4942e31dcd337ebc3b04b2f9abf",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:0e25bc3870b0d30e5d0a9d98f4450c32c4c71478c1c8c59a54257bf8cac143f8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:f2ef10b1f69e88bd8b86731ee9114ffb06f1169c75cdaddf81caccbc44bf98e0",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:01cba128718cc85b12e544deb2ef77f12e28c895f5455824830d270a7aeac32b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:a2df7ce4b25d47a79131e2a18af32b9d693eb2cab465da25fa6e4d0dc115644a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:70934e6ecd850fef23ac4961984eb702a36e804f163c70fcfc96af15a1290c69",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1573,
                    "digest": "sha256:fed49e7500da3b9e1d0b020399c9bc2dd3f3b19afbc414c35110955c88247e66",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:ac77bba9a42ab900ba17242a7b86ae0e88f19967bb6db243e013f6420d7c7e4d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:6fe246db6e6e2144462eae6eff18c9747374a64e22af727c4073f732a1555ebd",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:a3d228a9893c3728f33dd5a2385646644748714005bb2d282d71dfe63a74930d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:5bd0ef067d90fda5f0e717b245d5a95f7cebd73713efeab1dbb4ccc81b483896",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10beta1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1573,
                    "digest": "sha256:fed49e7500da3b9e1d0b020399c9bc2dd3f3b19afbc414c35110955c88247e66",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:ac77bba9a42ab900ba17242a7b86ae0e88f19967bb6db243e013f6420d7c7e4d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:6fe246db6e6e2144462eae6eff18c9747374a64e22af727c4073f732a1555ebd",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:a3d228a9893c3728f33dd5a2385646644748714005bb2d282d71dfe63a74930d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:5bd0ef067d90fda5f0e717b245d5a95f7cebd73713efeab1dbb4ccc81b483896",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10beta1-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:9dc9e5743fe222834a58f0d36cc100f2c73cb036cc896b81b99cd39d885448b1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10beta1-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:9dc9e5743fe222834a58f0d36cc100f2c73cb036cc896b81b99cd39d885448b1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:99e1ab0c8de10334a6628ffb3ced2cd87cd7c3ed9863f1eb18080f93abccbbc9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:0495cc8cc651c9c720ec3c9260b1a7c46f77b4942e31dcd337ebc3b04b2f9abf",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:0e25bc3870b0d30e5d0a9d98f4450c32c4c71478c1c8c59a54257bf8cac143f8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:f2ef10b1f69e88bd8b86731ee9114ffb06f1169c75cdaddf81caccbc44bf98e0",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:01cba128718cc85b12e544deb2ef77f12e28c895f5455824830d270a7aeac32b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10beta1-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:a2df7ce4b25d47a79131e2a18af32b9d693eb2cab465da25fa6e4d0dc115644a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:70934e6ecd850fef23ac4961984eb702a36e804f163c70fcfc96af15a1290c69",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10beta1-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:70934e6ecd850fef23ac4961984eb702a36e804f163c70fcfc96af15a1290c69",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10beta1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:a2df7ce4b25d47a79131e2a18af32b9d693eb2cab465da25fa6e4d0dc115644a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:139cabf88220828d083bfb25cd33aeb684481311f313405be257de3338846042",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2003,
                    "digest": "sha256:0b9b41d0f426521cc312a92b870c5e3f8be0f15b5024674af9d70361c4e1989b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:43d6dbdc3a6c7e90eb49ccb126ab3413a6876624b2b1816725995fdd5c9fafa6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:c31fff6db14eb52788f81b1ad8a14ed1a760f49dc89263e8d6cb0ea1dee1855b",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:29778dda4801c0981eacc96b0ec28e592b9840cbc3c61a75af0fb24307437c10",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:b528a1c06e824df8d39169f73bf11f907332c4e2f7a6313825a4b0c77536e708",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:f0c7718a3dada87bd81be545c540b7ae713ec597bf8ae80656fbf437d141a6ee",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e6e07a10463fdbb7f9ca48a451476dfe04d8587592b1e98077c201e4b825fa25",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1573,
                    "digest": "sha256:b02e5489485b8ee8e4203910776c8d5b8b7564221e7a3cab6756e7e7c9befcdf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:5ff1eb286227bfa2f2607311cd822e0844b4f8e9c4a3b5a640087808cb9f4d28",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:0b1300541129f2e9c21a8612f22d04527ad051bb0d93d03a3fcc58a97adbb1fc",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:4ea8046498f017e70a5b21feb1ebc6d21f517bc32fb29b1d391f0f3d31ceb15e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:52e2798df0fc47a0676b221562fe45cc0a64af6196c6ca15ba222de8494e8d7f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:a64b5fdeccb6919072635ecce104249124ec1f474fe33eb1df02747ea323bc93",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10beta2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1573,
                    "digest": "sha256:b02e5489485b8ee8e4203910776c8d5b8b7564221e7a3cab6756e7e7c9befcdf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:5ff1eb286227bfa2f2607311cd822e0844b4f8e9c4a3b5a640087808cb9f4d28",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:0b1300541129f2e9c21a8612f22d04527ad051bb0d93d03a3fcc58a97adbb1fc",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:4ea8046498f017e70a5b21feb1ebc6d21f517bc32fb29b1d391f0f3d31ceb15e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:52e2798df0fc47a0676b221562fe45cc0a64af6196c6ca15ba222de8494e8d7f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1780,
                    "digest": "sha256:a64b5fdeccb6919072635ecce104249124ec1f474fe33eb1df02747ea323bc93",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10beta2-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:788818864bbb1be73f3967169ee2dd68d0ce76d135a086b0dba78b93e09ec8bd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10beta2-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:788818864bbb1be73f3967169ee2dd68d0ce76d135a086b0dba78b93e09ec8bd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:139cabf88220828d083bfb25cd33aeb684481311f313405be257de3338846042",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2003,
                    "digest": "sha256:0b9b41d0f426521cc312a92b870c5e3f8be0f15b5024674af9d70361c4e1989b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:43d6dbdc3a6c7e90eb49ccb126ab3413a6876624b2b1816725995fdd5c9fafa6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:c31fff6db14eb52788f81b1ad8a14ed1a760f49dc89263e8d6cb0ea1dee1855b",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:29778dda4801c0981eacc96b0ec28e592b9840cbc3c61a75af0fb24307437c10",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:b528a1c06e824df8d39169f73bf11f907332c4e2f7a6313825a4b0c77536e708",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10beta2-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:f0c7718a3dada87bd81be545c540b7ae713ec597bf8ae80656fbf437d141a6ee",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e6e07a10463fdbb7f9ca48a451476dfe04d8587592b1e98077c201e4b825fa25",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10beta2-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e6e07a10463fdbb7f9ca48a451476dfe04d8587592b1e98077c201e4b825fa25",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10beta2-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:f0c7718a3dada87bd81be545c540b7ae713ec597bf8ae80656fbf437d141a6ee",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d91693da34090d9d14224a4e5ed6eb27a0900f05c01f32b3b60f6b88249883c9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:95e5cab87120334517ceaf697a0583be20d184e936a8c231323540c71be6400d",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:310c13c5391d689ce89565d70ccbfc8c1d6f02cf46a67369061bac157d1e8062",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a22b866c30dc1b6727f4dffec20bebd25f60c1696e6f7bce2cc21249b0b28486",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2fc5562c400b6872d310ca3ef6554948829e81ce8a3bc2ae33ff032156f6f0b3",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:75551e6f425e02b85a0215981e5ca5ace452ced8a46b175a9720dae19ad97b4f",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e43cceb307b37bbf5cf57e4c8608876e3a372759df58563ea697710051e96d3d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e883b1ad15700f875632b55a1481d38d017373aa7312e0ffe49b8523eef63000",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:32af36bf63d9b2808e25276e6105f1853163d1977f3c5f20ff2837b34e57eff7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:883bacd66ca9c798caed888b7c5c438c8eb0137cab9c3d8e12a594e9ad07377c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:710eae2a162ca8351c4206dbaa4cbf9a6b09573aa4fe74195a63d5e0fb77f56b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7dfaa2761d44fcfd376cfa9ba630c8b8c2bd7fa746266e536f60caffc700393f",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:04a5c11d7fb4598997543f547b187718eee565c9ac28ec799df1e24c49c9ae1a",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:05302eb299beb3e23840f4e91847e74d25b2b818bd861bca735d0effa3495877",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10rc1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:32af36bf63d9b2808e25276e6105f1853163d1977f3c5f20ff2837b34e57eff7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:883bacd66ca9c798caed888b7c5c438c8eb0137cab9c3d8e12a594e9ad07377c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:710eae2a162ca8351c4206dbaa4cbf9a6b09573aa4fe74195a63d5e0fb77f56b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7dfaa2761d44fcfd376cfa9ba630c8b8c2bd7fa746266e536f60caffc700393f",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:04a5c11d7fb4598997543f547b187718eee565c9ac28ec799df1e24c49c9ae1a",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:05302eb299beb3e23840f4e91847e74d25b2b818bd861bca735d0effa3495877",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10rc1-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:48a166375dd095c8e597da193af5881081b67c6f6f27cc0ff406ac20286df596",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10rc1-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:48a166375dd095c8e597da193af5881081b67c6f6f27cc0ff406ac20286df596",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d91693da34090d9d14224a4e5ed6eb27a0900f05c01f32b3b60f6b88249883c9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:95e5cab87120334517ceaf697a0583be20d184e936a8c231323540c71be6400d",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:310c13c5391d689ce89565d70ccbfc8c1d6f02cf46a67369061bac157d1e8062",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a22b866c30dc1b6727f4dffec20bebd25f60c1696e6f7bce2cc21249b0b28486",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2fc5562c400b6872d310ca3ef6554948829e81ce8a3bc2ae33ff032156f6f0b3",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:75551e6f425e02b85a0215981e5ca5ace452ced8a46b175a9720dae19ad97b4f",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10rc1-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e43cceb307b37bbf5cf57e4c8608876e3a372759df58563ea697710051e96d3d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e883b1ad15700f875632b55a1481d38d017373aa7312e0ffe49b8523eef63000",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10rc1-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e883b1ad15700f875632b55a1481d38d017373aa7312e0ffe49b8523eef63000",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.192"
                    }
                }
            ]
        },
        "1.10rc1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e43cceb307b37bbf5cf57e4c8608876e3a372759df58563ea697710051e96d3d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2007"
                    }
                }
            ]
        },
        "1.10rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d85d664727a051408a99fed019bd4c23184cf6e8608fa57c7aa70fec1d14cb1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:68c16ef8ce75230de5bcc24bfec38990e5ad233e3bf36cb6635407bbe500920e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c33da2ac19b5dd38b0e93129a448339841baee36943477f155e069b2eae30853",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:51fde6a44dae0c79737dae00518d74870cb46744962a074d3a2265b02c357d1d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:752ec4ed553648630e0eb157222b7b61ab59d0f0faa8a6ee311913a18421a800",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5b47cad7f6995a130f9a05cc8f693ad11881fe4256755664c65aa6d68ef8d841",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1dbfd4c8891c7109c54295c0f91870b96739e83461b1163051923cb48593e4b5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3f540fcaccd84a8ffc157c43748e84fe3d3ed0b1073301ca8eff73bd328ce380",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:abdf69f7bde4117559bc3af7e2a4857177c93af8c3cf53e98e315d2de9678bc9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c521826e2058c90f7d7b35cf56b0113c5386ca1926dc8658563e316cac7fb9cf",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f5ff83dcc07290fb93ae7d56ccbf3a3ae9a67921d33c9c5f4d65afcfda8c90c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7c4f9d7a59ab420209404112ebb392466cdb1d609b0bfeee126df417660b300e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:9e8b129ccfaf62b96e2a5ad95516f56e0239d4a93345764a7676f9b1fe6dc6a4",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6b28ef0da5a671447e7cbe02149087562c1a9862a932c11cef60292de5952a5c",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10rc2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:abdf69f7bde4117559bc3af7e2a4857177c93af8c3cf53e98e315d2de9678bc9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c521826e2058c90f7d7b35cf56b0113c5386ca1926dc8658563e316cac7fb9cf",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f5ff83dcc07290fb93ae7d56ccbf3a3ae9a67921d33c9c5f4d65afcfda8c90c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7c4f9d7a59ab420209404112ebb392466cdb1d609b0bfeee126df417660b300e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:9e8b129ccfaf62b96e2a5ad95516f56e0239d4a93345764a7676f9b1fe6dc6a4",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6b28ef0da5a671447e7cbe02149087562c1a9862a932c11cef60292de5952a5c",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10rc2-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:20f9dac149ae918ceb03130a8a5884e1f5258ab41775d2238d4c125349cf20b9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                }
            ]
        },
        "1.10rc2-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2195,
                    "digest": "sha256:20f9dac149ae918ceb03130a8a5884e1f5258ab41775d2238d4c125349cf20b9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                }
            ]
        },
        "1.10rc2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d85d664727a051408a99fed019bd4c23184cf6e8608fa57c7aa70fec1d14cb1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:68c16ef8ce75230de5bcc24bfec38990e5ad233e3bf36cb6635407bbe500920e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c33da2ac19b5dd38b0e93129a448339841baee36943477f155e069b2eae30853",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:51fde6a44dae0c79737dae00518d74870cb46744962a074d3a2265b02c357d1d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:752ec4ed553648630e0eb157222b7b61ab59d0f0faa8a6ee311913a18421a800",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5b47cad7f6995a130f9a05cc8f693ad11881fe4256755664c65aa6d68ef8d841",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10rc2-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1dbfd4c8891c7109c54295c0f91870b96739e83461b1163051923cb48593e4b5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3f540fcaccd84a8ffc157c43748e84fe3d3ed0b1073301ca8eff73bd328ce380",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10rc2-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3f540fcaccd84a8ffc157c43748e84fe3d3ed0b1073301ca8eff73bd328ce380",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.248"
                    }
                }
            ]
        },
        "1.10rc2-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1dbfd4c8891c7109c54295c0f91870b96739e83461b1163051923cb48593e4b5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2068"
                    }
                }
            ]
        },
        "1.11": {
            "manifests": [
                {
                    "digest": "sha256:e3709462b748f8adf8378a7253b3a38d3d3410e3ef1f0bacdae685077051dc85",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:6416a7d4f4af4e3206bd21a16f9a016a783fdefa3b2ddb6397ba8be88de1e494",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:bda5ec13987ac58cd4263aaef2fd6bedb473e2e295c31715a367970917dffbf7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:ea597a57cfccdeef7848c7cc305a167094b6c18bd3601aef1236d074b37d8d87",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:0165231e7b6eeb8a5ec886c6b582626ff5f5d18d9941a7bb5b94b9443082ab04",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:814309020638d6d3a2e1b0b733f10347005514f8899916bea49df95f3a0d654b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:cdb2c594a968289dcb9b7f6d3ec31820f9c9dc5687dd62ce8f34e923bd39a2b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3144"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:3a208f77d2d7e4cd34971d97e816c1f4cace2079f1960f8e102ef66920af8bb2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:c4aef34d0c1c454de32d96fae890a16343f59ea1ad3d61824b3727146cffdf6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-alpine": {
            "manifests": [
                {
                    "digest": "sha256:b9348ce32a872d6097263dcba1fdb4ebc8065073c09a569a4c75fbf1210bb308",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:cdc1f50b4b2e347dac27de354b4a5c94993de056d5250f844a0a7ff278f02252",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:12262791a01346e450b9987351c6df63d56b3b0eb3c9d8b6ef6db9ff012ae05e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:1f983bc2644bda25ae08e2f14271e7896f07cd0d33c4a727f04ffef5ff8544fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:19ddce694b5ef7381dbf66d3bfa2dce40b1997d2b1d16a27f141d4ed72a416ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:223506bc30c3d3edf2d8e015caae94b5ec336a25fdee10ce785f2ee7cc0d8466",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:640931f5d320951a75566455aeb5a6b7380484f2503cd45c1f500dc455b2002c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-alpine3.10": {
            "manifests": [
                {
                    "digest": "sha256:b9348ce32a872d6097263dcba1fdb4ebc8065073c09a569a4c75fbf1210bb308",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:cdc1f50b4b2e347dac27de354b4a5c94993de056d5250f844a0a7ff278f02252",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:12262791a01346e450b9987351c6df63d56b3b0eb3c9d8b6ef6db9ff012ae05e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:1f983bc2644bda25ae08e2f14271e7896f07cd0d33c4a727f04ffef5ff8544fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:19ddce694b5ef7381dbf66d3bfa2dce40b1997d2b1d16a27f141d4ed72a416ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:223506bc30c3d3edf2d8e015caae94b5ec336a25fdee10ce785f2ee7cc0d8466",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:640931f5d320951a75566455aeb5a6b7380484f2503cd45c1f500dc455b2002c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:6de33d5de11bc3dcd68127d11e4832e5dbaf8db8b4609dfac8e5ca32a79e50f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c5aa8cabf5d8302cd01631f68407cd2f28a5c65c4295cda72c04efb172894f71",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e467992be8cfac56148b7b65251f391c1a4d15b6e78977cb8358c4e06cd33cf2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7ac5c7c181c49d49ecd3fcad959477b7ef1b13c42e05f2b456a7a0b0b884571c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4a571f0f5d28092ad77256adb46cfdd497daa602a0cd171da4f16d016f7f2ae7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4740b5793070e6c11f6e53156a0c8ad63ebf7e6092191f175ed90732a7ff8e83",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11-alpine3.8": {
            "manifests": [
                {
                    "digest": "sha256:61b76125c13fc8d3eb9714005380e8930953cd6b944253d029afcaf9d1cc9b51",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:a6804775f986b35bd5ec1ba1f2de4c8e416a085d5ea03a8f706ce75cb9f78892",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:474573c62b46a5f81a43daa31800b5cee1dbb1c1f9a3d03a123dee3b474eac0d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:504dc09b7541322bba2216af84dce64f3ace95ada4b189cf5dfa2c583cfbd3eb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:02fa4858bbbe83863ffa2307c7104d09c5194c75f4ec42def200472a14866e01",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:dbc4d392d1d49875422415007b2f71aa0bda15b50364dddf2d7b9340582d43be",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:063aaf0ef9d8ffc692830a06b4b60d6525bd9f08c4f6cf2af56d839418558bce",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:72a40dfde141189fff2ab8f53d2b058b8783bdec3055005249e862367c6f875b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:100cc2d55933db60d21afc40ec4b108bc2d8d7c715b1bd48f327a12fb2623a4e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b7a3359210c378707204226e41a2bb8d70f7cc106aa26cbabe6cafdb69274da7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:14ce308fd610c63259ad1fcbe7029e2a2f470822d366ab7952eab8a4217ed874",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:c0953c0fee96a5571df8c421271bf7eec5e05072683262604d09f6c632a90427",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ea9c2803cd5bedd8dad24d20b014c1d4365384f64fa7af8f004022aecb3fcc73",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-buster": {
            "manifests": [
                {
                    "digest": "sha256:e3709462b748f8adf8378a7253b3a38d3d3410e3ef1f0bacdae685077051dc85",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:6416a7d4f4af4e3206bd21a16f9a016a783fdefa3b2ddb6397ba8be88de1e494",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:bda5ec13987ac58cd4263aaef2fd6bedb473e2e295c31715a367970917dffbf7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:ea597a57cfccdeef7848c7cc305a167094b6c18bd3601aef1236d074b37d8d87",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:0165231e7b6eeb8a5ec886c6b582626ff5f5d18d9941a7bb5b94b9443082ab04",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:814309020638d6d3a2e1b0b733f10347005514f8899916bea49df95f3a0d654b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1794
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-nanoserver": {
            "manifests": [
                {
                    "digest": "sha256:fd4123770f898d6716d35c23bd5862b743409218df19c0ec2ce8051caf3dbfcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 2816
                },
                {
                    "digest": "sha256:aff4869842a7da5b7bf3c6e71f1c688b45202f26b23d62a3d8f31541bb413ba7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 2505
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-nanoserver-1803": {
            "manifests": [
                {
                    "digest": "sha256:fd4123770f898d6716d35c23bd5862b743409218df19c0ec2ce8051caf3dbfcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 2816
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-nanoserver-1809": {
            "manifests": [
                {
                    "digest": "sha256:aff4869842a7da5b7bf3c6e71f1c688b45202f26b23d62a3d8f31541bb413ba7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 2505
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:a4dc85d39e4be66ff9c281797661a836ff40e3841f9ad99e58dd41fa9b6e2f1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:36712b65e4a64f25c8a1a00e0a07ab39922a5b0c1bb9d3b22c0f842c428a89f4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c6e0752bada38109ec7eaf471187b1cad2c4f4941840a93738da727e23361b3b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:70f128a68499d73eab3c7db103befbe4544c6b464b869a02891f80dd39ec2f6f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a8e5b42f914caad4792a52aefed63861b22654b1bc76f11fb588c401b3e8aae3",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1d60d2e32b1b1a726b38f5a34788d974f251b13556fc45c0adacd3c24b4a3b1d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8cde76aa081642db006870a8ab26474b5172bd2303aa0ad7c18f5ad4388bb735",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:af9294201e2313eaeb7da5d2f8fbd5e8a6667939e9ddbee0bc5cd5fc1ed1b2bf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0f2a118886e0d7bde516a414c7e3606ef567c2f84ac28401a501ae16eb3c4108",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e0b5eb452e764ee7e8d2b5ab6d71c86a1bba52eb0a389e70083b258fbaa5b249",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9d02ec9d1b50050ff04947d6583bb596f24976b61670efee3bd383baef8b7e18",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:86131f3610e50f882d39f6fd53704c64a9ad8c0ab1352449f3142c0068f18ca4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:761187a6437a29467ff0ba5ad9aee59c5731c588ecefd6daba542fbb711bcafe",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:258fff15cdebf0b576b5f496b867d1b78696b9cd349a1ad8d0dda62bc4f1ec63",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:014077f36f3312e3f9cdad35c4e2df8e3dc143cf105c1b8486fd6ab6095527f8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8c9e6768a4992919792b6fc1b6613ec2a29e1a8b37d983b54bfca79e7c064ea6",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11-rc-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ae7630762274c7ac8799b0bda68652ded9dc34282e033e7639bbbf122829c592",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:96c94b62769baca27ee38154d9e4c81bb6a30ae03e6ac75df13c3b2354b541ef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:2cb398fc2d2ac970dee029b3eb20543b2b72d80ad78bb6c26819985e35fc7623",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c3987d6ef3c2a469f59e28fa613654bb951a40683f39031b5e5bda0462e36976",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:dfbdd6798406e76c5043c4f96dd72e2d0b3d5bb08d898dd52208e5a2a34d94f8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c75f98dcdf8ea1275b40b698ee0b80c0f2afa7776b1ba6b8c015f8564b61f498",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11-rc-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9d02ec9d1b50050ff04947d6583bb596f24976b61670efee3bd383baef8b7e18",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:86131f3610e50f882d39f6fd53704c64a9ad8c0ab1352449f3142c0068f18ca4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:761187a6437a29467ff0ba5ad9aee59c5731c588ecefd6daba542fbb711bcafe",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:258fff15cdebf0b576b5f496b867d1b78696b9cd349a1ad8d0dda62bc4f1ec63",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:014077f36f3312e3f9cdad35c4e2df8e3dc143cf105c1b8486fd6ab6095527f8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8c9e6768a4992919792b6fc1b6613ec2a29e1a8b37d983b54bfca79e7c064ea6",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11-rc-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:30345005caffa76c118bbe90a7afa13d7818c20b079c7bb95c2fea11ff622dd2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11-rc-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:30345005caffa76c118bbe90a7afa13d7818c20b079c7bb95c2fea11ff622dd2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:36712b65e4a64f25c8a1a00e0a07ab39922a5b0c1bb9d3b22c0f842c428a89f4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c6e0752bada38109ec7eaf471187b1cad2c4f4941840a93738da727e23361b3b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:70f128a68499d73eab3c7db103befbe4544c6b464b869a02891f80dd39ec2f6f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a8e5b42f914caad4792a52aefed63861b22654b1bc76f11fb588c401b3e8aae3",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1d60d2e32b1b1a726b38f5a34788d974f251b13556fc45c0adacd3c24b4a3b1d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8cde76aa081642db006870a8ab26474b5172bd2303aa0ad7c18f5ad4388bb735",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11-rc-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:af9294201e2313eaeb7da5d2f8fbd5e8a6667939e9ddbee0bc5cd5fc1ed1b2bf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0f2a118886e0d7bde516a414c7e3606ef567c2f84ac28401a501ae16eb3c4108",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e0b5eb452e764ee7e8d2b5ab6d71c86a1bba52eb0a389e70083b258fbaa5b249",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11-rc-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0f2a118886e0d7bde516a414c7e3606ef567c2f84ac28401a501ae16eb3c4108",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                }
            ]
        },
        "1.11-rc-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e0b5eb452e764ee7e8d2b5ab6d71c86a1bba52eb0a389e70083b258fbaa5b249",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11-rc-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:af9294201e2313eaeb7da5d2f8fbd5e8a6667939e9ddbee0bc5cd5fc1ed1b2bf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11-stretch": {
            "manifests": [
                {
                    "digest": "sha256:937c594413e17071786b7be003bfec95854cebb96d8f387739a6ee04b0b0dc70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:306b226613b1206de6d893756b456c06031437d7421c6252256a6042ae57477a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:c04e50cd402f1cf18520204d0f5272cdfdb150f1b995409263e8e01347269c02",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:7df1b777d264846713283772b3269e337bed188aa83ee888b787d11462257eb6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:f47c2aabd55c4abcb8b9ea72327b4abaf924e708494e460c7d1c53f02b0edb67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:e8393ba148bd11172c1bff026c6f0d5c498dfa5d3cfc5971844c213c605e5448",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-windowsservercore": {
            "manifests": [
                {
                    "digest": "sha256:cdb2c594a968289dcb9b7f6d3ec31820f9c9dc5687dd62ce8f34e923bd39a2b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3144"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:3a208f77d2d7e4cd34971d97e816c1f4cace2079f1960f8e102ef66920af8bb2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:c4aef34d0c1c454de32d96fae890a16343f59ea1ad3d61824b3727146cffdf6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0e704b3f968b5fd9e2dfc54cadce1eac147fc7f08647ca98ea2909fe52095c3c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1087"
                    }
                }
            ]
        },
        "1.11-windowsservercore-1803": {
            "manifests": [
                {
                    "digest": "sha256:3a208f77d2d7e4cd34971d97e816c1f4cace2079f1960f8e102ef66920af8bb2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 3244
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-windowsservercore-1809": {
            "manifests": [
                {
                    "digest": "sha256:c4aef34d0c1c454de32d96fae890a16343f59ea1ad3d61824b3727146cffdf6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11-windowsservercore-ltsc2016": {
            "manifests": [
                {
                    "digest": "sha256:cdb2c594a968289dcb9b7f6d3ec31820f9c9dc5687dd62ce8f34e923bd39a2b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3144"
                    },
                    "size": 3246
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:438f00ef671afcff4e23acbbbf22d826d105c063f25a84fab80a2fb400f0376d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:29eca90fc5a7f7e15e6f2a2caf574a740f32ca2ce0ee4d5b7a9615e08760c0e7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1fca9de167055fae85a30d95b5b582aec19f932fb1f554d950a5c40b4809b456",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:bcab9a066886b6d7b3bb4949d74666e6e9cbc320392f05ecbe1a6167465c64bc",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:3d7a6e92ef0496dcebf4cdc12e53afcaa7201e5303ba427f08fe28202dc28856",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1bcd04e0f943c461c06f6856903f2c3f6261cade5b0285cda9a1d1ef66b49db4",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:e1dd096ecc1e89b9ed26caf440c201ea3dfec4631f3f9682e8e51bb0b202185c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:670d871bf44ea20650b103aeb7de1cd31c1362805448b5407b3f44d7d875cae9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:9c881428a050e700da1685f0a90042ddba5103e8d1dbf95a78816ec29da1fde3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:581608ad5ba57091a5c4ba8ee3a52b67e011e9115fd591556fdc3c28ee93121b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:5075eaeddb72d61e65e135e8669d254fa297a0d86169331fcac9978306249f0b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:74f51e15051e945dd23aec1f7f59747443963ce9eefe215bec8718f36e1c22ee",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f56ad81e322656724801fa3f31bee44b800487bf6e0aedf7473e19f52c78bd14",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:94142acf2a102381db783d448d7cb17691afbc5748b33fd3abe31b087327f871",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:35f632e1d96a61dc86329b93e87767ed685019577ad0b8bc0e154c0e6c3dcbb1",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.0-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:20ff86a0e8c415ec9fc28ba87232f3d57c4f0e12de2f90caf760c1413e1b4a36",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c2396eb5f9372e6fd5950bb06a69ccc65a488db48d98fddc04300133530b7d76",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:fb8cb5df4f26407119cc048980cddbe2ba6cd7c1283bf78b6cdc2d2a15056fe1",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:1ea7c16a22540bec84cb4a4ea582fa175f8372588ba2aabbbe5e284ce2b47510",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a27ffb9e2ae4f0bb95fb260ae7cdc9520854d12ca8069069afde571688fffe2b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:9dcc6973a996a67ace77a751f33758e3a1077907be0d4cec9f10a21c8e3a06f5",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.0-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:581608ad5ba57091a5c4ba8ee3a52b67e011e9115fd591556fdc3c28ee93121b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:5075eaeddb72d61e65e135e8669d254fa297a0d86169331fcac9978306249f0b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:74f51e15051e945dd23aec1f7f59747443963ce9eefe215bec8718f36e1c22ee",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f56ad81e322656724801fa3f31bee44b800487bf6e0aedf7473e19f52c78bd14",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:94142acf2a102381db783d448d7cb17691afbc5748b33fd3abe31b087327f871",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:35f632e1d96a61dc86329b93e87767ed685019577ad0b8bc0e154c0e6c3dcbb1",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.0-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:58d48271516ad1852a70d8f856ed86ca7e8fc00f5ab1b35c21e35d36beb72706",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11.0-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:58d48271516ad1852a70d8f856ed86ca7e8fc00f5ab1b35c21e35d36beb72706",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:438f00ef671afcff4e23acbbbf22d826d105c063f25a84fab80a2fb400f0376d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:29eca90fc5a7f7e15e6f2a2caf574a740f32ca2ce0ee4d5b7a9615e08760c0e7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1fca9de167055fae85a30d95b5b582aec19f932fb1f554d950a5c40b4809b456",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:bcab9a066886b6d7b3bb4949d74666e6e9cbc320392f05ecbe1a6167465c64bc",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:3d7a6e92ef0496dcebf4cdc12e53afcaa7201e5303ba427f08fe28202dc28856",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1bcd04e0f943c461c06f6856903f2c3f6261cade5b0285cda9a1d1ef66b49db4",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.0-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:e1dd096ecc1e89b9ed26caf440c201ea3dfec4631f3f9682e8e51bb0b202185c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:670d871bf44ea20650b103aeb7de1cd31c1362805448b5407b3f44d7d875cae9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:9c881428a050e700da1685f0a90042ddba5103e8d1dbf95a78816ec29da1fde3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11.0-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:670d871bf44ea20650b103aeb7de1cd31c1362805448b5407b3f44d7d875cae9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                }
            ]
        },
        "1.11.0-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:9c881428a050e700da1685f0a90042ddba5103e8d1dbf95a78816ec29da1fde3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11.0-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:e1dd096ecc1e89b9ed26caf440c201ea3dfec4631f3f9682e8e51bb0b202185c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:df8db4a3a7dee9782e0f1bdcc9d676bc2de0dc1d2dc2952d9b9b3718445b1455",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:faf19ab885f9d0779bbbd615eee610c5aedfdd203ac5fceefbd5fc8afd73a2ac",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:311e6ce0d12e300c6529a64cc3ad14692fe413d864082bfd81346eee949ced35",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7318908975c42670e6ebecb58ecb1729642ca331aa57904888eb1a0c7d5949b7",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:5947b86ec0492e7bf3d017daf1243472a4e78fbca3a9e57d3313a4367c1d26a2",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da7bb1aa2efe46ffaa33b4da932e8038101fb3d93aa7350de9aa29f4fffb9318",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:57e9ef57989766bf736f28c746e30a892a503a81a2053affc1dff185c7be5cbc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:662c92894844017d3953f530bb179af71fbf2210bc33c053254b7c8bafcc6e4a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.665"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:c251086c392ed43eb8e1277412de4ab674efd72cb47d93da18539be70639f210",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.285"
                    }
                }
            ]
        },
        "1.11.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:1d9eb297527b4a67366f25219175217c11aff5901c44dc3349d3f3405585f951",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:cf95f272271f7b32d3e1331ce3dc8202291892aeff4594e60f768dab80cb5ae9",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:abfe72b1b6cbf662b54c7318ace4d989a56cf6c1867eec1ea895f58de3bed7f9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6d9d1665794a7bbdebef2081f0aa457d831dee38638645bd8117c4090f828e89",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:0323b80ed5e19631aa77ab4e9c8d69ab1ccd52b56016b96a948cf05288bb4e35",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:37059828c4c5a50edcf3500acd68762927d44bff1a040c32d8def03159e89580",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:0d487bc069bdd9977d416711b2cd9997c91bb03b2b9a0780b54b48f603bca9c8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:3e7eebdc308b40a72c9ed7d1b6f93eeca0c9506ed3dcec7f8f8d527573b70e32",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:d0a2e482465a726ada65f87543ce3f79da190a639f1983b287035375aa92dca2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8748d4eeb615a53f1f253d5afc5647a3d5a312cf7b08f09b69bf1007888f8a4e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:0dc7c7599bb3f7e5acb83898a1eefbeedace5a15819ce6d6752fa4acccc03c62",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e3d1e948cf2afae1e52b29e8586ce8f039eb4c2259a293a00792141ff97bef65",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:1d9eb297527b4a67366f25219175217c11aff5901c44dc3349d3f3405585f951",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:cf95f272271f7b32d3e1331ce3dc8202291892aeff4594e60f768dab80cb5ae9",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:abfe72b1b6cbf662b54c7318ace4d989a56cf6c1867eec1ea895f58de3bed7f9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6d9d1665794a7bbdebef2081f0aa457d831dee38638645bd8117c4090f828e89",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:0323b80ed5e19631aa77ab4e9c8d69ab1ccd52b56016b96a948cf05288bb4e35",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:37059828c4c5a50edcf3500acd68762927d44bff1a040c32d8def03159e89580",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.1-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:9ca865f2b3cc262648ff0d5a0b979292cbed914dd8a312c304b96021b3e250fc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                }
            ]
        },
        "1.11.1-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:9ca865f2b3cc262648ff0d5a0b979292cbed914dd8a312c304b96021b3e250fc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                }
            ]
        },
        "1.11.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:df8db4a3a7dee9782e0f1bdcc9d676bc2de0dc1d2dc2952d9b9b3718445b1455",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:faf19ab885f9d0779bbbd615eee610c5aedfdd203ac5fceefbd5fc8afd73a2ac",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:311e6ce0d12e300c6529a64cc3ad14692fe413d864082bfd81346eee949ced35",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7318908975c42670e6ebecb58ecb1729642ca331aa57904888eb1a0c7d5949b7",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:5947b86ec0492e7bf3d017daf1243472a4e78fbca3a9e57d3313a4367c1d26a2",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da7bb1aa2efe46ffaa33b4da932e8038101fb3d93aa7350de9aa29f4fffb9318",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.1-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:57e9ef57989766bf736f28c746e30a892a503a81a2053affc1dff185c7be5cbc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:662c92894844017d3953f530bb179af71fbf2210bc33c053254b7c8bafcc6e4a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.665"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:c251086c392ed43eb8e1277412de4ab674efd72cb47d93da18539be70639f210",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.285"
                    }
                }
            ]
        },
        "1.11.1-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:662c92894844017d3953f530bb179af71fbf2210bc33c053254b7c8bafcc6e4a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.665"
                    }
                }
            ]
        },
        "1.11.1-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:c251086c392ed43eb8e1277412de4ab674efd72cb47d93da18539be70639f210",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.285"
                    }
                }
            ]
        },
        "1.11.1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:57e9ef57989766bf736f28c746e30a892a503a81a2053affc1dff185c7be5cbc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2485"
                    }
                }
            ]
        },
        "1.11.10": {
            "manifests": [
                {
                    "digest": "sha256:e0ac8642c1eb5bd5855657f7e52e169ed3b084f5595be489a2793df6c594c84d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:88f1fbff0b579ec0e5236c7e8a2e65e4d80dfb89da6b441486825714249e38b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:bdac8243f3c1e4878c12062b622ca1134a62185d58533b2b70c75172ca0e2c72",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:2cea40bcd38b5337aa4a225ccd93e61d79882f6085fa488e149f2aa5381b8104",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:4894c3ffd0c7199cb54cddadeba42321f6b2d7cac474fe479c1e4e27f65b5b1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:c3201336b78c3ccc0f09347c7369093a68e313853831a2a515a43530ac380642",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:ecc60e865c87553177cc587a3f9427d4f7c823356029c10b91f4f11342c09809",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3025"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:81120848352b7c93d5884c2736fa243881abba1ffb0e6cbc06ff52378a933a0e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.829"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:611879883542598c91cb85d935f7fb5e08f963922d17e200d878fc3a71c15034",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.557"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10-alpine": {
            "manifests": [
                {
                    "digest": "sha256:490c19b97acedb13458022fe3463a6340b36525bd35f73c3e1c5bbba11bee507",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:db56eafbf4d193eaa56da7fb22287889b909041d7349306d23f0b61f11c5ac5c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:f5a3183f76aff49fb7a07d7200a1de5b1c7da307b7454bcb21c82131c2c4f1be",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:eb0893ad6ec0fb37ea703472a8a789b4999efb62547181fe4751a23316209d66",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:565dd83a3351cb870ba04e39eed5a981e3441b8fda413ad7f96c2e54f114f82c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:55b75a75c71669b2283fc0f14434f65192accc2df21fa8448b409ed8f1f73b8d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:c47016fe4df87002f482cf9cf3ab88241b0036c9383d771bc7393bc7d3285e59",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10-alpine3.8": {
            "manifests": [
                {
                    "digest": "sha256:7bc88cbb9d6653b933815a7ce53ad62ef83f98295192bc61ad3372c1a7a85277",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:d7044787fb4ba5cf8780ad49e28d630758f62e40a479ee2ee8a26acdccf93cd1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:87192129c5095abf405e5001f4c3b5d0ddeff336eacff8dc1653899b05251ea3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:72c762ed47a9d1eadae8f4c88eab1ed3f25f0965d1ea6aba761c73a8e5085e24",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:a4d868834475771cf78e736222d584f766e11ae83f25bde7881e037d5265d2d3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b2c5f5a74b02f260aa92d0c62c13b37eb234e3f22d9420cc643162019c7df668",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:490c19b97acedb13458022fe3463a6340b36525bd35f73c3e1c5bbba11bee507",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:db56eafbf4d193eaa56da7fb22287889b909041d7349306d23f0b61f11c5ac5c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:f5a3183f76aff49fb7a07d7200a1de5b1c7da307b7454bcb21c82131c2c4f1be",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:eb0893ad6ec0fb37ea703472a8a789b4999efb62547181fe4751a23316209d66",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:565dd83a3351cb870ba04e39eed5a981e3441b8fda413ad7f96c2e54f114f82c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:55b75a75c71669b2283fc0f14434f65192accc2df21fa8448b409ed8f1f73b8d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:c47016fe4df87002f482cf9cf3ab88241b0036c9383d771bc7393bc7d3285e59",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10-stretch": {
            "manifests": [
                {
                    "digest": "sha256:e0ac8642c1eb5bd5855657f7e52e169ed3b084f5595be489a2793df6c594c84d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:88f1fbff0b579ec0e5236c7e8a2e65e4d80dfb89da6b441486825714249e38b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:bdac8243f3c1e4878c12062b622ca1134a62185d58533b2b70c75172ca0e2c72",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:2cea40bcd38b5337aa4a225ccd93e61d79882f6085fa488e149f2aa5381b8104",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:4894c3ffd0c7199cb54cddadeba42321f6b2d7cac474fe479c1e4e27f65b5b1c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:c3201336b78c3ccc0f09347c7369093a68e313853831a2a515a43530ac380642",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10-windowsservercore": {
            "manifests": [
                {
                    "digest": "sha256:ecc60e865c87553177cc587a3f9427d4f7c823356029c10b91f4f11342c09809",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3025"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:81120848352b7c93d5884c2736fa243881abba1ffb0e6cbc06ff52378a933a0e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.829"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:611879883542598c91cb85d935f7fb5e08f963922d17e200d878fc3a71c15034",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.557"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10-windowsservercore-1803": {
            "manifests": [
                {
                    "digest": "sha256:81120848352b7c93d5884c2736fa243881abba1ffb0e6cbc06ff52378a933a0e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.829"
                    },
                    "size": 3244
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10-windowsservercore-1809": {
            "manifests": [
                {
                    "digest": "sha256:611879883542598c91cb85d935f7fb5e08f963922d17e200d878fc3a71c15034",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.557"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.10-windowsservercore-ltsc2016": {
            "manifests": [
                {
                    "digest": "sha256:ecc60e865c87553177cc587a3f9427d4f7c823356029c10b91f4f11342c09809",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3025"
                    },
                    "size": 3246
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11": {
            "manifests": [
                {
                    "digest": "sha256:0b28b5dfefe2ce8a4ea235d98abffac6db697781af22e94a29474d6a60283baf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:4f4e3243c212fd15840a96329452734615063fe4236e90c048d1d74979549564",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:5be85f2c2cb79d36916b9b265c5913daa9c25774ac2ef894cbde8d846d8f69a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:48c2400a4e3bb6be8b71f2000eaf56e2a13460cd61ed94f92d8f973d489d659b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:a766f94468c1084a820226efe382ac960bffa4f926e6337d2f3122a0a967995d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:8dd7cac7b4bf46679d12a7264d32fddf3bf2ef2fbea056db1278938a6d693d02",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:2ead8ca59f4432b9391abcf58940176a1b39cbfaa1a937630d0fbec0eee42ae6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3025"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:352be157a906c9a6dcf7bb36a84d038d59a1e55363dcc0eb69b3a42f56d1a716",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.829"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:a0c3c82593ba44408dff39225ef2c796addf73cee14f0ba1b738c0edea186f49",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.557"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-alpine": {
            "manifests": [
                {
                    "digest": "sha256:76fc37f7d2d9fcb5b78566a23e5bdb7e7d167f9d42522b9ed3b6c5bbb5bc4654",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:abf9491cbfce3f7fac1f74cf440d523944f706780e2f56dda9bad8a8e97ed6f0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b8ef79c0d76b9bb0291a24db888738b2ade214f7378984944c362988603ed2d3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9bb65f975a0beed207543f7205e9f1b9c4ebca2440b3c9e0a40e7ee7341b31da",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3079869f24c00a858cb90fde3dea3fe3ee4f0beb39d92d3bf66611fc29e7c11c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:913a059b71c72e7c7b58da239532208b505b52b4a8d63a29b58263b91fa794fa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:2d82e8ee636ad7680f7992f1098931b58d0a6c085545d07ae96ce11150d2fe45",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-alpine3.10": {
            "manifests": [
                {
                    "digest": "sha256:76fc37f7d2d9fcb5b78566a23e5bdb7e7d167f9d42522b9ed3b6c5bbb5bc4654",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:abf9491cbfce3f7fac1f74cf440d523944f706780e2f56dda9bad8a8e97ed6f0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b8ef79c0d76b9bb0291a24db888738b2ade214f7378984944c362988603ed2d3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9bb65f975a0beed207543f7205e9f1b9c4ebca2440b3c9e0a40e7ee7341b31da",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3079869f24c00a858cb90fde3dea3fe3ee4f0beb39d92d3bf66611fc29e7c11c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:913a059b71c72e7c7b58da239532208b505b52b4a8d63a29b58263b91fa794fa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:2d82e8ee636ad7680f7992f1098931b58d0a6c085545d07ae96ce11150d2fe45",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-alpine3.8": {
            "manifests": [
                {
                    "digest": "sha256:61b76125c13fc8d3eb9714005380e8930953cd6b944253d029afcaf9d1cc9b51",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:a6804775f986b35bd5ec1ba1f2de4c8e416a085d5ea03a8f706ce75cb9f78892",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:474573c62b46a5f81a43daa31800b5cee1dbb1c1f9a3d03a123dee3b474eac0d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:504dc09b7541322bba2216af84dce64f3ace95ada4b189cf5dfa2c583cfbd3eb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:02fa4858bbbe83863ffa2307c7104d09c5194c75f4ec42def200472a14866e01",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:dbc4d392d1d49875422415007b2f71aa0bda15b50364dddf2d7b9340582d43be",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:10852bb4ca27648e042b74cb89c3ba849f856a54575c3a12d9e43beb9c4d0978",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9c6e0d0e924e91d50e564788bc314b0e0d0b96ad3966fd86113de5f0e7fe259c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b7b0762ee4345e62fdada1439bb3f49868bc8e87b92ff5ac3fe41618db2485f9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:d4af725301c2ba2e0effca1adf73db85874e1646b9fa4530bf3a1afdd58f24b6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:bbcefaf3487e03cc9ec044202ed58b529a277be6a7a40b73580d30c1a3a76259",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:6483e52585d091b14be981005dea403d42f389331ccd194a3a4cbbb428e6a4dc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b0113566e38746a12d18f75b8791f43bff7a3b2421724c9333c240bb3246df31",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-stretch": {
            "manifests": [
                {
                    "digest": "sha256:0b28b5dfefe2ce8a4ea235d98abffac6db697781af22e94a29474d6a60283baf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:4f4e3243c212fd15840a96329452734615063fe4236e90c048d1d74979549564",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:5be85f2c2cb79d36916b9b265c5913daa9c25774ac2ef894cbde8d846d8f69a4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:48c2400a4e3bb6be8b71f2000eaf56e2a13460cd61ed94f92d8f973d489d659b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:a766f94468c1084a820226efe382ac960bffa4f926e6337d2f3122a0a967995d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:8dd7cac7b4bf46679d12a7264d32fddf3bf2ef2fbea056db1278938a6d693d02",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-windowsservercore": {
            "manifests": [
                {
                    "digest": "sha256:2ead8ca59f4432b9391abcf58940176a1b39cbfaa1a937630d0fbec0eee42ae6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3025"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:352be157a906c9a6dcf7bb36a84d038d59a1e55363dcc0eb69b3a42f56d1a716",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.829"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:a0c3c82593ba44408dff39225ef2c796addf73cee14f0ba1b738c0edea186f49",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.557"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-windowsservercore-1803": {
            "manifests": [
                {
                    "digest": "sha256:352be157a906c9a6dcf7bb36a84d038d59a1e55363dcc0eb69b3a42f56d1a716",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.829"
                    },
                    "size": 3244
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-windowsservercore-1809": {
            "manifests": [
                {
                    "digest": "sha256:a0c3c82593ba44408dff39225ef2c796addf73cee14f0ba1b738c0edea186f49",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.557"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.11-windowsservercore-ltsc2016": {
            "manifests": [
                {
                    "digest": "sha256:2ead8ca59f4432b9391abcf58940176a1b39cbfaa1a937630d0fbec0eee42ae6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3025"
                    },
                    "size": 3246
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12": {
            "manifests": [
                {
                    "digest": "sha256:88000a7218a68a87368cf6b0deee128d505ab0d73159e8c5f9456682efd1f752",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:6c26b8aef4667728025f987a96366dffbfc412ec214b8eddd1684cc38debc0f2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:36445ba808b1ec0fd93483f99f9daf8e52c1c2779cef7afc15eb0c3e89997394",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:daba4bc1c84bd23276eecb3c56b54197dc809f3ef36f701ebddb7b4e22e8f50b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:23964e00866fe6bc117c48a0411194b0af6160800653e02f352d913da133c04c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:c5e2678942b5f46d5137f6b2e76197f6b3d90374ace067022e21d4ed6e4c4a8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:d2345b57439733da900cce69c1c5572f2db5959e22bb200da4717be19de13b16",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3085"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:122a94485def0fec31ff8fecf2975d7c25602c4dacf1f0e34077736063129c56",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.885"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:30ef26c02fbec1d6f8cc1af84930faa2206229c62fcf3954eeb5a89c869ec4d9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.615"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-alpine": {
            "manifests": [
                {
                    "digest": "sha256:2edee773ecab4eebb906947fe54e6cf0a6129d0ccffdc8c2f7db7a011d6d47dc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3374401a6eb40d5a3575ed79abb6ebeef3ab7d27beb2fb4d37be51ea5e2aeef4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:951ae74be03c39e387e8839d55532792065427f8cde65797cb4118721e253426",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3a6c1462945ba2220ebb172e056e4e53af905762ae28c31607b5812cdf41dc86",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:4ff83ae24714164f071b9742522e0d9babb0c8f3eabf42d397781e76593b32b5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:04ab941d63ecfbe2221908f1db50d9ac2bb255e616c9fde64930a5b2710a7796",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:4030bfdfd54bd097a318a7373cbe9a8a240067d95383cf5fb2e3c0a0b8b7df26",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-alpine3.10": {
            "manifests": [
                {
                    "digest": "sha256:2edee773ecab4eebb906947fe54e6cf0a6129d0ccffdc8c2f7db7a011d6d47dc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3374401a6eb40d5a3575ed79abb6ebeef3ab7d27beb2fb4d37be51ea5e2aeef4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:951ae74be03c39e387e8839d55532792065427f8cde65797cb4118721e253426",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:3a6c1462945ba2220ebb172e056e4e53af905762ae28c31607b5812cdf41dc86",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:4ff83ae24714164f071b9742522e0d9babb0c8f3eabf42d397781e76593b32b5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:04ab941d63ecfbe2221908f1db50d9ac2bb255e616c9fde64930a5b2710a7796",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:4030bfdfd54bd097a318a7373cbe9a8a240067d95383cf5fb2e3c0a0b8b7df26",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:e1aa1061fdae2649df6c438d98c67ccec9bf6d4b8b1ab9ce647883a2483cebce",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:fa8566dd82894faeea905957a3094640f631338e2ed57a04464e6363923147f7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:971bf4076ade2ffa9488aeea5e7b1ccb95f82ff63ed0e2bff9b13cfaf98bd955",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:e3fd3392527e37b9c1e545e58693161ef849838d5bff16a2a34c32a9399caf3f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:15f30d5f6245a2cbb1a3572781d712ec24714b056c8dbf8a0f225d71945b4fc9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:42d29a1f796a1db4d7cd433c531f08502d99d5a19f27338b4a7e2704b4be336a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ef6e1f3938f4ce7c56f07c2b3eb462b7854ea2d8141aa67708c54f5f6dff27ea",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-buster": {
            "manifests": [
                {
                    "digest": "sha256:88000a7218a68a87368cf6b0deee128d505ab0d73159e8c5f9456682efd1f752",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:6c26b8aef4667728025f987a96366dffbfc412ec214b8eddd1684cc38debc0f2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:36445ba808b1ec0fd93483f99f9daf8e52c1c2779cef7afc15eb0c3e89997394",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:daba4bc1c84bd23276eecb3c56b54197dc809f3ef36f701ebddb7b4e22e8f50b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:23964e00866fe6bc117c48a0411194b0af6160800653e02f352d913da133c04c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:c5e2678942b5f46d5137f6b2e76197f6b3d90374ace067022e21d4ed6e4c4a8a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1794
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-nanoserver": {
            "manifests": [
                {
                    "digest": "sha256:65a5b4c8081584f72050c78c58d4891f60d9284d9bfaed529e48acac49a84445",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.885"
                    },
                    "size": 2816
                },
                {
                    "digest": "sha256:86f1fc03ad75d35a01969b3d86921620f30868b544fd35e423c091522452a895",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.615"
                    },
                    "size": 2505
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-nanoserver-1803": {
            "manifests": [
                {
                    "digest": "sha256:65a5b4c8081584f72050c78c58d4891f60d9284d9bfaed529e48acac49a84445",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.885"
                    },
                    "size": 2816
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-nanoserver-1809": {
            "manifests": [
                {
                    "digest": "sha256:86f1fc03ad75d35a01969b3d86921620f30868b544fd35e423c091522452a895",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.615"
                    },
                    "size": 2505
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-stretch": {
            "manifests": [
                {
                    "digest": "sha256:0d0bd24d5cbebb0a5956e14ff2fa01670a8bca1c6dce2a484d6ed5d566b12b43",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:7bc0823b9d50ae0481c514b666ea5bc9bd4593ef40da5ed55d0b9faeca387c74",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:9a78ef8fdc2d9b7dd5d47d1ec930da2e62268e0c3ec63e3041b9b7696d944570",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:9463e448880289ea984b6a85a621b9d6f5bab6e7965d1db4ce0744bbc8d6801d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:c352fca7eaee820f70541be81100869ce98023257aa1ef76a31983464dfe5387",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:5239de8c2acf1097ef2143e8cb20f010f3c49f16130d89002941e1904787e982",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-windowsservercore": {
            "manifests": [
                {
                    "digest": "sha256:d2345b57439733da900cce69c1c5572f2db5959e22bb200da4717be19de13b16",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3085"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:122a94485def0fec31ff8fecf2975d7c25602c4dacf1f0e34077736063129c56",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.885"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:30ef26c02fbec1d6f8cc1af84930faa2206229c62fcf3954eeb5a89c869ec4d9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.615"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-windowsservercore-1803": {
            "manifests": [
                {
                    "digest": "sha256:122a94485def0fec31ff8fecf2975d7c25602c4dacf1f0e34077736063129c56",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.885"
                    },
                    "size": 3244
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-windowsservercore-1809": {
            "manifests": [
                {
                    "digest": "sha256:30ef26c02fbec1d6f8cc1af84930faa2206229c62fcf3954eeb5a89c869ec4d9",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.615"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.12-windowsservercore-ltsc2016": {
            "manifests": [
                {
                    "digest": "sha256:d2345b57439733da900cce69c1c5572f2db5959e22bb200da4717be19de13b16",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3085"
                    },
                    "size": 3246
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13": {
            "manifests": [
                {
                    "digest": "sha256:e3709462b748f8adf8378a7253b3a38d3d3410e3ef1f0bacdae685077051dc85",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:6416a7d4f4af4e3206bd21a16f9a016a783fdefa3b2ddb6397ba8be88de1e494",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:bda5ec13987ac58cd4263aaef2fd6bedb473e2e295c31715a367970917dffbf7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:ea597a57cfccdeef7848c7cc305a167094b6c18bd3601aef1236d074b37d8d87",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:0165231e7b6eeb8a5ec886c6b582626ff5f5d18d9941a7bb5b94b9443082ab04",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:814309020638d6d3a2e1b0b733f10347005514f8899916bea49df95f3a0d654b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:cdb2c594a968289dcb9b7f6d3ec31820f9c9dc5687dd62ce8f34e923bd39a2b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3144"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:3a208f77d2d7e4cd34971d97e816c1f4cace2079f1960f8e102ef66920af8bb2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:c4aef34d0c1c454de32d96fae890a16343f59ea1ad3d61824b3727146cffdf6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-alpine": {
            "manifests": [
                {
                    "digest": "sha256:b9348ce32a872d6097263dcba1fdb4ebc8065073c09a569a4c75fbf1210bb308",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:cdc1f50b4b2e347dac27de354b4a5c94993de056d5250f844a0a7ff278f02252",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:12262791a01346e450b9987351c6df63d56b3b0eb3c9d8b6ef6db9ff012ae05e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:1f983bc2644bda25ae08e2f14271e7896f07cd0d33c4a727f04ffef5ff8544fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:19ddce694b5ef7381dbf66d3bfa2dce40b1997d2b1d16a27f141d4ed72a416ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:223506bc30c3d3edf2d8e015caae94b5ec336a25fdee10ce785f2ee7cc0d8466",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:640931f5d320951a75566455aeb5a6b7380484f2503cd45c1f500dc455b2002c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-alpine3.10": {
            "manifests": [
                {
                    "digest": "sha256:b9348ce32a872d6097263dcba1fdb4ebc8065073c09a569a4c75fbf1210bb308",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:cdc1f50b4b2e347dac27de354b4a5c94993de056d5250f844a0a7ff278f02252",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:12262791a01346e450b9987351c6df63d56b3b0eb3c9d8b6ef6db9ff012ae05e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:1f983bc2644bda25ae08e2f14271e7896f07cd0d33c4a727f04ffef5ff8544fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:19ddce694b5ef7381dbf66d3bfa2dce40b1997d2b1d16a27f141d4ed72a416ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:223506bc30c3d3edf2d8e015caae94b5ec336a25fdee10ce785f2ee7cc0d8466",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:640931f5d320951a75566455aeb5a6b7380484f2503cd45c1f500dc455b2002c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:063aaf0ef9d8ffc692830a06b4b60d6525bd9f08c4f6cf2af56d839418558bce",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:72a40dfde141189fff2ab8f53d2b058b8783bdec3055005249e862367c6f875b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:100cc2d55933db60d21afc40ec4b108bc2d8d7c715b1bd48f327a12fb2623a4e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b7a3359210c378707204226e41a2bb8d70f7cc106aa26cbabe6cafdb69274da7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:14ce308fd610c63259ad1fcbe7029e2a2f470822d366ab7952eab8a4217ed874",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:c0953c0fee96a5571df8c421271bf7eec5e05072683262604d09f6c632a90427",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ea9c2803cd5bedd8dad24d20b014c1d4365384f64fa7af8f004022aecb3fcc73",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-buster": {
            "manifests": [
                {
                    "digest": "sha256:e3709462b748f8adf8378a7253b3a38d3d3410e3ef1f0bacdae685077051dc85",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:6416a7d4f4af4e3206bd21a16f9a016a783fdefa3b2ddb6397ba8be88de1e494",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:bda5ec13987ac58cd4263aaef2fd6bedb473e2e295c31715a367970917dffbf7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:ea597a57cfccdeef7848c7cc305a167094b6c18bd3601aef1236d074b37d8d87",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:0165231e7b6eeb8a5ec886c6b582626ff5f5d18d9941a7bb5b94b9443082ab04",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:814309020638d6d3a2e1b0b733f10347005514f8899916bea49df95f3a0d654b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1794
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-nanoserver": {
            "manifests": [
                {
                    "digest": "sha256:fd4123770f898d6716d35c23bd5862b743409218df19c0ec2ce8051caf3dbfcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 2816
                },
                {
                    "digest": "sha256:aff4869842a7da5b7bf3c6e71f1c688b45202f26b23d62a3d8f31541bb413ba7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 2505
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-nanoserver-1803": {
            "manifests": [
                {
                    "digest": "sha256:fd4123770f898d6716d35c23bd5862b743409218df19c0ec2ce8051caf3dbfcb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 2816
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-nanoserver-1809": {
            "manifests": [
                {
                    "digest": "sha256:aff4869842a7da5b7bf3c6e71f1c688b45202f26b23d62a3d8f31541bb413ba7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 2505
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-stretch": {
            "manifests": [
                {
                    "digest": "sha256:937c594413e17071786b7be003bfec95854cebb96d8f387739a6ee04b0b0dc70",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:306b226613b1206de6d893756b456c06031437d7421c6252256a6042ae57477a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:c04e50cd402f1cf18520204d0f5272cdfdb150f1b995409263e8e01347269c02",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:7df1b777d264846713283772b3269e337bed188aa83ee888b787d11462257eb6",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:f47c2aabd55c4abcb8b9ea72327b4abaf924e708494e460c7d1c53f02b0edb67",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1794
                },
                {
                    "digest": "sha256:e8393ba148bd11172c1bff026c6f0d5c498dfa5d3cfc5971844c213c605e5448",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-windowsservercore": {
            "manifests": [
                {
                    "digest": "sha256:cdb2c594a968289dcb9b7f6d3ec31820f9c9dc5687dd62ce8f34e923bd39a2b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3144"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:3a208f77d2d7e4cd34971d97e816c1f4cace2079f1960f8e102ef66920af8bb2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:c4aef34d0c1c454de32d96fae890a16343f59ea1ad3d61824b3727146cffdf6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-windowsservercore-1803": {
            "manifests": [
                {
                    "digest": "sha256:3a208f77d2d7e4cd34971d97e816c1f4cace2079f1960f8e102ef66920af8bb2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.950"
                    },
                    "size": 3244
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-windowsservercore-1809": {
            "manifests": [
                {
                    "digest": "sha256:c4aef34d0c1c454de32d96fae890a16343f59ea1ad3d61824b3727146cffdf6d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.678"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.13-windowsservercore-ltsc2016": {
            "manifests": [
                {
                    "digest": "sha256:cdb2c594a968289dcb9b7f6d3ec31820f9c9dc5687dd62ce8f34e923bd39a2b3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3144"
                    },
                    "size": 3246
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.11.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7f8f4808a29a817b5efb76092f3b7fa3d8504061cf3d4ea94241c69212e64e3e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:bc594880524c369f180c61f8bdaab96a9e98a473fd3ffdb3b4e33d9fe5410014",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8ced9b503d7e6a957ba2e26cefa383a3757ad9dc90792770075f076322555de9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ea43d7b639e094d90eec3623ca9c232f634fdb63703e9a5f26a5033b2abb3152",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:eabe5df8e1a6cb6fae4ce94aad4c5726bd6ce7c5a5a906103d087a25ca9719a1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7626183e2b6bf206e03198f3db3d76f8e6f8e3474d69b5c0dd86add3832a4368",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:d8502078f39227733797554b08b224d8d3268bd0b113d302f5e808b90a490333",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:13108130733ed0011888e066e3ec729742e80285da336f5652cdb9715851ad72",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.726"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:5a6be49b7c1b17fdcd0ba6f0faaf282a804046d47b2a7c6b19d39ec5be51b087",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.345"
                    }
                }
            ]
        },
        "1.11.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:2169a7effa73e283ad0f290021eaf14fd812dae9767646b5afcb5bf097b17c0b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:db82fe3a23df88f0ca8d03cea10e074436e8d994baab4528442c17f03b1d638c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:fbeb6a85dba14e93bb8ee57996517ee3e4409bdea39e8b3c65419680139876ce",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c1775b7e4932eb86aa47ca21792a9b9128b378bb22b405e8c1746c2af947ed9f",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c61d8df4e243825fe0793a4dca3edb06e59559a50b11d4d55130874e4a45ff4d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:d95d221eb08c3e1336a662fb5bb5e60d22e0edf74cf3d7bac575a5690b473456",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ce489ef5335dfe6312271927d73c713f5078715079d837e1557dc81a64ec7067",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:031cc4f439b9ca6808531bb9ac9644c7418565b0cd2b8779ac99f08238c4f552",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:2a62709e1e1e99fc9c919311ab0f233a687e5a86f574aadb6f023aad8c519ee8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a6431a472e2f4d8de73b9ef6dd7ebe5b4ab1ef908adb75eaee9ea72ff2621d9b",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c209b14a7f5b4ad6035338531afebaed1e3451b15596ad4ad3bc8a3592a6063c",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:45c7c59fa0b2711b7bec659eb1655f79833c448136e40fd2d7f75661a723e380",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:2169a7effa73e283ad0f290021eaf14fd812dae9767646b5afcb5bf097b17c0b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:db82fe3a23df88f0ca8d03cea10e074436e8d994baab4528442c17f03b1d638c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:fbeb6a85dba14e93bb8ee57996517ee3e4409bdea39e8b3c65419680139876ce",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c1775b7e4932eb86aa47ca21792a9b9128b378bb22b405e8c1746c2af947ed9f",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c61d8df4e243825fe0793a4dca3edb06e59559a50b11d4d55130874e4a45ff4d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:d95d221eb08c3e1336a662fb5bb5e60d22e0edf74cf3d7bac575a5690b473456",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.2-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:5035eed81527da2e636ef566684178eef8579467dd08f0998b9083f761b7d86c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.2-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:5035eed81527da2e636ef566684178eef8579467dd08f0998b9083f761b7d86c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:7f8f4808a29a817b5efb76092f3b7fa3d8504061cf3d4ea94241c69212e64e3e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:bc594880524c369f180c61f8bdaab96a9e98a473fd3ffdb3b4e33d9fe5410014",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8ced9b503d7e6a957ba2e26cefa383a3757ad9dc90792770075f076322555de9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ea43d7b639e094d90eec3623ca9c232f634fdb63703e9a5f26a5033b2abb3152",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:eabe5df8e1a6cb6fae4ce94aad4c5726bd6ce7c5a5a906103d087a25ca9719a1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7626183e2b6bf206e03198f3db3d76f8e6f8e3474d69b5c0dd86add3832a4368",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.2-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:d8502078f39227733797554b08b224d8d3268bd0b113d302f5e808b90a490333",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:13108130733ed0011888e066e3ec729742e80285da336f5652cdb9715851ad72",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.726"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:5a6be49b7c1b17fdcd0ba6f0faaf282a804046d47b2a7c6b19d39ec5be51b087",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.345"
                    }
                }
            ]
        },
        "1.11.2-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:13108130733ed0011888e066e3ec729742e80285da336f5652cdb9715851ad72",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.726"
                    }
                }
            ]
        },
        "1.11.2-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:5a6be49b7c1b17fdcd0ba6f0faaf282a804046d47b2a7c6b19d39ec5be51b087",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.345"
                    }
                }
            ]
        },
        "1.11.2-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:d8502078f39227733797554b08b224d8d3268bd0b113d302f5e808b90a490333",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:e03ed489934627bed040325b9796fc1c3e2428ac8de762ad9c985952be95db07",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e224d80d087ab267e513d0b44090fec9a9c16cbedeeac27cbd37378ee50b722c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f604f9b26eb73340dbb81d7acf1e3d3711e515b9bd6af403692bc718128b3ff3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f86d666a30eab5136ba910fe516105b6edd30897d4a71ac685d72c72798e61c5",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f775f60f30329a4404c75b0f27b340a57a92ae6d8a99233f54babac733abbdc1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3ea1d39bd82f7ae67c7a6a057603fa7269a9e2466f7ceb2b1f542a2c4dc99939",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:3bb61c349d553774ab3b1e2199d42bd93136df012da803c4dd03d6f43f972b1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2665"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:84bbc765fd4e5a36d6c400eb3bc6ed2a702def14d9ecc608d762cc0dea5f5a4e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.846"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6f2b5850f2c00c7efc335b94e1df4809a2f53e6f740b33cee262dd6ed8fd6751",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.469"
                    }
                }
            ]
        },
        "1.11.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:2e0dfab728c3b72a10866e5efdaa7d86548221cc1b773615b3704e9ce7a2f2fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:af3ea2024249323f9df553668bc2210c54d272d59686a11abcd493bd99fe838e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6c7c64128b8b651746b5e280fa792310f95478008e471a352aa25d5afc26f9db",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e36a34b3cb55f4a935177d49660ff881465a87e722829b8221ab09e1c0b4da3d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4ea516cf056124ada9b249ae2b3e822909b4f70eaebb92d2d4582f286e98a59e",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c31b1a19ffc6bdd8083eff2038e406ef2b9a5bee4b4a5dae0ddaef879bd61256",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:923f0c35a60e63a342d8a97155610065761a95ea24abb7f0ac44130def35fc56",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:3b75e737ba5ce1b530ac1d456380a814044af99792095b14e6ee786d921c7070",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:14e565e53f095bbddbc31f475b5dfca8068bc066b68c55616ed98993234cf27d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:48a3d5f127d29d52e069df6cdaa9d6bc562537b1023879018a2fd95a9669beb2",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:fffbb5c64b10768101db40c5eac90d46385c6d91800074daad9767634805d761",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:87a9b39c85642dd1e7c79d3881bdb39d7bdaa3846c3d3c2dc7d52b541ea8ec29",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:2e0dfab728c3b72a10866e5efdaa7d86548221cc1b773615b3704e9ce7a2f2fb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:af3ea2024249323f9df553668bc2210c54d272d59686a11abcd493bd99fe838e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6c7c64128b8b651746b5e280fa792310f95478008e471a352aa25d5afc26f9db",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e36a34b3cb55f4a935177d49660ff881465a87e722829b8221ab09e1c0b4da3d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4ea516cf056124ada9b249ae2b3e822909b4f70eaebb92d2d4582f286e98a59e",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c31b1a19ffc6bdd8083eff2038e406ef2b9a5bee4b4a5dae0ddaef879bd61256",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.3-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:971a4da3ff84dddf6afc05bc65b110714c834f336f57aba5a138c7b5b7756d54",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.3-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:971a4da3ff84dddf6afc05bc65b110714c834f336f57aba5a138c7b5b7756d54",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:e03ed489934627bed040325b9796fc1c3e2428ac8de762ad9c985952be95db07",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e224d80d087ab267e513d0b44090fec9a9c16cbedeeac27cbd37378ee50b722c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f604f9b26eb73340dbb81d7acf1e3d3711e515b9bd6af403692bc718128b3ff3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f86d666a30eab5136ba910fe516105b6edd30897d4a71ac685d72c72798e61c5",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f775f60f30329a4404c75b0f27b340a57a92ae6d8a99233f54babac733abbdc1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3ea1d39bd82f7ae67c7a6a057603fa7269a9e2466f7ceb2b1f542a2c4dc99939",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.3-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:3bb61c349d553774ab3b1e2199d42bd93136df012da803c4dd03d6f43f972b1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2665"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:84bbc765fd4e5a36d6c400eb3bc6ed2a702def14d9ecc608d762cc0dea5f5a4e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.846"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6f2b5850f2c00c7efc335b94e1df4809a2f53e6f740b33cee262dd6ed8fd6751",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.469"
                    }
                }
            ]
        },
        "1.11.3-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:84bbc765fd4e5a36d6c400eb3bc6ed2a702def14d9ecc608d762cc0dea5f5a4e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.846"
                    }
                }
            ]
        },
        "1.11.3-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6f2b5850f2c00c7efc335b94e1df4809a2f53e6f740b33cee262dd6ed8fd6751",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.469"
                    }
                }
            ]
        },
        "1.11.3-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:3bb61c349d553774ab3b1e2199d42bd93136df012da803c4dd03d6f43f972b1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2665"
                    }
                }
            ]
        },
        "1.11.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:40f419705a5d794eeff415b7593f813e02ae4eb1a55f084ed1bd439a6be6926f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:90686a035dd894d8baac7e84341309707a5e9fb3a77acf3bc86acc5357c94da6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:9b6bf7d175b4304989063262182c8ba13c9af6e435eeb8243af105b9db3c4eb8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:07518b8dbfe7a004d7a9d125c66f5be24de1cda778aee02e04d7dce32a0a3122",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:528f51277bd575c4449621abaf80bd26d4ad4b4112a3c179482ddebf8aaec825",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1c0771b42e5e50be75e7be3277326659500bc2d6a902634bbf0a305669b80434",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:e5941c3060b40360aba37e9f6181cc3e1806a5e30d668c26f6d218548f44ea13",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2724"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:c43cb1ab627d903159282d454ecb6392abeab26428f81c4adfc5bc0bfac61f71",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.904"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:4b910740ce23b48edb9431c9632ea6426ee69d71ffb679ad47f0e9b2820f4dae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.523"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1b460cb991ecaab37380b80aa26197074fdcdd96550b48cbfed04ee669499be8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.253"
                    }
                }
            ]
        },
        "1.11.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:d8ea6f800aa75073be131c63cf0ad7352bc324df04fa43e7f52d02f5c48601fa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:fe81149b4e7f07ecb558fd16cdbcdb11e739846a046e38cc6e170aa39a67e7ec",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:da9c2d140ed4bf911ef8f6d9437912b80497c256ef2235c65836eac83d1c0ce7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:5f8cc2c52d1bbfd6356765db3a581b407ffde245ecdc83fbcf7bd6dbbc06c41d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:ca07b19f23de7b403b32a58be2dcef46b214e7f640084148b419fb4ecf13952b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a9ea0cb4c6919f4a3e2eac23b898cbb517089bbc5e96885144b5f98f6ebd7dcd",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.4-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:85f4b38a3ff6da01e00b7d8bf2bf133807a1d8168432229d170c21a9c1133306",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:258f863206e27f36a820e2801702c8bb0fcbc0f2e5e2c8218af2e1eb0d46e319",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:fce06886ac98d4a547f57de7a953e5afbd851a422b7653ef7acbf451ecbaf6a4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:1be02ec40468d30b854de9cc541b649c4ee8abbb268308bfd182f8df68885f5f",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4ae81a012afe48d16d01f13f2956e4e07435508405d4fb914d256ed8c36c2de1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c35e9abb5433dd898d05a697edbf10d4351b371322c1e3e4a6e7d6959cff6cb1",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.4-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:d8ea6f800aa75073be131c63cf0ad7352bc324df04fa43e7f52d02f5c48601fa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:fe81149b4e7f07ecb558fd16cdbcdb11e739846a046e38cc6e170aa39a67e7ec",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:da9c2d140ed4bf911ef8f6d9437912b80497c256ef2235c65836eac83d1c0ce7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:5f8cc2c52d1bbfd6356765db3a581b407ffde245ecdc83fbcf7bd6dbbc06c41d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:ca07b19f23de7b403b32a58be2dcef46b214e7f640084148b419fb4ecf13952b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a9ea0cb4c6919f4a3e2eac23b898cbb517089bbc5e96885144b5f98f6ebd7dcd",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.4-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:e312605e028da33f974892885a461cf2b398ea7140915c4acea1681d18a3f041",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.4-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:e312605e028da33f974892885a461cf2b398ea7140915c4acea1681d18a3f041",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:40f419705a5d794eeff415b7593f813e02ae4eb1a55f084ed1bd439a6be6926f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:90686a035dd894d8baac7e84341309707a5e9fb3a77acf3bc86acc5357c94da6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:9b6bf7d175b4304989063262182c8ba13c9af6e435eeb8243af105b9db3c4eb8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:07518b8dbfe7a004d7a9d125c66f5be24de1cda778aee02e04d7dce32a0a3122",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:528f51277bd575c4449621abaf80bd26d4ad4b4112a3c179482ddebf8aaec825",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1c0771b42e5e50be75e7be3277326659500bc2d6a902634bbf0a305669b80434",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.4-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:e5941c3060b40360aba37e9f6181cc3e1806a5e30d668c26f6d218548f44ea13",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2724"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:c43cb1ab627d903159282d454ecb6392abeab26428f81c4adfc5bc0bfac61f71",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.904"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:4b910740ce23b48edb9431c9632ea6426ee69d71ffb679ad47f0e9b2820f4dae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.523"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1b460cb991ecaab37380b80aa26197074fdcdd96550b48cbfed04ee669499be8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.253"
                    }
                }
            ]
        },
        "1.11.4-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:c43cb1ab627d903159282d454ecb6392abeab26428f81c4adfc5bc0bfac61f71",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.904"
                    }
                }
            ]
        },
        "1.11.4-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:4b910740ce23b48edb9431c9632ea6426ee69d71ffb679ad47f0e9b2820f4dae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.523"
                    }
                }
            ]
        },
        "1.11.4-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:1b460cb991ecaab37380b80aa26197074fdcdd96550b48cbfed04ee669499be8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.253"
                    }
                }
            ]
        },
        "1.11.4-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:e5941c3060b40360aba37e9f6181cc3e1806a5e30d668c26f6d218548f44ea13",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2724"
                    }
                }
            ]
        },
        "1.11.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1a0252130e79773cbda16c451b125cbf18d59fe3e682d344676a5103bfcaedcc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a32ba8a727c41967f8f35a80ccfd43ac805e2c395a2ecbfb0823937fdda62127",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:fca5942d04c98e3c7bf37512156be3423ac5afa2d28572d1c30abb20606e14ee",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c517b318373c5322fe05e81a9a0b69d0ad05299442f009feeb3807fbfcca66d3",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:7384002588786732c6ae633ba1db90e993fa1685f276492ed4fd7f0d13d3d5e1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:69163d2ef03c8aa66384692f0408ae2e2be137f0faea38d6b3a18e5bfe3d7018",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:8a4455a4844c97d02822b1fd18dce94aeda9732adf1abea42ec8e201d57c5f65",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:c40b771796049367be79628b80e148b7d5cbba451df8ff32fa8ea1761d0fb002",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:c4f104ed098771a457342577cdeba3c4ea0eb5d0fff039c9f37b4ad6b33420e8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:9e1a477d335b584e6b531d3b4ce89e929d33f995d5f456cc78ec868b1c89840e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.11.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:1b3d6eb74f4d7d3b074f958815ded61343ec0f4c8f215339b7c163927bfea4dc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:3ce985879f1dd1326fb29d5f9aa855bac47e5c559f7434308e9c2204e607e5f3",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:607feb0a1c840f87afe9a3de9cde74365c9462f2bd64ab1654a11eaec0b9b99b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v1+json",
                    "size": 6987,
                    "digest": "sha256:ffa8f83bdc012f535063e016a30f4f6bcb0e40d5eeb7517111f5daf55bbce75f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:8f7cdba270e6d13c7b3b0550994129576f46f084ee44a6e2462e6f0c3b8dd82c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:f1139c51adfad5c23446f03492eca5519c8ba3ed4538207564b57a24ca1ebefb",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ddf2ff5a161a8b9961c08a736b77ff80fd570a9d4e85458be5b9b6661b93b0af",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.5-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:6de33d5de11bc3dcd68127d11e4832e5dbaf8db8b4609dfac8e5ca32a79e50f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c5aa8cabf5d8302cd01631f68407cd2f28a5c65c4295cda72c04efb172894f71",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e467992be8cfac56148b7b65251f391c1a4d15b6e78977cb8358c4e06cd33cf2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:7ac5c7c181c49d49ecd3fcad959477b7ef1b13c42e05f2b456a7a0b0b884571c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4a571f0f5d28092ad77256adb46cfdd497daa602a0cd171da4f16d016f7f2ae7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4740b5793070e6c11f6e53156a0c8ad63ebf7e6092191f175ed90732a7ff8e83",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.5-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:41484e411feef2f0964de0b1c1c54a2021cb0c2432febdc68fd0633f0cd74fd5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:e6d6b252114cdd40cdf1a09ab8de57f8a3063c48368a3906f5d026030b8f91b3",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:7dfec34a1a509537c495de0ddcb7911a762dc563ea83e4dd4467a83d2a4a5599",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:32158b27125f81059b52fe1a4a562c545b08f38b86f318860b4e55f8ba874c08",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:5c3204d91d9eb58a588e4899d4fca1182ab2c17ba998238a057f61c642a63125",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:1f4eb775d9e030278d97a1867fd85735b83dd41a2bf0782c93cf654ccb7ebf27",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.5-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:1b3d6eb74f4d7d3b074f958815ded61343ec0f4c8f215339b7c163927bfea4dc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:3ce985879f1dd1326fb29d5f9aa855bac47e5c559f7434308e9c2204e607e5f3",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:607feb0a1c840f87afe9a3de9cde74365c9462f2bd64ab1654a11eaec0b9b99b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v1+json",
                    "size": 6987,
                    "digest": "sha256:ffa8f83bdc012f535063e016a30f4f6bcb0e40d5eeb7517111f5daf55bbce75f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:8f7cdba270e6d13c7b3b0550994129576f46f084ee44a6e2462e6f0c3b8dd82c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:f1139c51adfad5c23446f03492eca5519c8ba3ed4538207564b57a24ca1ebefb",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ddf2ff5a161a8b9961c08a736b77ff80fd570a9d4e85458be5b9b6661b93b0af",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.5-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:1d7007a4c02f2aaa67c3b859cbe08b90b1747d8841adf7d65b5793d9e0e3b9fe",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.5-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:1d7007a4c02f2aaa67c3b859cbe08b90b1747d8841adf7d65b5793d9e0e3b9fe",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1a0252130e79773cbda16c451b125cbf18d59fe3e682d344676a5103bfcaedcc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a32ba8a727c41967f8f35a80ccfd43ac805e2c395a2ecbfb0823937fdda62127",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:fca5942d04c98e3c7bf37512156be3423ac5afa2d28572d1c30abb20606e14ee",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c517b318373c5322fe05e81a9a0b69d0ad05299442f009feeb3807fbfcca66d3",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:7384002588786732c6ae633ba1db90e993fa1685f276492ed4fd7f0d13d3d5e1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:69163d2ef03c8aa66384692f0408ae2e2be137f0faea38d6b3a18e5bfe3d7018",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.5-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:8a4455a4844c97d02822b1fd18dce94aeda9732adf1abea42ec8e201d57c5f65",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:c40b771796049367be79628b80e148b7d5cbba451df8ff32fa8ea1761d0fb002",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:c4f104ed098771a457342577cdeba3c4ea0eb5d0fff039c9f37b4ad6b33420e8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:9e1a477d335b584e6b531d3b4ce89e929d33f995d5f456cc78ec868b1c89840e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.11.5-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:c40b771796049367be79628b80e148b7d5cbba451df8ff32fa8ea1761d0fb002",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                }
            ]
        },
        "1.11.5-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:c4f104ed098771a457342577cdeba3c4ea0eb5d0fff039c9f37b4ad6b33420e8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                }
            ]
        },
        "1.11.5-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:9e1a477d335b584e6b531d3b4ce89e929d33f995d5f456cc78ec868b1c89840e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.11.5-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:8a4455a4844c97d02822b1fd18dce94aeda9732adf1abea42ec8e201d57c5f65",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                }
            ]
        },
        "1.11.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:bc657a95a8f19c0eddbd6a81b6086cd1f3a97f02634d4ac3e296f0393d15ce35",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4af8dfb9cf49240d4cf6b8923c675e0cc2b3968c4aed7bec7752674f3c4196a1",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:aee2f9d1cdfb2bbe2cc411c0608a4f0601988931423b5c137c8b59c61262a97d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:e935033079241ec42b3ed9ef0527d437eb8059b38e41986486481b2f86a64ec8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:92a2bcc3ea0f547462a53dc468226465b68ac383a6a2b39fe3d337ba5a187748",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2efcf0084a78464deb0607e760893b2f4e2f96ff8255ac93e7ca6c334c904e12",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:1f6dcfa9a65663d4457393d81a4edd7688e38f0d3439153ac003270628d1a16e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6c62d47f73ed564fd015c9707f929c4fbcc675b140420b9e7c4dcbec239d58e1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:cbc8c83e11e91d57e10101cb7d8749f49e78066f552fa365ae8d28bc3aa56650",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:12f6737a12e0dff5f9e1d71bdd3535fd72cd3f003aea552899c55dc397921878",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.11.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ca4609040b3b787033177bb4bc33a8968505db10ee6e3d5ed797ec430574824b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:3090b383bede06d73fa9fad237a4b944d091db27337abf312b87b60265730c17",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:074e71fb1898866de3dab13fa98aba3c2ebd47a54223544da9e54e5366f01cdb",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ba2d689cbe49ffd928e4ed0c509e6c04e96de789bcb1744dec1ab63b6c8a38be",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:95d9fef4916364bcbf67ac34525c59ef48be63b258744d9f2da54d219b70b32e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9da16980259b701153bbf122b8f94081ad4de00a0dced04291589c9b90f54205",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:38f56bc9592edf01708864142e260765f9aff28ae1cf57af455d4a9d3974c9a2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.6-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9e5156494260617421a620e7991b7eb176ce327f1ad7f695012807227cef21cb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:2e6374b6160785aefb6f0787cfcaa66c7c2e536c3c9ee623a3a05a3a8211541e",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:bcb8780a8c8ca30b842439984f68154502d4a7606324a8a4463acad7ddbe0498",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:cee83bb6cd502cabf4c989d0172dbd6fa6dfb734b34b7990768da874967801e8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:3ed311a267d64fd2fde907d13660d6a736d458fd4b7d0196108d05fe862a50c7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:25d61324e7e6882f67d7f3515f207cafdb118ae87ad52cc2f0e5b41b5bfe46a5",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.6-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ca4609040b3b787033177bb4bc33a8968505db10ee6e3d5ed797ec430574824b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:3090b383bede06d73fa9fad237a4b944d091db27337abf312b87b60265730c17",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:074e71fb1898866de3dab13fa98aba3c2ebd47a54223544da9e54e5366f01cdb",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ba2d689cbe49ffd928e4ed0c509e6c04e96de789bcb1744dec1ab63b6c8a38be",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:95d9fef4916364bcbf67ac34525c59ef48be63b258744d9f2da54d219b70b32e",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9da16980259b701153bbf122b8f94081ad4de00a0dced04291589c9b90f54205",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:38f56bc9592edf01708864142e260765f9aff28ae1cf57af455d4a9d3974c9a2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.6-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:6f2377c93026a81ccccc667c5de63167d442ae0d6f3e3699bc42d426be847d68",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.6-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:6f2377c93026a81ccccc667c5de63167d442ae0d6f3e3699bc42d426be847d68",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:bc657a95a8f19c0eddbd6a81b6086cd1f3a97f02634d4ac3e296f0393d15ce35",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4af8dfb9cf49240d4cf6b8923c675e0cc2b3968c4aed7bec7752674f3c4196a1",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:aee2f9d1cdfb2bbe2cc411c0608a4f0601988931423b5c137c8b59c61262a97d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:e935033079241ec42b3ed9ef0527d437eb8059b38e41986486481b2f86a64ec8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:92a2bcc3ea0f547462a53dc468226465b68ac383a6a2b39fe3d337ba5a187748",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2efcf0084a78464deb0607e760893b2f4e2f96ff8255ac93e7ca6c334c904e12",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.6-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:1f6dcfa9a65663d4457393d81a4edd7688e38f0d3439153ac003270628d1a16e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6c62d47f73ed564fd015c9707f929c4fbcc675b140420b9e7c4dcbec239d58e1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:cbc8c83e11e91d57e10101cb7d8749f49e78066f552fa365ae8d28bc3aa56650",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:12f6737a12e0dff5f9e1d71bdd3535fd72cd3f003aea552899c55dc397921878",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.11.6-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6c62d47f73ed564fd015c9707f929c4fbcc675b140420b9e7c4dcbec239d58e1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                }
            ]
        },
        "1.11.6-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:cbc8c83e11e91d57e10101cb7d8749f49e78066f552fa365ae8d28bc3aa56650",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                }
            ]
        },
        "1.11.6-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:12f6737a12e0dff5f9e1d71bdd3535fd72cd3f003aea552899c55dc397921878",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.11.6-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:1f6dcfa9a65663d4457393d81a4edd7688e38f0d3439153ac003270628d1a16e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                }
            ]
        },
        "1.11.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:21d569f94a14ec3a7386acff848a2bdc7de39551bc71067d2a05700165418d4b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b5e61a3517204639f97388ff62d1db50998c72948d724dd63edde5a1fcd96de0",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:576837c49d9513cb0cc506c87329bb4e27deb5859bcbeabf657cc69c756649ef",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:92e2fa42f733c122940367d3cc7985029a4c9f8eb5b526166c05c342167f910c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f63b5a0e5e7d8637a10b843bd81e98bed28489515c7d8e05d96996c9a575d676",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a61f1e61ac586dd37d717c2af7399629c499078e7fdd9fed44797e3061f9b5d2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:c1147f8db26bb31a51c1b93d3fdd2028d14a47394b418ebd254ccbb0cc1f508d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6bd6f3e2e65357f8e5cb388c2c01b22719210d47b8d0ed2e018e572976ca2d3d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3526a6590a681d540f23fb645acb5f374f957226d556e4890bcfbb8e622c0553",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:d6f0492cdbf188b5f1fbbdf6c7418db56e2088ac90324cd3a86f43644d809375",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.11.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:67c3edfa334c1aa4a8d781cf31a62d6e8d76bad6a14b57aeb14826aaee9431d7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:11a5ca59ff7388f0b5d51d5d8194136c94cfffd6a02c27744fa35705a28545ef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:bf545436ee21061d43886668682eacdbfe72ae1430649b40516e8de3529b3254",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:fbb4dfbd0c061a71f7a86cef87b309766d63d9f73eeb5b642faeec1f5b764041",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:467a47b1d08c23cc7a48cc355cd115dfe8147a53abdf3d9204fe0d37b8d035fe",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:c01cf3bc1925d5137c05fcd775c5269a1df01a8e36bfdac05e52377c7f7fe4b9",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:5491ab36846f5fd36be0be75e41d20189aee76372a4f3d21476ce4ae28a30760",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.7-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:22f8fd60525623c886d9e173542cde68b8d8c0c06827a2421551e151131b46e5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:78fe5b42cd6f7b001e571099245604ead7263e7c12c6f6624d08088dac97bd74",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:7086ef7318530c11e25abe81b1333c1aca5f31ee731de91d7774a3b029107fce",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:f8d196a511f3c902f356868a085fc27f02870ed87d761f493088d090a6c84985",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ebab1ae0082576e2debbac5ce10e8af046a5961c4a3095e3bcf3fd2b569ea5b5",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:3d78fb024cc245e5096da94fbd34559dc85de0d0aaa00315fed3bcde11adb6e3",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.7-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:67c3edfa334c1aa4a8d781cf31a62d6e8d76bad6a14b57aeb14826aaee9431d7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:11a5ca59ff7388f0b5d51d5d8194136c94cfffd6a02c27744fa35705a28545ef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:bf545436ee21061d43886668682eacdbfe72ae1430649b40516e8de3529b3254",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:fbb4dfbd0c061a71f7a86cef87b309766d63d9f73eeb5b642faeec1f5b764041",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:467a47b1d08c23cc7a48cc355cd115dfe8147a53abdf3d9204fe0d37b8d035fe",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:c01cf3bc1925d5137c05fcd775c5269a1df01a8e36bfdac05e52377c7f7fe4b9",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:5491ab36846f5fd36be0be75e41d20189aee76372a4f3d21476ce4ae28a30760",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.7-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:7f31e5f04f796a93b0dc7464b41f857f122d8dab76031f8e61ac1f14ac2dd4a6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.7-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:7f31e5f04f796a93b0dc7464b41f857f122d8dab76031f8e61ac1f14ac2dd4a6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:21d569f94a14ec3a7386acff848a2bdc7de39551bc71067d2a05700165418d4b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b5e61a3517204639f97388ff62d1db50998c72948d724dd63edde5a1fcd96de0",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:576837c49d9513cb0cc506c87329bb4e27deb5859bcbeabf657cc69c756649ef",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:92e2fa42f733c122940367d3cc7985029a4c9f8eb5b526166c05c342167f910c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f63b5a0e5e7d8637a10b843bd81e98bed28489515c7d8e05d96996c9a575d676",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a61f1e61ac586dd37d717c2af7399629c499078e7fdd9fed44797e3061f9b5d2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.7-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:c1147f8db26bb31a51c1b93d3fdd2028d14a47394b418ebd254ccbb0cc1f508d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6bd6f3e2e65357f8e5cb388c2c01b22719210d47b8d0ed2e018e572976ca2d3d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3526a6590a681d540f23fb645acb5f374f957226d556e4890bcfbb8e622c0553",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:d6f0492cdbf188b5f1fbbdf6c7418db56e2088ac90324cd3a86f43644d809375",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.11.7-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6bd6f3e2e65357f8e5cb388c2c01b22719210d47b8d0ed2e018e572976ca2d3d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                }
            ]
        },
        "1.11.7-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:3526a6590a681d540f23fb645acb5f374f957226d556e4890bcfbb8e622c0553",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                }
            ]
        },
        "1.11.7-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:d6f0492cdbf188b5f1fbbdf6c7418db56e2088ac90324cd3a86f43644d809375",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.11.7-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:c1147f8db26bb31a51c1b93d3fdd2028d14a47394b418ebd254ccbb0cc1f508d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                }
            ]
        },
        "1.11.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5c4c8e4be7ed9cf04681a76d069e1f06d8b39f4fb99044a519e8b4bd084535d3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:cb98b28699c9053b3efc8352dade8ec0e5d4ddfca76aa719ce9cda26f6355550",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f25e4dc7cea55f6a0791d0fde4ecdcb0a74cc0df859ac4540f9b3ad74e429dbc",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:6945410530994ad49d9d52d2acb018d620c47a275b451f573ae6317963535355",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c4af9a0561199b1967502a81c479cb0b100ccf9f784be8a0a6381748a77e47eb",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3950ce84e131c53aae2db15295ed487c74cc62a06ef44fbfecefbf5cf8748b63",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:120b62ac33ebb07f5e6660d62bebfc629e630fd6ca9fa2604daef4bd902b119c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2906"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0e704b3f968b5fd9e2dfc54cadce1eac147fc7f08647ca98ea2909fe52095c3c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1087"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:eb8e36b55f335c1a26e701d7bef1de9d7122176017e7ec809928cd627c3ecfe8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.706"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0d0e97083f21f07ccc3e0c62585e27a508770a24cbb256fbd58416f06324dd50",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.437"
                    }
                }
            ]
        },
        "1.11.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:deefd132f6f8be3518e1287c3d130513b4905793a90d1f4f83bf0c8545e0d20a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:94d6810420880ff66f86448f530dff02a9539fbee721e67ce629af1713cc1b7f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:d1a6e9c388703bcb3371a3329470e4c490464be88480bf8eebcc0c97bbf314d5",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ecdcd73e6652f099a0bf37ca1f42a4c776b2b906db4b3a5a3693e7aae100de9e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:a6d71f3d033272edd78460034c624475a29b53b6367356403bb0b2e2a58099d8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:8f7994996d67b2c8ac71da6d7a2e5d6679186c2141877a16ad7554e93a9730c5",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:dd9aca289e60af87cf62861bf13783e3e856d0988e2fc30201322e8696d70c93",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.8-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:e6ecbf32395cdc5b39028db525441c6deaf5d94b5ca8a1191fc7d9cd73b49c91",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:5f1a21b90180a87af396c3dc86c46b7e499b3838caf22f176d8b44a09ce3c8ad",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ddd80b2f5e56af8243893ee71eea49803701a3e95844d20ec9ff1e2d4e3db40b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:0cc30838933c3cac4950026ccb1e0f1f3f560fcc595f8c6fd14eb1f357d76150",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:49e5f5eb0b0c7df6bacbe2342cf42a701d1cb1c911ca3c14c75b1e9b82b48b02",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9a2b637bd8481e190abdceb5905a446ce642532337492aa428348bf7e81e3870",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:deefd132f6f8be3518e1287c3d130513b4905793a90d1f4f83bf0c8545e0d20a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:94d6810420880ff66f86448f530dff02a9539fbee721e67ce629af1713cc1b7f",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:d1a6e9c388703bcb3371a3329470e4c490464be88480bf8eebcc0c97bbf314d5",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ecdcd73e6652f099a0bf37ca1f42a4c776b2b906db4b3a5a3693e7aae100de9e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:a6d71f3d033272edd78460034c624475a29b53b6367356403bb0b2e2a58099d8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:8f7994996d67b2c8ac71da6d7a2e5d6679186c2141877a16ad7554e93a9730c5",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:dd9aca289e60af87cf62861bf13783e3e856d0988e2fc30201322e8696d70c93",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.8-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:a4dc85d39e4be66ff9c281797661a836ff40e3841f9ad99e58dd41fa9b6e2f1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.8-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:a4dc85d39e4be66ff9c281797661a836ff40e3841f9ad99e58dd41fa9b6e2f1c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.11.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5c4c8e4be7ed9cf04681a76d069e1f06d8b39f4fb99044a519e8b4bd084535d3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:cb98b28699c9053b3efc8352dade8ec0e5d4ddfca76aa719ce9cda26f6355550",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:f25e4dc7cea55f6a0791d0fde4ecdcb0a74cc0df859ac4540f9b3ad74e429dbc",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:6945410530994ad49d9d52d2acb018d620c47a275b451f573ae6317963535355",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c4af9a0561199b1967502a81c479cb0b100ccf9f784be8a0a6381748a77e47eb",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3950ce84e131c53aae2db15295ed487c74cc62a06ef44fbfecefbf5cf8748b63",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.8-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:120b62ac33ebb07f5e6660d62bebfc629e630fd6ca9fa2604daef4bd902b119c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2906"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0e704b3f968b5fd9e2dfc54cadce1eac147fc7f08647ca98ea2909fe52095c3c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1087"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:eb8e36b55f335c1a26e701d7bef1de9d7122176017e7ec809928cd627c3ecfe8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.706"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0d0e97083f21f07ccc3e0c62585e27a508770a24cbb256fbd58416f06324dd50",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.437"
                    }
                }
            ]
        },
        "1.11.8-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0e704b3f968b5fd9e2dfc54cadce1eac147fc7f08647ca98ea2909fe52095c3c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1087"
                    }
                }
            ]
        },
        "1.11.8-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:eb8e36b55f335c1a26e701d7bef1de9d7122176017e7ec809928cd627c3ecfe8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.706"
                    }
                }
            ]
        },
        "1.11.8-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0d0e97083f21f07ccc3e0c62585e27a508770a24cbb256fbd58416f06324dd50",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.437"
                    }
                }
            ]
        },
        "1.11.8-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:120b62ac33ebb07f5e6660d62bebfc629e630fd6ca9fa2604daef4bd902b119c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2906"
                    }
                }
            ]
        },
        "1.11.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d1a42250ed97a9ccdf0eb477dadba769b07797f2e7017cb8af834963c259a2dc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1289611372f020ddb7b76bf500b56f1d6531fe7ff0122e1deba29c15f184d029",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c08837436f48c834b97a9ce27b86a4f9ce7b4224e41727cb44f1e1433e860bbf",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ab33a780eb0462d0f1bc7e4333d44987f1329cb717ab544f06d9d1475c2355e8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ca26a34941400157f16178e3926d36d3eb14f22d10addef813610f6ca287abe1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:693ef12a646f01954a019c44c486345f13c4d6fed2b61353742dfa5932d5e349",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:6113e9361091d28c327a98ca32dac4b592d9b5c00227bfdba95dbb6978d21466",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2906"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:eec76eedea59f7bf39a2713bfd995c82cfaa97724ee5b7f5aba253e07423d0ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.706"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:cccdca2ba504fe9fa42b2af109b41f76edbdb0a3fa371ec5a6c1a2187aad0891",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.437"
                    }
                }
            ]
        },
        "1.11.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:598def6212809405daed3135f0dc24ec629e367b68f3e4b9ef937e3094c72039",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:517aaa5d72a078ab573e8f83cb60545bea490d89266f335909fa7c3379d76d4a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:88b5b15c986052dba4cdc38869d0d0b1f209c8ebfccaa31b34188e4f2c63933c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:c4b9d4431ce6cee533c9486467a4e4344f19c075a120bf22779ae666214c63c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:501ecdd96fae7368e65755eb25953b9fc24c4b1404d1d47e6a9ff7a52021a501",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:44b9267ce37f37a6762c7b72b98ee6ec53cb91f29c23a0b968b6bb5ec08589a8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9b4a35348b21cc120c4ce0bc0cbe13519985228b1540990d1115f19ba5b3f8b1",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.9-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:c4c9c92ce733962d71e5b92ccab107f6852bce62b1119aed609276caec874e51",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:19a013b8e9e486da0c4aa70f796df855731ec0118faff8cb681c1db546ca3115",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:726324aeafce33502baddfbf046176357c4d07a0e9594903e700609f0d4290e4",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:14889e8f20581043b2be47125fe623bc1615533400d4bef337291727a0e83b52",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:e600619a3f32a5ca5abf531cbd2379022d917581b5e4d5c93608e034a5c2a8b2",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:0181ff7367cba96f7a0717e66a58746a2dfba278a3a2e55253c74396bb385a3a",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.9-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:598def6212809405daed3135f0dc24ec629e367b68f3e4b9ef937e3094c72039",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:517aaa5d72a078ab573e8f83cb60545bea490d89266f335909fa7c3379d76d4a",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:88b5b15c986052dba4cdc38869d0d0b1f209c8ebfccaa31b34188e4f2c63933c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:c4b9d4431ce6cee533c9486467a4e4344f19c075a120bf22779ae666214c63c6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:501ecdd96fae7368e65755eb25953b9fc24c4b1404d1d47e6a9ff7a52021a501",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:44b9267ce37f37a6762c7b72b98ee6ec53cb91f29c23a0b968b6bb5ec08589a8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9b4a35348b21cc120c4ce0bc0cbe13519985228b1540990d1115f19ba5b3f8b1",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:d1a42250ed97a9ccdf0eb477dadba769b07797f2e7017cb8af834963c259a2dc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1289611372f020ddb7b76bf500b56f1d6531fe7ff0122e1deba29c15f184d029",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c08837436f48c834b97a9ce27b86a4f9ce7b4224e41727cb44f1e1433e860bbf",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ab33a780eb0462d0f1bc7e4333d44987f1329cb717ab544f06d9d1475c2355e8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:ca26a34941400157f16178e3926d36d3eb14f22d10addef813610f6ca287abe1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:693ef12a646f01954a019c44c486345f13c4d6fed2b61353742dfa5932d5e349",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.9-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:6113e9361091d28c327a98ca32dac4b592d9b5c00227bfdba95dbb6978d21466",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2906"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:eec76eedea59f7bf39a2713bfd995c82cfaa97724ee5b7f5aba253e07423d0ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.706"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:cccdca2ba504fe9fa42b2af109b41f76edbdb0a3fa371ec5a6c1a2187aad0891",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.437"
                    }
                }
            ]
        },
        "1.11.9-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:eec76eedea59f7bf39a2713bfd995c82cfaa97724ee5b7f5aba253e07423d0ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.706"
                    }
                }
            ]
        },
        "1.11.9-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:cccdca2ba504fe9fa42b2af109b41f76edbdb0a3fa371ec5a6c1a2187aad0891",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.437"
                    }
                }
            ]
        },
        "1.11.9-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:6113e9361091d28c327a98ca32dac4b592d9b5c00227bfdba95dbb6978d21466",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2906"
                    }
                }
            ]
        },
        "1.11beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8fd5f2b870328802501ca6c03b3ea29d49db018ec8268d99d89aafbb3d68bf2f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:bd13013ef3488693b508e0aa7c71e87d8524124851e6a2f07d207823dd8b8065",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fce1716eade7860381db7c0055ba899200c1ae653834ed6299e05294b2bd1dc7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:363f836633b5887ac5052e2310574900182a7c6f69a32a1a641eb6429ef59a9c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7e5f4a9d6ee50ee09844dc0fdeb8787686e92f591abac767e4289be57e4074b1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:3389171ed793ae93c8edcc7b20f8da6e9c57613e2d5b048ea819149c58978498",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:0a3c1132123d5d96396bb56e421837fd99f82f246e220c2b522beb8d927ff96e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e3d389af85e74bd9a470914e16749915170ed109484f66a219b8667c58cb4950",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:d3e212841bba156e2a85e2f5cb0232906e8132c743bb0e3a02e2d8fcc0ec3f89",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:8a0064ba1b21bf4ee61bbdcb8ab6af86ef9f0609477eea5612822200b9648c6c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:61a287d65be943f383cce7efccdc548925589feb96da4b2c71d4346ead571a35",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:cda60f16f8e599cec5636d52d0aa13e1be178b433af264d1d8f7ad15b4a44c35",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:324c8ac3e5393e98d180e82af4dda51a74024191e7f35b9a5c3f730d32bdcee4",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:beeffea142fde1e9bd5cd74c2601c9e3543d7a140ce2b8560b4c543942b77ec0",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8961d56e8fb4299d7113c25f244ae3fae662116cf03846e27b8928944584f130",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:81b20d27eec86a0bfadb94b14e640f4555722586f033203bede9f9d0fb1cdf94",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f29b571def705c2dd8892af4ea440c3cef9348721068324c1dd146fd73efc2ce",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:85d9bfe41d87d95377f42905b5fd0bf5150fb64fb5b91f6cf3551afba8cfc622",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4ff8f93f99a2166d428d3d3673e71937e2f0d120f3d1117bdf70b7ff8ad99346",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:abe83970641c871f2b1fabcf729dd356a5a40010d16848282ca0429815af4acc",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a2edd43f3d8632552f5555f3ec2f221ae91ae46f4efc5e87f9356f3edbc33cec",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:8a0064ba1b21bf4ee61bbdcb8ab6af86ef9f0609477eea5612822200b9648c6c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:61a287d65be943f383cce7efccdc548925589feb96da4b2c71d4346ead571a35",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:cda60f16f8e599cec5636d52d0aa13e1be178b433af264d1d8f7ad15b4a44c35",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:324c8ac3e5393e98d180e82af4dda51a74024191e7f35b9a5c3f730d32bdcee4",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:beeffea142fde1e9bd5cd74c2601c9e3543d7a140ce2b8560b4c543942b77ec0",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8961d56e8fb4299d7113c25f244ae3fae662116cf03846e27b8928944584f130",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta1-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:5f434da7201d08c86f5f31611e573f2978abe8be8b2630119109a3353812a4dc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11beta1-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:5f434da7201d08c86f5f31611e573f2978abe8be8b2630119109a3353812a4dc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8fd5f2b870328802501ca6c03b3ea29d49db018ec8268d99d89aafbb3d68bf2f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:bd13013ef3488693b508e0aa7c71e87d8524124851e6a2f07d207823dd8b8065",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fce1716eade7860381db7c0055ba899200c1ae653834ed6299e05294b2bd1dc7",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:363f836633b5887ac5052e2310574900182a7c6f69a32a1a641eb6429ef59a9c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7e5f4a9d6ee50ee09844dc0fdeb8787686e92f591abac767e4289be57e4074b1",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:3389171ed793ae93c8edcc7b20f8da6e9c57613e2d5b048ea819149c58978498",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta1-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:0a3c1132123d5d96396bb56e421837fd99f82f246e220c2b522beb8d927ff96e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e3d389af85e74bd9a470914e16749915170ed109484f66a219b8667c58cb4950",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:d3e212841bba156e2a85e2f5cb0232906e8132c743bb0e3a02e2d8fcc0ec3f89",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta1-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e3d389af85e74bd9a470914e16749915170ed109484f66a219b8667c58cb4950",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                }
            ]
        },
        "1.11beta1-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:d3e212841bba156e2a85e2f5cb0232906e8132c743bb0e3a02e2d8fcc0ec3f89",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:0a3c1132123d5d96396bb56e421837fd99f82f246e220c2b522beb8d927ff96e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:925ca133f51f6ad30deba3c88509fb053329dad1f5945358eb8f47dedebf1eb4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0c205298130046306f6da74934bf6e5b19979f4c489dc39ce8b17b2082a41818",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b0c70e65157702edf0696e3f0d34b8e6b69830319c0c01743a74c369eab47595",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:9fe9e9752a081f0ee9931c7b2b2117fdb4ff773f18f8239569c2fa047fbc9134",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7c17701e07a31d7871e41d17ed5b7c73278e34f36e44ad69343ab9e1034fe176",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:9f0474a58a66caa56c33c26909e3dd4c221ab8a902a80bd3c2f26728dadc4d1d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:855e9ff3efb4836737d4aaa58ef6eb4016e72d6441034983b536d5889d07e8ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:5f742305010138715c0650e5e0d21a55f8af868616b37a3ef0c5be688aac9e6c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6e8c088f2347b07f84c9d1850c3f54399ded18d99f40508c94df1f052dabedd5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ddfa8334c7fe5af14614b0a6ba47c4e56a453a84b0247eb1d5480fc71092f271",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:211786b12673cac58543ac1c1db4b6a12bbb5d416763f6599bb32d7a6de675ef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:bc7f1a01e1fcbd0eca6fd2f64d1c7c880af1561eb4c3a6a3f8282ed6dc374729",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:1e38cf0cb9f5cc977da8a09389e6b0a3b3e867ef1da6f3d5de7f8b6dba4b8936",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:38d3e63e00ba460baeebb97cf9ce0233ff5096e23dd4ec16d640ad1b13eb84b7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6a4e44d9cbec21ed7e1e3ee1830530ca8af49b06583cbd75ce7b331c2882d573",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:19a0e1c0fd54c54e07cf7dfe3ef597c48beaf13be15e6e0cc583d8768a1ac5f7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:95942dcb471c6776ad1da02245c9f800c96a0e9b9b24fe5e50fef9fe15ad3ed2",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:63c11ee28633702bc61b17b764408a739dbdd116eb65dcada07cd81da938caed",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8d890c6b2034b81ae74254be4d6246face26bf7c82a46d124497aeee3a746be7",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:baff3a0946d00170a77fe97dbb8f8686851dba96f8f524bccba19770de0cba7f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e9c0fbb57d27e579a39473c08a4a5e4f57e3f99fcac7b8bb22d0baa264512a2e",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ddfa8334c7fe5af14614b0a6ba47c4e56a453a84b0247eb1d5480fc71092f271",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:211786b12673cac58543ac1c1db4b6a12bbb5d416763f6599bb32d7a6de675ef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:bc7f1a01e1fcbd0eca6fd2f64d1c7c880af1561eb4c3a6a3f8282ed6dc374729",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:1e38cf0cb9f5cc977da8a09389e6b0a3b3e867ef1da6f3d5de7f8b6dba4b8936",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:38d3e63e00ba460baeebb97cf9ce0233ff5096e23dd4ec16d640ad1b13eb84b7",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6a4e44d9cbec21ed7e1e3ee1830530ca8af49b06583cbd75ce7b331c2882d573",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta2-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:32b2b8b8b37ced1b6d309ff4fde7a631b33eb65731bcc9c7142dccd0ad6829f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11beta2-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:32b2b8b8b37ced1b6d309ff4fde7a631b33eb65731bcc9c7142dccd0ad6829f6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:925ca133f51f6ad30deba3c88509fb053329dad1f5945358eb8f47dedebf1eb4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0c205298130046306f6da74934bf6e5b19979f4c489dc39ce8b17b2082a41818",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:b0c70e65157702edf0696e3f0d34b8e6b69830319c0c01743a74c369eab47595",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:9fe9e9752a081f0ee9931c7b2b2117fdb4ff773f18f8239569c2fa047fbc9134",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7c17701e07a31d7871e41d17ed5b7c73278e34f36e44ad69343ab9e1034fe176",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:9f0474a58a66caa56c33c26909e3dd4c221ab8a902a80bd3c2f26728dadc4d1d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta2-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:855e9ff3efb4836737d4aaa58ef6eb4016e72d6441034983b536d5889d07e8ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:5f742305010138715c0650e5e0d21a55f8af868616b37a3ef0c5be688aac9e6c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6e8c088f2347b07f84c9d1850c3f54399ded18d99f40508c94df1f052dabedd5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta2-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:5f742305010138715c0650e5e0d21a55f8af868616b37a3ef0c5be688aac9e6c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                }
            ]
        },
        "1.11beta2-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:6e8c088f2347b07f84c9d1850c3f54399ded18d99f40508c94df1f052dabedd5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta2-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:855e9ff3efb4836737d4aaa58ef6eb4016e72d6441034983b536d5889d07e8ae",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11beta3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:94c04c8fb4f31051f382e3707e6483ce56811af675ac905f6099974067b62b19",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:64e473ed1524911bd92f588929799a058111259096e28d5e9381af5f63ccee5b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:17eaad38bc911091932b03dddfe60fd5a4455a2fc027539e157a8e3eadb5823f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:fe47c646e872b3365cd6f9910ce6629ab3db293d115aae1b46206797cc130644",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5be6d0a9f4640b04bc61c307320a24f6f5246cfa62320b06aa393e1079296602",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:6240e43c98411297875da4bfe7e8f24ce8fce9f4192e8b0e408ab25dc832f9db",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:2aab67249a52872de41f98c690a1b31e347fdcd144db4212a8bd15884d0a0b6c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6092e07d707a92f19e540e41fc2df084968f9b46b5bae89acdc9e78a4512413f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:daed669d33e33c148d30c570a51698f6694c58501f30688a66a84481c6b0b5f2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:3ade8f301fb839714ea55063b2c2c6a5fd1df28cd005be19a2b93d8c5785e5b7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:229bfdb2913d3645b280d8dbb07dee525b753dc3e3c9c3a85133e513f9685d8c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a475ae361d57091c588c39dd9dcf71d528e4f992894e475723726cda94755971",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4b6bc369e8eb239e351e87a09c3d2bd6f0b1aca3e98f784fee0ebaaa9f5f309a",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:493b1ee88e8b4a2d7b64c5a692d642a57222729c1f3c81f46913c62b52eb628b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:1508d6b04b30ceda4e494c7e26c2694b1b0c8377ec7f7bcbf4020822c3838169",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:874db66ae326a729b3c204564d390cfb392184d67e02b4ddd2abd1a394e7f4f5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:41ea9536daf857bcf4c608bd11aba88bbcabb9a969ffc2ee6559d07dbb309fca",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:16ba42783e0b090c691c914e38241078a3a3cf57e1debf450a14ac760052ae68",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:1a8b21235e3fbdadbed395b4aeda7d5684bdcc79ebad795668daacc827dfdaea",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:848a5a0de30703411c318c1d45680665a427a8c76f5180785ad0facf13302f57",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:b729c04f2ac1cdfd79f4ca38f8de853003ceee52dcf6c8b372e38e202e453998",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:3ade8f301fb839714ea55063b2c2c6a5fd1df28cd005be19a2b93d8c5785e5b7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:229bfdb2913d3645b280d8dbb07dee525b753dc3e3c9c3a85133e513f9685d8c",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a475ae361d57091c588c39dd9dcf71d528e4f992894e475723726cda94755971",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4b6bc369e8eb239e351e87a09c3d2bd6f0b1aca3e98f784fee0ebaaa9f5f309a",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:493b1ee88e8b4a2d7b64c5a692d642a57222729c1f3c81f46913c62b52eb628b",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:1508d6b04b30ceda4e494c7e26c2694b1b0c8377ec7f7bcbf4020822c3838169",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta3-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:63456b753e1a4c479640ed620d8b6539fa413860e4000316b93ff313e255705f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11beta3-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:63456b753e1a4c479640ed620d8b6539fa413860e4000316b93ff313e255705f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11beta3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:94c04c8fb4f31051f382e3707e6483ce56811af675ac905f6099974067b62b19",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:64e473ed1524911bd92f588929799a058111259096e28d5e9381af5f63ccee5b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:17eaad38bc911091932b03dddfe60fd5a4455a2fc027539e157a8e3eadb5823f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:fe47c646e872b3365cd6f9910ce6629ab3db293d115aae1b46206797cc130644",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5be6d0a9f4640b04bc61c307320a24f6f5246cfa62320b06aa393e1079296602",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:6240e43c98411297875da4bfe7e8f24ce8fce9f4192e8b0e408ab25dc832f9db",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta3-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:2aab67249a52872de41f98c690a1b31e347fdcd144db4212a8bd15884d0a0b6c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6092e07d707a92f19e540e41fc2df084968f9b46b5bae89acdc9e78a4512413f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:daed669d33e33c148d30c570a51698f6694c58501f30688a66a84481c6b0b5f2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta3-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:6092e07d707a92f19e540e41fc2df084968f9b46b5bae89acdc9e78a4512413f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.547"
                    }
                }
            ]
        },
        "1.11beta3-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:daed669d33e33c148d30c570a51698f6694c58501f30688a66a84481c6b0b5f2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.165"
                    }
                }
            ]
        },
        "1.11beta3-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:2aab67249a52872de41f98c690a1b31e347fdcd144db4212a8bd15884d0a0b6c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2363"
                    }
                }
            ]
        },
        "1.11rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f192f9a7398377f82cc6dbbd5c6e48a7129e15f3d4e97ea2cd5b4239c09c63cc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8cf82ed8f86722522e14cce983571ae3216b4a25a8583a4eaca55f6285480286",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:add48ae7963114aba7f8ce4590594c84cd9bf207a7561992db3d6942ece4d44b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:13dc6eb33137cabce68c6dc96b2189fd76788438bcedbec254ddd3e361120364",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:da275dc268a4b7cb37707dd1acd8f31c2c9e3984ee84e40e7a655680a3272c57",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:548753ae441461fe3db3f320345e165e6c6720f2c0f828c4f9ef1d1eaa1c7162",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:a3308f12abc2b8850936a3017e3415734d245d68cf20b458cec9910ecd606d82",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:a1f044d5b346e0004f561c33ffd3188e6f009562986ba61f5159d59e52fa3822",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:59d6a189bb64d12269e4439b158afad97d16bd04da3b095e81aad7cac8428cb8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:6d16fa5e7306566a9ff66964470e0474eb33170696c06af82f97210d76318fa1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:0d668bd52a58fb35b6dca1a3337b35d12a55c4c97a3b5381e0b517436b4bfee9",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:46948de76d17218011ac72eb3106a141771f94cb107ef266fd83e11fa26bab2d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c9b0d76b961bd081be9cca946aa646fddfc27e85c647b10b54e557d1f8b99cf2",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:160c393792b5e86aeb3166261231eca78d1e111df5b3e81b04cc795f0bbf3a6d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6bec81c4581d195b95923d4760c6b2658d6af285619eb905dfb83da2ab07e0a2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:cefc9470a0f86c99b26a718a462dee1e61444e2361dc03faba3575d3520c422d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f9c5f34d0ae56a6f89e970bf062449c4d0fe0c25cd34c425364490fc0378a44b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:1f6b6f02fd7b80426e698b7356f5a841ba8cdaa7e6418b1bf57934e3aa4d151f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:4ca118081ee313dfd0d60336169ac0ea4abae1dddfb304f79bd53a840f5ed07c",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:407177d67d15dd7fffc8fee8928d084f8d55f9904acb6256b43b15e26329cf6d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6347e379e0f25c0797393427ba52db7ffe92ca73a438c3802699d823b8feb09b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:6d16fa5e7306566a9ff66964470e0474eb33170696c06af82f97210d76318fa1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:0d668bd52a58fb35b6dca1a3337b35d12a55c4c97a3b5381e0b517436b4bfee9",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:46948de76d17218011ac72eb3106a141771f94cb107ef266fd83e11fa26bab2d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c9b0d76b961bd081be9cca946aa646fddfc27e85c647b10b54e557d1f8b99cf2",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:160c393792b5e86aeb3166261231eca78d1e111df5b3e81b04cc795f0bbf3a6d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:6bec81c4581d195b95923d4760c6b2658d6af285619eb905dfb83da2ab07e0a2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc1-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:d1f960d3954d915dbd2b0fb93f1d97223d5e815e91c01ff9b41e664c27f3133d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11rc1-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:d1f960d3954d915dbd2b0fb93f1d97223d5e815e91c01ff9b41e664c27f3133d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f192f9a7398377f82cc6dbbd5c6e48a7129e15f3d4e97ea2cd5b4239c09c63cc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8cf82ed8f86722522e14cce983571ae3216b4a25a8583a4eaca55f6285480286",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:add48ae7963114aba7f8ce4590594c84cd9bf207a7561992db3d6942ece4d44b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:13dc6eb33137cabce68c6dc96b2189fd76788438bcedbec254ddd3e361120364",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:da275dc268a4b7cb37707dd1acd8f31c2c9e3984ee84e40e7a655680a3272c57",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:548753ae441461fe3db3f320345e165e6c6720f2c0f828c4f9ef1d1eaa1c7162",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc1-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:a3308f12abc2b8850936a3017e3415734d245d68cf20b458cec9910ecd606d82",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:a1f044d5b346e0004f561c33ffd3188e6f009562986ba61f5159d59e52fa3822",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:59d6a189bb64d12269e4439b158afad97d16bd04da3b095e81aad7cac8428cb8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11rc1-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:a1f044d5b346e0004f561c33ffd3188e6f009562986ba61f5159d59e52fa3822",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                }
            ]
        },
        "1.11rc1-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:59d6a189bb64d12269e4439b158afad97d16bd04da3b095e81aad7cac8428cb8",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11rc1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:a3308f12abc2b8850936a3017e3415734d245d68cf20b458cec9910ecd606d82",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:36712b65e4a64f25c8a1a00e0a07ab39922a5b0c1bb9d3b22c0f842c428a89f4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c6e0752bada38109ec7eaf471187b1cad2c4f4941840a93738da727e23361b3b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:70f128a68499d73eab3c7db103befbe4544c6b464b869a02891f80dd39ec2f6f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a8e5b42f914caad4792a52aefed63861b22654b1bc76f11fb588c401b3e8aae3",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1d60d2e32b1b1a726b38f5a34788d974f251b13556fc45c0adacd3c24b4a3b1d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8cde76aa081642db006870a8ab26474b5172bd2303aa0ad7c18f5ad4388bb735",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:af9294201e2313eaeb7da5d2f8fbd5e8a6667939e9ddbee0bc5cd5fc1ed1b2bf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0f2a118886e0d7bde516a414c7e3606ef567c2f84ac28401a501ae16eb3c4108",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e0b5eb452e764ee7e8d2b5ab6d71c86a1bba52eb0a389e70083b258fbaa5b249",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9d02ec9d1b50050ff04947d6583bb596f24976b61670efee3bd383baef8b7e18",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:86131f3610e50f882d39f6fd53704c64a9ad8c0ab1352449f3142c0068f18ca4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:761187a6437a29467ff0ba5ad9aee59c5731c588ecefd6daba542fbb711bcafe",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:258fff15cdebf0b576b5f496b867d1b78696b9cd349a1ad8d0dda62bc4f1ec63",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:014077f36f3312e3f9cdad35c4e2df8e3dc143cf105c1b8486fd6ab6095527f8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8c9e6768a4992919792b6fc1b6613ec2a29e1a8b37d983b54bfca79e7c064ea6",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:ae7630762274c7ac8799b0bda68652ded9dc34282e033e7639bbbf122829c592",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:96c94b62769baca27ee38154d9e4c81bb6a30ae03e6ac75df13c3b2354b541ef",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:2cb398fc2d2ac970dee029b3eb20543b2b72d80ad78bb6c26819985e35fc7623",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c3987d6ef3c2a469f59e28fa613654bb951a40683f39031b5e5bda0462e36976",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:dfbdd6798406e76c5043c4f96dd72e2d0b3d5bb08d898dd52208e5a2a34d94f8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:c75f98dcdf8ea1275b40b698ee0b80c0f2afa7776b1ba6b8c015f8564b61f498",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:9d02ec9d1b50050ff04947d6583bb596f24976b61670efee3bd383baef8b7e18",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:86131f3610e50f882d39f6fd53704c64a9ad8c0ab1352449f3142c0068f18ca4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:761187a6437a29467ff0ba5ad9aee59c5731c588ecefd6daba542fbb711bcafe",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:258fff15cdebf0b576b5f496b867d1b78696b9cd349a1ad8d0dda62bc4f1ec63",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:014077f36f3312e3f9cdad35c4e2df8e3dc143cf105c1b8486fd6ab6095527f8",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8c9e6768a4992919792b6fc1b6613ec2a29e1a8b37d983b54bfca79e7c064ea6",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc2-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:30345005caffa76c118bbe90a7afa13d7818c20b079c7bb95c2fea11ff622dd2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11rc2-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:30345005caffa76c118bbe90a7afa13d7818c20b079c7bb95c2fea11ff622dd2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.11rc2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:36712b65e4a64f25c8a1a00e0a07ab39922a5b0c1bb9d3b22c0f842c428a89f4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c6e0752bada38109ec7eaf471187b1cad2c4f4941840a93738da727e23361b3b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:70f128a68499d73eab3c7db103befbe4544c6b464b869a02891f80dd39ec2f6f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a8e5b42f914caad4792a52aefed63861b22654b1bc76f11fb588c401b3e8aae3",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:1d60d2e32b1b1a726b38f5a34788d974f251b13556fc45c0adacd3c24b4a3b1d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8cde76aa081642db006870a8ab26474b5172bd2303aa0ad7c18f5ad4388bb735",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc2-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:af9294201e2313eaeb7da5d2f8fbd5e8a6667939e9ddbee0bc5cd5fc1ed1b2bf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0f2a118886e0d7bde516a414c7e3606ef567c2f84ac28401a501ae16eb3c4108",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e0b5eb452e764ee7e8d2b5ab6d71c86a1bba52eb0a389e70083b258fbaa5b249",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11rc2-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:0f2a118886e0d7bde516a414c7e3606ef567c2f84ac28401a501ae16eb3c4108",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.611"
                    }
                }
            ]
        },
        "1.11rc2-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e0b5eb452e764ee7e8d2b5ab6d71c86a1bba52eb0a389e70083b258fbaa5b249",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.228"
                    }
                }
            ]
        },
        "1.11rc2-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:af9294201e2313eaeb7da5d2f8fbd5e8a6667939e9ddbee0bc5cd5fc1ed1b2bf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2430"
                    }
                }
            ]
        },
        "1.12": {
            "manifests": [
                {
                    "digest": "sha256:c489190d31e60400b94cd404e27bb5eec4c484ab606e5b5eff75707d5ec6a2aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:fadd7640e31184aeeed6782c02fc96f8ee770012d6c2b5a51a2f62587ce4c4f1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:267f9e390b1feeea7513b9de7c57c40dbfa5444485ade0b41c33d164d840e268",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:287c7aa752536c5449e35dea153a2a6abb3e78ac2e797438d37377cfb884446e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:39b80d247552c29afeaf3335569a40e5528a3a9426adf069c718f53b3deecbed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:d516e26ef37469439e8ce05ef231296479e1cbadd7b17bbdaebf1d74342411e8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:aa36e763b2678bd1b3ef1bbc4bd3c735390bf6be1a85af389552ca9194cd335e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3506"
                    },
                    "size": 3324
                },
                {
                    "digest": "sha256:07556bc5efa7eab62331944cd5d053f8247a870f79c64eb7339439861c19d99b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.1040"
                    },
                    "size": 3323
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-alpine": {
            "manifests": [
                {
                    "digest": "sha256:1782cafde43390b032f960c0fad3def745fac18994ced169003cb56e9a93c028",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ea95bb81dab31807beac6c62824c048b1ee96b408f6097ea9dd0204e380f00b2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ab389e320938f3bd42f45437d381fab28742dadcb892816236801e24a0bef804",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:1c96d48d06d96929d41e76e8145eb182ce22983f5e3539a655ec2918604835d0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:d8801b3783dd4e4aee273c1a312cc265c832c7f264056d68e7ea73b8e1dd94b0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:216cb428a7a53a75ef7806ed1120c409253e3e65bddc6ae0c21f5cd2faf92324",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:f2475c61ab276da0882a9637b83b2a5710b289d6d80f3daedb71d4a8eaeb1686",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-alpine3.10": {
            "manifests": [
                {
                    "digest": "sha256:a565f29192a15b1431f1b3bf291ae79ff29f0453e3e3f5b1eb9de4ec54d197bf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:561b76b6198a29909879ca7915d8b8b54b2debdec48d766a849767f2121b5488",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:6b7547207ddd90ecb34b22bc6c45d50149c47532f18ae29f9bfd5238f5382a2d",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:cd916477e9d7849110760c87ebdce44a7931a0067331209ee6138533768c8f84",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b1edf1e2da5568be81c9628f7fd91435decf6dd6ad2891214dfacc1e80309567",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:5daed0e5310c3cfef56060bca0d9684979806984eda95949959dd8eb369aaa86",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:136895b752438809f0cfa90c3fa454b396ddb698ce03159eba75041cf3e6f4ee",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-alpine3.11": {
            "manifests": [
                {
                    "digest": "sha256:1782cafde43390b032f960c0fad3def745fac18994ced169003cb56e9a93c028",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ea95bb81dab31807beac6c62824c048b1ee96b408f6097ea9dd0204e380f00b2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ab389e320938f3bd42f45437d381fab28742dadcb892816236801e24a0bef804",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:1c96d48d06d96929d41e76e8145eb182ce22983f5e3539a655ec2918604835d0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:d8801b3783dd4e4aee273c1a312cc265c832c7f264056d68e7ea73b8e1dd94b0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:216cb428a7a53a75ef7806ed1120c409253e3e65bddc6ae0c21f5cd2faf92324",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:f2475c61ab276da0882a9637b83b2a5710b289d6d80f3daedb71d4a8eaeb1686",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:79c7e708383c3f14c38275b182a1b1124f460a68d559bad1043a0308cdbad8ff",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:f1a639143669a5dadb1f81d026d4467a7e4d73ab5269e3cc4019a41bbe50009c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:fac41ec9f7364f372d664794020d3562871fdad09683b21c0c7888055593d3db",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b940eb0ba4e0a206b3725214198cbb4c2f0dc576d83bc7ee8c34804a502aaf9a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:015e9e1de872a954922458e43f2c55ed2633383efb7104af30c9bc31029fde5f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:cc2a4aabe1b9ea0ee9214a51ffcd3fe2c9932e02b618f1311a014e4173fad16c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:73f9e16bcaab2c11ef988c03326d18d3e868621f8bc8d5f51307a7dd032a16c8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-buster": {
            "manifests": [
                {
                    "digest": "sha256:c489190d31e60400b94cd404e27bb5eec4c484ab606e5b5eff75707d5ec6a2aa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:fadd7640e31184aeeed6782c02fc96f8ee770012d6c2b5a51a2f62587ce4c4f1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:267f9e390b1feeea7513b9de7c57c40dbfa5444485ade0b41c33d164d840e268",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:287c7aa752536c5449e35dea153a2a6abb3e78ac2e797438d37377cfb884446e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:39b80d247552c29afeaf3335569a40e5528a3a9426adf069c718f53b3deecbed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:688964fda6122f18cfb253008fea54e6e2bd726521a5ad6f47aeb2200ad069cf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-nanoserver": {
            "manifests": [
                {
                    "digest": "sha256:3802603744b6f8816cb200800a6ecab67737e491c750f3997687125f4bdc412a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.1040"
                    },
                    "size": 2583
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-nanoserver-1803": {
            "manifests": [
                {
                    "digest": "sha256:26817bebe98b33720e76c476995157e10bf8a1d50be3f2b79810181c113ae70b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1130"
                    },
                    "size": 2894
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-nanoserver-1809": {
            "manifests": [
                {
                    "digest": "sha256:3802603744b6f8816cb200800a6ecab67737e491c750f3997687125f4bdc412a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.1040"
                    },
                    "size": 2583
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:0e6e349c1e9cfd2dd792f67b5525e454d673b7aed0c6d95583da3e15a47f1e51",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.12-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b4be7a6cc0a69eece53c1895146e5c4e8065636dc855048ec288b07438abcc32",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c02e3aeca6507db1d13d9f3c83a3be90b7d9a05fd461cc8b2038c4c27e847c69",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:87146b190997656f1620e6a5a4e69947807dd96bf79e04d14fa326ba6c24b767",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:6277dd37677673ecd0b1c1642cc3f65af4cfb5d2ba6823a60915f5828fae10ff",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fa7429f80896c691fdbdf89e593a3d7ac566ba3134e4c17e223483c3a935fd71",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ef289a985308c710d6a3419caa2f4bcac3b552c0a4896338117b65e7e1dcba74",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:32b0a534ab54ae935a1ed7d4830ebccdcaf81043a580ae077df5495b39517b78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e1f36022a87f3e351de80401b56302ef94defb5dba5ef6a33c51960c2ed9305a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e16074a5498bd42e8964d0e1f6fd2efdcb4390c43e8fdfb70dc60ff1db62a9a7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:092cbf1fd661e13368dd0d9e71b032d8fe2c3727dc97fb975d6ef5fb9f5063cd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.12-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:aa23076481e07f7b06f783b029224388ee2aebc496c0adcbd663497bbd666c25",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:289a06b69d62020eb2c1c18ed925bf702c713171346ace4e6cdfc256c1ec06b6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8977c7ff2a1efee8a2a7bc8e1849037b7d6393f84a0d168d2c70ce0e64d1466d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a119d79c49640af3e540194d9ce19610d6cad426a5707acf2339a4ed94c5ac9d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e467f53e7e5d213eb22e651cbafa178f9baedd7ab387177daefd27bb09041d88",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:d8b6303ad99ca441f75f21151ea50b7f11ef3bd973a322c8bfe0fc5d21e69424",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12-rc-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:d08a98c9801b4f39bb2e0b8a6811257167634b535fab92bc6914d88556a068cd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:86f129c229a2567e893c9be0674d35fd41a9fa2c9de2a0c0b10ec73497c4eb9b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:47db81ca525129a191f86e74851066df055631f96df430a1ab9ce5a3eaa88ef1",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:827fa44f2083040db8bcc2753d6d33c38fab3b3c4defaf9b970b0e62441028e8",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:28603a5c2393daa5acd3c8e9aff572a3c7e73ee4ee196725f3231261e8e3cbed",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:f622e593eb7fdfd3c9899044156fef867b6129fc992d8f6b737af8c97b6fbfe1",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12-rc-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:aa23076481e07f7b06f783b029224388ee2aebc496c0adcbd663497bbd666c25",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:289a06b69d62020eb2c1c18ed925bf702c713171346ace4e6cdfc256c1ec06b6",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:8977c7ff2a1efee8a2a7bc8e1849037b7d6393f84a0d168d2c70ce0e64d1466d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:a119d79c49640af3e540194d9ce19610d6cad426a5707acf2339a4ed94c5ac9d",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:e467f53e7e5d213eb22e651cbafa178f9baedd7ab387177daefd27bb09041d88",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1572,
                    "digest": "sha256:d8b6303ad99ca441f75f21151ea50b7f11ef3bd973a322c8bfe0fc5d21e69424",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12-rc-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:1036e41ca051d7d185c0638f024ad8a18fa7a0dc84d2bed2ee7113d87f71158d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.12-rc-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:1036e41ca051d7d185c0638f024ad8a18fa7a0dc84d2bed2ee7113d87f71158d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.12-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:b4be7a6cc0a69eece53c1895146e5c4e8065636dc855048ec288b07438abcc32",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c02e3aeca6507db1d13d9f3c83a3be90b7d9a05fd461cc8b2038c4c27e847c69",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:87146b190997656f1620e6a5a4e69947807dd96bf79e04d14fa326ba6c24b767",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:6277dd37677673ecd0b1c1642cc3f65af4cfb5d2ba6823a60915f5828fae10ff",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fa7429f80896c691fdbdf89e593a3d7ac566ba3134e4c17e223483c3a935fd71",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ef289a985308c710d6a3419caa2f4bcac3b552c0a4896338117b65e7e1dcba74",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12-rc-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:32b0a534ab54ae935a1ed7d4830ebccdcaf81043a580ae077df5495b39517b78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e1f36022a87f3e351de80401b56302ef94defb5dba5ef6a33c51960c2ed9305a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e16074a5498bd42e8964d0e1f6fd2efdcb4390c43e8fdfb70dc60ff1db62a9a7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:092cbf1fd661e13368dd0d9e71b032d8fe2c3727dc97fb975d6ef5fb9f5063cd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.12-rc-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e1f36022a87f3e351de80401b56302ef94defb5dba5ef6a33c51960c2ed9305a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                }
            ]
        },
        "1.12-rc-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:e16074a5498bd42e8964d0e1f6fd2efdcb4390c43e8fdfb70dc60ff1db62a9a7",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                }
            ]
        },
        "1.12-rc-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:092cbf1fd661e13368dd0d9e71b032d8fe2c3727dc97fb975d6ef5fb9f5063cd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.12-rc-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:32b0a534ab54ae935a1ed7d4830ebccdcaf81043a580ae077df5495b39517b78",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                }
            ]
        },
        "1.12-stretch": {
            "manifests": [
                {
                    "digest": "sha256:eba17bb4139681beb71215aa6abeb0f2e90b1b8b60ebd9333698f1055229afb5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:2f8a2329174e6305f967f7cb7bb015b58109e5644fd24bb66cef079604a68160",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:fd50fe98a65854167ec72d7670a18a7fe29402c3035376fdda0d886b2c544b69",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:ca600989078ff4c0d8c78e87ff4e6679a33508b9edceab1598ac0274b24c169b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:5c1b84c52332c0078e82f69ea5bf331f21ecbdb3321fbf625a5968fb3300f6c5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:e3729b2918698ac8878a3f81e87209397eddbca129c805ebb8b5ef41c3d7075f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1796
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-windowsservercore": {
            "manifests": [
                {
                    "digest": "sha256:aa36e763b2678bd1b3ef1bbc4bd3c735390bf6be1a85af389552ca9194cd335e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3506"
                    },
                    "size": 3324
                },
                {
                    "digest": "sha256:07556bc5efa7eab62331944cd5d053f8247a870f79c64eb7339439861c19d99b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.1040"
                    },
                    "size": 3323
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:3d5c61610e445e33da283a6dec0acf4bc8a9e333a969f46c71aaaad0bd2e536e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1087"
                    }
                }
            ]
        },
        "1.12-windowsservercore-1803": {
            "manifests": [
                {
                    "digest": "sha256:c63f49c824b7a2348e4f4a55f22513171518132ba80a26024c1cf1384ede0dbe",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1130"
                    },
                    "size": 3322
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-windowsservercore-1809": {
            "manifests": [
                {
                    "digest": "sha256:07556bc5efa7eab62331944cd5d053f8247a870f79c64eb7339439861c19d99b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.1040"
                    },
                    "size": 3323
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12-windowsservercore-ltsc2016": {
            "manifests": [
                {
                    "digest": "sha256:aa36e763b2678bd1b3ef1bbc4bd3c735390bf6be1a85af389552ca9194cd335e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3506"
                    },
                    "size": 3324
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:95f548a06a4c94a3120ac0b19d3ca398ca70dfa0a43ff8c4d77bf0f5d40dee35",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c0ba37457f7fe4f443305bbf2aceb0e9d627f15ddf3dbfaa9c3e195c23ae5315",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:ae5244aa4550573aaf4faa193a5e3e3eed5c3e4ffde9c7f3ba43605ad95cde50",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2c799e6d8f0a64f9e7dd3f2b825937050ae6acf182e6ee47995a8c2077564682",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:608f6ddc356b1ca5085a2486d249f96348f7e652fcd119265cf4a613a53bf3ef",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:48d778f9a2113f560de00d0a294e5bc720b66738c237cbcc2327d4702f42f34b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:a9613d0c40699ea4ac4e6123fd57caf51592aa97c2d5ed9c217853295e5e63b2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:418745c9efb721ff147f9b2bbade544de601c028140db9b4737cd79f89860089",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:1c70832c58546d4caa31699bf76038acc50cb0280cd106a038569569faccb3f0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:507a3569527d9965b53b0f7348d0c336f5b37c36cc5f6564fb580f4b87152646",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.12.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:69371d496b2b4e99120216fa3c5057b0c5468411370ab24ea99cd87d7b1d9203",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:23d9984a669db654e4e4e375a80311702a2213635f669d95f2a0a115781719f7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:956eab35c2cdce8b0b74d2eac18f8fddc00fb6fa9a317872f04c2babf494cce4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v1+json",
                    "size": 6981,
                    "digest": "sha256:7cf1f7ccf392bd834eb91f02892f48992d3c2ba292c2198315a4637bb9454c30",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:342fe7506d6f948867ee8337ac56aacae7bcfd1651944d8ffac57a27a7980bf3",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:95c91154e21df8972d19e4e7a2371bd4ad6fccf404ea217245f17db437bc3a0d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:e6dff436e08210197bb30dba95a53fea911edf078a0f16049338332240781ece",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.0-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:69371d496b2b4e99120216fa3c5057b0c5468411370ab24ea99cd87d7b1d9203",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:23d9984a669db654e4e4e375a80311702a2213635f669d95f2a0a115781719f7",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:956eab35c2cdce8b0b74d2eac18f8fddc00fb6fa9a317872f04c2babf494cce4",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v1+json",
                    "size": 6981,
                    "digest": "sha256:7cf1f7ccf392bd834eb91f02892f48992d3c2ba292c2198315a4637bb9454c30",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:342fe7506d6f948867ee8337ac56aacae7bcfd1651944d8ffac57a27a7980bf3",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:95c91154e21df8972d19e4e7a2371bd4ad6fccf404ea217245f17db437bc3a0d",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:e6dff436e08210197bb30dba95a53fea911edf078a0f16049338332240781ece",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.0-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:ad7e73b39ab2012adf05a26aa6205f714911947f6652c9e98275c4758313c072",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.12.0-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:ad7e73b39ab2012adf05a26aa6205f714911947f6652c9e98275c4758313c072",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.12.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:95f548a06a4c94a3120ac0b19d3ca398ca70dfa0a43ff8c4d77bf0f5d40dee35",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c0ba37457f7fe4f443305bbf2aceb0e9d627f15ddf3dbfaa9c3e195c23ae5315",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:ae5244aa4550573aaf4faa193a5e3e3eed5c3e4ffde9c7f3ba43605ad95cde50",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2c799e6d8f0a64f9e7dd3f2b825937050ae6acf182e6ee47995a8c2077564682",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:608f6ddc356b1ca5085a2486d249f96348f7e652fcd119265cf4a613a53bf3ef",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:48d778f9a2113f560de00d0a294e5bc720b66738c237cbcc2327d4702f42f34b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.0-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:a9613d0c40699ea4ac4e6123fd57caf51592aa97c2d5ed9c217853295e5e63b2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:418745c9efb721ff147f9b2bbade544de601c028140db9b4737cd79f89860089",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:1c70832c58546d4caa31699bf76038acc50cb0280cd106a038569569faccb3f0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:507a3569527d9965b53b0f7348d0c336f5b37c36cc5f6564fb580f4b87152646",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.12.0-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:418745c9efb721ff147f9b2bbade544de601c028140db9b4737cd79f89860089",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.967"
                    }
                }
            ]
        },
        "1.12.0-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:1c70832c58546d4caa31699bf76038acc50cb0280cd106a038569569faccb3f0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.590"
                    }
                }
            ]
        },
        "1.12.0-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:507a3569527d9965b53b0f7348d0c336f5b37c36cc5f6564fb580f4b87152646",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.316"
                    }
                }
            ]
        },
        "1.12.0-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:a9613d0c40699ea4ac4e6123fd57caf51592aa97c2d5ed9c217853295e5e63b2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2791"
                    }
                }
            ]
        },
        "1.12.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:56548eadfbce43d2e01a342351ec8743d12d61a5e03c7639ad04ed1f5882ba0e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7b438c0405f7f3490fb7de55d643879c7c8e4b61280491653021cb1587110299",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:87f341df2e139ac40342c8189476deac6f2e70b2ce2ec44dd2eb8d5f7bde828a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0d19c2ae97468ab7804ad08b56e2116d366e8f6d840fcebf7e89ee572331e92b",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:01636bf0530e31734cf1791070d0ef868225aba07ddfdd1e91da7e1f7ebe2e2f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:92627e8b4533a0aba4a205a9238ea59a347823c48c83161dbeddc74d48d342d7",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:b9e934b889b9a57cc19ecc2977e113c1b40681a0922efc4fa07f9213c7b14e28",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e1d36c672583a33f2b15bcf86d715fabd1ae0fb92e1c7fe64d5e8c082421afb0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:f7a966c42dbbf9ef537a590865d8cd3f1fe5111743dfb24b3d6c28bab29290d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:65b4a7afdf3ad037d1e3418acc6d20da4ce3a46c0355283e4349e25b50f9d780",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.12.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:5e28ac423243b187f464d635bcfe1e909f4a31c6c8bce51d0db0a1062bec9e16",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:c8481dc092b70c0d146bf379d3956e90b3e05b157e31927bd3c0768be7f07877",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:2945c46e26c9787da884b4065d1de64cf93a3b81ead1b949843dda1fcd458bae",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:87fff60114fd3402d0c1a7ddf1eea1ded658f171749b57dc782fd33ee2d47b2d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:607b43f1d91144f82a9433764e85eb3ccf83f73569552a49bc9788c31b4338de",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:25ead0e21ed5e246ce31e274b98c09aaf548606788ef28eaf375dc8525064314",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:69f5907fa93ea591175b2c688673775378ed861eeb687776669a48692bb9754d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:5e28ac423243b187f464d635bcfe1e909f4a31c6c8bce51d0db0a1062bec9e16",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:c8481dc092b70c0d146bf379d3956e90b3e05b157e31927bd3c0768be7f07877",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:2945c46e26c9787da884b4065d1de64cf93a3b81ead1b949843dda1fcd458bae",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:87fff60114fd3402d0c1a7ddf1eea1ded658f171749b57dc782fd33ee2d47b2d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:607b43f1d91144f82a9433764e85eb3ccf83f73569552a49bc9788c31b4338de",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:25ead0e21ed5e246ce31e274b98c09aaf548606788ef28eaf375dc8525064314",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1365,
                    "digest": "sha256:69f5907fa93ea591175b2c688673775378ed861eeb687776669a48692bb9754d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.1-nanoserver": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:752d841962944a60ffe1738e314b080dcaa478b50115de664b34de86603c84d1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.12.1-nanoserver-sac2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2196,
                    "digest": "sha256:752d841962944a60ffe1738e314b080dcaa478b50115de664b34de86603c84d1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2551"
                    }
                }
            ]
        },
        "1.12.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:56548eadfbce43d2e01a342351ec8743d12d61a5e03c7639ad04ed1f5882ba0e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7b438c0405f7f3490fb7de55d643879c7c8e4b61280491653021cb1587110299",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:87f341df2e139ac40342c8189476deac6f2e70b2ce2ec44dd2eb8d5f7bde828a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0d19c2ae97468ab7804ad08b56e2116d366e8f6d840fcebf7e89ee572331e92b",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:01636bf0530e31734cf1791070d0ef868225aba07ddfdd1e91da7e1f7ebe2e2f",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:92627e8b4533a0aba4a205a9238ea59a347823c48c83161dbeddc74d48d342d7",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.1-windowsservercore": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:b9e934b889b9a57cc19ecc2977e113c1b40681a0922efc4fa07f9213c7b14e28",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e1d36c672583a33f2b15bcf86d715fabd1ae0fb92e1c7fe64d5e8c082421afb0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:f7a966c42dbbf9ef537a590865d8cd3f1fe5111743dfb24b3d6c28bab29290d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:65b4a7afdf3ad037d1e3418acc6d20da4ce3a46c0355283e4349e25b50f9d780",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.12.1-windowsservercore-1709": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:e1d36c672583a33f2b15bcf86d715fabd1ae0fb92e1c7fe64d5e8c082421afb0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.16299.1029"
                    }
                }
            ]
        },
        "1.12.1-windowsservercore-1803": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3244,
                    "digest": "sha256:f7a966c42dbbf9ef537a590865d8cd3f1fe5111743dfb24b3d6c28bab29290d4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.648"
                    }
                }
            ]
        },
        "1.12.1-windowsservercore-1809": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3245,
                    "digest": "sha256:65b4a7afdf3ad037d1e3418acc6d20da4ce3a46c0355283e4349e25b50f9d780",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.379"
                    }
                }
            ]
        },
        "1.12.1-windowsservercore-ltsc2016": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 3246,
                    "digest": "sha256:b9e934b889b9a57cc19ecc2977e113c1b40681a0922efc4fa07f9213c7b14e28",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.2848"
                    }
                }
            ]
        },
        "1.12.10": {
            "manifests": [
                {
                    "digest": "sha256:e699a540de350a0993ce3a3f8238161e5c26bbf728bffe1dc1f75952a987ea30",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:9a0c04934ebdacb3fdc68e216067a824276748472605834cc5c347cab11f6d40",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:cb2594e0cd0388bc77bf8a6093637d7f197e7555dd88febb14c82c6d4cd81aba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:f031f439b9337a5983da47d67ab02b5f0993bcba49b7ea79a3cdcda562dd2832",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:f4f25868dfd3cdfc605222087b0b1710f80c0e273f24f2dd401f405bc24afe84",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:76d2112f046cb902f1b13b392ec256dcc8f2ce2658fc67c0296a433ce9aa33a5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:16c5cbadb0d2483311d93bb5e237ba4e435ba8ec45cf817320f1e239bc93b46f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3274"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:835bdcb28590939f334598f2892dba28ae5670813ca2f28953b8a03ca3f738d8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1069"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:1a9424aceacaf9a4ecf74062ca5939c24f2acdf5d4b7bd137f9b1c3db72cc33f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.805"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-alpine": {
            "manifests": [
                {
                    "digest": "sha256:057f4ac593231f5498241e7a43ab0ee68af5534de60d6f3575f5fc5ca49bb87f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9599f47c7b56d204228b1d5f487c6bd22c78301f51375c69476c25c6714fde1a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9a9b663a02e27a5576af8611173cfa214c4005d3101b8d994911a3751a2f7414",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ec4e4f85ed0ccbceec7a93cb4f5112e6963a5ab2670329c6510c20bfdc6f2c41",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:aaf2a9331a3c618ab3b7c0048ce8d6df4c89c9f9b85af28bd70db13ba0ac478e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:5427e6925a8ed6293038707fbc6a7d44b9aa2fe170ebdda267dbbd77b925ef98",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:5b8b52de6175597bb45d3a6247848ba2bf7b99968a70ac88b9df4bd026f040c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-alpine3.10": {
            "manifests": [
                {
                    "digest": "sha256:057f4ac593231f5498241e7a43ab0ee68af5534de60d6f3575f5fc5ca49bb87f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9599f47c7b56d204228b1d5f487c6bd22c78301f51375c69476c25c6714fde1a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9a9b663a02e27a5576af8611173cfa214c4005d3101b8d994911a3751a2f7414",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:ec4e4f85ed0ccbceec7a93cb4f5112e6963a5ab2670329c6510c20bfdc6f2c41",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:aaf2a9331a3c618ab3b7c0048ce8d6df4c89c9f9b85af28bd70db13ba0ac478e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:5427e6925a8ed6293038707fbc6a7d44b9aa2fe170ebdda267dbbd77b925ef98",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:5b8b52de6175597bb45d3a6247848ba2bf7b99968a70ac88b9df4bd026f040c4",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:2b3ca6f02d74eaf6f2d1788a16c1ccf551fe2407cb457636f3826f0108fed8ff",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b222a9b5ccf2c9171ba2558e57325a2bf18a0d168df753a1c3b0b88245865b97",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b82789d5e1b7865f1a0bda48b8b011e05ef9de93f221fa6cb24be38009673fc7",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9395b4f89af7f5453bd7c6dbbd103085ecc4270e290a9121fe8fc11f74171035",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:f83dc3f042a33146d649abc56207a5c882fbd0f3c92485525b39fed86a150bea",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:2c49ea3849413d1506ddeb207017e93b7a135e8267b3604541d322af0aa5ea76",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:15282719123b78167e525811ba3751e264121a6221c56b4cdd23bca24b822354",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-buster": {
            "manifests": [
                {
                    "digest": "sha256:e699a540de350a0993ce3a3f8238161e5c26bbf728bffe1dc1f75952a987ea30",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:9a0c04934ebdacb3fdc68e216067a824276748472605834cc5c347cab11f6d40",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:cb2594e0cd0388bc77bf8a6093637d7f197e7555dd88febb14c82c6d4cd81aba",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:f031f439b9337a5983da47d67ab02b5f0993bcba49b7ea79a3cdcda562dd2832",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:f4f25868dfd3cdfc605222087b0b1710f80c0e273f24f2dd401f405bc24afe84",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:76d2112f046cb902f1b13b392ec256dcc8f2ce2658fc67c0296a433ce9aa33a5",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-nanoserver": {
            "manifests": [
                {
                    "digest": "sha256:f31bf31c6a42f8037dc5a0708bfdd0a6b5945c638f957cd3d2e3338a4f54c629",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1069"
                    },
                    "size": 2816
                },
                {
                    "digest": "sha256:721a29cb73b034d090eb82c41d20ace99f5941e4d6edfd3661eef4c044377add",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.802"
                    },
                    "size": 2505
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-nanoserver-1803": {
            "manifests": [
                {
                    "digest": "sha256:f31bf31c6a42f8037dc5a0708bfdd0a6b5945c638f957cd3d2e3338a4f54c629",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1069"
                    },
                    "size": 2816
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-nanoserver-1809": {
            "manifests": [
                {
                    "digest": "sha256:721a29cb73b034d090eb82c41d20ace99f5941e4d6edfd3661eef4c044377add",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.802"
                    },
                    "size": 2505
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-stretch": {
            "manifests": [
                {
                    "digest": "sha256:5e39fcf43389550f1df0934fffd4df77702fb620c6ef9da1597d620cfdcb3a5e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:1f717df0e9d23f225ffad2ce1eeed8ccff08854d321b41cd8d165ffd9e8fe5fd",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:65fc627e6958ba48000931c33978b87ff9dff869d679ce2779b8ca01c7fc9a3a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:d240bd6f8e4fe8350cf324001563527461e6467480c774fdc19bd8ef460d2810",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:4f676d48245a6e66e595e1eea37e9e1f77e7241d0a77271b94291634a87dfdaf",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:9abad81e996021b5b6d06e9c2fa2340dd760872c11a9631303a78cb6ffc1a379",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1796
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-windowsservercore": {
            "manifests": [
                {
                    "digest": "sha256:16c5cbadb0d2483311d93bb5e237ba4e435ba8ec45cf817320f1e239bc93b46f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3274"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:835bdcb28590939f334598f2892dba28ae5670813ca2f28953b8a03ca3f738d8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1069"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:1a9424aceacaf9a4ecf74062ca5939c24f2acdf5d4b7bd137f9b1c3db72cc33f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.805"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-windowsservercore-1803": {
            "manifests": [
                {
                    "digest": "sha256:835bdcb28590939f334598f2892dba28ae5670813ca2f28953b8a03ca3f738d8",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1069"
                    },
                    "size": 3244
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-windowsservercore-1809": {
            "manifests": [
                {
                    "digest": "sha256:1a9424aceacaf9a4ecf74062ca5939c24f2acdf5d4b7bd137f9b1c3db72cc33f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.805"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.10-windowsservercore-ltsc2016": {
            "manifests": [
                {
                    "digest": "sha256:16c5cbadb0d2483311d93bb5e237ba4e435ba8ec45cf817320f1e239bc93b46f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3274"
                    },
                    "size": 3246
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.11": {
            "manifests": [
                {
                    "digest": "sha256:c155e76506b389214c9fb227fe324c031f03f111c2501fc63bd9a628e1f4bf9a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:d07a41bfc87c3290cac679f25f5a9a9ce620eb0192f9df2f5d027e9d79e4bb04",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:7b293e321c8b3290ccd6ea0f1acb5ac9784cbcdd3f46b5c50676f11a2ef3e4ca",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:f2820330c6345902a518495ef71cfdf2150678ee7e81744b96d86ca65156341a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:b6e88c2498ef5809d590403e3493308899a33b7670ade256507b94e0e2a3f6dc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:e12f4e769fac44b99867c7c99dc217d7a338f184383cf0151fde9f321002f944",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:31eac6c13ce386993ee672f2bc6e89bd31dac67c3c159270b81af98e802e2ef3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.14393.3274"
                    },
                    "size": 3246
                },
                {
                    "digest": "sha256:73d2931e21183ba16625e5a44da458092eee11be45eca2b235264cd3a018af4e",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17134.1069"
                    },
                    "size": 3244
                },
                {
                    "digest": "sha256:e629a50f60119be676788eab79b18d8c50e09fa2752dc5fedfe19f891606e1fb",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "windows",
                        "os.version": "10.0.17763.805"
                    },
                    "size": 3245
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.11-alpine": {
            "manifests": [
                {
                    "digest": "sha256:893be082b8de7d6c2cd813d29e558506556f02fc2a51c29213658b4ef4fac35c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:0987ee6d15e9433cb3338db9c843cc994eff300959d1a6491a3f3dc1d07a699c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:eda74f67a0e8b28c36207ff03bf46cc23400d54f0f8d078b4b850f7e1e6939fa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9fd338e5a833b779bc87be67af7ceee4bcfb69509f4c09f871336c8cae5c09c1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:622d2cae05a0cef10fed8f665565f13b7fda57c16dbe565723c0abe81ed9d44c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:aaa9d65ac9af6348a2535b1de38e14b97d703f0bcb79fa5378407d77add5e0b0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:0ba168002ca8647f0ea13c67a71afefa6d74017e0ab2711397e815e6db522e93",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.11-alpine3.10": {
            "manifests": [
                {
                    "digest": "sha256:893be082b8de7d6c2cd813d29e558506556f02fc2a51c29213658b4ef4fac35c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:0987ee6d15e9433cb3338db9c843cc994eff300959d1a6491a3f3dc1d07a699c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:eda74f67a0e8b28c36207ff03bf46cc23400d54f0f8d078b4b850f7e1e6939fa",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:9fd338e5a833b779bc87be67af7ceee4bcfb69509f4c09f871336c8cae5c09c1",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:622d2cae05a0cef10fed8f665565f13b7fda57c16dbe565723c0abe81ed9d44c",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:aaa9d65ac9af6348a2535b1de38e14b97d703f0bcb79fa5378407d77add5e0b0",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:0ba168002ca8647f0ea13c67a71afefa6d74017e0ab2711397e815e6db522e93",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.11-alpine3.9": {
            "manifests": [
                {
                    "digest": "sha256:568c439b4ba717dabee75bf3d6fa9d0e77c9cb041698644a429131e9886ab2b2",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:1376e0e6cb7ccdd1a68fcfae9092f9d4b79201a0fd15ce7da2d4e78e1ab0fc7b",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:d1ceacba9468734830d5f118fc9f381c7bdd31c2afb43a7551f69221b2ddf943",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:fbe6dc146f11a78b6cf90b0f2a0a6a569f27527ecfe659660a9facf464bdc1ad",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:fe62e222283fd031804c27f5f241e1e3b9bfee5c682e1f9fb71451719822095f",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:27b61eb6d9399d12871a47cb46b75f803adced396944bc5ee6050d8f8d064df3",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1365
                },
                {
                    "digest": "sha256:b47a0f9bede78f6908a9b2ef09ba0708823b9474e6d60624faee9d7ce35402ed",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1365
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        },
        "1.12.11-buster": {
            "manifests": [
                {
                    "digest": "sha256:c155e76506b389214c9fb227fe324c031f03f111c2501fc63bd9a628e1f4bf9a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:d07a41bfc87c3290cac679f25f5a9a9ce620eb0192f9df2f5d027e9d79e4bb04",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v7"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:7b293e321c8b3290ccd6ea0f1acb5ac9784cbcdd3f46b5c50676f11a2ef3e4ca",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    },
                    "size": 1795
                },
                {
                    "digest": "sha256:f2820330c6345902a518495ef71cfdf2150678ee7e81744b96d86ca65156341a",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "386",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:b6e88c2498ef5809d590403e3493308899a33b7670ade256507b94e0e2a3f6dc",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "ppc64le",
                        "os": "linux"
                    },
                    "size": 1796
                },
                {
                    "digest": "sha256:e12f4e769fac44b99867c7c99dc217d7a338f184383cf0151fde9f321002f944",
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    },
                    "size": 1795
                }
            ],
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "schemaVersion": 2
        }
    },
    "tags": [
        "1",
        "1-alpine",
        "1-alpine3.10",
        "1-alpine3.11",
        "1-alpine3.12",
        "1-alpine3.13",
        "1-alpine3.14",
        "1-alpine3.15",
        "1-alpine3.16",
        "1-alpine3.17",
        "1-alpine3.18",
        "1-alpine3.19",
        "1-alpine3.20",
        "1-alpine3.5",
        "1-alpine3.6",
        "1-alpine3.7",
        "1-alpine3.8",
        "1-alpine3.9",
        "1-bookworm",
        "1-bullseye",
        "1-buster",
        "1-cross",
        "1-jessie",
        "1-nanoserver",
        "1-nanoserver-1803",
        "1-nanoserver-1809",
        "1-nanoserver-ltsc2022",
        "1-nanoserver-sac2016",
        "1-onbuild",
        "1-stretch",
        "1-wheezy",
        "1-windowsservercore",
        "1-windowsservercore-1709",
        "1-windowsservercore-1803",
        "1-windowsservercore-1809",
        "1-windowsservercore-ltsc2016",
        "1-windowsservercore-ltsc2022",
        "1.10",
        "1.10-alpine",
        "1.10-alpine3.7",
        "1.10-alpine3.8",
        "1.10-alpine3.9",
        "1.10-nanoserver",
        "1.10-nanoserver-sac2016",
        "1.10-rc",
        "1.10-rc-alpine",
        "1.10-rc-alpine3.7",
        "1.10-rc-nanoserver",
        "1.10-rc-nanoserver-sac2016",
        "1.10-rc-stretch",
        "1.10-rc-windowsservercore",
        "1.10-rc-windowsservercore-1709",
        "1.10-rc-windowsservercore-ltsc2016",
        "1.10-stretch",
        "1.10-windowsservercore",
        "1.10-windowsservercore-1709",
        "1.10-windowsservercore-1803",
        "1.10-windowsservercore-1809",
        "1.10-windowsservercore-ltsc2016",
        "1.10.0",
        "1.10.0-alpine",
        "1.10.0-alpine3.7",
        "1.10.0-nanoserver",
        "1.10.0-nanoserver-sac2016",
        "1.10.0-stretch",
        "1.10.0-windowsservercore",
        "1.10.0-windowsservercore-1709",
        "1.10.0-windowsservercore-ltsc2016",
        "1.10.1",
        "1.10.1-alpine",
        "1.10.1-alpine3.7",
        "1.10.1-nanoserver",
        "1.10.1-nanoserver-sac2016",
        "1.10.1-stretch",
        "1.10.1-windowsservercore",
        "1.10.1-windowsservercore-1709",
        "1.10.2",
        "1.10.2-alpine",
        "1.10.2-alpine3.7",
        "1.10.2-nanoserver",
        "1.10.2-nanoserver-sac2016",
        "1.10.2-stretch",
        "1.10.2-windowsservercore",
        "1.10.2-windowsservercore-1709",
        "1.10.2-windowsservercore-ltsc2016",
        "1.10.3",
        "1.10.3-alpine",
        "1.10.3-alpine3.7",
        "1.10.3-alpine3.8",
        "1.10.3-nanoserver",
        "1.10.3-nanoserver-sac2016",
        "1.10.3-stretch",
        "1.10.3-windowsservercore",
        "1.10.3-windowsservercore-1709",
        "1.10.3-windowsservercore-1803",
        "1.10.3-windowsservercore-ltsc2016",
        "1.10.4",
        "1.10.4-alpine",
        "1.10.4-alpine3.7",
        "1.10.4-alpine3.8",
        "1.10.4-nanoserver",
        "1.10.4-nanoserver-sac2016",
        "1.10.4-stretch",
        "1.10.4-windowsservercore",
        "1.10.4-windowsservercore-1709",
        "1.10.4-windowsservercore-1803",
        "1.10.4-windowsservercore-ltsc2016",
        "1.10.5",
        "1.10.5-alpine",
        "1.10.5-alpine3.7",
        "1.10.5-alpine3.8",
        "1.10.5-nanoserver",
        "1.10.5-nanoserver-sac2016",
        "1.10.5-stretch",
        "1.10.5-windowsservercore",
        "1.10.5-windowsservercore-1709",
        "1.10.5-windowsservercore-1803",
        "1.10.5-windowsservercore-ltsc2016",
        "1.10.6",
        "1.10.6-alpine",
        "1.10.6-alpine3.7",
        "1.10.6-alpine3.8",
        "1.10.6-nanoserver",
        "1.10.6-nanoserver-sac2016",
        "1.10.6-stretch",
        "1.10.6-windowsservercore",
        "1.10.6-windowsservercore-1709",
        "1.10.6-windowsservercore-1803",
        "1.10.6-windowsservercore-ltsc2016",
        "1.10.7",
        "1.10.7-alpine",
        "1.10.7-alpine3.7",
        "1.10.7-alpine3.8",
        "1.10.7-nanoserver",
        "1.10.7-nanoserver-sac2016",
        "1.10.7-stretch",
        "1.10.7-windowsservercore",
        "1.10.7-windowsservercore-1709",
        "1.10.7-windowsservercore-1803",
        "1.10.7-windowsservercore-1809",
        "1.10.7-windowsservercore-ltsc2016",
        "1.10.8",
        "1.10.8-alpine",
        "1.10.8-alpine3.7",
        "1.10.8-alpine3.8",
        "1.10.8-alpine3.9",
        "1.10.8-nanoserver",
        "1.10.8-nanoserver-sac2016",
        "1.10.8-stretch",
        "1.10.8-windowsservercore",
        "1.10.8-windowsservercore-1709",
        "1.10.8-windowsservercore-1803",
        "1.10.8-windowsservercore-1809",
        "1.10.8-windowsservercore-ltsc2016",
        "1.10beta1",
        "1.10beta1-alpine",
        "1.10beta1-alpine3.7",
        "1.10beta1-nanoserver",
        "1.10beta1-nanoserver-sac2016",
        "1.10beta1-stretch",
        "1.10beta1-windowsservercore",
        "1.10beta1-windowsservercore-1709",
        "1.10beta1-windowsservercore-ltsc2016",
        "1.10beta2",
        "1.10beta2-alpine",
        "1.10beta2-alpine3.7",
        "1.10beta2-nanoserver",
        "1.10beta2-nanoserver-sac2016",
        "1.10beta2-stretch",
        "1.10beta2-windowsservercore",
        "1.10beta2-windowsservercore-1709",
        "1.10beta2-windowsservercore-ltsc2016",
        "1.10rc1",
        "1.10rc1-alpine",
        "1.10rc1-alpine3.7",
        "1.10rc1-nanoserver",
        "1.10rc1-nanoserver-sac2016",
        "1.10rc1-stretch",
        "1.10rc1-windowsservercore",
        "1.10rc1-windowsservercore-1709",
        "1.10rc1-windowsservercore-ltsc2016",
        "1.10rc2",
        "1.10rc2-alpine",
        "1.10rc2-alpine3.7",
        "1.10rc2-nanoserver",
        "1.10rc2-nanoserver-sac2016",
        "1.10rc2-stretch",
        "1.10rc2-windowsservercore",
        "1.10rc2-windowsservercore-1709",
        "1.10rc2-windowsservercore-ltsc2016",
        "1.11",
        "1.11-alpine",
        "1.11-alpine3.10",
        "1.11-alpine3.7",
        "1.11-alpine3.8",
        "1.11-alpine3.9",
        "1.11-buster",
        "1.11-nanoserver",
        "1.11-nanoserver-1803",
        "1.11-nanoserver-1809",
        "1.11-nanoserver-sac2016",
        "1.11-rc",
        "1.11-rc-alpine",
        "1.11-rc-alpine3.7",
        "1.11-rc-alpine3.8",
        "1.11-rc-nanoserver",
        "1.11-rc-nanoserver-sac2016",
        "1.11-rc-stretch",
        "1.11-rc-windowsservercore",
        "1.11-rc-windowsservercore-1709",
        "1.11-rc-windowsservercore-1803",
        "1.11-rc-windowsservercore-ltsc2016",
        "1.11-stretch",
        "1.11-windowsservercore",
        "1.11-windowsservercore-1709",
        "1.11-windowsservercore-1803",
        "1.11-windowsservercore-1809",
        "1.11-windowsservercore-ltsc2016",
        "1.11.0",
        "1.11.0-alpine",
        "1.11.0-alpine3.7",
        "1.11.0-alpine3.8",
        "1.11.0-nanoserver",
        "1.11.0-nanoserver-sac2016",
        "1.11.0-stretch",
        "1.11.0-windowsservercore",
        "1.11.0-windowsservercore-1709",
        "1.11.0-windowsservercore-1803",
        "1.11.0-windowsservercore-ltsc2016",
        "1.11.1",
        "1.11.1-alpine",
        "1.11.1-alpine3.7",
        "1.11.1-alpine3.8",
        "1.11.1-nanoserver",
        "1.11.1-nanoserver-sac2016",
        "1.11.1-stretch",
        "1.11.1-windowsservercore",
        "1.11.1-windowsservercore-1709",
        "1.11.1-windowsservercore-1803",
        "1.11.1-windowsservercore-ltsc2016",
        "1.11.10",
        "1.11.10-alpine",
        "1.11.10-alpine3.8",
        "1.11.10-alpine3.9",
        "1.11.10-stretch",
        "1.11.10-windowsservercore",
        "1.11.10-windowsservercore-1803",
        "1.11.10-windowsservercore-1809",
        "1.11.10-windowsservercore-ltsc2016",
        "1.11.11",
        "1.11.11-alpine",
        "1.11.11-alpine3.10",
        "1.11.11-alpine3.8",
        "1.11.11-alpine3.9",
        "1.11.11-stretch",
        "1.11.11-windowsservercore",
        "1.11.11-windowsservercore-1803",
        "1.11.11-windowsservercore-1809",
        "1.11.11-windowsservercore-ltsc2016",
        "1.11.12",
        "1.11.12-alpine",
        "1.11.12-alpine3.10",
        "1.11.12-alpine3.9",
        "1.11.12-buster",
        "1.11.12-nanoserver",
        "1.11.12-nanoserver-1803",
        "1.11.12-nanoserver-1809",
        "1.11.12-stretch",
        "1.11.12-windowsservercore",
        "1.11.12-windowsservercore-1803",
        "1.11.12-windowsservercore-1809",
        "1.11.12-windowsservercore-ltsc2016",
        "1.11.13",
        "1.11.13-alpine",
        "1.11.13-alpine3.10",
        "1.11.13-alpine3.9",
        "1.11.13-buster",
        "1.11.13-nanoserver",
        "1.11.13-nanoserver-1803",
        "1.11.13-nanoserver-1809",
        "1.11.13-stretch",
        "1.11.13-windowsservercore",
        "1.11.13-windowsservercore-1803",
        "1.11.13-windowsservercore-1809",
        "1.11.13-windowsservercore-ltsc2016",
        "1.11.2",
        "1.11.2-alpine",
        "1.11.2-alpine3.7",
        "1.11.2-alpine3.8",
        "1.11.2-nanoserver",
        "1.11.2-nanoserver-sac2016",
        "1.11.2-stretch",
        "1.11.2-windowsservercore",
        "1.11.2-windowsservercore-1709",
        "1.11.2-windowsservercore-1803",
        "1.11.2-windowsservercore-ltsc2016",
        "1.11.3",
        "1.11.3-alpine",
        "1.11.3-alpine3.7",
        "1.11.3-alpine3.8",
        "1.11.3-nanoserver",
        "1.11.3-nanoserver-sac2016",
        "1.11.3-stretch",
        "1.11.3-windowsservercore",
        "1.11.3-windowsservercore-1709",
        "1.11.3-windowsservercore-1803",
        "1.11.3-windowsservercore-ltsc2016",
        "1.11.4",
        "1.11.4-alpine",
        "1.11.4-alpine3.7",
        "1.11.4-alpine3.8",
        "1.11.4-nanoserver",
        "1.11.4-nanoserver-sac2016",
        "1.11.4-stretch",
        "1.11.4-windowsservercore",
        "1.11.4-windowsservercore-1709",
        "1.11.4-windowsservercore-1803",
        "1.11.4-windowsservercore-1809",
        "1.11.4-windowsservercore-ltsc2016",
        "1.11.5",
        "1.11.5-alpine",
        "1.11.5-alpine3.7",
        "1.11.5-alpine3.8",
        "1.11.5-alpine3.9",
        "1.11.5-nanoserver",
        "1.11.5-nanoserver-sac2016",
        "1.11.5-stretch",
        "1.11.5-windowsservercore",
        "1.11.5-windowsservercore-1709",
        "1.11.5-windowsservercore-1803",
        "1.11.5-windowsservercore-1809",
        "1.11.5-windowsservercore-ltsc2016",
        "1.11.6",
        "1.11.6-alpine",
        "1.11.6-alpine3.8",
        "1.11.6-alpine3.9",
        "1.11.6-nanoserver",
        "1.11.6-nanoserver-sac2016",
        "1.11.6-stretch",
        "1.11.6-windowsservercore",
        "1.11.6-windowsservercore-1709",
        "1.11.6-windowsservercore-1803",
        "1.11.6-windowsservercore-1809",
        "1.11.6-windowsservercore-ltsc2016",
        "1.11.7",
        "1.11.7-alpine",
        "1.11.7-alpine3.8",
        "1.11.7-alpine3.9",
        "1.11.7-nanoserver",
        "1.11.7-nanoserver-sac2016",
        "1.11.7-stretch",
        "1.11.7-windowsservercore",
        "1.11.7-windowsservercore-1709",
        "1.11.7-windowsservercore-1803",
        "1.11.7-windowsservercore-1809",
        "1.11.7-windowsservercore-ltsc2016",
        "1.11.8",
        "1.11.8-alpine",
        "1.11.8-alpine3.8",
        "1.11.8-alpine3.9",
        "1.11.8-nanoserver",
        "1.11.8-nanoserver-sac2016",
        "1.11.8-stretch",
        "1.11.8-windowsservercore",
        "1.11.8-windowsservercore-1709",
        "1.11.8-windowsservercore-1803",
        "1.11.8-windowsservercore-1809",
        "1.11.8-windowsservercore-ltsc2016",
        "1.11.9",
        "1.11.9-alpine",
        "1.11.9-alpine3.8",
        "1.11.9-alpine3.9",
        "1.11.9-stretch",
        "1.11.9-windowsservercore",
        "1.11.9-windowsservercore-1803",
        "1.11.9-windowsservercore-1809",
        "1.11.9-windowsservercore-ltsc2016",
        "1.11beta1",
        "1.11beta1-alpine",
        "1.11beta1-alpine3.7",
        "1.11beta1-alpine3.8",
        "1.11beta1-nanoserver",
        "1.11beta1-nanoserver-sac2016",
        "1.11beta1-stretch",
        "1.11beta1-windowsservercore",
        "1.11beta1-windowsservercore-1709",
        "1.11beta1-windowsservercore-1803",
        "1.11beta1-windowsservercore-ltsc2016",
        "1.11beta2",
        "1.11beta2-alpine",
        "1.11beta2-alpine3.7",
        "1.11beta2-alpine3.8",
        "1.11beta2-nanoserver",
        "1.11beta2-nanoserver-sac2016",
        "1.11beta2-stretch",
        "1.11beta2-windowsservercore",
        "1.11beta2-windowsservercore-1709",
        "1.11beta2-windowsservercore-1803",
        "1.11beta2-windowsservercore-ltsc2016",
        "1.11beta3",
        "1.11beta3-alpine",
        "1.11beta3-alpine3.7",
        "1.11beta3-alpine3.8",
        "1.11beta3-nanoserver",
        "1.11beta3-nanoserver-sac2016",
        "1.11beta3-stretch",
        "1.11beta3-windowsservercore",
        "1.11beta3-windowsservercore-1709",
        "1.11beta3-windowsservercore-1803",
        "1.11beta3-windowsservercore-ltsc2016",
        "1.11rc1",
        "1.11rc1-alpine",
        "1.11rc1-alpine3.7",
        "1.11rc1-alpine3.8",
        "1.11rc1-nanoserver",
        "1.11rc1-nanoserver-sac2016",
        "1.11rc1-stretch",
        "1.11rc1-windowsservercore",
        "1.11rc1-windowsservercore-1709",
        "1.11rc1-windowsservercore-1803",
        "1.11rc1-windowsservercore-ltsc2016",
        "1.11rc2",
        "1.11rc2-alpine",
        "1.11rc2-alpine3.7",
        "1.11rc2-alpine3.8",
        "1.11rc2-nanoserver",
        "1.11rc2-nanoserver-sac2016",
        "1.11rc2-stretch",
        "1.11rc2-windowsservercore",
        "1.11rc2-windowsservercore-1709",
        "1.11rc2-windowsservercore-1803",
        "1.11rc2-windowsservercore-ltsc2016",
        "1.12",
        "1.12-alpine",
        "1.12-alpine3.10",
        "1.12-alpine3.11",
        "1.12-alpine3.9",
        "1.12-buster",
        "1.12-nanoserver",
        "1.12-nanoserver-1803",
        "1.12-nanoserver-1809",
        "1.12-nanoserver-sac2016",
        "1.12-rc",
        "1.12-rc-alpine",
        "1.12-rc-alpine3.8",
        "1.12-rc-alpine3.9",
        "1.12-rc-nanoserver",
        "1.12-rc-nanoserver-sac2016",
        "1.12-rc-stretch",
        "1.12-rc-windowsservercore",
        "1.12-rc-windowsservercore-1709",
        "1.12-rc-windowsservercore-1803",
        "1.12-rc-windowsservercore-1809",
        "1.12-rc-windowsservercore-ltsc2016",
        "1.12-stretch",
        "1.12-windowsservercore",
        "1.12-windowsservercore-1709",
        "1.12-windowsservercore-1803",
        "1.12-windowsservercore-1809",
        "1.12-windowsservercore-ltsc2016",
        "1.12.0",
        "1.12.0-alpine",
        "1.12.0-alpine3.9",
        "1.12.0-nanoserver",
        "1.12.0-nanoserver-sac2016",
        "1.12.0-stretch",
        "1.12.0-windowsservercore",
        "1.12.0-windowsservercore-1709",
        "1.12.0-windowsservercore-1803",
        "1.12.0-windowsservercore-1809",
        "1.12.0-windowsservercore-ltsc2016",
        "1.12.1",
        "1.12.1-alpine",
        "1.12.1-alpine3.9",
        "1.12.1-nanoserver",
        "1.12.1-nanoserver-sac2016",
        "1.12.1-stretch",
        "1.12.1-windowsservercore",
        "1.12.1-windowsservercore-1709",
        "1.12.1-windowsservercore-1803",
        "1.12.1-windowsservercore-1809",
        "1.12.1-windowsservercore-ltsc2016",
        "1.12.10",
        "1.12.10-alpine",
        "1.12.10-alpine3.10",
        "1.12.10-alpine3.9",
        "1.12.10-buster",
        "1.12.10-nanoserver",
        "1.12.10-nanoserver-1803",
        "1.12.10-nanoserver-1809",
        "1.12.10-stretch",
        "1.12.10-windowsservercore",
        "1.12.10-windowsservercore-1803",
        "1.12.10-windowsservercore-1809",
        "1.12.10-windowsservercore-ltsc2016",
        "1.12.11",
        "1.12.11-alpine",
        "1.12.11-alpine3.10",
        "1.12.11-alpine3.9",
        "1.12.11-buster"
    ],
    "configs": {
        "1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.3",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-07T16:32:49Z",
            "history": [
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\tsq \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOLANG_VERSION=1.22.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:d7d4c2f9d26b2dad32b86ed9739919f76ae423f16aa103924c183048810290de",
                    "sha256:8845ab872c1ce04cf64c4755aa585386c7ebe1b7633d977d275d6f2d2146000d",
                    "sha256:ed5bf86b995984a5211f5e018e201ed3146923e82a385b0542db04ea4b152076",
                    "sha256:dbc78f895659e011c02f7b63ab5c93f33c34880fdc3175f9b9a3f2a0bfb0dd6b",
                    "sha256:a8a2007b3a9651cb25203b522b09f261118ec4215a80318a231150732d43422b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-alpine": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.3",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-22T12:22:57Z",
            "history": [
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e3abcdba177145039cfef1ad882f9f81a612a24c9f044b19f713b95454d2e3f6 in / "
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "ENV GOLANG_VERSION=1.22.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02f2bcb26af5ea6d185dcf509dc795746d907ae10c53918b6944ac85447a0c72",
                    "sha256:ec152019e45c868054b44f17fb288c830aa0b228047b30caac60135d1cdfb46c",
                    "sha256:d2085fca9010098f2edf7b5a2413107fa47ef081ab104cb98824321594a3d8d6",
                    "sha256:0ef77f0560b2f8467c2d2f304d3d2520de18213d1f64c7ff378670db1130ac54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-alpine3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22e8501bbe75b7b61b4afaba81cbb56411b65bcf8a25d098133da6fe0b1fe198",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9a1f5601983de45bac4c8e46288ab4af4343003f3aee98520ccf50c8b42f5fe9",
            "container_config": {
                "Hostname": "9a1f5601983d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22e8501bbe75b7b61b4afaba81cbb56411b65bcf8a25d098133da6fe0b1fe198",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:26:58.883138926Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:06.551172402Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d48cac34fac385cbc1de6adfdd88300f76f9bbe346cd17e64fd834d042a98326 in / "
                },
                {
                    "created": "2020-01-23T16:53:06.686519038Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T18:41:28.524119879Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T18:41:29.907084916Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:24:43.350533904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:26:57.325883511Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:26:57.785973575Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:26:57.966137446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:26:58.683638571Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:26:58.883138926Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:531743b7098cb2aaf615641007a129173f63ed86ca32fe7b5a246a1c47286028",
                    "sha256:63d3c4a13e1f81e03eb0c2dc86901a60ee28402c2f83d190e118b3ae41827ff4",
                    "sha256:9f999fe78ac49843b2777bb7d92848525170059428982fefede4d427e3eafb67",
                    "sha256:fb7abff63b71df43047f893537fb2d7eeecd5a425b09c9c2873bf80832ff34de",
                    "sha256:bfd2e54602c1eddfa2d78c04ab0c4a2b8a2a908b81b4afe48dda4a4e7a759dd7"
                ]
            }
        },
        "1-alpine3.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c9ba8ad39d9b50f6d9e591c2e2b990e64a3469db3d0a623e1917656de98abb1e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bd9fabb17c807e928161f29f7418ae46af12c674034ef9cff6484eaf87367727",
            "container_config": {
                "Hostname": "bd9fabb17c80",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c9ba8ad39d9b50f6d9e591c2e2b990e64a3469db3d0a623e1917656de98abb1e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-07T00:42:15.947407544Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-24T01:05:03.608058404Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b91adb67b670d3a6ff9463e48b7def903ed516be66fc4282d22c53e41512be49 in / "
                },
                {
                    "created": "2020-04-24T01:05:03.92860976Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T14:29:00.486648394Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-24T14:29:01.313029938Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-07T00:39:25.355181599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:42:14.193237676Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-07T00:42:14.719451867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:42:14.91111009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-07T00:42:15.717180308Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-07T00:42:15.947407544Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e207b409db364b595ba862cdc12be96dcdad8e36c59a03b7b3b61c946a5741a",
                    "sha256:11f5a35b14deb3fd4d2b816df28be2e801d249fec634af8e90f4a36aeaebfae5",
                    "sha256:465d6105798bdae4756367ad3498af8665abeb242b7c56b37d030e88e9affee1",
                    "sha256:6f8bfb20f11d8b370a3a07abe1068400375f589403af6d056a1f4a710054f19f",
                    "sha256:e863337d46c817d7df0d1383dcd36985104466c20afeb65e5dfc0eb01226c70d"
                ]
            }
        },
        "1-alpine3.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:e6fb6d86761f82a4702da05325a3cd94c84f838e0fd9872ecde225b98b2938ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "054942af67494ca5c1174b48b1b96d7ef72c4266d26c7ab035b8674bd9ee8b12",
            "container_config": {
                "Hostname": "054942af6749",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:e6fb6d86761f82a4702da05325a3cd94c84f838e0fd9872ecde225b98b2938ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-10T21:28:38.038969013Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T19:19:49.135571382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f526aa99067d82b341f7ca538f7826b7c23a628f1b615eea2883a2d434c1b90 in / "
                },
                {
                    "created": "2021-04-14T19:19:49.594730611Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T21:29:08.085715626Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-04-14T21:29:09.034823177Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-04-14T21:29:09.198937552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-04T01:49:08.720450123Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-10T21:28:35.675481625Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.16.5.src.tar.gz'; \tsha256='7bfa7e5908c7cc9e75da5ddf3066d7cbcf3fd9fa51945851325eebc17f50ba80'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-06-10T21:28:36.602313595Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-10T21:28:36.798220609Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-10T21:28:37.814312694Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-06-10T21:28:38.038969013Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32f366d666a541852cad754ee1cdb53a736110b550f0c2d5a46bc5ba519896b6",
                    "sha256:09338b69a694c3768003ae397138bc9af39bf55cbc993cb40751e605320eec0b",
                    "sha256:41fa69f8f706b604e0c2c231f060ec1feac706cd18c1682c73cbd566eb5427ce",
                    "sha256:a10eb286da140f171b7ffa8601e3bc83cf87fb5288f57f358bf5eb4688cc2594",
                    "sha256:48c93ed2313b7b33e12faa9324ea24073013c6d8af7fb6336f7b867e220f0c03"
                ]
            }
        },
        "1-alpine3.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:98f8eb60eee05e1fc4d96f3b4c22c66b01b5667fc3480ca65fe997026fd7495a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "91a5d6f480b9086cdf38c84a26e0f2f493c3db305118cc8445059aa2e1830da9",
            "container_config": {
                "Hostname": "91a5d6f480b9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:98f8eb60eee05e1fc4d96f3b4c22c66b01b5667fc3480ca65fe997026fd7495a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-13T02:17:41.943005841Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T17:19:58.698676655Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5a707b9d6cb5fff532e4c2141bc35707593f21da5528c9e71ae2ddb6ba4a4eb6 in / "
                },
                {
                    "created": "2021-11-12T17:19:58.948920855Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T02:13:24.893897836Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2021-11-13T02:13:26.59589358Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-11-13T02:13:26.983308203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T02:13:27.276261508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T02:17:38.109156511Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.17.3.src.tar.gz'; \t\tsha256='705c64251e5b25d5d55ede1039c6aa22bea40a7a931d14c370339853643c3df0'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ -n \"${GO386:-}\" ]; then \t\t\t\tGO386= ./bootstrap.bash; \t\t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\t\tfi; \t\t\t./make.bash; \t\t\tif [ -n \"${GO386:-}\" ]; then \t\t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\t\tfi; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2021-11-13T02:17:39.357001251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T02:17:39.651754813Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-13T02:17:41.556108531Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-11-13T02:17:41.943005841Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcb75871b2101082203959c83514ac8a9f4ecfee77a0fe9aa73bbe56afdf1b4",
                    "sha256:4dae1515b64d1596d5cc142ae1c6037caab9c03ce51422c32e75d4b9cc221ae1",
                    "sha256:3405867bfd1a75176d9a14a99e1a2edd9db08c40b4001d35bb526c6aceb03bc8",
                    "sha256:c79fcd44ba4097838f4d85ebaf516cc4d5f9fe96279c5914fd5ea3c4f334ebbe",
                    "sha256:a2fe4134bc32eb901136f90a51df652dfc4f2a8c5564181a5a9658d2c96ee369"
                ]
            }
        },
        "1-alpine3.14": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:37f1d5b31009f8271158576a17f09dc89697a90107a3e7b75ef3392218034ee9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b92f3b67d90969f9eb283642d081dc3f7f75705e8979f9bacd42a9f59bef1469",
            "container_config": {
                "Hostname": "b92f3b67d909",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:37f1d5b31009f8271158576a17f09dc89697a90107a3e7b75ef3392218034ee9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-10T22:23:56.335698514Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-05T00:20:08.629998478Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9eae64dc6ab27fdaa048b7cda06fcb5c7655e1b327e098e2775d095cb657b01 in / "
                },
                {
                    "created": "2022-04-05T00:20:08.730985638Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T05:35:02.717735515Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2022-04-05T05:35:03.274068611Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2022-04-05T05:35:03.366695888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:22:25.512529802Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:23:54.659035499Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.18.2.src.tar.gz'; \t\tsha256='2c44d03ea2c34092137ab919ba602f2c261a038d08eb468528a3f3a28e5667e2'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2022-05-10T22:23:55.602478065Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:23:55.70273691Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:23:56.234387462Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-10T22:23:56.335698514Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b541d28bf3b491aeb424c61353c8c92476ecc2cd603a6c09ee5c2708f1a4b258",
                    "sha256:80aa0da36d8ec46ce2c423410203c7bac23da6ee7661a3f11dc386f651e27c76",
                    "sha256:62d80ce43fd375ae0d901666acdf040060ac25d43d7e55a654399ba0e67eff8e",
                    "sha256:4ea4711508f8ac5e2f821e496f41c5d8c6734a1f434cf394c574b6ec94f800d8",
                    "sha256:020050f2870b66157a84df5325dbe8c78a2df154d023956f749456b6d118fccc"
                ]
            }
        },
        "1-alpine3.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:bcd879c3b7b31a2c4bfbb7113ab642205ce281418ef0901aba9641b6e2338b59",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1922145ac8e0ebe047fc8bd8d1c9a277116d69e968688c077d2c64e86cc0509c",
            "container_config": {
                "Hostname": "1922145ac8e0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:bcd879c3b7b31a2c4bfbb7113ab642205ce281418ef0901aba9641b6e2338b59",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-11-16T20:28:07.016589692Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:20:00.969473443Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f77e3f51f020890d22997e6c2ca98968b75b8bc8c463341a2010ff0655d4c88f in / "
                },
                {
                    "created": "2022-08-09T17:20:01.082908181Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-06T21:18:46.280117574Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2022-11-16T20:26:25.225378829Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -e /etc/nsswitch.conf ]; then \t\tgrep '^hosts: files dns' /etc/nsswitch.conf; \telse \t\techo 'hosts: files dns' > /etc/nsswitch.conf; \tfi"
                },
                {
                    "created": "2022-11-16T20:26:25.334885633Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:26:25.43677607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.19.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:28:05.015384299Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.19.3.src.tar.gz'; \t\tsha256='18ac263e39210bcf68d85f4370e97fb1734166995a1f63fb38b4f6e07d90d212'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2022-11-16T20:28:06.19972023Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:28:06.301535922Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:28:06.88725608Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-11-16T20:28:07.016589692Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:34d5ebaa5410d2ab4154bbd7c3c99c385ec509eb9c1d03d5486aff01bbd618c5",
                    "sha256:750d642e816ce3fd5cf64598f3aeb5e98d48b5b5899c2445c8a7d450ae900ef3",
                    "sha256:f8a73f4f7277376050b1456d7f958ba1504ec977c12bf2baedd42bdae2cfe634",
                    "sha256:04aa55ebb0069a9d06720d8cc9fa4b71ef0ed24a16394564bbe72f490348f535",
                    "sha256:192229504ef74b831044acb1804635c195967cb4d26363ceb9d936cc16a3c48d"
                ]
            }
        },
        "1-alpine3.16": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:ccc9110f4baac6dd99619a0db9c5f2aaabd93bee1d23df4bb674138079d0a86e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9ab764e5e990ac2ab9ee6248db217e3102f7319b22e352738bc925f7a03e4609",
            "container_config": {
                "Hostname": "9ab764e5e990",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ccc9110f4baac6dd99619a0db9c5f2aaabd93bee1d23df4bb674138079d0a86e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-05-02T18:40:20.707685236Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T18:19:28.864544283Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:970e6b2578ef73457ffed1189e8ba128b0211cabd3174b8c7d3afd8fb58ad614 in / "
                },
                {
                    "created": "2023-03-29T18:19:28.971417055Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-29T20:35:42.864107007Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-03-29T20:35:42.960651637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:38:47.159234135Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:40:19.119484476Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.4.src.tar.gz'; \t\tsha256='9f34ace128764b7a3a4b238b805856cc1b2184304df9e5690825b0710f4202d6'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-05-02T18:40:20.010604197Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:40:20.091529445Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:40:20.621516787Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-05-02T18:40:20.707685236Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bc340f6d4f5a3bc999dfbc790a0bdf0920b9103ef794645034de4260ee4e9c8",
                    "sha256:9d74090567b284289e0d9957ba7b13673edc0f822bd2c1376125e113f0d505ea",
                    "sha256:77e84a1c3d1735a63b6c4cfd19ebb55a5246cdf4c401b62e7740449b2baddf9e",
                    "sha256:2982155af007a358c6e7f1eefe1a56a31825da969b3738d2388a8a1d21ad3b90"
                ]
            }
        },
        "1-alpine3.17": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.5",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:ac12f541556f02a19803de7046f022082b1f816c99d2dc74da31873c8cdb6d51",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "89c0fecc98685eb66c2979bea15a43d1f7d4d13256af410397da8c729baa4beb",
            "container_config": {
                "Hostname": "89c0fecc9868",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.5",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:ac12f541556f02a19803de7046f022082b1f816c99d2dc74da31873c8cdb6d51",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-12-05T20:26:18.144136011Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-11-30T23:22:58.958713929Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:80331a5d882ac8a70763f4b19e06f2e04ea3dca34ae6d92810815b170b3c806c in / "
                },
                {
                    "created": "2023-11-30T23:22:59.087794357Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T03:46:41.237358562Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-12-01T03:46:41.334592301Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:26:06.684923344Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.21.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:26:16.31486559Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-amd64.tar.gz'; \t\t\tsha256='e2bc0b3e4b64111ec117295c088bde5f00eeed1567999ff77bc859d7df70078e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-armv6l.tar.gz'; \t\t\tsha256='837f4bf4e22fcdf920ffeaa4abf3d02d1314e03725431065f4d44c46a01b42fe'; \t\t\t;; \t\t'armv7') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-armv6l.tar.gz'; \t\t\tsha256='837f4bf4e22fcdf920ffeaa4abf3d02d1314e03725431065f4d44c46a01b42fe'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-arm64.tar.gz'; \t\t\tsha256='841cced7ecda9b2014f139f5bab5ae31785f35399f236b8b3e75dff2a2978d96'; \t\t\t;; \t\t'x86') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-386.tar.gz'; \t\t\tsha256='8f4dba9cf5c61757bbd7e9ebdb93b6a30a1b03f4a636a1ba0cc2f27b907ab8e1'; \t\t\t;; \t\t'ppc64le') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-ppc64le.tar.gz'; \t\t\tsha256='907b8c6ec4be9b184952e5d3493be66b1746442394a8bc78556c56834cd7c38b'; \t\t\t;; \t\t'riscv64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-riscv64.tar.gz'; \t\t\tsha256='984d8f999f5019d15527a1a0e6b0c3ef879833e26dcd422ab0ef4d81ac486b96'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-s390x.tar.gz'; \t\t\tsha256='9c4a81b72ebe44368813cd03684e1080a818bf915d84163abae2ed325a1b2dc0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.21.5.src.tar.gz'; \t\tsha256='285cbbdf4b6e6e62ed58f370f3f6d8c30825d6e56c5853c66d3c23bcdb09db19'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-12-05T20:26:17.218836956Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOTOOLCHAIN=local",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:26:17.310060404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:26:17.397575671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:26:18.050878727Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-12-05T20:26:18.144136011Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:617df26c9e2bec4e63eed45acaa78b253ac74e1cd0dd74da35b050f3ef707d47",
                    "sha256:ad60305771984da4e3b49b89e6d105f51f71512b6ef6e76a219dd047f430628e",
                    "sha256:7e641d52f263c2dd39a30d6e5889dcda32e708cbf2ac79092848e53eca6e3705",
                    "sha256:d2df5deefa00e0117ee588ca1094788aebebca2573361d7297a84788b77f6d5d"
                ]
            }
        },
        "1-alpine3.18": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.3",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-07T16:32:49Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:56.150825642Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8729f9c0258836b640e9e789c7ab029cf4547e0596557d54dd4a4d7d8e4a785f in / "
                },
                {
                    "created": "2024-01-27T00:30:56.304681072Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOLANG_VERSION=1.22.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aedc3bda2944bb9bcb6c3d475bee8b460db9a9b0f3e0b33a6ed2fd1ae0f1d445",
                    "sha256:54db74778b09afc113377f170891eb1cbe34e1f2c202ff359bf45cd720a94d94",
                    "sha256:63c87a2183d2e4f1fb2299c3e7da143c39f1ba2d265fbf41fee6f3efbd3e763b",
                    "sha256:f90065569314a5d2ae27a5bd5d14ec9240f4a83dace5e4faa54eaafbf961f99e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-alpine3.19": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.3",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-07T16:32:49Z",
            "history": [
                {
                    "created": "2024-01-27T00:30:48.624602109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:37a76ec18f9887751cd8473744917d08b7431fc4085097bb6a09d81b41775473 in / "
                },
                {
                    "created": "2024-01-27T00:30:48.743965523Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOLANG_VERSION=1.22.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4fc045c9e3a848011de66f34b81f052d4f2c15a17bb196d637e526349601820",
                    "sha256:d542c684019d086e90a973b29f6ad05d452421121f4d08119efec672e9f1a305",
                    "sha256:34262b42df70b6f43152f236519c8eaee2fd212cf3591f5a76d3ffdf8802bd7e",
                    "sha256:05ca67b828bd38be1082f72b3e818205bf5334a045a47d6dc6b617f4bcc79448",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-alpine3.20": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.3",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-22T12:22:57Z",
            "history": [
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e3abcdba177145039cfef1ad882f9f81a612a24c9f044b19f713b95454d2e3f6 in / "
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "ENV GOLANG_VERSION=1.22.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-22T12:22:57Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02f2bcb26af5ea6d185dcf509dc795746d907ae10c53918b6944ac85447a0c72",
                    "sha256:ec152019e45c868054b44f17fb288c830aa0b228047b30caac60135d1cdfb46c",
                    "sha256:d2085fca9010098f2edf7b5a2413107fa47ef081ab104cb98824321594a3d8d6",
                    "sha256:0ef77f0560b2f8467c2d2f304d3d2520de18213d1f64c7ff378670db1130ac54",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-alpine3.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "3009dd4da609",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7724a4c878f2b68fa3fbe3071779e788719ffb9998da78a2437e27ceef8ebf6d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "4cf27377b827866866799064d0382e174cfe3d5123ff1c668e73481d0e135322",
            "container_config": {
                "Hostname": "3009dd4da609",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7724a4c878f2b68fa3fbe3071779e788719ffb9998da78a2437e27ceef8ebf6d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-06-27T21:21:22.359473792Z",
            "docker_version": "17.03.1-ce",
            "history": [
                {
                    "created": "2017-06-27T18:39:21.039131545Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d67752278c0e5a1298cd2d6603ebaaab2aa342e27ddf191ee0fde138f82698c in / "
                },
                {
                    "created": "2017-06-27T18:39:45.68169409Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-27T21:18:16.819971747Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2017-06-27T21:18:17.812065535Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-27T21:18:19.177101411Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:8bfad5c310fe0639fcf658b30e2f65d04df13ad329573b58a3e782441bb7839c in /go-alpine-patches/ "
                },
                {
                    "created": "2017-06-27T21:19:55.378429009Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGO386=\"$(go env GO386)\" \t\tGOARM=\"$(go env GOARM)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5f5dea2447e7dcfdc50fa6b94c512e58bfba5673c039259fd843f68829d99fa6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-06-27T21:20:53.140149254Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-27T21:20:54.134165342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-27T21:20:55.905722125Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-06-27T21:21:21.052173556Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-06-27T21:21:22.359473792Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:040fd7841192c4f283485d5c7817f4508a774a8fabef8fc265c87f4d2a2ae635",
                    "sha256:d7f5729c2bb3d0098a4cd092601bc4802d9008300eadf7d773cbe6b11b9bc2a3",
                    "sha256:46f8a5c0c0ac4e60c01e24fde351f41393a9d07b884ef1444aec35bb2fc207df",
                    "sha256:2ffb88a91c73947991a8107f8ecb5db9795128541bcc81a7280b81ae0c6d3131",
                    "sha256:85084018be9e27a83ebe458873a7fd98e89bf567a2ec9446b22c9f837412f2d5",
                    "sha256:0bc3eefcce68505327f5eaa9a090987e45fba3b8b01cb9824b87339f8bb564d8"
                ]
            }
        },
        "1-alpine3.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.9.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:917bdda981aeffa6868436956f30d193647ed71f4ad243d02a6afe34cec75b22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2ea3bd0c50d6452f085bf36ae3f8161096565afa23d49d5257b7e4366f7c926b",
            "container_config": {
                "Hostname": "2ea3bd0c50d6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.9.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:917bdda981aeffa6868436956f30d193647ed71f4ad243d02a6afe34cec75b22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T01:45:09.447237478Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:38.317079775Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6edc55fb54ec9fc3658c8f5176a70e792103a516154442f94fed8e0290e4960e in / "
                },
                {
                    "created": "2018-01-09T21:10:38.538173323Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:26:52.760009225Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T01:35:47.337709814Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.9.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:35:47.864094254Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:5340852d126c59a835fc30c4253b181919d512298cbb0226c1562e4ec4eba94c in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T01:36:52.788013337Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0573a8df33168977185aa44173305e5a0450f55213600e94541604b75d46dc06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T01:45:07.929151608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:45:08.150266267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:45:08.835643542Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T01:45:09.084146786Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:45:09.447237478Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9dfa40a0da3b1a8a7c34abc596d81ede2dba4ecd5c0a7211086d6685da1ce6ef",
                    "sha256:d8e80354a27bd63efe88c985a741e48706e4a069e9956d55a28e333a959d35e3",
                    "sha256:d3d5e1591287f88a5b2aa5bfcdbf462785abdee6f7a7bc3e9f17ca512e00c710",
                    "sha256:79ca8e799ed493a0435b9dd9afe74fb9f539defbdf658fdfe959db4f6cf08813",
                    "sha256:2d35c11015ca84641c97e506b79992a570704ca3fa4c458938a0ecdba1ad5616",
                    "sha256:50bf54927f715cfce37d2b039525542521216546e2b21d03315a0cb4c5d22f49"
                ]
            }
        },
        "1-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5db9d59bd8c97dfe3d7878699325c00fd5e33eadc1f93ad22380aa9e76638cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "191b1ff07e2ba13917f13295f42ecfda308557a3c912cc0796dc05ee32e52673",
            "container_config": {
                "Hostname": "191b1ff07e2b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5db9d59bd8c97dfe3d7878699325c00fd5e33eadc1f93ad22380aa9e76638cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-30T22:54:48.143096139Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:40.704160499Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c13ab388a8e4c772b97ec8f6d2c576bece32cecdcfb6fee5175e1d3f613dd12 in / "
                },
                {
                    "created": "2019-01-30T22:19:40.859176347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:50:25.98069813Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:50:27.052105204Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-30T22:50:27.314512678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:45.699795128Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-30T22:54:46.479702878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:46.727719033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:47.81248006Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-30T22:54:48.143096139Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629164d914fc35be714ea121054f0a512ace424b675daa808ae037d6706c343f",
                    "sha256:af45321294a955bcaa746a303c4b65553a0f715053e814351b0d9fb363b2edc0",
                    "sha256:87a4d5fa9c89941f0b98a3b230886120665e23ab8b4ed56b3335a5fea58cfe55",
                    "sha256:e50b19bd2cfc7f977dea516cb77f815d1d77c16808290a16dd91ff5d7d50d5c5",
                    "sha256:be118fd816b43be6573a47267a4d8d3ce0950d3bb57f98f8e558b5962d0c4d88"
                ]
            }
        },
        "1-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:878a3c395544f60d4fd980c7dc0d6f5338ecb2826f348fe5005c22bec06c4e2f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f19a974697bcb37b0d3f3bd2ea301658db5d93f2b2a935702d64c6df2e9c2b82",
            "container_config": {
                "Hostname": "f19a974697bc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:878a3c395544f60d4fd980c7dc0d6f5338ecb2826f348fe5005c22bec06c4e2f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-30T22:50:13.171380392Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:46.858068773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91fb97ea3549e52e7b6e22b93a6736cf915c756f3d13348406d8ad5f1a872680 in / "
                },
                {
                    "created": "2019-01-30T22:19:47.011395921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:41:04.0365714Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:41:05.092248759Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-30T22:45:53.799626193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:50:10.805135768Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-30T22:50:11.555127073Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:50:11.774542783Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:50:12.883210649Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-30T22:50:13.171380392Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb",
                    "sha256:6a365d07810ac08ed35567c641a63fc13f710f3db2165664d47240d0d3d1892f",
                    "sha256:bf8c13944a7828d5dfe569fdb621051752ff480be8b8cf70e0679a21fd04c711",
                    "sha256:237683ba092d2ca72af35dc149005bc06c6781b092e5c62a5e7f59e20588a77f",
                    "sha256:8e9fe3d14739032aa9975a82a514bb4a1fc79ebdee29f9617e21c60b811a934d"
                ]
            }
        },
        "1-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5309071321ebfc6c0c564e0848ed25ccee1a4962452a80400059fe05c088467",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d4da5f2d6a07c62ec1e26d41950cbde20d7539e97d2c613f55b479575dc70296",
            "container_config": {
                "Hostname": "d4da5f2d6a07",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c5309071321ebfc6c0c564e0848ed25ccee1a4962452a80400059fe05c088467",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-15T23:26:53.037829998Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-15T23:24:38.273844115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:26:51.581479946Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-15T23:26:52.030015909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:26:52.198818375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:26:52.850411309Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-15T23:26:53.037829998Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:482782590ee806e0f326af3e3dbeca30b0b4eb040b9d62d722d4810f9464a35f",
                    "sha256:5362532dda01707bb2150512b2d4bc368258fd47d0da1749ace692419356a444"
                ]
            }
        },
        "1-bookworm": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.3",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-07T16:32:49Z",
            "history": [
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9a9fc37b874060c713002ae1ac220f097edd7c6576116c22bb15aad8229b1b3 in / "
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\tsq \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOLANG_VERSION=1.22.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bbe1a212f7e9f1baaef62491a51254f3adda514c22632ea719f62713fad80f77",
                    "sha256:d7d4c2f9d26b2dad32b86ed9739919f76ae423f16aa103924c183048810290de",
                    "sha256:8845ab872c1ce04cf64c4755aa585386c7ebe1b7633d977d275d6f2d2146000d",
                    "sha256:ed5bf86b995984a5211f5e018e201ed3146923e82a385b0542db04ea4b152076",
                    "sha256:dbc78f895659e011c02f7b63ab5c93f33c34880fdc3175f9b9a3f2a0bfb0dd6b",
                    "sha256:a8a2007b3a9651cb25203b522b09f261118ec4215a80318a231150732d43422b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-bullseye": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.3",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "WorkingDir": "/go"
            },
            "created": "2024-05-07T16:32:49Z",
            "history": [
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc7856fc1fcc8bba68d0c729e34f64f4f113195167d677167a52eaa2c9760a19 in / "
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOLANG_VERSION=1.22.3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOTOOLCHAIN=local",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV GOPATH=/go",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "COPY /usr/local/go/ /usr/local/go/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "RUN /bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-07T16:32:49Z",
                    "created_by": "WORKDIR /go",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:82677505c894548130a3c97e95faa57399f02ea2fb97667d934fd6b807ea7108",
                    "sha256:69f16cc74eb02e50db2c5c68b07c587ad1f88dcbc5a8a76a73890540c24feca1",
                    "sha256:71e1aa306a5ac0762bb41f0269f0d721c5eac77c2a6cfe0a09c38958ad7d954c",
                    "sha256:792b2c067b2b3a1bfd8c58ce32aa2e633ac6a8b70a881571be7d64d6e8cf6b1e",
                    "sha256:f10d39b23ae658374b082545ff7fa19920577f63ee25e7133971e691e9603800",
                    "sha256:a55632244427727d709b24a8dca64592dea82c4842e4f4355fc025a94fea51cf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
                ]
            }
        },
        "1-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6f9943f9b7ab48b984eba535e30671b9ea31081930204deb4ff203fb468996f1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ec65fb09c18795dc01468bc1dc065756af466e3554e535d802b11e453d172573",
            "container_config": {
                "Hostname": "ec65fb09c187",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6f9943f9b7ab48b984eba535e30671b9ea31081930204deb4ff203fb468996f1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-06-13T17:46:25.181300282Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-06-12T23:21:19.393282689Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:54838b3dbf7839dadd0b29835bbe53ecbfdfde657ef8671ec5ac3cf5867ea069 in / "
                },
                {
                    "created": "2023-06-12T23:21:19.887878758Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T03:31:27.874873403Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T03:31:54.926523752Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T17:46:13.945542067Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-06-13T17:46:14.457169495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T17:46:14.543226226Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T17:46:23.605317697Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-amd64.tar.gz'; \t\t\tsha256='d7ec48cde0d3d2be2c69203bc3e0a44de8660b9c09a6e85c4732a3f7dc442612'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-armv6l.tar.gz'; \t\t\tsha256='79d8210efd4390569912274a98dffc16eb85993cccdeef4d704e9b0dfd50743a'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-arm64.tar.gz'; \t\t\tsha256='aa2fab0a7da20213ff975fa7876a66d47b48351558d98851b87d1cfef4360d09'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-386.tar.gz'; \t\t\tsha256='d394ac8fecf66812c78ffba7fb9a265bb1b9917564c7fd77f0edb0df6d5777a1'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-ppc64le.tar.gz'; \t\t\tsha256='049b8ab07d34077b90c0642138e10207f6db14bdd1743ea994a21e228f8ca53d'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.20.5.linux-s390x.tar.gz'; \t\t\tsha256='bac14667f1217ccce1d2ef4e204687fe6191e6dc19a8870cfb81a41f78b04e48'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.5.src.tar.gz'; \t\tsha256='9a15c133ba2cfafe79652f4815b62e7cfc267f68df1b9454c6ab2a3ca8b96a88'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\t( \t\t\t. /etc/os-release; \t\t\techo \"deb https://deb.debian.org/debian $VERSION_CODENAME-backports main\" > /etc/apt/sources.list.d/backports.list; \t\t\t\t\t\tapt-get update; \t\t\tapt-get install -y --no-install-recommends -t \"$VERSION_CODENAME-backports\" golang-go; \t\t); \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2023-06-13T17:46:24.402273564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T17:46:24.484022802Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-13T17:46:25.090628676Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-06-13T17:46:25.181300282Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6af7a54a0a0dc3d3b622e2ffb19b80c55b3e29b07857efb3d818517cad416e3b",
                    "sha256:53d40515380c2dce4348df0565356261e1795bd9c68f0263fa14d0bdbf52521d",
                    "sha256:eccb9ed74974c6ffbb0ffe29805839db91d2b4f4e2cdc61ee70650d6210e7fbd",
                    "sha256:c486ff1afa2faf9b505801795657d8890ff65f5d66b18bd89ed26ef70267ca62",
                    "sha256:495689a1bd47de24c7877b4488554287d2a4ce054ebcd15266fce721f30ca188",
                    "sha256:3c19040bdfbd09209dae6be5c02e447d6cbf92547d4564806c55bcbdfa835b1a"
                ]
            }
        },
        "1-jessie": {
            "architecture": "amd64",
            "config": {
                "Hostname": "e24d0b5cccc1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a458f43d894b5c2e8b6d2616c56ba273300e12eb4b8c2c8b47487c9bab7ae2d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "5d2b02195a6db50c5ce1af4830d69e4eab48341a33ad85784d2bf94c2f798114",
            "container_config": {
                "Hostname": "e24d0b5cccc1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a458f43d894b5c2e8b6d2616c56ba273300e12eb4b8c2c8b47487c9bab7ae2d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-07-26T05:14:12.044951654Z",
            "docker_version": "17.03.2-ce",
            "history": [
                {
                    "created": "2017-07-24T16:51:25.302466408Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a023a99f7d01868b164d63bfaf8aabc7f271659c69939c3854f041f5a3217428 in / "
                },
                {
                    "created": "2017-07-24T16:51:25.711083944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-24T17:24:28.724048378Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-24T17:24:29.383491771Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-24T17:25:00.480077695Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-26T05:14:02.600513352Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-26T05:14:02.876528424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:10.27062167Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1862f4c3d3907e59b04a757cfda0ea7aa9ef39274af99a784f5be843c80c6772' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c30a3e24736ca776fc6314e5092fb8584bd3a4a2c2fa7307ae779ba2735e668' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ff4895eb68fb1daaec41c540602e8bb4c1e8bb2f0e7017367171913fc9995ed2' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e5fb00adfc7291e657f1f3d31c09e74890b5328e6f991a3f395ca72a8c4dc0b3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e2ec3e7c293701b57ca1f32b37977ac9968f57b3df034f2cc2d531e80671e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='5f5dea2447e7dcfdc50fa6b94c512e58bfba5673c039259fd843f68829d99fa6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-07-26T05:14:10.599191313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:10.784245382Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:11.463649764Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-07-26T05:14:11.715498148Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:12.044951654Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2c40c66f7667aefbb18f7070cf52fae7abbe9b66e49b4e1fd740544e7ceaebdc",
                    "sha256:654f45ecb7e3a022dd1a10bf47b348b820659e8d9915d87faae403b0b9705b0d",
                    "sha256:f3ed6cb59ab087e7b11685e73a58a2904d77221363cc6e7741280e9e41e26958",
                    "sha256:6367890e52bf396be1d13890e2a52b6222987ce2285770e401768e7ce9183b33",
                    "sha256:74f1f103792f1fef074597488b8e26823b53d69a08f56b503ab419a29b818c59",
                    "sha256:4ff814ecd9f43a14b7fe6a23306b0045701d7a92590774b30322e06826e3cfaa",
                    "sha256:36ba0159de5612ef8ae7156c8564ccd0768becb5a5227649842ed3ae8db3b4af"
                ]
            }
        },
        "1-onbuild": {
            "architecture": "amd64",
            "config": {
                "Hostname": "e24d0b5cccc1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "go-wrapper",
                    "run"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e1ee97df6a07a1fa067fcba77b4f9544a04522d0674fba716c1e5ce2f3742eba",
                "Volumes": null,
                "WorkingDir": "/go/src/app",
                "Entrypoint": null,
                "OnBuild": [
                    "COPY . /go/src/app",
                    "RUN go-wrapper download",
                    "RUN go-wrapper install"
                ],
                "Labels": {}
            },
            "container": "63448f5117ea0d52bc0438970210385295916aff5a59ef727d4437e77ff50809",
            "container_config": {
                "Hostname": "e24d0b5cccc1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ONBUILD RUN go-wrapper install"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e1ee97df6a07a1fa067fcba77b4f9544a04522d0674fba716c1e5ce2f3742eba",
                "Volumes": null,
                "WorkingDir": "/go/src/app",
                "Entrypoint": null,
                "OnBuild": [
                    "COPY . /go/src/app",
                    "RUN go-wrapper download",
                    "RUN go-wrapper install"
                ],
                "Labels": {}
            },
            "created": "2017-07-26T05:14:17.57552537Z",
            "docker_version": "17.03.2-ce",
            "history": [
                {
                    "created": "2017-07-24T16:51:25.302466408Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a023a99f7d01868b164d63bfaf8aabc7f271659c69939c3854f041f5a3217428 in / "
                },
                {
                    "created": "2017-07-24T16:51:25.711083944Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-24T17:24:28.724048378Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-24T17:24:29.383491771Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-24T17:25:00.480077695Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-26T05:14:02.600513352Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-26T05:14:02.876528424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:10.27062167Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1862f4c3d3907e59b04a757cfda0ea7aa9ef39274af99a784f5be843c80c6772' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c30a3e24736ca776fc6314e5092fb8584bd3a4a2c2fa7307ae779ba2735e668' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ff4895eb68fb1daaec41c540602e8bb4c1e8bb2f0e7017367171913fc9995ed2' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e5fb00adfc7291e657f1f3d31c09e74890b5328e6f991a3f395ca72a8c4dc0b3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e2ec3e7c293701b57ca1f32b37977ac9968f57b3df034f2cc2d531e80671e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='5f5dea2447e7dcfdc50fa6b94c512e58bfba5673c039259fd843f68829d99fa6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-07-26T05:14:10.599191313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:10.784245382Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:11.463649764Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-07-26T05:14:11.715498148Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:12.044951654Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                },
                {
                    "created": "2017-07-26T05:14:16.483714788Z",
                    "created_by": "/bin/sh -c mkdir -p /go/src/app"
                },
                {
                    "created": "2017-07-26T05:14:16.731761668Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go/src/app",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:16.951418085Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"go-wrapper\" \"run\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:17.163230539Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD COPY . /go/src/app",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:17.371809263Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD RUN go-wrapper download",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-26T05:14:17.57552537Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD RUN go-wrapper install",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2c40c66f7667aefbb18f7070cf52fae7abbe9b66e49b4e1fd740544e7ceaebdc",
                    "sha256:654f45ecb7e3a022dd1a10bf47b348b820659e8d9915d87faae403b0b9705b0d",
                    "sha256:f3ed6cb59ab087e7b11685e73a58a2904d77221363cc6e7741280e9e41e26958",
                    "sha256:6367890e52bf396be1d13890e2a52b6222987ce2285770e401768e7ce9183b33",
                    "sha256:74f1f103792f1fef074597488b8e26823b53d69a08f56b503ab419a29b818c59",
                    "sha256:4ff814ecd9f43a14b7fe6a23306b0045701d7a92590774b30322e06826e3cfaa",
                    "sha256:36ba0159de5612ef8ae7156c8564ccd0768becb5a5227649842ed3ae8db3b4af",
                    "sha256:dfd527c9b5e79f31ea1765aa480ea5206f589bbe51dbb76d716f9915f4db7a93"
                ]
            }
        },
        "1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4af23716a789023f266834a9fccb120585cacf557c823ffc049879be0f064905",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e60a1f2a7edfeaab42c1d3aeb294f0540869c77b124b6d950977bc7d6d39f224",
            "container_config": {
                "Hostname": "e60a1f2a7edf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:4af23716a789023f266834a9fccb120585cacf557c823ffc049879be0f064905",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-06-23T18:50:40.067219697Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-06-23T00:22:10.298769616Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c5e0bec5f780d9c6bfbafcb9e6ed641781dd7f7c2853a0c49d6613e9fef9516 in / "
                },
                {
                    "created": "2022-06-23T00:22:10.793363229Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T00:54:25.874728438Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tapt-transport-https \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T00:54:30.381820166Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-06-23T00:54:48.198114338Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T18:49:21.159601537Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-23T18:49:21.575665393Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T18:50:23.773871423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T18:50:38.084483013Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-amd64.tar.gz'; \t\t\tsha256='956f8507b302ab0bb747613695cdae10af99bbd39a90cae522b7c0302cc27245'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-armv6l.tar.gz'; \t\t\tsha256='b8f0b5db24114388d5dcba7ca0698510ea05228b0402fcbeb0881f74ae9cb83b'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-arm64.tar.gz'; \t\t\tsha256='beacbe1441bee4d7978b900136d1d6a71d150f0a9bb77e9d50c822065623a35a'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-386.tar.gz'; \t\t\tsha256='72b73da021397a3a1ce182c19d2a890a5346bfe80885d9dd7d1ff04ce6597938'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-ppc64le.tar.gz'; \t\t\tsha256='5d42bd252e7af9f854df92e46bb2e88be7b2fb310cc937c0fe091afd8c4f2016'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.18.3.linux-s390x.tar.gz'; \t\t\tsha256='ebb4efddec5bbd22bdd9c87137cb3dd59e874b5dfcf93d00bef351c60d2c7401'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.18.3.src.tar.gz'; \t\tsha256='0012386ddcbb5f3350e407c679923811dbd283fcdc421724931614a842ecbc2d'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-06-23T18:50:39.276307504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T18:50:39.380615424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T18:50:39.958390557Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-06-23T18:50:40.067219697Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde6f41d1fcca77df950cac35c7103996a9333244a7406248c9b6898215469",
                    "sha256:b6f65ede2a5249236346e31f00ea5dbb0aabcc0c90ad3b13f3c7d611eaf06384",
                    "sha256:cf4591f020d588e77b92f8f3819a63f201548009d3b1fcd705ea830918a77920",
                    "sha256:5728c466456c93a6023c830d28c1a15ba3f27e03d737b6252ec8fa24567c93ae",
                    "sha256:7343a1e538fa9264f5785b32e2de6eab46f8d39c0054f9d4b42c1cf2077fc0f1",
                    "sha256:fb21e47b96365a31766f83b64b8d6f12cb63dfa41f69efe15aaf206787e3c6a2",
                    "sha256:a247dccb92664bd14103f71304b05a7e145a56c527abfa8965e274e83a823c4f"
                ]
            }
        },
        "1-wheezy": {
            "architecture": "amd64",
            "config": {
                "Hostname": "6fa62f61b2c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.7.5",
                    "GOLANG_DOWNLOAD_URL=https://golang.org/dl/go1.7.5.linux-amd64.tar.gz",
                    "GOLANG_DOWNLOAD_SHA256=2e4dd6c44f0693bef4e7b46cc701513d74c3cc44f2419bf519d7868b12931ac3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2fe02301f4a32275cdf649ec1f1835e38f20c65c5066a3f62401e2cf73da4f06",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "0a760dbd1e5fe968b3f1d889d140b1405a00dac24e246f58fa3844c38940392b",
            "container_config": {
                "Hostname": "6fa62f61b2c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.7.5",
                    "GOLANG_DOWNLOAD_URL=https://golang.org/dl/go1.7.5.linux-amd64.tar.gz",
                    "GOLANG_DOWNLOAD_SHA256=2e4dd6c44f0693bef4e7b46cc701513d74c3cc44f2419bf519d7868b12931ac3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2fe02301f4a32275cdf649ec1f1835e38f20c65c5066a3f62401e2cf73da4f06",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-01-27T22:37:44.356509123Z",
            "docker_version": "1.12.6",
            "history": [
                {
                    "created": "2017-01-16T20:41:52.324057922Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a341378be341bc318a57379c0a4b72f182f93ad617f08164343662e789b7244b in / "
                },
                {
                    "created": "2017-01-16T20:42:00.783951945Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-17T00:02:40.322934684Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-01-17T00:03:12.510683623Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-01-17T00:40:29.956731819Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-01-27T22:37:29.610522365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-27T22:37:30.071712276Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_DOWNLOAD_URL=https://golang.org/dl/go1.7.5.linux-amd64.tar.gz",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-27T22:37:30.543788091Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_DOWNLOAD_SHA256=2e4dd6c44f0693bef4e7b46cc701513d74c3cc44f2419bf519d7868b12931ac3",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-27T22:37:40.687306958Z",
                    "created_by": "/bin/sh -c curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \t&& echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \t&& tar -C /usr/local -xzf golang.tar.gz \t&& rm golang.tar.gz"
                },
                {
                    "created": "2017-01-27T22:37:41.322625904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-27T22:37:41.835770132Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-27T22:37:43.054515098Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-01-27T22:37:43.578232243Z",
                    "created_by": "/bin/sh -c #(nop)  WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-01-27T22:37:44.356509123Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f163a3fb249e2138f9c2921d5b61bb369aa0068fc833d5c4ada7780f3ca17398",
                    "sha256:55b8316b322df46c5300d080341d425dc35fd5e4ef561f593b952577d9671c7f",
                    "sha256:2d7edbc77da73de01f3bbdb4e988ced1d2f1f6d82fbb3374ff25feda833798a1",
                    "sha256:0465645033c3b6d57f1e183b23ea16e4d30f821c8231ce09904df7d7d457a305",
                    "sha256:bd93c45e5d86cdaab47d27a10a97f5489ab375ea27630569c32aaeb9d3c34f1f",
                    "sha256:db659af779018f888f2d03662a92b549f62fa887ed6fafc3d0769072dfcbe4cb",
                    "sha256:f2a89b1fa8ab0fa67ce4525aaf94d6779347a1098d7db69571d5137b071b082e"
                ]
            }
        },
        "1.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:516341d7498b6813510c4c86a22e074bc61ee324d760c599d8138e47f229930e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c5a46695fc54758f58dbd590ac06fc5915ed5ba73cf5202eb83145bfc4ffbdc8",
            "container_config": {
                "Hostname": "c5a46695fc54",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:516341d7498b6813510c4c86a22e074bc61ee324d760c599d8138e47f229930e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:54:14.832348012Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T03:30:01.714540068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fec879fdca802d6920b8981b409b19ded75aff693eaaba1ba4cf5ecb7594fdb in / "
                },
                {
                    "created": "2019-02-06T03:30:02.095682729Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T05:51:03.607050513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T05:51:14.391936075Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T05:51:50.706559429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:52:35.276902308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:53:53.397782192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:12.340934316Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:54:13.120039084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:13.356529635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:14.543298851Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:54:14.832348012Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13d5529fd232cacdd8cd561148560e0bf5d65dbc1149faf0c68240985607c303",
                    "sha256:abc3250a6c7ff22a6a366d9c175033ef0b2859f9d03676410c2f21d0fe568da4",
                    "sha256:578414b395b98d02c5f284e83c8db080afcbbde8012478054af22df2edb9336d",
                    "sha256:6257fa9f9597f43a167036d7bf748c5872c38803fa09e2493e119e512c6ac949",
                    "sha256:77b4b6493272fcf3797f846518defabab8fc232e67752f42b5cc42d48542ce19",
                    "sha256:facf15440126dde4d45bc8e8ede8fd04b2e06927b6d0bf2bea1d06c88ecd7bb1",
                    "sha256:7b9a9415bf3ab2576e5354a153ecae7f62860dc967452eecbbaea85550f1210b"
                ]
            }
        },
        "1.10-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f06944e66e700aceb035f1a53b2ec62b4dd8a2a42c0aac3e5646238dbe2e8dc6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b5109f5e21ccf699a09840bd7507bf7530c8cf961bef3f29b58896cb68cb8ef0",
            "container_config": {
                "Hostname": "b5109f5e21cc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f06944e66e700aceb035f1a53b2ec62b4dd8a2a42c0aac3e5646238dbe2e8dc6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-05T20:28:13.203389327Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:52.585366638Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a1fc9351afe35698918545b2d466d9805c2e8afcec52f916785ee65bbafeced in / "
                },
                {
                    "created": "2019-01-30T22:19:52.734509838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:19:38.154965526Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-05T20:19:38.870907345Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-05T20:26:15.191655539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:11.714672377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-05T20:28:12.142718125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:12.32367722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:13.015300233Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-05T20:28:13.203389327Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503e53e365f34399c4d58d8f4e23c161106cfbce4400e3d0a0357967bad69390",
                    "sha256:c1df871adf385af8f0e2e2f4beb1e7b31b5c6e4a3aa82b2dae76adc31e384dcf",
                    "sha256:2b7fb36704d4d78bf2abb1ea6ed984dcc23604ae8fca4ec9c50dcfe4b411514f",
                    "sha256:95bf22a926bc4a7efe8dcb6a46d82a950b42aab5809607e182e23290018368e7",
                    "sha256:59ce1ea04bf13fb64a3a0c38e14f929b6de4dc4d6a8cf6781da87d39f1b9f914"
                ]
            }
        },
        "1.10-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4636e647f6718f0a35fbfa892b5be8a020b5c8aab7ec30b552704d4d22dcfbb0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f21a4b65da17f94d6eda5d2b88f5f8166986d8e15ff4045fb039f79e3de2ffc3",
            "container_config": {
                "Hostname": "f21a4b65da17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4636e647f6718f0a35fbfa892b5be8a020b5c8aab7ec30b552704d4d22dcfbb0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-30T23:01:23.923724176Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:40.704160499Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c13ab388a8e4c772b97ec8f6d2c576bece32cecdcfb6fee5175e1d3f613dd12 in / "
                },
                {
                    "created": "2019-01-30T22:19:40.859176347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:50:25.98069813Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:50:27.052105204Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-30T22:57:58.763550964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T23:01:21.668302798Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-30T23:01:22.299778961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T23:01:22.543782624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T23:01:23.687155458Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-30T23:01:23.923724176Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629164d914fc35be714ea121054f0a512ace424b675daa808ae037d6706c343f",
                    "sha256:af45321294a955bcaa746a303c4b65553a0f715053e814351b0d9fb363b2edc0",
                    "sha256:87a4d5fa9c89941f0b98a3b230886120665e23ab8b4ed56b3335a5fea58cfe55",
                    "sha256:feac77fb4503d599e723cc1be181901a2dd199618663dc935c36ece297a57626",
                    "sha256:d685ff33e52c3122d65bb4054bbd165e0a2dbcb78dbfdd20a25954d390c6aea1"
                ]
            }
        },
        "1.10-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:533a0e3cf7595ccb166d95728e763cc69ed2cd6ea3084478d7f02b807d37cc1e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6bfa9ace2cb0f9baa853b90aa0becbf278b9403405aebf45cf3a2af3ec34af0c",
            "container_config": {
                "Hostname": "6bfa9ace2cb0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:533a0e3cf7595ccb166d95728e763cc69ed2cd6ea3084478d7f02b807d37cc1e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-30T22:57:49.103306794Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:46.858068773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91fb97ea3549e52e7b6e22b93a6736cf915c756f3d13348406d8ad5f1a872680 in / "
                },
                {
                    "created": "2019-01-30T22:19:47.011395921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:41:04.0365714Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:41:05.092248759Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-30T22:54:59.17568222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:57:46.861546618Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-30T22:57:47.548844947Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:57:47.783161564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:57:48.85644544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-30T22:57:49.103306794Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb",
                    "sha256:6a365d07810ac08ed35567c641a63fc13f710f3db2165664d47240d0d3d1892f",
                    "sha256:bf8c13944a7828d5dfe569fdb621051752ff480be8b8cf70e0679a21fd04c711",
                    "sha256:515831e7fc6dcfcdec42ff5ff9a59f2c55353882ae9e9b4a96ad6ef167c89160",
                    "sha256:75a35da1f5133c90db9b866d80e8ba2a3c8b527ee8e43fa998cc76814c3853cf"
                ]
            }
        },
        "1.10-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f06944e66e700aceb035f1a53b2ec62b4dd8a2a42c0aac3e5646238dbe2e8dc6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b5109f5e21ccf699a09840bd7507bf7530c8cf961bef3f29b58896cb68cb8ef0",
            "container_config": {
                "Hostname": "b5109f5e21cc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f06944e66e700aceb035f1a53b2ec62b4dd8a2a42c0aac3e5646238dbe2e8dc6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-05T20:28:13.203389327Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:52.585366638Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a1fc9351afe35698918545b2d466d9805c2e8afcec52f916785ee65bbafeced in / "
                },
                {
                    "created": "2019-01-30T22:19:52.734509838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:19:38.154965526Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-05T20:19:38.870907345Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-05T20:26:15.191655539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:11.714672377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-05T20:28:12.142718125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:12.32367722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:13.015300233Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-05T20:28:13.203389327Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503e53e365f34399c4d58d8f4e23c161106cfbce4400e3d0a0357967bad69390",
                    "sha256:c1df871adf385af8f0e2e2f4beb1e7b31b5c6e4a3aa82b2dae76adc31e384dcf",
                    "sha256:2b7fb36704d4d78bf2abb1ea6ed984dcc23604ae8fca4ec9c50dcfe4b411514f",
                    "sha256:95bf22a926bc4a7efe8dcb6a46d82a950b42aab5809607e182e23290018368e7",
                    "sha256:59ce1ea04bf13fb64a3a0c38e14f929b6de4dc4d6a8cf6781da87d39f1b9f914"
                ]
            }
        },
        "1.10-rc": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f386dd7c48e742e6114d96130c48c04cff85de3dbcdc6066674fce56c2619b12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5bac568a858c4c134760527f00159d09a363a3f32e93281ab34c98d3e3716865",
            "container_config": {
                "Hostname": "5bac568a858c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f386dd7c48e742e6114d96130c48c04cff85de3dbcdc6066674fce56c2619b12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-15T15:59:38.278489819Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T01:58:24.711712856Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d3b21b18d7bc6d6db1349979cf0e68073647e90c892aebab0da5d679b5550eb in / "
                },
                {
                    "created": "2018-02-15T02:01:04.479066259Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T03:55:51.458955454Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T03:55:59.288793647Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T03:56:50.243358316Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T15:59:18.847823075Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T15:59:19.453915141Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:36.038921352Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-15T15:59:36.613186061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:36.993912976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:37.96127586Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-15T15:59:38.278489819Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8568818b1f7f534832b393c531edfcb4a30e7eb40b573e68fdea90358987231f",
                    "sha256:f7d58f7584447139266bdfe945c825a2a060f7fcbe0b07228ab97774f3a149ab",
                    "sha256:a6afffb1947cf43119b7a7a87d9d752440f400866005d2f60e23f5c06abd91c1",
                    "sha256:c8718ae77a2a4b3b9aeef18b67a64becf3b3b0a2715362c4b1a082d98d510009",
                    "sha256:8f16f42ec6a87d9ad63ef7ccc0f81f52d66362604e311da7982b94e23b0cacbc",
                    "sha256:4cd4c4873c878ad116cf39af19fa7e6ed4bf5dc84cac9d5546296c50f6071a4b",
                    "sha256:c70a4304d20eedc9be53bc7f563cddee82488ee6ea5e11b270c310de0c417810"
                ]
            }
        },
        "1.10-rc-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:476391484a5f081f5ca8ae5abf5a44555111a2f4a90234558008f7114531c91a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c76b24d996a4d87892198978b397b73e1e38be27f6afd31becaae9073434b94c",
            "container_config": {
                "Hostname": "c76b24d996a4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:476391484a5f081f5ca8ae5abf5a44555111a2f4a90234558008f7114531c91a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T01:14:51.111075485Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T01:10:32.432612012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:10:32.829078813Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T01:11:56.678055781Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T01:14:49.771050015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:14:50.075292753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:14:50.856325826Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T01:14:51.111075485Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:a4b7dd2c293198bfec9945b95a49921a91278dd4804c6dfec6c8ce5dd70a74c9",
                    "sha256:1ce3e6954192a938c5a9624f0499401cfcdb057a7cfbfd09d4ddcd3ebe979cef",
                    "sha256:66c549f33f195129dab5e70f5eaf1bcfb0b48d1b3f348cceaf262f756d34a188"
                ]
            }
        },
        "1.10-rc-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:476391484a5f081f5ca8ae5abf5a44555111a2f4a90234558008f7114531c91a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c76b24d996a4d87892198978b397b73e1e38be27f6afd31becaae9073434b94c",
            "container_config": {
                "Hostname": "c76b24d996a4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:476391484a5f081f5ca8ae5abf5a44555111a2f4a90234558008f7114531c91a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T01:14:51.111075485Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T01:10:32.432612012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:10:32.829078813Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T01:11:56.678055781Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T01:14:49.771050015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:14:50.075292753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:14:50.856325826Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T01:14:51.111075485Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:a4b7dd2c293198bfec9945b95a49921a91278dd4804c6dfec6c8ce5dd70a74c9",
                    "sha256:1ce3e6954192a938c5a9624f0499401cfcdb057a7cfbfd09d4ddcd3ebe979cef",
                    "sha256:66c549f33f195129dab5e70f5eaf1bcfb0b48d1b3f348cceaf262f756d34a188"
                ]
            }
        },
        "1.10-rc-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f386dd7c48e742e6114d96130c48c04cff85de3dbcdc6066674fce56c2619b12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5bac568a858c4c134760527f00159d09a363a3f32e93281ab34c98d3e3716865",
            "container_config": {
                "Hostname": "5bac568a858c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f386dd7c48e742e6114d96130c48c04cff85de3dbcdc6066674fce56c2619b12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-15T15:59:38.278489819Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T01:58:24.711712856Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d3b21b18d7bc6d6db1349979cf0e68073647e90c892aebab0da5d679b5550eb in / "
                },
                {
                    "created": "2018-02-15T02:01:04.479066259Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T03:55:51.458955454Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T03:55:59.288793647Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T03:56:50.243358316Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T15:59:18.847823075Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T15:59:19.453915141Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:36.038921352Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-15T15:59:36.613186061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:36.993912976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:37.96127586Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-15T15:59:38.278489819Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8568818b1f7f534832b393c531edfcb4a30e7eb40b573e68fdea90358987231f",
                    "sha256:f7d58f7584447139266bdfe945c825a2a060f7fcbe0b07228ab97774f3a149ab",
                    "sha256:a6afffb1947cf43119b7a7a87d9d752440f400866005d2f60e23f5c06abd91c1",
                    "sha256:c8718ae77a2a4b3b9aeef18b67a64becf3b3b0a2715362c4b1a082d98d510009",
                    "sha256:8f16f42ec6a87d9ad63ef7ccc0f81f52d66362604e311da7982b94e23b0cacbc",
                    "sha256:4cd4c4873c878ad116cf39af19fa7e6ed4bf5dc84cac9d5546296c50f6071a4b",
                    "sha256:c70a4304d20eedc9be53bc7f563cddee82488ee6ea5e11b270c310de0c417810"
                ]
            }
        },
        "1.10-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:516341d7498b6813510c4c86a22e074bc61ee324d760c599d8138e47f229930e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c5a46695fc54758f58dbd590ac06fc5915ed5ba73cf5202eb83145bfc4ffbdc8",
            "container_config": {
                "Hostname": "c5a46695fc54",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:516341d7498b6813510c4c86a22e074bc61ee324d760c599d8138e47f229930e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:54:14.832348012Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T03:30:01.714540068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fec879fdca802d6920b8981b409b19ded75aff693eaaba1ba4cf5ecb7594fdb in / "
                },
                {
                    "created": "2019-02-06T03:30:02.095682729Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T05:51:03.607050513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T05:51:14.391936075Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T05:51:50.706559429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:52:35.276902308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:53:53.397782192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:12.340934316Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:54:13.120039084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:13.356529635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:14.543298851Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:54:14.832348012Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13d5529fd232cacdd8cd561148560e0bf5d65dbc1149faf0c68240985607c303",
                    "sha256:abc3250a6c7ff22a6a366d9c175033ef0b2859f9d03676410c2f21d0fe568da4",
                    "sha256:578414b395b98d02c5f284e83c8db080afcbbde8012478054af22df2edb9336d",
                    "sha256:6257fa9f9597f43a167036d7bf748c5872c38803fa09e2493e119e512c6ac949",
                    "sha256:77b4b6493272fcf3797f846518defabab8fc232e67752f42b5cc42d48542ce19",
                    "sha256:facf15440126dde4d45bc8e8ede8fd04b2e06927b6d0bf2bea1d06c88ecd7bb1",
                    "sha256:7b9a9415bf3ab2576e5354a153ecae7f62860dc967452eecbbaea85550f1210b"
                ]
            }
        },
        "1.10.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:17d41086dc256ec43f77a7340acfb5a3f721818a7bfb67ca9107dc5a674e122d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "3acad27dea9e1706360303f2ca6fd10b33a58454f817e54164a1a3984ba45217",
            "container_config": {
                "Hostname": "3acad27dea9e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:17d41086dc256ec43f77a7340acfb5a3f721818a7bfb67ca9107dc5a674e122d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-03-15T04:57:34.904587353Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-03-13T22:26:49.153534342Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b380df301ccb5ca09f0d7cd5697ed402fa55f3e9bc5df2f4d489ba31f28de58a in / "
                },
                {
                    "created": "2018-03-13T22:26:49.547884802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-13T23:56:19.194216172Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-13T23:56:22.934435097Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-03-13T23:56:55.333999982Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-15T04:57:17.107597172Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-15T04:57:17.471280393Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T04:57:32.899920513Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6ff665a9ab61240cf9f11a07e03e6819e452a618a32ea05bbb2c80182f838f4f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='efb47e5c0e020b180291379ab625c6ec1c2e9e9b289336bc7169e6aa1da43fd8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2d26a9f41fd80eeb445cc454c2ba6b3d0db2fc732c53d7d0427a9f605bfc55a1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1e22e2fbcb3e551e0bf59d0f8aeb4b3f2df86714f09d2acd260c6597c43beee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='71cde197e50afe17f097f81153edb450f880267699f22453272d184e0f4681d7' ;; \t\t*) goRelArch='src'; goRelSha256='f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-03-15T04:57:33.367860194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T04:57:33.784054025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T04:57:34.609547243Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-03-15T04:57:34.904587353Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e1df5dc88d2cc2cd9a1b1680ec3cb92a2dc924a0205125d85da0c61083b4e87d",
                    "sha256:bcbe43405751dd3c9b9d0b348504e30fc66e3bb1edd53d8ba0b3919a0368f4b1",
                    "sha256:61c06e07759a0119829dfabc36c925028f4ba7436942a64e7d876acc87006f3f",
                    "sha256:20c527f217db21651cc37e2c04fcabf7d6e842326867bf9cf6637f3f009728c0",
                    "sha256:e33f0ab4ff77a6defa556e5bb618b58192dd5b1c2da98fe530528d6aad4f802c",
                    "sha256:27c2bda9e35749051f650e533dd82dd2d7150f3fc0a9bd5b463e9fdee3faece4",
                    "sha256:b7a313b78c0b5c6acc22669fbe08b8264583515a4929d2b2f530b16ea2b29f6f"
                ]
            }
        },
        "1.10.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0935ed7c6e6157c5f996dc01d01c1195fd562391fb74f6123facb477bfd649da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "94164de60891393409cc2a89254e875b56081df6a032da7312defe5454f86a32",
            "container_config": {
                "Hostname": "94164de60891",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0935ed7c6e6157c5f996dc01d01c1195fd562391fb74f6123facb477bfd649da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-17T21:19:35.776522782Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-17T21:02:53.968185542Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T21:02:54.431079075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-17T21:04:26.284558064Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-17T21:19:22.428228387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T21:19:22.681890294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T21:19:23.437439108Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-17T21:19:35.776522782Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:fdfa6a460e36ddc8ee7140707216e35ff60e258423d7ca9cc4802fb8209178bf",
                    "sha256:350bc118c9e4236b757dcd4cd99b76cbbf96a3a4095a3661f61f7fec23039a41",
                    "sha256:9146e6f8eaf43bf579b022ca66bfe640aadcfcba4825a6a196964273f78ac615"
                ]
            }
        },
        "1.10.0-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0935ed7c6e6157c5f996dc01d01c1195fd562391fb74f6123facb477bfd649da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "94164de60891393409cc2a89254e875b56081df6a032da7312defe5454f86a32",
            "container_config": {
                "Hostname": "94164de60891",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0935ed7c6e6157c5f996dc01d01c1195fd562391fb74f6123facb477bfd649da",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-17T21:19:35.776522782Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-17T21:02:53.968185542Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T21:02:54.431079075Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-17T21:04:26.284558064Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-17T21:19:22.428228387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T21:19:22.681890294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-17T21:19:23.437439108Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-17T21:19:35.776522782Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:fdfa6a460e36ddc8ee7140707216e35ff60e258423d7ca9cc4802fb8209178bf",
                    "sha256:350bc118c9e4236b757dcd4cd99b76cbbf96a3a4095a3661f61f7fec23039a41",
                    "sha256:9146e6f8eaf43bf579b022ca66bfe640aadcfcba4825a6a196964273f78ac615"
                ]
            }
        },
        "1.10.0-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:17d41086dc256ec43f77a7340acfb5a3f721818a7bfb67ca9107dc5a674e122d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "3acad27dea9e1706360303f2ca6fd10b33a58454f817e54164a1a3984ba45217",
            "container_config": {
                "Hostname": "3acad27dea9e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:17d41086dc256ec43f77a7340acfb5a3f721818a7bfb67ca9107dc5a674e122d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-03-15T04:57:34.904587353Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-03-13T22:26:49.153534342Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b380df301ccb5ca09f0d7cd5697ed402fa55f3e9bc5df2f4d489ba31f28de58a in / "
                },
                {
                    "created": "2018-03-13T22:26:49.547884802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-13T23:56:19.194216172Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-13T23:56:22.934435097Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-03-13T23:56:55.333999982Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-15T04:57:17.107597172Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-15T04:57:17.471280393Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T04:57:32.899920513Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6ff665a9ab61240cf9f11a07e03e6819e452a618a32ea05bbb2c80182f838f4f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='efb47e5c0e020b180291379ab625c6ec1c2e9e9b289336bc7169e6aa1da43fd8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2d26a9f41fd80eeb445cc454c2ba6b3d0db2fc732c53d7d0427a9f605bfc55a1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1e22e2fbcb3e551e0bf59d0f8aeb4b3f2df86714f09d2acd260c6597c43beee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='71cde197e50afe17f097f81153edb450f880267699f22453272d184e0f4681d7' ;; \t\t*) goRelArch='src'; goRelSha256='f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-03-15T04:57:33.367860194Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T04:57:33.784054025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-15T04:57:34.609547243Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-03-15T04:57:34.904587353Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e1df5dc88d2cc2cd9a1b1680ec3cb92a2dc924a0205125d85da0c61083b4e87d",
                    "sha256:bcbe43405751dd3c9b9d0b348504e30fc66e3bb1edd53d8ba0b3919a0368f4b1",
                    "sha256:61c06e07759a0119829dfabc36c925028f4ba7436942a64e7d876acc87006f3f",
                    "sha256:20c527f217db21651cc37e2c04fcabf7d6e842326867bf9cf6637f3f009728c0",
                    "sha256:e33f0ab4ff77a6defa556e5bb618b58192dd5b1c2da98fe530528d6aad4f802c",
                    "sha256:27c2bda9e35749051f650e533dd82dd2d7150f3fc0a9bd5b463e9fdee3faece4",
                    "sha256:b7a313b78c0b5c6acc22669fbe08b8264583515a4929d2b2f530b16ea2b29f6f"
                ]
            }
        },
        "1.10.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aad112a923bab77f768ea36aadb4cb63e43daae530d7809e27447de7a62b6f12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6a4d4570d0459a34e8cf128c287dca5fd154a1ac3c85c8367844117dcb645556",
            "container_config": {
                "Hostname": "6a4d4570d045",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aad112a923bab77f768ea36aadb4cb63e43daae530d7809e27447de7a62b6f12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-02T21:08:58.649082317Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T07:08:53.556603948Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9572fdb59dfbb9b032f3331bbc2a08b31e0aef5fbde44c8f2008d22bf5290cf2 in / "
                },
                {
                    "created": "2018-04-28T07:08:53.999799361Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T17:03:29.707163891Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-28T17:03:36.192541046Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-04-28T17:09:39.610061828Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-02T21:08:40.286977703Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-02T21:08:40.702777507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-02T21:08:56.576622353Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='72d820dec546752e5a8303b33b009079c15c2390ce76d67cf514991646c6127b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='feca4e920d5ca25001dc0823390df79bc7ea5b5b8c03483e5a2c54f164654936' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1e07a159414b5090d31166d1a06ee501762076ef21140dcd54cdcbe4e68a9c9b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acbe19d56123549faf747b4f61b730008b185a0e2145d220527d2383627dfe69' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='91d0026bbed601c4aad332473ed02f9a460b31437cbc6f2a37a88c0376fc3a65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e211a5abdacf843e16ac33a309d554403beb63959f96f9db70051f303035434b' ;; \t\t*) goRelArch='src'; goRelSha256='589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-02T21:08:57.088662054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-02T21:08:57.403784463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-02T21:08:58.332569159Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-02T21:08:58.649082317Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0f3a12fef684003e8dc0dfdcea32789db2179c6f9ad1e1e89bc05754ac44c6c5",
                    "sha256:001113e5519deb9f773ad630a34450167ef804321c93959e544062f995bd273c",
                    "sha256:8c2f597e360cd07042299c28735b0f3d25b68d30eb0da4fcd0db95766222002b",
                    "sha256:d6e5be03929b8dd5c3b9b49f505988000659c7eef59603836dca788763f6edbb",
                    "sha256:d2343a823576f4e05bb0bed5ade11ee7aca28b4b1da906b9d3ad016fab7d9ec8",
                    "sha256:dfcb62cd1e99195c400742d7cc487402768b6897f7403c08a3efff405cbc30ec",
                    "sha256:8c00d08080ff07610c98c578476779c6ac7032011875a0c954b27cd57df8b731"
                ]
            }
        },
        "1.10.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a495d11da89e542f2b399a384cd3ab26e8978ba539ce3a87e89851620d4a6422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6f678e1ab68c1e2390a1058f296282062af9c35023467a43a971e4632a71c007",
            "container_config": {
                "Hostname": "6f678e1ab68c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a495d11da89e542f2b399a384cd3ab26e8978ba539ce3a87e89851620d4a6422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-11T17:21:15.081254696Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-03-30T21:54:51.859934323Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-11T17:21:13.238278847Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-04-11T17:21:13.736536112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-11T17:21:14.007666799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-11T17:21:14.803479681Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-04-11T17:21:15.081254696Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:4aad2d4ac30d3e788f8fd2397de93fbf32b0a97703c424f57bb1b6f522f55d2b",
                    "sha256:d18ca62d464e3986805feb223c4a0c536cc12516bb2e43a4363766d100ab6dde"
                ]
            }
        },
        "1.10.1-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a495d11da89e542f2b399a384cd3ab26e8978ba539ce3a87e89851620d4a6422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6f678e1ab68c1e2390a1058f296282062af9c35023467a43a971e4632a71c007",
            "container_config": {
                "Hostname": "6f678e1ab68c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a495d11da89e542f2b399a384cd3ab26e8978ba539ce3a87e89851620d4a6422",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-11T17:21:15.081254696Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-03-30T21:54:51.859934323Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-11T17:21:13.238278847Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-04-11T17:21:13.736536112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-11T17:21:14.007666799Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-11T17:21:14.803479681Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-04-11T17:21:15.081254696Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:4aad2d4ac30d3e788f8fd2397de93fbf32b0a97703c424f57bb1b6f522f55d2b",
                    "sha256:d18ca62d464e3986805feb223c4a0c536cc12516bb2e43a4363766d100ab6dde"
                ]
            }
        },
        "1.10.1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aad112a923bab77f768ea36aadb4cb63e43daae530d7809e27447de7a62b6f12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6a4d4570d0459a34e8cf128c287dca5fd154a1ac3c85c8367844117dcb645556",
            "container_config": {
                "Hostname": "6a4d4570d045",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aad112a923bab77f768ea36aadb4cb63e43daae530d7809e27447de7a62b6f12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-02T21:08:58.649082317Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T07:08:53.556603948Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9572fdb59dfbb9b032f3331bbc2a08b31e0aef5fbde44c8f2008d22bf5290cf2 in / "
                },
                {
                    "created": "2018-04-28T07:08:53.999799361Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T17:03:29.707163891Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-28T17:03:36.192541046Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-04-28T17:09:39.610061828Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-02T21:08:40.286977703Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-02T21:08:40.702777507Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-02T21:08:56.576622353Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='72d820dec546752e5a8303b33b009079c15c2390ce76d67cf514991646c6127b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='feca4e920d5ca25001dc0823390df79bc7ea5b5b8c03483e5a2c54f164654936' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1e07a159414b5090d31166d1a06ee501762076ef21140dcd54cdcbe4e68a9c9b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acbe19d56123549faf747b4f61b730008b185a0e2145d220527d2383627dfe69' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='91d0026bbed601c4aad332473ed02f9a460b31437cbc6f2a37a88c0376fc3a65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e211a5abdacf843e16ac33a309d554403beb63959f96f9db70051f303035434b' ;; \t\t*) goRelArch='src'; goRelSha256='589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-02T21:08:57.088662054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-02T21:08:57.403784463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-02T21:08:58.332569159Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-02T21:08:58.649082317Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0f3a12fef684003e8dc0dfdcea32789db2179c6f9ad1e1e89bc05754ac44c6c5",
                    "sha256:001113e5519deb9f773ad630a34450167ef804321c93959e544062f995bd273c",
                    "sha256:8c2f597e360cd07042299c28735b0f3d25b68d30eb0da4fcd0db95766222002b",
                    "sha256:d6e5be03929b8dd5c3b9b49f505988000659c7eef59603836dca788763f6edbb",
                    "sha256:d2343a823576f4e05bb0bed5ade11ee7aca28b4b1da906b9d3ad016fab7d9ec8",
                    "sha256:dfcb62cd1e99195c400742d7cc487402768b6897f7403c08a3efff405cbc30ec",
                    "sha256:8c00d08080ff07610c98c578476779c6ac7032011875a0c954b27cd57df8b731"
                ]
            }
        },
        "1.10.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7f47d9c79bbf1ae74f95f21e8c561b1e15563b5ec0b5353e1ccc84773d6aa5c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "98f5490572ac39123563f0012a57fe0c02d63cf0c3f7cc0d27db9a7a5b51460e",
            "container_config": {
                "Hostname": "98f5490572ac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7f47d9c79bbf1ae74f95f21e8c561b1e15563b5ec0b5353e1ccc84773d6aa5c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-06-06T03:14:24.006156284Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T07:08:53.556603948Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9572fdb59dfbb9b032f3331bbc2a08b31e0aef5fbde44c8f2008d22bf5290cf2 in / "
                },
                {
                    "created": "2018-04-28T07:08:53.999799361Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-05T23:13:29.998696939Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-05T23:13:38.889867096Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-06-05T23:14:11.146120413Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-06T03:13:58.266870518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-06T03:13:58.65009449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:14:22.080384577Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4b677d698c65370afa33757b6954ade60347aaca310ea92a63ed717d7cb0c2ff' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='529a16b531d4561572db6ba9d357215b58a1953437a63e76dc0c597be9e25dd2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d6af66c71b12d63c754d5bf49c3007dc1c9821eb1a945118bfd5a539a327c4c8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ea4caddf76b86ed5d101a61bc9a273be5b24d81f0567270bb4d5beaaded9b567' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f0748502c90e9784b6368937f1d157913d18acdae72ac75add50e5c0c9efc85c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2266b7ebdbca13c21a1f6039c9f6887cd2c01617d1e2716ff4595307a0da1d46' ;; \t\t*) goRelArch='src'; goRelSha256='6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-06-06T03:14:22.801305756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:14:23.021219937Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:14:23.741779424Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-06-06T03:14:24.006156284Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0f3a12fef684003e8dc0dfdcea32789db2179c6f9ad1e1e89bc05754ac44c6c5",
                    "sha256:3fa6e458af6f70a2041566be64b933d0d408d2ae36bd8ae155ceaaa39891e5b1",
                    "sha256:a130cc33ffce028c39d29223cd23f719ef4de32a38f90bc1a887fc6cb2b78777",
                    "sha256:4e2f09da8ad8a5c5bf16a483f7d7f5bdec648edac1ef1c7401ced9a252071f53",
                    "sha256:16ed1d8ebb2a948a758cb61fca0bba6278b7b94870a4471c961ac4c5bd743def",
                    "sha256:0889d87244daeafabf40636b3d72f445449fb856da57c4593375838a3d28e78a",
                    "sha256:bf5c0c9fb84723e39f93c185d7ce17c166247bf624cf843cee7a31d7896f8786"
                ]
            }
        },
        "1.10.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:846e3dee9d7b93a2017824104c18db57ff129ae489dad4dac6061c3a5835d6a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "75528b58e782db5489563e5e167268499d08a0e98fdfb71d6974a253d83ad304",
            "container_config": {
                "Hostname": "75528b58e782",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:846e3dee9d7b93a2017824104c18db57ff129ae489dad4dac6061c3a5835d6a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-06-06T03:16:06.421580142Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:14:27.451964381Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-06-06T03:14:28.157919596Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-06-06T03:14:28.321997534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:16:04.7019971Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-06-06T03:16:05.379066358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:16:05.526992921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:16:06.21782854Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-06-06T03:16:06.421580142Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:747a1ba085b011b48950232406a0387642cfd90ba0f3439466ce7c95073b115f",
                    "sha256:79d579ee9adecef659907cd09cd7903f3681d316e710d8ceb51ec7bcd1eec753",
                    "sha256:c748de2819974088b196b075d070d969538843bc8b5cf1f71379f76965d123d2",
                    "sha256:06c2894faff667036d53fe3ce4b0366b5a04ace3553761d8b7a613dc0f39a014"
                ]
            }
        },
        "1.10.2-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:846e3dee9d7b93a2017824104c18db57ff129ae489dad4dac6061c3a5835d6a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "75528b58e782db5489563e5e167268499d08a0e98fdfb71d6974a253d83ad304",
            "container_config": {
                "Hostname": "75528b58e782",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:846e3dee9d7b93a2017824104c18db57ff129ae489dad4dac6061c3a5835d6a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-06-06T03:16:06.421580142Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:14:27.451964381Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-06-06T03:14:28.157919596Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-06-06T03:14:28.321997534Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:16:04.7019971Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-06-06T03:16:05.379066358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:16:05.526992921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:16:06.21782854Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-06-06T03:16:06.421580142Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:747a1ba085b011b48950232406a0387642cfd90ba0f3439466ce7c95073b115f",
                    "sha256:79d579ee9adecef659907cd09cd7903f3681d316e710d8ceb51ec7bcd1eec753",
                    "sha256:c748de2819974088b196b075d070d969538843bc8b5cf1f71379f76965d123d2",
                    "sha256:06c2894faff667036d53fe3ce4b0366b5a04ace3553761d8b7a613dc0f39a014"
                ]
            }
        },
        "1.10.2-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7f47d9c79bbf1ae74f95f21e8c561b1e15563b5ec0b5353e1ccc84773d6aa5c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "98f5490572ac39123563f0012a57fe0c02d63cf0c3f7cc0d27db9a7a5b51460e",
            "container_config": {
                "Hostname": "98f5490572ac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7f47d9c79bbf1ae74f95f21e8c561b1e15563b5ec0b5353e1ccc84773d6aa5c8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-06-06T03:14:24.006156284Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T07:08:53.556603948Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9572fdb59dfbb9b032f3331bbc2a08b31e0aef5fbde44c8f2008d22bf5290cf2 in / "
                },
                {
                    "created": "2018-04-28T07:08:53.999799361Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-05T23:13:29.998696939Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-05T23:13:38.889867096Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-06-05T23:14:11.146120413Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-06T03:13:58.266870518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-06T03:13:58.65009449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:14:22.080384577Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4b677d698c65370afa33757b6954ade60347aaca310ea92a63ed717d7cb0c2ff' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='529a16b531d4561572db6ba9d357215b58a1953437a63e76dc0c597be9e25dd2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d6af66c71b12d63c754d5bf49c3007dc1c9821eb1a945118bfd5a539a327c4c8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ea4caddf76b86ed5d101a61bc9a273be5b24d81f0567270bb4d5beaaded9b567' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f0748502c90e9784b6368937f1d157913d18acdae72ac75add50e5c0c9efc85c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2266b7ebdbca13c21a1f6039c9f6887cd2c01617d1e2716ff4595307a0da1d46' ;; \t\t*) goRelArch='src'; goRelSha256='6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-06-06T03:14:22.801305756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:14:23.021219937Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T03:14:23.741779424Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-06-06T03:14:24.006156284Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0f3a12fef684003e8dc0dfdcea32789db2179c6f9ad1e1e89bc05754ac44c6c5",
                    "sha256:3fa6e458af6f70a2041566be64b933d0d408d2ae36bd8ae155ceaaa39891e5b1",
                    "sha256:a130cc33ffce028c39d29223cd23f719ef4de32a38f90bc1a887fc6cb2b78777",
                    "sha256:4e2f09da8ad8a5c5bf16a483f7d7f5bdec648edac1ef1c7401ced9a252071f53",
                    "sha256:16ed1d8ebb2a948a758cb61fca0bba6278b7b94870a4471c961ac4c5bd743def",
                    "sha256:0889d87244daeafabf40636b3d72f445449fb856da57c4593375838a3d28e78a",
                    "sha256:bf5c0c9fb84723e39f93c185d7ce17c166247bf624cf843cee7a31d7896f8786"
                ]
            }
        },
        "1.10.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2deed25e89974f45596b25845a5cf1fdf2ffead43f73284c3330883df423e51f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d0e902aaa7dde90b07a970bdde758e2e81a83a1f329c9551d26085fa029e6e2e",
            "container_config": {
                "Hostname": "d0e902aaa7dd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2deed25e89974f45596b25845a5cf1fdf2ffead43f73284c3330883df423e51f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-17T12:31:09.93849632Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:50.664218996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:31:07.621847883Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d3df3fa3d153e81041af24f31a82f86a21cb7b92c1b5552fb621bad0320f06b6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='355128a05b456c9e68792143801ad18e0431510a53857f640f7b30ba92624ed2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3d5fe1932c904a01acb13dae07a5835bffafef38bef9e5a05450c52948ebdeb4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f3640b2f0990a9617c937775f669ee18f10a82e424e5f87a8ce794a6407b8347' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='34385f64651f82fbc11dc43bdc410c2abda237bdef87f3a430d35a508ec3ce0d' ;; \t\t*) goRelArch='src'; goRelSha256='567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-17T12:31:08.317575961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:31:08.604568521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:31:09.598219981Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-17T12:31:09.93849632Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:ddae4b0a26c60d8c04309b6eae2c2c03d244b5aedf8a721582b2c4a3de775fc2",
                    "sha256:9f6493dca884e1a75ace632f788068a84fdf45b06cf91806c405afd34f336433"
                ]
            }
        },
        "1.10.3-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ced487cdb32d32c1551b9e522b6ee2df27dbd1fb8f31989a985eb99ab7da73db",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "76d05c3781bf4857120738c301a2b6251009dd372333885b03747dcd07ead057",
            "container_config": {
                "Hostname": "76d05c3781bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ced487cdb32d32c1551b9e522b6ee2df27dbd1fb8f31989a985eb99ab7da73db",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T02:00:50.018275351Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-12T21:22:05.300182131Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:00:34.78699906Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T02:00:48.16358371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:00:48.57319654Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:00:49.723319965Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T02:00:50.018275351Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:cc2115d16b7a62a23e083c53b2c1269711783934f306417ac22eec320df45798",
                    "sha256:d0b7a723db1454a1a0587d4c2b9b691f7c5c68119e50ca88518870a483e1dabd"
                ]
            }
        },
        "1.10.3-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1e25434e21736c37913799692b4d4fcf2b38b6ef9bb6a89efe110ef8d22d07a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "756c6fdea4630830d1cc4d3beea80b0c682010d5c9a1d216153c6f56446ad072",
            "container_config": {
                "Hostname": "756c6fdea463",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1e25434e21736c37913799692b4d4fcf2b38b6ef9bb6a89efe110ef8d22d07a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T02:02:50.737275555Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:13:45.666164062Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ee19b92d5cb1bf143947fe2e2481cb3b353d42e1e54888a8ba48c03dd4155f2 in / "
                },
                {
                    "created": "2018-07-06T14:13:45.901173503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:45:09.216744395Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-06T14:45:09.941574136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-06T15:00:49.493030733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:02:48.591701142Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T02:02:49.118900162Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:02:49.409176058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:02:50.405990655Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T02:02:50.737275555Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:717b092b8c86356cf976d9c83fa6f0ea67f2bf3148a5bbb7e02026a5d3245e68",
                    "sha256:6b2edeabe17e3c818efe9117d2b39c77846292012f081da8b0bf5ca4a2c9c09b",
                    "sha256:db88a4fd1709661a218a704e33978944c8fb38abd9a4621201b06367b84c14da",
                    "sha256:58ca8e039bd9410394e3ff5f2ff1c51e2c409bc5818e2810e4af2fa67cdb86ed",
                    "sha256:b897cc321a777570f7d8d09054154ebe8eb80081dc71b05e180ab6dc8ec2cd53"
                ]
            }
        },
        "1.10.3-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ced487cdb32d32c1551b9e522b6ee2df27dbd1fb8f31989a985eb99ab7da73db",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "76d05c3781bf4857120738c301a2b6251009dd372333885b03747dcd07ead057",
            "container_config": {
                "Hostname": "76d05c3781bf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ced487cdb32d32c1551b9e522b6ee2df27dbd1fb8f31989a985eb99ab7da73db",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T02:00:50.018275351Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-12T21:22:05.300182131Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:00:34.78699906Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T02:00:48.16358371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:00:48.57319654Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T02:00:49.723319965Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T02:00:50.018275351Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:cc2115d16b7a62a23e083c53b2c1269711783934f306417ac22eec320df45798",
                    "sha256:d0b7a723db1454a1a0587d4c2b9b691f7c5c68119e50ca88518870a483e1dabd"
                ]
            }
        },
        "1.10.3-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2deed25e89974f45596b25845a5cf1fdf2ffead43f73284c3330883df423e51f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d0e902aaa7dde90b07a970bdde758e2e81a83a1f329c9551d26085fa029e6e2e",
            "container_config": {
                "Hostname": "d0e902aaa7dd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2deed25e89974f45596b25845a5cf1fdf2ffead43f73284c3330883df423e51f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-17T12:31:09.93849632Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:50.664218996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:31:07.621847883Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d3df3fa3d153e81041af24f31a82f86a21cb7b92c1b5552fb621bad0320f06b6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='355128a05b456c9e68792143801ad18e0431510a53857f640f7b30ba92624ed2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3d5fe1932c904a01acb13dae07a5835bffafef38bef9e5a05450c52948ebdeb4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f3640b2f0990a9617c937775f669ee18f10a82e424e5f87a8ce794a6407b8347' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='34385f64651f82fbc11dc43bdc410c2abda237bdef87f3a430d35a508ec3ce0d' ;; \t\t*) goRelArch='src'; goRelSha256='567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-17T12:31:08.317575961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:31:08.604568521Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:31:09.598219981Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-17T12:31:09.93849632Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:ddae4b0a26c60d8c04309b6eae2c2c03d244b5aedf8a721582b2c4a3de775fc2",
                    "sha256:9f6493dca884e1a75ace632f788068a84fdf45b06cf91806c405afd34f336433"
                ]
            }
        },
        "1.10.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4600fb13d16baf1eac1eab0370a50fd86bb625796fdd015a3c8408930455401c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4676a9a673c8f57013efae429cc57460a6727345359d581ff0e2aaeff982fb44",
            "container_config": {
                "Hostname": "4676a9a673c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4600fb13d16baf1eac1eab0370a50fd86bb625796fdd015a3c8408930455401c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T08:43:11.586437217Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:24:20.7838109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b3598c18dc395846ab2c5e4e8422c4a5dad7bc3b5b08c09ebceee80989904641 in / "
                },
                {
                    "created": "2018-10-15T23:24:21.111611143Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:00:49.945915631Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T01:00:57.258682859Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T01:01:29.418111504Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T08:42:27.8302524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T08:43:01.528416207Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:43:09.981792495Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa04efdb17a275a0c6e137f969a1c4eb878939e91e1da16060ce42f02c2ec5ec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4e1e80bd98f3598c0c48ba0c189c836d01b602bfc769b827a4bfed01d2c14b21' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2e0f9e99aeefaabba280b2bf85db0336da122accde73603159b3d72d0b2bd512' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='771f48e55776d4abc9c2a74907457066c7c282ac05fa01cf5ff4422ced76d2ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1cfc147357c0be91a988998046997c5f30b20c6baaeb6cd5774717714db76093' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5593d770d6544090c1bb20d57bb34c743131470695e195fbe5352bf056927a35' ;; \t\t*) goRelArch='src'; goRelSha256='6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-16T08:43:10.43360057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:43:10.654706494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:43:11.355391725Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-16T08:43:11.586437217Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f715ed19c28b66943ac8bc12dbfb828e8394de2530bbaf1ecce906e748e4fdff",
                    "sha256:8bb25f9cdc41e7d085033af15a522973b44086d6eedd24c11cc61c9232324f77",
                    "sha256:08a01612ffca33483a1847c909836610610ce523fb7e1aca880140ee84df23e9",
                    "sha256:1191b3f5862aa9231858809b7ac8b91c0b727ce85c9b3279932f0baacc92967d",
                    "sha256:52da4d4dcf59a2a01a4c4928516bf922944775862547dad6142bc477bbbdfa47",
                    "sha256:a8e7cc5a02db60269c57790c45f778c65b1ce3dd401395202606b130a214c8a7",
                    "sha256:8bd58d68d0051f86536ea17c2667ada1683c1dafeaa7b297aab70ec457a35d04"
                ]
            }
        },
        "1.10.4-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ad69152ffc7041ed0389c16dffedc22e5b13c90277796fcc3458073027428ff8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1eed790666136632fb57ee000b101a3f24ae7fdd4f1fde175acc693c3e8f9339",
            "container_config": {
                "Hostname": "1eed79066613",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ad69152ffc7041ed0389c16dffedc22e5b13c90277796fcc3458073027428ff8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-11T23:07:48.014897562Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-11T23:05:10.075093112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:07:46.028396952Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-11T23:07:46.643291327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:07:46.883005726Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:07:47.722865771Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-11T23:07:48.014897562Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:cc5fec2c1edcbc1d52a40e30c851397a4d54dbdc9c9ca3f2dab75cdaa60c5fbe",
                    "sha256:ac1c7fa88ed0ce3294d58e555b739aca338764ccca6852bd17d6968035b5e514"
                ]
            }
        },
        "1.10.4-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b99332026ab170cb31e1fe973edadcf5fe7983a0e55de29e4808e4b61fc66b2c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "36e7fa838a6f3b58ef2a84e1f6fa335533d6f3ec62bf231d40c26a95d5e6375e",
            "container_config": {
                "Hostname": "36e7fa838a6f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b99332026ab170cb31e1fe973edadcf5fe7983a0e55de29e4808e4b61fc66b2c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-11T23:10:37.023283856Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:38.88529994Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49f9e47e678d868d5b023482aa8dded71276a241a665c4f8b55ca77269321b34 in / "
                },
                {
                    "created": "2018-09-11T22:19:39.058628442Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:44.361139546Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T23:01:45.174939377Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-11T23:08:02.638629631Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:10:35.077014588Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-11T23:10:35.69933122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:10:35.919025084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:10:36.748115989Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-11T23:10:37.023283856Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebf12965380b39889c99a9c02e82ba465f887b45975b6e389d42e9e6a3857888",
                    "sha256:8c16c55130abe3adc40609904b33dc92813f6d2f7caf1ced629669adde1b409b",
                    "sha256:dde396d4d613d53a0b7428a5e566f5e667dadb0b171712cd9339ee2b652a88a4",
                    "sha256:7196f920069b87da1a74ced47a11dea193862964733ef2ac35a1156e09278ae7",
                    "sha256:616e367aacb06bd571d8a4615522f458e6e2f6ec5c5764c4f043db6432050965"
                ]
            }
        },
        "1.10.4-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ad69152ffc7041ed0389c16dffedc22e5b13c90277796fcc3458073027428ff8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1eed790666136632fb57ee000b101a3f24ae7fdd4f1fde175acc693c3e8f9339",
            "container_config": {
                "Hostname": "1eed79066613",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ad69152ffc7041ed0389c16dffedc22e5b13c90277796fcc3458073027428ff8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-11T23:07:48.014897562Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-11T23:05:10.075093112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:07:46.028396952Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-11T23:07:46.643291327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:07:46.883005726Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:07:47.722865771Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-11T23:07:48.014897562Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:cc5fec2c1edcbc1d52a40e30c851397a4d54dbdc9c9ca3f2dab75cdaa60c5fbe",
                    "sha256:ac1c7fa88ed0ce3294d58e555b739aca338764ccca6852bd17d6968035b5e514"
                ]
            }
        },
        "1.10.4-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4600fb13d16baf1eac1eab0370a50fd86bb625796fdd015a3c8408930455401c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4676a9a673c8f57013efae429cc57460a6727345359d581ff0e2aaeff982fb44",
            "container_config": {
                "Hostname": "4676a9a673c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4600fb13d16baf1eac1eab0370a50fd86bb625796fdd015a3c8408930455401c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T08:43:11.586437217Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:24:20.7838109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b3598c18dc395846ab2c5e4e8422c4a5dad7bc3b5b08c09ebceee80989904641 in / "
                },
                {
                    "created": "2018-10-15T23:24:21.111611143Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:00:49.945915631Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T01:00:57.258682859Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T01:01:29.418111504Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T08:42:27.8302524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T08:43:01.528416207Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:43:09.981792495Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa04efdb17a275a0c6e137f969a1c4eb878939e91e1da16060ce42f02c2ec5ec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4e1e80bd98f3598c0c48ba0c189c836d01b602bfc769b827a4bfed01d2c14b21' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2e0f9e99aeefaabba280b2bf85db0336da122accde73603159b3d72d0b2bd512' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='771f48e55776d4abc9c2a74907457066c7c282ac05fa01cf5ff4422ced76d2ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1cfc147357c0be91a988998046997c5f30b20c6baaeb6cd5774717714db76093' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5593d770d6544090c1bb20d57bb34c743131470695e195fbe5352bf056927a35' ;; \t\t*) goRelArch='src'; goRelSha256='6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-16T08:43:10.43360057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:43:10.654706494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:43:11.355391725Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-16T08:43:11.586437217Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f715ed19c28b66943ac8bc12dbfb828e8394de2530bbaf1ecce906e748e4fdff",
                    "sha256:8bb25f9cdc41e7d085033af15a522973b44086d6eedd24c11cc61c9232324f77",
                    "sha256:08a01612ffca33483a1847c909836610610ce523fb7e1aca880140ee84df23e9",
                    "sha256:1191b3f5862aa9231858809b7ac8b91c0b727ce85c9b3279932f0baacc92967d",
                    "sha256:52da4d4dcf59a2a01a4c4928516bf922944775862547dad6142bc477bbbdfa47",
                    "sha256:a8e7cc5a02db60269c57790c45f778c65b1ce3dd401395202606b130a214c8a7",
                    "sha256:8bd58d68d0051f86536ea17c2667ada1683c1dafeaa7b297aab70ec457a35d04"
                ]
            }
        },
        "1.10.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ce64e3ca21cc438806c61f0f137e87e9553b23cee52ba77af19979eb83bde90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "93e188c57e412616c4b28dbea87a8110a31f367113d9347f90d16f3f235e1c11",
            "container_config": {
                "Hostname": "93e188c57e41",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ce64e3ca21cc438806c61f0f137e87e9553b23cee52ba77af19979eb83bde90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-17T04:07:00.995399452Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-15T22:44:00.252707299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a61c14b18252183a4719980da97ac483044bcaa9df8a569a6d7bf0f719384b5e in / "
                },
                {
                    "created": "2018-11-15T22:44:09.056859416Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T11:15:57.824013954Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T11:16:02.994302329Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T11:17:06.349456518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:04.520057904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:50.675651761Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:59.06901875Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a035d9beda8341b645d3f45a1b620cf2d8fb0c5eb409be36b389c0fd384ecc3a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1d864a6d0ec599de9112c8354dcaaa886b4df928757966939402598e9bd9c238' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b4c16fcee18bc79de2fa4776c8d0f9bc164ddfc32101e96fe1da83ebe881e3df' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='bc1bd42405a551ba7ac86b79b9d23a5635f21de53caf684acd8bf5dfee8bef5d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fc13736d383312710249b24adf05af59ff14dacb73d9bd715ff463bc89c5c5f' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e90269495fab7ef99aea6937caf7a049896b2dc7b181456f80a506e69a8b57fc' ;; \t\t*) goRelArch='src'; goRelSha256='f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-17T04:06:59.574864228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:59.906858978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:07:00.720182735Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-17T04:07:00.995399452Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90d1009ce6fe3102fee728742a3bd73eea2b39c88cdda99977a3fb130dbc17ac",
                    "sha256:c23711a84ad43e5062e70a4055d7df344087649bec7eac06a40a8b1af4cef86e",
                    "sha256:8f7ee6d76fd9da1ecfcfcd893357e78d7dcd4ca877295b7565c71728411f9126",
                    "sha256:f75e64f96dbc610a00722afa3826745952db8d1416f6405e7e87c20868b9f542",
                    "sha256:e7b9eaeca2179b82cc5d6bce0bdbb35a21556d71e09f2c1a55b99565bbd50eca",
                    "sha256:bc6e2262dca4933e0d76c64071dc694025a9d598741a3357d9e334fc90f2c1d1",
                    "sha256:5ac1f8687bc7e5a0bb95c83408f9ebc6deb0861429b1d52cf438bbecad178fd8"
                ]
            }
        },
        "1.10.5-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:63b97bb230501a6b157030561af02c992b9b018f7c153ba8764727ba3f4bcc46",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "82118c06fc27dd02d4927cb11cf2b2086c8e64ad3eed1e55c1d2840ee916fd74",
            "container_config": {
                "Hostname": "82118c06fc27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:63b97bb230501a6b157030561af02c992b9b018f7c153ba8764727ba3f4bcc46",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-02T23:57:10.451211124Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-02T23:55:43.899035277Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:57:08.903525696Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-02T23:57:09.335164272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:57:09.531074622Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:57:10.231126942Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-02T23:57:10.451211124Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:55d685743634ed6ab653dbfd7853bad103c39c04642fd0dca330fc20e71f83de",
                    "sha256:92e60f2c339213294c2cc74cc5ba1c74fd63a60b7f622db4e98ebac58e574d38"
                ]
            }
        },
        "1.10.5-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:97b0679f3bcdc7bf3fd082d7d49f027c4a444afb8e91b8e990bc703283dd4c6e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "40df5a8a1b45f636e463c1d3b3cbde4a71339f050c37b17d71d24f06e69fd643",
            "container_config": {
                "Hostname": "40df5a8a1b45",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:97b0679f3bcdc7bf3fd082d7d49f027c4a444afb8e91b8e990bc703283dd4c6e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-02T23:59:03.994951482Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:38.88529994Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49f9e47e678d868d5b023482aa8dded71276a241a665c4f8b55ca77269321b34 in / "
                },
                {
                    "created": "2018-09-11T22:19:39.058628442Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:44.361139546Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T23:01:45.174939377Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-02T23:57:38.786854003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:59:02.430599378Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-02T23:59:02.859604251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:59:03.071088476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:59:03.727130388Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-02T23:59:03.994951482Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebf12965380b39889c99a9c02e82ba465f887b45975b6e389d42e9e6a3857888",
                    "sha256:8c16c55130abe3adc40609904b33dc92813f6d2f7caf1ced629669adde1b409b",
                    "sha256:dde396d4d613d53a0b7428a5e566f5e667dadb0b171712cd9339ee2b652a88a4",
                    "sha256:f26614d2f2c7c8240ffd343a1c9a71ee5c924234b8853ae87fe505661c9ef219",
                    "sha256:0483274f24113af2f09fa85afec415bf163dc17de87989dd9044a30e0f1c39d4"
                ]
            }
        },
        "1.10.5-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:63b97bb230501a6b157030561af02c992b9b018f7c153ba8764727ba3f4bcc46",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "82118c06fc27dd02d4927cb11cf2b2086c8e64ad3eed1e55c1d2840ee916fd74",
            "container_config": {
                "Hostname": "82118c06fc27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:63b97bb230501a6b157030561af02c992b9b018f7c153ba8764727ba3f4bcc46",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-02T23:57:10.451211124Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-02T23:55:43.899035277Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:57:08.903525696Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-02T23:57:09.335164272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:57:09.531074622Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:57:10.231126942Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-02T23:57:10.451211124Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:55d685743634ed6ab653dbfd7853bad103c39c04642fd0dca330fc20e71f83de",
                    "sha256:92e60f2c339213294c2cc74cc5ba1c74fd63a60b7f622db4e98ebac58e574d38"
                ]
            }
        },
        "1.10.5-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ce64e3ca21cc438806c61f0f137e87e9553b23cee52ba77af19979eb83bde90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "93e188c57e412616c4b28dbea87a8110a31f367113d9347f90d16f3f235e1c11",
            "container_config": {
                "Hostname": "93e188c57e41",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ce64e3ca21cc438806c61f0f137e87e9553b23cee52ba77af19979eb83bde90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-17T04:07:00.995399452Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-15T22:44:00.252707299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a61c14b18252183a4719980da97ac483044bcaa9df8a569a6d7bf0f719384b5e in / "
                },
                {
                    "created": "2018-11-15T22:44:09.056859416Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T11:15:57.824013954Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T11:16:02.994302329Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T11:17:06.349456518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:04.520057904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:50.675651761Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:59.06901875Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a035d9beda8341b645d3f45a1b620cf2d8fb0c5eb409be36b389c0fd384ecc3a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1d864a6d0ec599de9112c8354dcaaa886b4df928757966939402598e9bd9c238' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b4c16fcee18bc79de2fa4776c8d0f9bc164ddfc32101e96fe1da83ebe881e3df' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='bc1bd42405a551ba7ac86b79b9d23a5635f21de53caf684acd8bf5dfee8bef5d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fc13736d383312710249b24adf05af59ff14dacb73d9bd715ff463bc89c5c5f' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e90269495fab7ef99aea6937caf7a049896b2dc7b181456f80a506e69a8b57fc' ;; \t\t*) goRelArch='src'; goRelSha256='f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-17T04:06:59.574864228Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:59.906858978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:07:00.720182735Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-17T04:07:00.995399452Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90d1009ce6fe3102fee728742a3bd73eea2b39c88cdda99977a3fb130dbc17ac",
                    "sha256:c23711a84ad43e5062e70a4055d7df344087649bec7eac06a40a8b1af4cef86e",
                    "sha256:8f7ee6d76fd9da1ecfcfcd893357e78d7dcd4ca877295b7565c71728411f9126",
                    "sha256:f75e64f96dbc610a00722afa3826745952db8d1416f6405e7e87c20868b9f542",
                    "sha256:e7b9eaeca2179b82cc5d6bce0bdbb35a21556d71e09f2c1a55b99565bbd50eca",
                    "sha256:bc6e2262dca4933e0d76c64071dc694025a9d598741a3357d9e334fc90f2c1d1",
                    "sha256:5ac1f8687bc7e5a0bb95c83408f9ebc6deb0861429b1d52cf438bbecad178fd8"
                ]
            }
        },
        "1.10.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba1048d507ae71beb575e6af68b9e394746e169845e68be294c3b484d8670908",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "60aa7e83b299417daeaf3d38710f7d5c51d4254afcba3e6ab410d9f41f831923",
            "container_config": {
                "Hostname": "60aa7e83b299",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba1048d507ae71beb575e6af68b9e394746e169845e68be294c3b484d8670908",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T23:00:02.706627005Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-15T22:44:00.252707299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a61c14b18252183a4719980da97ac483044bcaa9df8a569a6d7bf0f719384b5e in / "
                },
                {
                    "created": "2018-11-15T22:44:09.056859416Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T11:15:57.824013954Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T11:16:02.994302329Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T11:17:06.349456518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:04.520057904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-13T22:59:46.930903701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:00:01.033652677Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='acbdedf28b55b38d2db6f06209a25a869a36d31bdcf09fd2ec3d40e1279e0592' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4da252fc7e834b7ce35d349fb581aa84a08adece926a0b9a8e4216451ffcb11e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0fcbfbcbf6373c0b6876786900a4a100c1ed9af86bd3258f23ab498cca4c02a1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='171fe6cbecb2845b875a35ac7ad758d4c0c5bd03f330fa35d340de85b9070e71' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ebd7e4688f3e1baabbc735453b19c6c27116e1f292bf46622123bfc4c160c747' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0223daa57bdef5bf85d308f6d2793c58055d294c13cbaca240ead2f568de2e9f' ;; \t\t*) goRelArch='src'; goRelSha256='0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T23:00:01.47497905Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:00:01.707275529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:00:02.446845816Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T23:00:02.706627005Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90d1009ce6fe3102fee728742a3bd73eea2b39c88cdda99977a3fb130dbc17ac",
                    "sha256:c23711a84ad43e5062e70a4055d7df344087649bec7eac06a40a8b1af4cef86e",
                    "sha256:8f7ee6d76fd9da1ecfcfcd893357e78d7dcd4ca877295b7565c71728411f9126",
                    "sha256:f75e64f96dbc610a00722afa3826745952db8d1416f6405e7e87c20868b9f542",
                    "sha256:e7b9eaeca2179b82cc5d6bce0bdbb35a21556d71e09f2c1a55b99565bbd50eca",
                    "sha256:37d7feea759aad094604ecdf516948082fdb01528275f2308ebf48b9eb0d5b02",
                    "sha256:ab0faae5cc70b86d89e50d84e68234e929239bcaebed5b9f25073c0dbc6ef01c"
                ]
            }
        },
        "1.10.6-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40597957454ac4c4958f790a872ad37c9453627b42b2b563ba70a8f17aea5ab8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0a575b27504dcc06e8e0cf1bdb03b50dfd5b04fb98ef4a2d34255d9939b5b256",
            "container_config": {
                "Hostname": "0a575b27504d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40597957454ac4c4958f790a872ad37c9453627b42b2b563ba70a8f17aea5ab8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T23:01:49.287003605Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-13T23:00:22.847119211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:01:47.595667961Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T23:01:48.071136204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:01:48.290956206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:01:49.019816305Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T23:01:49.287003605Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:0744b9082738711a5f9b8af084e6f2021a102dab74fa7a118427f985265367c8",
                    "sha256:5b964735814f2372a2fb2856c15bbd1e76bd7f2db93360cdb0991055f7a27892"
                ]
            }
        },
        "1.10.6-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98c3bf0acb6c067162195ee4d06c825f1acfb2555767e1c5d6ac8908d4c5b4eb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e23981ce61b2fa1c8a1e25a8d1a43a16d57fb0ed13a103630ad6c30626def720",
            "container_config": {
                "Hostname": "e23981ce61b2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98c3bf0acb6c067162195ee4d06c825f1acfb2555767e1c5d6ac8908d4c5b4eb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T23:03:34.952614597Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:38.88529994Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49f9e47e678d868d5b023482aa8dded71276a241a665c4f8b55ca77269321b34 in / "
                },
                {
                    "created": "2018-09-11T22:19:39.058628442Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:44.361139546Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T23:01:45.174939377Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-13T23:02:09.08663872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:03:33.240885226Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T23:03:33.71943455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:03:33.958319696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:03:34.685038981Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T23:03:34.952614597Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebf12965380b39889c99a9c02e82ba465f887b45975b6e389d42e9e6a3857888",
                    "sha256:8c16c55130abe3adc40609904b33dc92813f6d2f7caf1ced629669adde1b409b",
                    "sha256:dde396d4d613d53a0b7428a5e566f5e667dadb0b171712cd9339ee2b652a88a4",
                    "sha256:d34b2728b032756e96fb9d78da546e9affa94804735a6887525ab395a34e9a5e",
                    "sha256:5ca4bc9c4332ffba7ae3696af730e1552a99ace0d36f6db826dc6670f740a4da"
                ]
            }
        },
        "1.10.6-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40597957454ac4c4958f790a872ad37c9453627b42b2b563ba70a8f17aea5ab8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0a575b27504dcc06e8e0cf1bdb03b50dfd5b04fb98ef4a2d34255d9939b5b256",
            "container_config": {
                "Hostname": "0a575b27504d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40597957454ac4c4958f790a872ad37c9453627b42b2b563ba70a8f17aea5ab8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T23:01:49.287003605Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-13T23:00:22.847119211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:01:47.595667961Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T23:01:48.071136204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:01:48.290956206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:01:49.019816305Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T23:01:49.287003605Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:0744b9082738711a5f9b8af084e6f2021a102dab74fa7a118427f985265367c8",
                    "sha256:5b964735814f2372a2fb2856c15bbd1e76bd7f2db93360cdb0991055f7a27892"
                ]
            }
        },
        "1.10.6-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba1048d507ae71beb575e6af68b9e394746e169845e68be294c3b484d8670908",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "60aa7e83b299417daeaf3d38710f7d5c51d4254afcba3e6ab410d9f41f831923",
            "container_config": {
                "Hostname": "60aa7e83b299",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba1048d507ae71beb575e6af68b9e394746e169845e68be294c3b484d8670908",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T23:00:02.706627005Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-15T22:44:00.252707299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a61c14b18252183a4719980da97ac483044bcaa9df8a569a6d7bf0f719384b5e in / "
                },
                {
                    "created": "2018-11-15T22:44:09.056859416Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T11:15:57.824013954Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T11:16:02.994302329Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T11:17:06.349456518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:04.520057904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-13T22:59:46.930903701Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:00:01.033652677Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='acbdedf28b55b38d2db6f06209a25a869a36d31bdcf09fd2ec3d40e1279e0592' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4da252fc7e834b7ce35d349fb581aa84a08adece926a0b9a8e4216451ffcb11e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0fcbfbcbf6373c0b6876786900a4a100c1ed9af86bd3258f23ab498cca4c02a1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='171fe6cbecb2845b875a35ac7ad758d4c0c5bd03f330fa35d340de85b9070e71' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ebd7e4688f3e1baabbc735453b19c6c27116e1f292bf46622123bfc4c160c747' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0223daa57bdef5bf85d308f6d2793c58055d294c13cbaca240ead2f568de2e9f' ;; \t\t*) goRelArch='src'; goRelSha256='0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T23:00:01.47497905Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:00:01.707275529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T23:00:02.446845816Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T23:00:02.706627005Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90d1009ce6fe3102fee728742a3bd73eea2b39c88cdda99977a3fb130dbc17ac",
                    "sha256:c23711a84ad43e5062e70a4055d7df344087649bec7eac06a40a8b1af4cef86e",
                    "sha256:8f7ee6d76fd9da1ecfcfcd893357e78d7dcd4ca877295b7565c71728411f9126",
                    "sha256:f75e64f96dbc610a00722afa3826745952db8d1416f6405e7e87c20868b9f542",
                    "sha256:e7b9eaeca2179b82cc5d6bce0bdbb35a21556d71e09f2c1a55b99565bbd50eca",
                    "sha256:37d7feea759aad094604ecdf516948082fdb01528275f2308ebf48b9eb0d5b02",
                    "sha256:ab0faae5cc70b86d89e50d84e68234e929239bcaebed5b9f25073c0dbc6ef01c"
                ]
            }
        },
        "1.10.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:869de27146406cb5307d663a19a39fb8ffde9170125ff60ab9807042e39bc470",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d90eb6c99bb4ea4575354af6a664c51520b64ee48ada462ffe9474027caf3dc8",
            "container_config": {
                "Hostname": "d90eb6c99bb4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:869de27146406cb5307d663a19a39fb8ffde9170125ff60ab9807042e39bc470",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-23T05:38:58.958512642Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-22T19:30:03.899485439Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:feb9fd29475961253e3449db036bbf56bf6f4d02f2df1202209e393a9e7e95f5 in / "
                },
                {
                    "created": "2019-01-22T19:30:04.166142077Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-22T20:05:43.070472877Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T20:05:48.103801346Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-01-22T20:06:13.576000306Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T05:37:42.600956511Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T05:38:45.718500796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:56.832438272Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1aabe10919048822f3bb1865f7a22f8b78387a12c03cd573101594bc8fb33579' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1f81c995f829c8fc7def4d0cc1bde63cac1834386e6f650f2cd7be56ab5e8b98' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cb5a274f7c8f6186957e4503e724dda8aeffe84b76a146748c55ea5bb22d9ae4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='55cd25e550cb8ce8250dbc9eda56b9c10b3097c7f6beed45066fbaaf8c6c1ebd' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='11279ffebfcfa875b0552839d428cc72e2056e68681286429b57173c0da91fb4' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e0d7802029ed8d2720a2b27ec1816e71cb29f818380abb8b449080e97547881e' ;; \t\t*) goRelArch='src'; goRelSha256='b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-23T05:38:57.419071369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:57.66713381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:58.695689296Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-23T05:38:58.958512642Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:badfbcebf7f868b2dc0e4b1aa21db05bcd5cb2be0afb314ac196a0f51f7b04ed",
                    "sha256:c240c542ed55380befcc5ae81783624ad7c64378d07a86a5bd510651f24984fb",
                    "sha256:76dfa41f0a1d8ef70ad38fd1ceda5af26e9865c84032abfae75cb14d8c545fb9",
                    "sha256:a89464ad2a8f6e340f68b538b4f682f0a446c575450997caeb6f4640d86f2c9c",
                    "sha256:a7992cea6ed0c2f6737f3ae38cda151d4944189d06dbf06dcc02f66949ff624b",
                    "sha256:57935cb456e2666b8cc8dc516534aa6268262780ef4071baa675f256c57defdd",
                    "sha256:c9ba7d637e064f007503e649b130ccb54759a2701977b33072261a7d7d2c298b"
                ]
            }
        },
        "1.10.7-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65d0c5e7e682d4327e78ec47409a5112838168d9d48e60618655d8160db1d018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2a7bcff2c49ddedf51aa239660e05c09ca29478db975e25415a5e2e0dba0359b",
            "container_config": {
                "Hostname": "2a7bcff2c49d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65d0c5e7e682d4327e78ec47409a5112838168d9d48e60618655d8160db1d018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T04:14:39.541613275Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T00:21:29.97055571Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2ff00caea4e83dfade726ca47e3c795a1e9acb8ac24e392785c474ecf9a621f2 in / "
                },
                {
                    "created": "2018-12-21T00:21:30.122610396Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T01:10:06.894256856Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T01:10:08.012314313Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T04:12:38.035854452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:14:38.048212028Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T04:14:38.459245867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:14:38.647369618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:14:39.343942787Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T04:14:39.541613275Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7bff100f35cb359a368537bb07829b055fe8e0b1cb01085a3a628ae9c187c7b8",
                    "sha256:b14874cfef599156b09eecfe6a0b6e27922ddf8f96f7b57e448e1f6b9eaac475",
                    "sha256:789935042c6fb6157c551988cff9c4f7b46b292e9b1b77bb1c26e0616737372f",
                    "sha256:7dce996e48a81da19fe41c9f4336c8a67ea7e31fedbfaad01ce327f86f5201d1",
                    "sha256:484b003918b27cc1fe7baf6962652c2b26aa8a6fa14289c9d2f09d99399ae36d"
                ]
            }
        },
        "1.10.7-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1d7abdc45ee3ff50d2f31dd1c7e2cbca1c1ed91f318dc620a86d5463f67ca77e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f467485d87a28d26ba5684be6c1d4847c279d060fa5e382480ecd78da3dede82",
            "container_config": {
                "Hostname": "f467485d87a2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1d7abdc45ee3ff50d2f31dd1c7e2cbca1c1ed91f318dc620a86d5463f67ca77e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T04:16:54.378287284Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T00:21:10.984083489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1c654f8c89128c1ac8363b251cb5e1e7d9326e430ae2740963f77cf6726aee0b in / "
                },
                {
                    "created": "2018-12-21T00:21:11.127085418Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:10:06.493197112Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T04:10:08.303283841Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T04:14:50.840228104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:16:52.908905709Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T04:16:53.306910939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:16:53.471148678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:16:54.175736387Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T04:16:54.378287284Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6da3c54c8f3a43215d51cc0d43eff9759624996e40aaf11e4be5a555c038c32",
                    "sha256:e735e4e9cd4471ef069afb5fc886473ea1ccbfd5c7373ee41ed76fb9dc9efb9f",
                    "sha256:b092d5787e0ba3da910341d4d0fd4b62f475e274390f6085e7c0bec0903ddec0",
                    "sha256:df088ab4eb15cbbb94f6baf9ea2ecf88fe251b44ce2223853c64cfa5690806a4",
                    "sha256:e6357b70e010d45a88eeee2e901e1760c5ac8e0fadecfba401aef854910b1518"
                ]
            }
        },
        "1.10.7-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65d0c5e7e682d4327e78ec47409a5112838168d9d48e60618655d8160db1d018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2a7bcff2c49ddedf51aa239660e05c09ca29478db975e25415a5e2e0dba0359b",
            "container_config": {
                "Hostname": "2a7bcff2c49d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65d0c5e7e682d4327e78ec47409a5112838168d9d48e60618655d8160db1d018",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T04:14:39.541613275Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T00:21:29.97055571Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2ff00caea4e83dfade726ca47e3c795a1e9acb8ac24e392785c474ecf9a621f2 in / "
                },
                {
                    "created": "2018-12-21T00:21:30.122610396Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T01:10:06.894256856Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T01:10:08.012314313Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T04:12:38.035854452Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:14:38.048212028Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T04:14:38.459245867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:14:38.647369618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:14:39.343942787Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T04:14:39.541613275Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7bff100f35cb359a368537bb07829b055fe8e0b1cb01085a3a628ae9c187c7b8",
                    "sha256:b14874cfef599156b09eecfe6a0b6e27922ddf8f96f7b57e448e1f6b9eaac475",
                    "sha256:789935042c6fb6157c551988cff9c4f7b46b292e9b1b77bb1c26e0616737372f",
                    "sha256:7dce996e48a81da19fe41c9f4336c8a67ea7e31fedbfaad01ce327f86f5201d1",
                    "sha256:484b003918b27cc1fe7baf6962652c2b26aa8a6fa14289c9d2f09d99399ae36d"
                ]
            }
        },
        "1.10.7-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:869de27146406cb5307d663a19a39fb8ffde9170125ff60ab9807042e39bc470",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d90eb6c99bb4ea4575354af6a664c51520b64ee48ada462ffe9474027caf3dc8",
            "container_config": {
                "Hostname": "d90eb6c99bb4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:869de27146406cb5307d663a19a39fb8ffde9170125ff60ab9807042e39bc470",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-23T05:38:58.958512642Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-22T19:30:03.899485439Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:feb9fd29475961253e3449db036bbf56bf6f4d02f2df1202209e393a9e7e95f5 in / "
                },
                {
                    "created": "2019-01-22T19:30:04.166142077Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-22T20:05:43.070472877Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T20:05:48.103801346Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-01-22T20:06:13.576000306Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T05:37:42.600956511Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T05:38:45.718500796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:56.832438272Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1aabe10919048822f3bb1865f7a22f8b78387a12c03cd573101594bc8fb33579' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1f81c995f829c8fc7def4d0cc1bde63cac1834386e6f650f2cd7be56ab5e8b98' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cb5a274f7c8f6186957e4503e724dda8aeffe84b76a146748c55ea5bb22d9ae4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='55cd25e550cb8ce8250dbc9eda56b9c10b3097c7f6beed45066fbaaf8c6c1ebd' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='11279ffebfcfa875b0552839d428cc72e2056e68681286429b57173c0da91fb4' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e0d7802029ed8d2720a2b27ec1816e71cb29f818380abb8b449080e97547881e' ;; \t\t*) goRelArch='src'; goRelSha256='b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-23T05:38:57.419071369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:57.66713381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:58.695689296Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-23T05:38:58.958512642Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:badfbcebf7f868b2dc0e4b1aa21db05bcd5cb2be0afb314ac196a0f51f7b04ed",
                    "sha256:c240c542ed55380befcc5ae81783624ad7c64378d07a86a5bd510651f24984fb",
                    "sha256:76dfa41f0a1d8ef70ad38fd1ceda5af26e9865c84032abfae75cb14d8c545fb9",
                    "sha256:a89464ad2a8f6e340f68b538b4f682f0a446c575450997caeb6f4640d86f2c9c",
                    "sha256:a7992cea6ed0c2f6737f3ae38cda151d4944189d06dbf06dcc02f66949ff624b",
                    "sha256:57935cb456e2666b8cc8dc516534aa6268262780ef4071baa675f256c57defdd",
                    "sha256:c9ba7d637e064f007503e649b130ccb54759a2701977b33072261a7d7d2c298b"
                ]
            }
        },
        "1.10.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:516341d7498b6813510c4c86a22e074bc61ee324d760c599d8138e47f229930e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c5a46695fc54758f58dbd590ac06fc5915ed5ba73cf5202eb83145bfc4ffbdc8",
            "container_config": {
                "Hostname": "c5a46695fc54",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:516341d7498b6813510c4c86a22e074bc61ee324d760c599d8138e47f229930e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:54:14.832348012Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T03:30:01.714540068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fec879fdca802d6920b8981b409b19ded75aff693eaaba1ba4cf5ecb7594fdb in / "
                },
                {
                    "created": "2019-02-06T03:30:02.095682729Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T05:51:03.607050513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T05:51:14.391936075Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T05:51:50.706559429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:52:35.276902308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:53:53.397782192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:12.340934316Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:54:13.120039084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:13.356529635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:14.543298851Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:54:14.832348012Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13d5529fd232cacdd8cd561148560e0bf5d65dbc1149faf0c68240985607c303",
                    "sha256:abc3250a6c7ff22a6a366d9c175033ef0b2859f9d03676410c2f21d0fe568da4",
                    "sha256:578414b395b98d02c5f284e83c8db080afcbbde8012478054af22df2edb9336d",
                    "sha256:6257fa9f9597f43a167036d7bf748c5872c38803fa09e2493e119e512c6ac949",
                    "sha256:77b4b6493272fcf3797f846518defabab8fc232e67752f42b5cc42d48542ce19",
                    "sha256:facf15440126dde4d45bc8e8ede8fd04b2e06927b6d0bf2bea1d06c88ecd7bb1",
                    "sha256:7b9a9415bf3ab2576e5354a153ecae7f62860dc967452eecbbaea85550f1210b"
                ]
            }
        },
        "1.10.8-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f06944e66e700aceb035f1a53b2ec62b4dd8a2a42c0aac3e5646238dbe2e8dc6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b5109f5e21ccf699a09840bd7507bf7530c8cf961bef3f29b58896cb68cb8ef0",
            "container_config": {
                "Hostname": "b5109f5e21cc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f06944e66e700aceb035f1a53b2ec62b4dd8a2a42c0aac3e5646238dbe2e8dc6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-05T20:28:13.203389327Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:52.585366638Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a1fc9351afe35698918545b2d466d9805c2e8afcec52f916785ee65bbafeced in / "
                },
                {
                    "created": "2019-01-30T22:19:52.734509838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:19:38.154965526Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-05T20:19:38.870907345Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-05T20:26:15.191655539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:11.714672377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-05T20:28:12.142718125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:12.32367722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:13.015300233Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-05T20:28:13.203389327Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503e53e365f34399c4d58d8f4e23c161106cfbce4400e3d0a0357967bad69390",
                    "sha256:c1df871adf385af8f0e2e2f4beb1e7b31b5c6e4a3aa82b2dae76adc31e384dcf",
                    "sha256:2b7fb36704d4d78bf2abb1ea6ed984dcc23604ae8fca4ec9c50dcfe4b411514f",
                    "sha256:95bf22a926bc4a7efe8dcb6a46d82a950b42aab5809607e182e23290018368e7",
                    "sha256:59ce1ea04bf13fb64a3a0c38e14f929b6de4dc4d6a8cf6781da87d39f1b9f914"
                ]
            }
        },
        "1.10.8-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4636e647f6718f0a35fbfa892b5be8a020b5c8aab7ec30b552704d4d22dcfbb0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f21a4b65da17f94d6eda5d2b88f5f8166986d8e15ff4045fb039f79e3de2ffc3",
            "container_config": {
                "Hostname": "f21a4b65da17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4636e647f6718f0a35fbfa892b5be8a020b5c8aab7ec30b552704d4d22dcfbb0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-30T23:01:23.923724176Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:40.704160499Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c13ab388a8e4c772b97ec8f6d2c576bece32cecdcfb6fee5175e1d3f613dd12 in / "
                },
                {
                    "created": "2019-01-30T22:19:40.859176347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:50:25.98069813Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:50:27.052105204Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-30T22:57:58.763550964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T23:01:21.668302798Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-30T23:01:22.299778961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T23:01:22.543782624Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T23:01:23.687155458Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-30T23:01:23.923724176Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629164d914fc35be714ea121054f0a512ace424b675daa808ae037d6706c343f",
                    "sha256:af45321294a955bcaa746a303c4b65553a0f715053e814351b0d9fb363b2edc0",
                    "sha256:87a4d5fa9c89941f0b98a3b230886120665e23ab8b4ed56b3335a5fea58cfe55",
                    "sha256:feac77fb4503d599e723cc1be181901a2dd199618663dc935c36ece297a57626",
                    "sha256:d685ff33e52c3122d65bb4054bbd165e0a2dbcb78dbfdd20a25954d390c6aea1"
                ]
            }
        },
        "1.10.8-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:533a0e3cf7595ccb166d95728e763cc69ed2cd6ea3084478d7f02b807d37cc1e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6bfa9ace2cb0f9baa853b90aa0becbf278b9403405aebf45cf3a2af3ec34af0c",
            "container_config": {
                "Hostname": "6bfa9ace2cb0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:533a0e3cf7595ccb166d95728e763cc69ed2cd6ea3084478d7f02b807d37cc1e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-30T22:57:49.103306794Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:46.858068773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91fb97ea3549e52e7b6e22b93a6736cf915c756f3d13348406d8ad5f1a872680 in / "
                },
                {
                    "created": "2019-01-30T22:19:47.011395921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:41:04.0365714Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:41:05.092248759Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-30T22:54:59.17568222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:57:46.861546618Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-30T22:57:47.548844947Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:57:47.783161564Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:57:48.85644544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-30T22:57:49.103306794Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb",
                    "sha256:6a365d07810ac08ed35567c641a63fc13f710f3db2165664d47240d0d3d1892f",
                    "sha256:bf8c13944a7828d5dfe569fdb621051752ff480be8b8cf70e0679a21fd04c711",
                    "sha256:515831e7fc6dcfcdec42ff5ff9a59f2c55353882ae9e9b4a96ad6ef167c89160",
                    "sha256:75a35da1f5133c90db9b866d80e8ba2a3c8b527ee8e43fa998cc76814c3853cf"
                ]
            }
        },
        "1.10.8-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f06944e66e700aceb035f1a53b2ec62b4dd8a2a42c0aac3e5646238dbe2e8dc6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b5109f5e21ccf699a09840bd7507bf7530c8cf961bef3f29b58896cb68cb8ef0",
            "container_config": {
                "Hostname": "b5109f5e21cc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f06944e66e700aceb035f1a53b2ec62b4dd8a2a42c0aac3e5646238dbe2e8dc6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-05T20:28:13.203389327Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:52.585366638Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a1fc9351afe35698918545b2d466d9805c2e8afcec52f916785ee65bbafeced in / "
                },
                {
                    "created": "2019-01-30T22:19:52.734509838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:19:38.154965526Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-05T20:19:38.870907345Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-05T20:26:15.191655539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:11.714672377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-05T20:28:12.142718125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:12.32367722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:28:13.015300233Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-05T20:28:13.203389327Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503e53e365f34399c4d58d8f4e23c161106cfbce4400e3d0a0357967bad69390",
                    "sha256:c1df871adf385af8f0e2e2f4beb1e7b31b5c6e4a3aa82b2dae76adc31e384dcf",
                    "sha256:2b7fb36704d4d78bf2abb1ea6ed984dcc23604ae8fca4ec9c50dcfe4b411514f",
                    "sha256:95bf22a926bc4a7efe8dcb6a46d82a950b42aab5809607e182e23290018368e7",
                    "sha256:59ce1ea04bf13fb64a3a0c38e14f929b6de4dc4d6a8cf6781da87d39f1b9f914"
                ]
            }
        },
        "1.10.8-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:516341d7498b6813510c4c86a22e074bc61ee324d760c599d8138e47f229930e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c5a46695fc54758f58dbd590ac06fc5915ed5ba73cf5202eb83145bfc4ffbdc8",
            "container_config": {
                "Hostname": "c5a46695fc54",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:516341d7498b6813510c4c86a22e074bc61ee324d760c599d8138e47f229930e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:54:14.832348012Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T03:30:01.714540068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fec879fdca802d6920b8981b409b19ded75aff693eaaba1ba4cf5ecb7594fdb in / "
                },
                {
                    "created": "2019-02-06T03:30:02.095682729Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T05:51:03.607050513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T05:51:14.391936075Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T05:51:50.706559429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:52:35.276902308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:53:53.397782192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:12.340934316Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:54:13.120039084Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:13.356529635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:14.543298851Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:54:14.832348012Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13d5529fd232cacdd8cd561148560e0bf5d65dbc1149faf0c68240985607c303",
                    "sha256:abc3250a6c7ff22a6a366d9c175033ef0b2859f9d03676410c2f21d0fe568da4",
                    "sha256:578414b395b98d02c5f284e83c8db080afcbbde8012478054af22df2edb9336d",
                    "sha256:6257fa9f9597f43a167036d7bf748c5872c38803fa09e2493e119e512c6ac949",
                    "sha256:77b4b6493272fcf3797f846518defabab8fc232e67752f42b5cc42d48542ce19",
                    "sha256:facf15440126dde4d45bc8e8ede8fd04b2e06927b6d0bf2bea1d06c88ecd7bb1",
                    "sha256:7b9a9415bf3ab2576e5354a153ecae7f62860dc967452eecbbaea85550f1210b"
                ]
            }
        },
        "1.10beta1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:056549b08f3f294646ec4dd748f0602cb18d1edbe89ec7dcdce5062ae8a801f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "851ae5315b25ad6038330fd60dd13f2fbc42999d041e021b16f91d920c85cc2b",
            "container_config": {
                "Hostname": "851ae5315b25",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:056549b08f3f294646ec4dd748f0602cb18d1edbe89ec7dcdce5062ae8a801f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-12T11:21:41.327708141Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T01:44:20.97772974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb2519421c9794ccc99d483c07f59ba305531bc9b4dc294e74d2ddb7de69e52a in / "
                },
                {
                    "created": "2017-12-12T01:44:21.269562823Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T07:54:08.460511914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T07:54:15.884613888Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T07:54:45.003181049Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T11:21:00.099879186Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T11:21:00.367225498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T11:21:39.048877221Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ec7a10b5bf147a8e06cf64e27384ff3c6d065c74ebd8fdd31f572714f74a1055' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='32daa257a930ef85ca74bca107d477b3484f0b5ef7cc48086110916368d9c584' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a80555b3c4beecfb9af88c718f8676101ada74dea84f4aa1ade29d2d78554e0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0f30e18384e3beae8ce16cc6d095d899e29fb786c57297650acb7727fb3090e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b4c7404771b380212277fecc3b9a4f99f9978d024a45d3644c495a469df31ed8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bc3c66ab980e782ce52165a3a1572484353904c1b884dbbb87a662776280489d' ;; \t\t*) goRelArch='src'; goRelSha256='841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-12-12T11:21:39.637657873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T11:21:39.874872362Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T11:21:40.73372827Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-12-12T11:21:40.9945758Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T11:21:41.327708141Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e27a10675c5656bafb7bfa9e4631e871499af0a5ddfda3cebc0ac401dfe19382",
                    "sha256:851f3e348c69d8959d326f0bab975c03f9813eec33aba389aa7c569953510433",
                    "sha256:06f4de5fefeae30802d336e8c234b9c0989542fb80efd4f83be06c41aba26d9f",
                    "sha256:b31411566900643c38169980a21093c23e0a12a12ffea78b1921d07dd40372bd",
                    "sha256:af1e37edd79fe9bcd8fcdef756356cf219845b50526469cb7a3921b9ea3b9315",
                    "sha256:8961719ba04aa870a1480cdfa5e6a7b7bb86b7892e641af2fa871301c0c8207f",
                    "sha256:029ba125d8ee55543a8755309f35c2c5a46a0b838f50e1fc41769f25c3e56a10",
                    "sha256:81439d415624044590b9f9035f47524e744cf0c790713168dab1150ec1a2c457"
                ]
            }
        },
        "1.10beta1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f151083edfa2e4478dac0eda7077cc1a7fc3b6d455205fbd9d44d49313f00452",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "698bb259dd0637200b67f837ea52525d068bd8a4554fb149581926b4b41e5056",
            "container_config": {
                "Hostname": "698bb259dd06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f151083edfa2e4478dac0eda7077cc1a7fc3b6d455205fbd9d44d49313f00452",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-09T22:18:44.426586749Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-09T22:08:29.970928988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:30.341952072Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-09T22:09:59.391560109Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-09T22:18:42.872410646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:18:43.083100637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:18:43.867626598Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-09T22:18:44.099131206Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:18:44.426586749Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:f0366443c3504533c3d266c1ef48c1527b028cbf9f60d141205c58c78a774f59",
                    "sha256:b3c5650f002003582396eb653d2bcb701bae1f681aba3e86e1d367f08eb5b1ce",
                    "sha256:a84e8d1a5c7d5819907b44257b36a179ea3c93e1c97d528dc7e4b65abc1a4f3a",
                    "sha256:ceebb3cca10d608ee220f0230c84688911f14c040c48afdcfb545474fd2e13d4"
                ]
            }
        },
        "1.10beta1-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f151083edfa2e4478dac0eda7077cc1a7fc3b6d455205fbd9d44d49313f00452",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "698bb259dd0637200b67f837ea52525d068bd8a4554fb149581926b4b41e5056",
            "container_config": {
                "Hostname": "698bb259dd06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f151083edfa2e4478dac0eda7077cc1a7fc3b6d455205fbd9d44d49313f00452",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-09T22:18:44.426586749Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-09T22:08:29.970928988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:30.341952072Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-09T22:09:59.391560109Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-09T22:18:42.872410646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:18:43.083100637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:18:43.867626598Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-09T22:18:44.099131206Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:18:44.426586749Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:f0366443c3504533c3d266c1ef48c1527b028cbf9f60d141205c58c78a774f59",
                    "sha256:b3c5650f002003582396eb653d2bcb701bae1f681aba3e86e1d367f08eb5b1ce",
                    "sha256:a84e8d1a5c7d5819907b44257b36a179ea3c93e1c97d528dc7e4b65abc1a4f3a",
                    "sha256:ceebb3cca10d608ee220f0230c84688911f14c040c48afdcfb545474fd2e13d4"
                ]
            }
        },
        "1.10beta1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:056549b08f3f294646ec4dd748f0602cb18d1edbe89ec7dcdce5062ae8a801f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "851ae5315b25ad6038330fd60dd13f2fbc42999d041e021b16f91d920c85cc2b",
            "container_config": {
                "Hostname": "851ae5315b25",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:056549b08f3f294646ec4dd748f0602cb18d1edbe89ec7dcdce5062ae8a801f4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-12T11:21:41.327708141Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T01:44:20.97772974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb2519421c9794ccc99d483c07f59ba305531bc9b4dc294e74d2ddb7de69e52a in / "
                },
                {
                    "created": "2017-12-12T01:44:21.269562823Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T07:54:08.460511914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T07:54:15.884613888Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T07:54:45.003181049Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T11:21:00.099879186Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T11:21:00.367225498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T11:21:39.048877221Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ec7a10b5bf147a8e06cf64e27384ff3c6d065c74ebd8fdd31f572714f74a1055' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='32daa257a930ef85ca74bca107d477b3484f0b5ef7cc48086110916368d9c584' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a80555b3c4beecfb9af88c718f8676101ada74dea84f4aa1ade29d2d78554e0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0f30e18384e3beae8ce16cc6d095d899e29fb786c57297650acb7727fb3090e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b4c7404771b380212277fecc3b9a4f99f9978d024a45d3644c495a469df31ed8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bc3c66ab980e782ce52165a3a1572484353904c1b884dbbb87a662776280489d' ;; \t\t*) goRelArch='src'; goRelSha256='841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-12-12T11:21:39.637657873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T11:21:39.874872362Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T11:21:40.73372827Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-12-12T11:21:40.9945758Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T11:21:41.327708141Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e27a10675c5656bafb7bfa9e4631e871499af0a5ddfda3cebc0ac401dfe19382",
                    "sha256:851f3e348c69d8959d326f0bab975c03f9813eec33aba389aa7c569953510433",
                    "sha256:06f4de5fefeae30802d336e8c234b9c0989542fb80efd4f83be06c41aba26d9f",
                    "sha256:b31411566900643c38169980a21093c23e0a12a12ffea78b1921d07dd40372bd",
                    "sha256:af1e37edd79fe9bcd8fcdef756356cf219845b50526469cb7a3921b9ea3b9315",
                    "sha256:8961719ba04aa870a1480cdfa5e6a7b7bb86b7892e641af2fa871301c0c8207f",
                    "sha256:029ba125d8ee55543a8755309f35c2c5a46a0b838f50e1fc41769f25c3e56a10",
                    "sha256:81439d415624044590b9f9035f47524e744cf0c790713168dab1150ec1a2c457"
                ]
            }
        },
        "1.10beta2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2b9a06c7a63d2ce3bbc530b30cbb514cdd82548e69e7cf974d9ab01ed2d8088",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "067d955d8ea07368fde45f092f74c835dc98944a670d10758dd680e6164c560c",
            "container_config": {
                "Hostname": "067d955d8ea0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2b9a06c7a63d2ce3bbc530b30cbb514cdd82548e69e7cf974d9ab01ed2d8088",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-15T23:59:38.051245992Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T01:44:20.97772974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb2519421c9794ccc99d483c07f59ba305531bc9b4dc294e74d2ddb7de69e52a in / "
                },
                {
                    "created": "2017-12-12T01:44:21.269562823Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T07:54:08.460511914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T07:54:15.884613888Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T07:54:45.003181049Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T11:21:00.099879186Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-15T23:55:30.586948866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:55:45.538958799Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ab3abb7d731dd5ac7a06d5d5e64ef19946f57d4ce34555d262a87b8899901a93' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='777a59c2b1516598e161c0c5b25809c83fdec3737a0b7f4942c855259d57b3fe' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2f51e94a227473d41bf3d9dbbdc5855308e64d82fb740a15019bd4fe733c9518' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4e5bc465a828c88e0e3c6049c58ee735d8ca27a994bc1d709424425cd20cab79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ace75d03dc73351320d055535f1f314b7dbd27ab21c7878db27a385b1e00d5b0' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4d8625f071edd2cb2b16251f23530a43f9ff64db1b6ce080daff0dcc984005da' ;; \t\t*) goRelArch='src'; goRelSha256='a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-15T23:59:36.443154387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:59:36.666121339Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:59:37.406517976Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-15T23:59:37.66273236Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:59:38.051245992Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e27a10675c5656bafb7bfa9e4631e871499af0a5ddfda3cebc0ac401dfe19382",
                    "sha256:851f3e348c69d8959d326f0bab975c03f9813eec33aba389aa7c569953510433",
                    "sha256:06f4de5fefeae30802d336e8c234b9c0989542fb80efd4f83be06c41aba26d9f",
                    "sha256:b31411566900643c38169980a21093c23e0a12a12ffea78b1921d07dd40372bd",
                    "sha256:af1e37edd79fe9bcd8fcdef756356cf219845b50526469cb7a3921b9ea3b9315",
                    "sha256:9479068385526da3e29568505a4491e26d3b11ab0e9abbd429ef9ed5eb0445a4",
                    "sha256:27332d01b186ecc2d714fb0ea3c4ccb28bb7dbeaedeed9f5201b5fa1e715859a",
                    "sha256:69472d2b617508a7f938b4a51ed19f2924188051639e701bc9139f1d69205a9b"
                ]
            }
        },
        "1.10beta2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8867047f9389e34b404646374657cfc72b12d0a297eac6e8dfadf85527d36f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c187192e6fe35f5c622af49037134e761f7d46ee06e2677a5c607c7940782539",
            "container_config": {
                "Hostname": "c187192e6fe3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8867047f9389e34b404646374657cfc72b12d0a297eac6e8dfadf85527d36f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-16T00:09:04.679112969Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-15T23:59:51.709548522Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:59:52.094703059Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-16T00:01:12.965676455Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-16T00:09:03.186291733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T00:09:03.386444711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T00:09:04.077832087Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-16T00:09:04.301501135Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T00:09:04.679112969Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:24afed54316e5a5001097427cd30b8656b59f371db6d83aa2120e965952f7b70",
                    "sha256:334967a10b72809ab764c4d9792e5ebfa48e2aae8b59046ad08a2e38cf9984cd",
                    "sha256:2ffbe9b0ec8e132b74327fa7057eee7bd8fe8e6c63f958f740abd5b249e500de",
                    "sha256:4e6b199e80f23c0277dd26f200feea668cc5079c8905e018485edcf939017b27"
                ]
            }
        },
        "1.10beta2-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8867047f9389e34b404646374657cfc72b12d0a297eac6e8dfadf85527d36f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c187192e6fe35f5c622af49037134e761f7d46ee06e2677a5c607c7940782539",
            "container_config": {
                "Hostname": "c187192e6fe3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8867047f9389e34b404646374657cfc72b12d0a297eac6e8dfadf85527d36f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-16T00:09:04.679112969Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-15T23:59:51.709548522Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:59:52.094703059Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-16T00:01:12.965676455Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-16T00:09:03.186291733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T00:09:03.386444711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T00:09:04.077832087Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-16T00:09:04.301501135Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T00:09:04.679112969Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:24afed54316e5a5001097427cd30b8656b59f371db6d83aa2120e965952f7b70",
                    "sha256:334967a10b72809ab764c4d9792e5ebfa48e2aae8b59046ad08a2e38cf9984cd",
                    "sha256:2ffbe9b0ec8e132b74327fa7057eee7bd8fe8e6c63f958f740abd5b249e500de",
                    "sha256:4e6b199e80f23c0277dd26f200feea668cc5079c8905e018485edcf939017b27"
                ]
            }
        },
        "1.10beta2-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2b9a06c7a63d2ce3bbc530b30cbb514cdd82548e69e7cf974d9ab01ed2d8088",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "067d955d8ea07368fde45f092f74c835dc98944a670d10758dd680e6164c560c",
            "container_config": {
                "Hostname": "067d955d8ea0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2b9a06c7a63d2ce3bbc530b30cbb514cdd82548e69e7cf974d9ab01ed2d8088",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-15T23:59:38.051245992Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T01:44:20.97772974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb2519421c9794ccc99d483c07f59ba305531bc9b4dc294e74d2ddb7de69e52a in / "
                },
                {
                    "created": "2017-12-12T01:44:21.269562823Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T07:54:08.460511914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T07:54:15.884613888Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T07:54:45.003181049Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T11:21:00.099879186Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-15T23:55:30.586948866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:55:45.538958799Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ab3abb7d731dd5ac7a06d5d5e64ef19946f57d4ce34555d262a87b8899901a93' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='777a59c2b1516598e161c0c5b25809c83fdec3737a0b7f4942c855259d57b3fe' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2f51e94a227473d41bf3d9dbbdc5855308e64d82fb740a15019bd4fe733c9518' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4e5bc465a828c88e0e3c6049c58ee735d8ca27a994bc1d709424425cd20cab79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ace75d03dc73351320d055535f1f314b7dbd27ab21c7878db27a385b1e00d5b0' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4d8625f071edd2cb2b16251f23530a43f9ff64db1b6ce080daff0dcc984005da' ;; \t\t*) goRelArch='src'; goRelSha256='a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-15T23:59:36.443154387Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:59:36.666121339Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:59:37.406517976Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-15T23:59:37.66273236Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-15T23:59:38.051245992Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e27a10675c5656bafb7bfa9e4631e871499af0a5ddfda3cebc0ac401dfe19382",
                    "sha256:851f3e348c69d8959d326f0bab975c03f9813eec33aba389aa7c569953510433",
                    "sha256:06f4de5fefeae30802d336e8c234b9c0989542fb80efd4f83be06c41aba26d9f",
                    "sha256:b31411566900643c38169980a21093c23e0a12a12ffea78b1921d07dd40372bd",
                    "sha256:af1e37edd79fe9bcd8fcdef756356cf219845b50526469cb7a3921b9ea3b9315",
                    "sha256:9479068385526da3e29568505a4491e26d3b11ab0e9abbd429ef9ed5eb0445a4",
                    "sha256:27332d01b186ecc2d714fb0ea3c4ccb28bb7dbeaedeed9f5201b5fa1e715859a",
                    "sha256:69472d2b617508a7f938b4a51ed19f2924188051639e701bc9139f1d69205a9b"
                ]
            }
        },
        "1.10rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61af0624eaf414bedcae430114f6dd7aa1d4f8f6e67ab23450925b338e96f5bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6817cbab458b4c10b4232e505b1aba161bb0b3154daba14cb18d556aee857137",
            "container_config": {
                "Hostname": "6817cbab458b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61af0624eaf414bedcae430114f6dd7aa1d4f8f6e67ab23450925b338e96f5bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T02:00:11.216579277Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T01:44:20.97772974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb2519421c9794ccc99d483c07f59ba305531bc9b4dc294e74d2ddb7de69e52a in / "
                },
                {
                    "created": "2017-12-12T01:44:21.269562823Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T07:54:08.460511914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T07:54:15.884613888Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T07:54:45.003181049Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T11:21:00.099879186Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-26T01:59:55.333386729Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:00:09.425514383Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='c10d3cc7760bf3799037bd39027bbffdc568aea21d6fe60fe833373289c7b7c6' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2c1ed86e3cbf9d9866333b73cee96a0cd0b8c73654f4705088caa64eb5a624d4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a749faf38e80025b832dae250442ddc86d5bc353d752c781ea632e904922ff1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='03a98cc12b65dde36ed9561fa23530bcf5fa7ed85596aa74f2380f686fcbe928' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f482c7d6193c23d36657f8f026a74222c82eeb443331c38bbf3493d971144988' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a20d4077c0bb1d58710e48478ba0042950cf282f6ef1593aea4ac6e66265d22c' ;; \t\t*) goRelArch='src'; goRelSha256='743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T02:00:09.896516441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:00:10.142704211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:00:10.935016683Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T02:00:11.216579277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e27a10675c5656bafb7bfa9e4631e871499af0a5ddfda3cebc0ac401dfe19382",
                    "sha256:851f3e348c69d8959d326f0bab975c03f9813eec33aba389aa7c569953510433",
                    "sha256:06f4de5fefeae30802d336e8c234b9c0989542fb80efd4f83be06c41aba26d9f",
                    "sha256:b31411566900643c38169980a21093c23e0a12a12ffea78b1921d07dd40372bd",
                    "sha256:af1e37edd79fe9bcd8fcdef756356cf219845b50526469cb7a3921b9ea3b9315",
                    "sha256:8921adb0a28457c6065d10ec1ef8695501f65db6cf8907917678353218904fb0",
                    "sha256:4640ab453837dabb7e28a3bd2bca726898bd5bb97b5d55b2cdbda8ada1404988"
                ]
            }
        },
        "1.10rc1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c7d13935a7adb001b04164d668b759d22688cf078395be4348e47eb4d1dff00",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "8817bd4ed8c65d5eeb891b4b124318799d28e36a5cbe5b2a9c68733a543b606b",
            "container_config": {
                "Hostname": "8817bd4ed8c6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c7d13935a7adb001b04164d668b759d22688cf078395be4348e47eb4d1dff00",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T02:14:09.960802258Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-26T02:00:32.164563471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:00:32.887355234Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-26T02:02:00.088228643Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T02:14:08.799621111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:14:09.045017565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:14:09.707536703Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T02:14:09.960802258Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:e56a3b81eb66d62ec6bfd52cc9ee874e9404f4685e43ce5776dbcdfa63cabb0b",
                    "sha256:3bdc17a4a13a2f662224a06b072685532e3d2e1fc3e68caf12c95e50144ef481",
                    "sha256:84c722b52c095d5f88d3d6101f22809e0925ea524d8e7bc482dba499894fbb4e"
                ]
            }
        },
        "1.10rc1-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c7d13935a7adb001b04164d668b759d22688cf078395be4348e47eb4d1dff00",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "8817bd4ed8c65d5eeb891b4b124318799d28e36a5cbe5b2a9c68733a543b606b",
            "container_config": {
                "Hostname": "8817bd4ed8c6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c7d13935a7adb001b04164d668b759d22688cf078395be4348e47eb4d1dff00",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T02:14:09.960802258Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-26T02:00:32.164563471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:00:32.887355234Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-26T02:02:00.088228643Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T02:14:08.799621111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:14:09.045017565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:14:09.707536703Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T02:14:09.960802258Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:e56a3b81eb66d62ec6bfd52cc9ee874e9404f4685e43ce5776dbcdfa63cabb0b",
                    "sha256:3bdc17a4a13a2f662224a06b072685532e3d2e1fc3e68caf12c95e50144ef481",
                    "sha256:84c722b52c095d5f88d3d6101f22809e0925ea524d8e7bc482dba499894fbb4e"
                ]
            }
        },
        "1.10rc1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61af0624eaf414bedcae430114f6dd7aa1d4f8f6e67ab23450925b338e96f5bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6817cbab458b4c10b4232e505b1aba161bb0b3154daba14cb18d556aee857137",
            "container_config": {
                "Hostname": "6817cbab458b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:61af0624eaf414bedcae430114f6dd7aa1d4f8f6e67ab23450925b338e96f5bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T02:00:11.216579277Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T01:44:20.97772974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb2519421c9794ccc99d483c07f59ba305531bc9b4dc294e74d2ddb7de69e52a in / "
                },
                {
                    "created": "2017-12-12T01:44:21.269562823Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T07:54:08.460511914Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T07:54:15.884613888Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T07:54:45.003181049Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T11:21:00.099879186Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-26T01:59:55.333386729Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:00:09.425514383Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='c10d3cc7760bf3799037bd39027bbffdc568aea21d6fe60fe833373289c7b7c6' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2c1ed86e3cbf9d9866333b73cee96a0cd0b8c73654f4705088caa64eb5a624d4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a749faf38e80025b832dae250442ddc86d5bc353d752c781ea632e904922ff1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='03a98cc12b65dde36ed9561fa23530bcf5fa7ed85596aa74f2380f686fcbe928' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f482c7d6193c23d36657f8f026a74222c82eeb443331c38bbf3493d971144988' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a20d4077c0bb1d58710e48478ba0042950cf282f6ef1593aea4ac6e66265d22c' ;; \t\t*) goRelArch='src'; goRelSha256='743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T02:00:09.896516441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:00:10.142704211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T02:00:10.935016683Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T02:00:11.216579277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e27a10675c5656bafb7bfa9e4631e871499af0a5ddfda3cebc0ac401dfe19382",
                    "sha256:851f3e348c69d8959d326f0bab975c03f9813eec33aba389aa7c569953510433",
                    "sha256:06f4de5fefeae30802d336e8c234b9c0989542fb80efd4f83be06c41aba26d9f",
                    "sha256:b31411566900643c38169980a21093c23e0a12a12ffea78b1921d07dd40372bd",
                    "sha256:af1e37edd79fe9bcd8fcdef756356cf219845b50526469cb7a3921b9ea3b9315",
                    "sha256:8921adb0a28457c6065d10ec1ef8695501f65db6cf8907917678353218904fb0",
                    "sha256:4640ab453837dabb7e28a3bd2bca726898bd5bb97b5d55b2cdbda8ada1404988"
                ]
            }
        },
        "1.10rc2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f386dd7c48e742e6114d96130c48c04cff85de3dbcdc6066674fce56c2619b12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5bac568a858c4c134760527f00159d09a363a3f32e93281ab34c98d3e3716865",
            "container_config": {
                "Hostname": "5bac568a858c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f386dd7c48e742e6114d96130c48c04cff85de3dbcdc6066674fce56c2619b12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-15T15:59:38.278489819Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T01:58:24.711712856Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d3b21b18d7bc6d6db1349979cf0e68073647e90c892aebab0da5d679b5550eb in / "
                },
                {
                    "created": "2018-02-15T02:01:04.479066259Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T03:55:51.458955454Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T03:55:59.288793647Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T03:56:50.243358316Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T15:59:18.847823075Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T15:59:19.453915141Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:36.038921352Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-15T15:59:36.613186061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:36.993912976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:37.96127586Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-15T15:59:38.278489819Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8568818b1f7f534832b393c531edfcb4a30e7eb40b573e68fdea90358987231f",
                    "sha256:f7d58f7584447139266bdfe945c825a2a060f7fcbe0b07228ab97774f3a149ab",
                    "sha256:a6afffb1947cf43119b7a7a87d9d752440f400866005d2f60e23f5c06abd91c1",
                    "sha256:c8718ae77a2a4b3b9aeef18b67a64becf3b3b0a2715362c4b1a082d98d510009",
                    "sha256:8f16f42ec6a87d9ad63ef7ccc0f81f52d66362604e311da7982b94e23b0cacbc",
                    "sha256:4cd4c4873c878ad116cf39af19fa7e6ed4bf5dc84cac9d5546296c50f6071a4b",
                    "sha256:c70a4304d20eedc9be53bc7f563cddee82488ee6ea5e11b270c310de0c417810"
                ]
            }
        },
        "1.10rc2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:476391484a5f081f5ca8ae5abf5a44555111a2f4a90234558008f7114531c91a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c76b24d996a4d87892198978b397b73e1e38be27f6afd31becaae9073434b94c",
            "container_config": {
                "Hostname": "c76b24d996a4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:476391484a5f081f5ca8ae5abf5a44555111a2f4a90234558008f7114531c91a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T01:14:51.111075485Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T01:10:32.432612012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:10:32.829078813Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T01:11:56.678055781Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T01:14:49.771050015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:14:50.075292753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:14:50.856325826Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T01:14:51.111075485Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:a4b7dd2c293198bfec9945b95a49921a91278dd4804c6dfec6c8ce5dd70a74c9",
                    "sha256:1ce3e6954192a938c5a9624f0499401cfcdb057a7cfbfd09d4ddcd3ebe979cef",
                    "sha256:66c549f33f195129dab5e70f5eaf1bcfb0b48d1b3f348cceaf262f756d34a188"
                ]
            }
        },
        "1.10rc2-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:476391484a5f081f5ca8ae5abf5a44555111a2f4a90234558008f7114531c91a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c76b24d996a4d87892198978b397b73e1e38be27f6afd31becaae9073434b94c",
            "container_config": {
                "Hostname": "c76b24d996a4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:476391484a5f081f5ca8ae5abf5a44555111a2f4a90234558008f7114531c91a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T01:14:51.111075485Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-01-09T21:10:58.365737589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:093f0723fa46f6cdbd6f7bd146448bb70ecce54254c35701feeceb956414622f in / "
                },
                {
                    "created": "2018-01-09T21:10:58.579708634Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-09T22:08:22.175256816Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T01:10:32.432612012Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:10:32.829078813Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T01:11:56.678055781Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T01:14:49.771050015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:14:50.075292753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T01:14:50.856325826Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T01:14:51.111075485Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd7100a72410606589a54b932cabd804a17f9ae5b42a1882bd56d263e02b6215",
                    "sha256:ed1f21c46579348ed05ac7fd196c9fcf689d75e2defa9984635e20ec0a63fd6d",
                    "sha256:a4b7dd2c293198bfec9945b95a49921a91278dd4804c6dfec6c8ce5dd70a74c9",
                    "sha256:1ce3e6954192a938c5a9624f0499401cfcdb057a7cfbfd09d4ddcd3ebe979cef",
                    "sha256:66c549f33f195129dab5e70f5eaf1bcfb0b48d1b3f348cceaf262f756d34a188"
                ]
            }
        },
        "1.10rc2-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f386dd7c48e742e6114d96130c48c04cff85de3dbcdc6066674fce56c2619b12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5bac568a858c4c134760527f00159d09a363a3f32e93281ab34c98d3e3716865",
            "container_config": {
                "Hostname": "5bac568a858c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f386dd7c48e742e6114d96130c48c04cff85de3dbcdc6066674fce56c2619b12",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-15T15:59:38.278489819Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T01:58:24.711712856Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d3b21b18d7bc6d6db1349979cf0e68073647e90c892aebab0da5d679b5550eb in / "
                },
                {
                    "created": "2018-02-15T02:01:04.479066259Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T03:55:51.458955454Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T03:55:59.288793647Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T03:56:50.243358316Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T15:59:18.847823075Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T15:59:19.453915141Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:36.038921352Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-15T15:59:36.613186061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:36.993912976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T15:59:37.96127586Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-15T15:59:38.278489819Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8568818b1f7f534832b393c531edfcb4a30e7eb40b573e68fdea90358987231f",
                    "sha256:f7d58f7584447139266bdfe945c825a2a060f7fcbe0b07228ab97774f3a149ab",
                    "sha256:a6afffb1947cf43119b7a7a87d9d752440f400866005d2f60e23f5c06abd91c1",
                    "sha256:c8718ae77a2a4b3b9aeef18b67a64becf3b3b0a2715362c4b1a082d98d510009",
                    "sha256:8f16f42ec6a87d9ad63ef7ccc0f81f52d66362604e311da7982b94e23b0cacbc",
                    "sha256:4cd4c4873c878ad116cf39af19fa7e6ed4bf5dc84cac9d5546296c50f6071a4b",
                    "sha256:c70a4304d20eedc9be53bc7f563cddee82488ee6ea5e11b270c310de0c417810"
                ]
            }
        },
        "1.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c67f3c31e14a34d196b176ce1a90a368a58f71962ff88efa81cbcb64922d6f63",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "95a2e15b309cdff08088704cdb349e179f19a186da521253935644ede05a241a",
            "container_config": {
                "Hostname": "95a2e15b309c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c67f3c31e14a34d196b176ce1a90a368a58f71962ff88efa81cbcb64922d6f63",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:26:16.191688021Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:21:56.254324217Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99bf629976cd3d79c99a16a69ea0b2554f8d122afd1de5412e6ab657510bdbfb in / "
                },
                {
                    "created": "2019-08-14T00:21:56.518106562Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T06:12:00.177626405Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T06:12:08.455105544Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T06:12:32.870005816Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:24:08.443734549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:25:59.326370508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:14.619081198Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:26:15.087571031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:15.24660105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:15.98324553Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:26:16.191688021Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:660314270d7683a945d0cc83e5561d61f022e7e6731fd2e3fad04a6544bf42d8",
                    "sha256:6d5a64ea8f376c1ae70d5fe11fe28920f4160b9035088627c3f058f396f4dacd",
                    "sha256:74e2ede3b29cfb611557715ac8c6d1045b9c7572c7d8ef87074a32c4c3a5c428",
                    "sha256:97e8dd85db4ed8be3e28dc1bad5863b8d886474594117a2f0d7aa856b52c462f",
                    "sha256:39a8c34bbaf3ccb2e3e82eec759a05c3095883db4a3e99926cef32595c3b8d58",
                    "sha256:7ffca9f27ea79eb80b25fa06110b0d595ffbb06ee71b1ae0560a0cc4479a56d6",
                    "sha256:18dccb3264f2d7ad636726c48444ead93846012872451b5e08c0d81cc0d3bdad"
                ]
            }
        },
        "1.11-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7106040c1d65ed40d36f7b4831bb6f68161320ccb0de04518f9d652803b576a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5d0f71893ae5094d825b171a3a70817d77dc249d30ff49e39c1989708ca641b",
            "container_config": {
                "Hostname": "a5d0f71893ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7106040c1d65ed40d36f7b4831bb6f68161320ccb0de04518f9d652803b576a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:15:51.782459762Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:59:29.071001361Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:59:29.814558232Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:12:34.802797092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:49.205591023Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:15:49.959957315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:50.215532712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:51.524401172Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:15:51.782459762Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:5ff34e0a6dec95d1f25943e98ca4e41b882004d422c93ed7a40f73bfe4ad9b97",
                    "sha256:c973660ff75c661b2e3a5d0d47dcafd2b8ae0022e0b714e2bcdf32e60169ef56",
                    "sha256:128c5ebbedfdf1680a6c91109dba55e1f4c570e1c49045604f94731643fd4052",
                    "sha256:1c5f3ece5b7b1b0e561c6a47dbdf372fa758461aebd8bfe553e4d5ba0414f1ad"
                ]
            }
        },
        "1.11-alpine3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7106040c1d65ed40d36f7b4831bb6f68161320ccb0de04518f9d652803b576a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5d0f71893ae5094d825b171a3a70817d77dc249d30ff49e39c1989708ca641b",
            "container_config": {
                "Hostname": "a5d0f71893ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7106040c1d65ed40d36f7b4831bb6f68161320ccb0de04518f9d652803b576a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:15:51.782459762Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:59:29.071001361Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:59:29.814558232Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:12:34.802797092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:49.205591023Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:15:49.959957315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:50.215532712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:51.524401172Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:15:51.782459762Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:5ff34e0a6dec95d1f25943e98ca4e41b882004d422c93ed7a40f73bfe4ad9b97",
                    "sha256:c973660ff75c661b2e3a5d0d47dcafd2b8ae0022e0b714e2bcdf32e60169ef56",
                    "sha256:128c5ebbedfdf1680a6c91109dba55e1f4c570e1c49045604f94731643fd4052",
                    "sha256:1c5f3ece5b7b1b0e561c6a47dbdf372fa758461aebd8bfe553e4d5ba0414f1ad"
                ]
            }
        },
        "1.11-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5db9d59bd8c97dfe3d7878699325c00fd5e33eadc1f93ad22380aa9e76638cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "191b1ff07e2ba13917f13295f42ecfda308557a3c912cc0796dc05ee32e52673",
            "container_config": {
                "Hostname": "191b1ff07e2b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5db9d59bd8c97dfe3d7878699325c00fd5e33eadc1f93ad22380aa9e76638cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-30T22:54:48.143096139Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:40.704160499Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c13ab388a8e4c772b97ec8f6d2c576bece32cecdcfb6fee5175e1d3f613dd12 in / "
                },
                {
                    "created": "2019-01-30T22:19:40.859176347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:50:25.98069813Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:50:27.052105204Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-30T22:50:27.314512678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:45.699795128Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-30T22:54:46.479702878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:46.727719033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:47.81248006Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-30T22:54:48.143096139Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629164d914fc35be714ea121054f0a512ace424b675daa808ae037d6706c343f",
                    "sha256:af45321294a955bcaa746a303c4b65553a0f715053e814351b0d9fb363b2edc0",
                    "sha256:87a4d5fa9c89941f0b98a3b230886120665e23ab8b4ed56b3335a5fea58cfe55",
                    "sha256:e50b19bd2cfc7f977dea516cb77f815d1d77c16808290a16dd91ff5d7d50d5c5",
                    "sha256:be118fd816b43be6573a47267a4d8d3ce0950d3bb57f98f8e558b5962d0c4d88"
                ]
            }
        },
        "1.11-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9526a931fdd50b89b04eba4383df827a32dff83bf89ec61f875fa07eb5fb478",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "476ce9a49adf5b0307c19a5e08aa200081f3cb1bf7a9a27894018a3399436f8f",
            "container_config": {
                "Hostname": "476ce9a49adf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9526a931fdd50b89b04eba4383df827a32dff83bf89ec61f875fa07eb5fb478",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:27:31.795799255Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:22.278616874Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:26:23.582281132Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-12T15:25:29.298986087Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:27:30.308878633Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:27:30.718726919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:27:30.886945556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:27:31.583730471Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:27:31.795799255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e30375a8696c1d4e9bd625727ff22ad449de5e1bc424947e687c70feead895a7",
                    "sha256:d0aa1970c77f1c6aaee33de75681642d726f1a2111a9e65b61030dc4b82cf28b",
                    "sha256:ecfe4bf30c95a687e2dd10669116208fc747295de826cc207dd67e8c0ad91af0",
                    "sha256:68067d743e904ba407ea20b733ea9cb748889e9834ac83d737e06c788b6a3b0f"
                ]
            }
        },
        "1.11-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a45e5229a7e8e5bb390d199e187558ef736a1c986706a4311c823759e0ae191a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9a3fb9c9e06cdf3335cf6382a492d8fa0d2f3aaec92fe88218eb1ce6d544a78",
            "container_config": {
                "Hostname": "c9a3fb9c9e06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a45e5229a7e8e5bb390d199e187558ef736a1c986706a4311c823759e0ae191a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:46:39.218029341Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:43:28.790884348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:46:36.623301796Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:46:37.363312426Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:46:37.630871661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:46:38.962805872Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:46:39.218029341Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:3a4771434ecb1e6a975f5d895c231744d94e12bd92df746749257d7ae3a0b0bb",
                    "sha256:d0bc733cb84bb690e80c55833b1799d50e46fad50b02b120b8402fd171d382c8"
                ]
            }
        },
        "1.11-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c67f3c31e14a34d196b176ce1a90a368a58f71962ff88efa81cbcb64922d6f63",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "95a2e15b309cdff08088704cdb349e179f19a186da521253935644ede05a241a",
            "container_config": {
                "Hostname": "95a2e15b309c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c67f3c31e14a34d196b176ce1a90a368a58f71962ff88efa81cbcb64922d6f63",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:26:16.191688021Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:21:56.254324217Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99bf629976cd3d79c99a16a69ea0b2554f8d122afd1de5412e6ab657510bdbfb in / "
                },
                {
                    "created": "2019-08-14T00:21:56.518106562Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T06:12:00.177626405Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T06:12:08.455105544Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T06:12:32.870005816Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:24:08.443734549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:25:59.326370508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:14.619081198Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:26:15.087571031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:15.24660105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:15.98324553Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:26:16.191688021Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:660314270d7683a945d0cc83e5561d61f022e7e6731fd2e3fad04a6544bf42d8",
                    "sha256:6d5a64ea8f376c1ae70d5fe11fe28920f4160b9035088627c3f058f396f4dacd",
                    "sha256:74e2ede3b29cfb611557715ac8c6d1045b9c7572c7d8ef87074a32c4c3a5c428",
                    "sha256:97e8dd85db4ed8be3e28dc1bad5863b8d886474594117a2f0d7aa856b52c462f",
                    "sha256:39a8c34bbaf3ccb2e3e82eec759a05c3095883db4a3e99926cef32595c3b8d58",
                    "sha256:7ffca9f27ea79eb80b25fa06110b0d595ffbb06ee71b1ae0560a0cc4479a56d6",
                    "sha256:18dccb3264f2d7ad636726c48444ead93846012872451b5e08c0d81cc0d3bdad"
                ]
            }
        },
        "1.11-rc": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d03ea04e460a6994ad774b2ee717578370d65aafc771a0e8f2cd0ff030061695",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c27f307fcc47a679ac17dadad803f333eb7625c37dcbd41caa239916582c3132",
            "container_config": {
                "Hostname": "c27f307fcc47",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d03ea04e460a6994ad774b2ee717578370d65aafc771a0e8f2cd0ff030061695",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:27:40.413986823Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T01:27:07.615174332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:25.038422973Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:27:38.990891541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:39.266021127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:40.130941627Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:27:40.413986823Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:9a46d149ffec20a47667ec3d76d6a1852eb50230be9cd8f56addd6cd54919d00",
                    "sha256:4cd4a4de8ed0e193eaa2ab21554e4503ed636b537b2b4f41465c44b4e709274d"
                ]
            }
        },
        "1.11-rc-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb1c1f9bf7642fc12299efb6ccfe1d879c0611e707f0967da76d8a1b95c0b5ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4772e051d72f01754aecfc21e619ee6cc72269286423ca7a2747f9c18d887b4a",
            "container_config": {
                "Hostname": "4772e051d72f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb1c1f9bf7642fc12299efb6ccfe1d879c0611e707f0967da76d8a1b95c0b5ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:30:27.395012404Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:28:35.032939441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:25.040065605Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:30:25.818600192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:26.118280431Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:27.087133477Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:30:27.395012404Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:879c2fefc5605bc901ce3a707b3bbd47bd7a3ccb226254f5f03ea1c7422aeecf",
                    "sha256:e18143c20240873492b62da76e108e45ec8475d8288a3986cbe7d985282731bc"
                ]
            }
        },
        "1.11-rc-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12996f0ca34886f90e59c945f40e49e44e27b6e52d7985d155b08e271f1d6314",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c2bd299ab9d4353d4babd661dd089824d5d67aa9de17987149a11253e5fa8920",
            "container_config": {
                "Hostname": "c2bd299ab9d4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12996f0ca34886f90e59c945f40e49e44e27b6e52d7985d155b08e271f1d6314",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:33:04.346419759Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:13:45.666164062Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ee19b92d5cb1bf143947fe2e2481cb3b353d42e1e54888a8ba48c03dd4155f2 in / "
                },
                {
                    "created": "2018-07-06T14:13:45.901173503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:45:09.216744395Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-06T14:45:09.941574136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:31:10.067462042Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:32:54.607440104Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:33:02.709803937Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:33:03.034341627Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:33:04.018765345Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:33:04.346419759Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:717b092b8c86356cf976d9c83fa6f0ea67f2bf3148a5bbb7e02026a5d3245e68",
                    "sha256:6b2edeabe17e3c818efe9117d2b39c77846292012f081da8b0bf5ca4a2c9c09b",
                    "sha256:db88a4fd1709661a218a704e33978944c8fb38abd9a4621201b06367b84c14da",
                    "sha256:83d67278e81e9118d7cf544426fd305e6ced029d3fbec5430716a1a238d8006e",
                    "sha256:504764e3b4c6f8a563f38a8140a6803cae566d7f34ca2322739e6c8703dacdf2"
                ]
            }
        },
        "1.11-rc-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb1c1f9bf7642fc12299efb6ccfe1d879c0611e707f0967da76d8a1b95c0b5ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4772e051d72f01754aecfc21e619ee6cc72269286423ca7a2747f9c18d887b4a",
            "container_config": {
                "Hostname": "4772e051d72f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb1c1f9bf7642fc12299efb6ccfe1d879c0611e707f0967da76d8a1b95c0b5ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:30:27.395012404Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:28:35.032939441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:25.040065605Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:30:25.818600192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:26.118280431Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:27.087133477Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:30:27.395012404Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:879c2fefc5605bc901ce3a707b3bbd47bd7a3ccb226254f5f03ea1c7422aeecf",
                    "sha256:e18143c20240873492b62da76e108e45ec8475d8288a3986cbe7d985282731bc"
                ]
            }
        },
        "1.11-rc-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d03ea04e460a6994ad774b2ee717578370d65aafc771a0e8f2cd0ff030061695",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c27f307fcc47a679ac17dadad803f333eb7625c37dcbd41caa239916582c3132",
            "container_config": {
                "Hostname": "c27f307fcc47",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d03ea04e460a6994ad774b2ee717578370d65aafc771a0e8f2cd0ff030061695",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:27:40.413986823Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T01:27:07.615174332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:25.038422973Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:27:38.990891541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:39.266021127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:40.130941627Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:27:40.413986823Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:9a46d149ffec20a47667ec3d76d6a1852eb50230be9cd8f56addd6cd54919d00",
                    "sha256:4cd4a4de8ed0e193eaa2ab21554e4503ed636b537b2b4f41465c44b4e709274d"
                ]
            }
        },
        "1.11-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524f9ec004c19befb11b1b3e8b71d75ee60dd243510125dd544d77385c04776",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "91d80ec813982d2fdcbebf3803c2d9d41a79427b2376e8c6b4029938fc7fd6ee",
            "container_config": {
                "Hostname": "91d80ec81398",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524f9ec004c19befb11b1b3e8b71d75ee60dd243510125dd544d77385c04776",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:26:40.479632182Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:24:45.612796997Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9b24bd862a79bf6c6e79daf6babca27245063eb52a2f72ffc4fc3494ddd3d48 in / "
                },
                {
                    "created": "2019-08-14T00:24:45.872523599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T06:23:58.329863111Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T06:24:07.74714461Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T06:24:34.309116824Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:25:24.724729859Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:26:20.068672108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:38.169422469Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:26:38.815084738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:39.142723965Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:40.280593583Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:26:40.479632182Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f73e7e79899a33b4b9b78da62efb71520844f8dd518f3c390e27bc3063bce307",
                    "sha256:d09a13f0562727a458ffbb3a66f6e74e70f8963f6bb813baa03c4a5af77c9dac",
                    "sha256:057abc6c693757d66fb885c2e5c825cf27d3fb355f71eb69e72d6c9d3f27d25c",
                    "sha256:e7c6a88ad7ae5b7246c905a16d5941b4292342778ce7125256bedf9864a99eab",
                    "sha256:f5c5a39263b51bb7b1f92130684237fbee7ed9f86726837b521e6e2b4009671c",
                    "sha256:651f2c4e4c8d376f098fe97841ab963b7ff9a2281689e2b27f67d6edc5ce77a1",
                    "sha256:b900af33fe73228116c86e0e28d4d5bd779017909e2f23463f447f29b3b95d8d"
                ]
            }
        },
        "1.11.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:613ea1213b262e71ede705be1e0200459ad306b8c98f7bef770124f6b3db1b7c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "279cd85b7668990b697076cc2c1a983db2454cffd7be873a3c15359176e72c64",
            "container_config": {
                "Hostname": "279cd85b7668",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:613ea1213b262e71ede705be1e0200459ad306b8c98f7bef770124f6b3db1b7c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-05T11:06:51.839399334Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-04T21:21:24.685563594Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:58d5c21fcabcf1eec94e8676a3b1e51c5fdc2db5c7b866a761f907fa30ede4d8 in / "
                },
                {
                    "created": "2018-09-04T21:21:24.962310464Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-04T22:33:34.272870374Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-04T22:33:43.932154953Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-09-04T22:34:19.627080813Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T11:06:31.614031582Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T11:06:31.971351988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T11:06:49.798628195Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='8ffeb3577d8ca5477064f1cb8739835973c866487f2bf81df1227eaa96826acd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e4853168f41d0bea65e4d38f992a2d44b58552605f623640c5ead89d515c56c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a91932b65b4af2f84ef2dce10d790e6a0d3d22c9ea1bdf3d8c4d9279dfa680e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e874d617f0e322f8c2dda8c23ea3a2ea21d5dfe7177abb1f8b6a0ac7cd653272' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c113495fbb175d6beb1b881750de1dd034c7ae8657c30b3de8808032c9af0a15' ;; \t\t*) goRelArch='src'; goRelSha256='afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-05T11:06:50.422807047Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T11:06:50.66247987Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T11:06:51.554530305Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-05T11:06:51.839399334Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b28ef0b6fef80faa25436bec0a1375214d9a23a91e9b75975bba3b2889f8504f",
                    "sha256:0b703c74a09c1e55d52e6b689babc6ae6374a793c1acfe8ff21a554014d8f434",
                    "sha256:2eb1c9bfc5ead1e646e39ab760ead591f995cf606c327235a21eeb075ec5c178",
                    "sha256:ab016c9ea8f8bb97f7b1c2871b0560787028864d06a49d062816ad72b9336cc6",
                    "sha256:84a5f96d662162af0228092a11a25906a2aad78c761ba14f7c4ef7cb2a0757e4",
                    "sha256:cf2043c0e99ac327a3c1d77475f3f07e1a95f74cee6197ed8b237dcaf33d410c",
                    "sha256:cbc3342714a6396f710655784fef2274512647745c84c8d21520d9640e819559"
                ]
            }
        },
        "1.11.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1a7ccd312221a0526838d90fea187a5a5db51a1f7d6b7418e2f3c3eb4357e6c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e108c2d311db5d428d76668612ce943f628f617a48a92d0206b1b41b5114116f",
            "container_config": {
                "Hostname": "e108c2d311db",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1a7ccd312221a0526838d90fea187a5a5db51a1f7d6b7418e2f3c3eb4357e6c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-11T23:01:23.075411566Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-11T22:58:20.616136061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:20.972563296Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-11T23:01:21.703426885Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:21.947010666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:22.812322556Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-11T23:01:23.075411566Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:e7da93cd1ea251e0414977d8ecdbee0d0cdf4ae06fe558b66fdef9528681cc28",
                    "sha256:115270cf93deecee2546dceef409fae0e6ac3ce7a827262ce5fb6ef4a5706dcd"
                ]
            }
        },
        "1.11.0-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e50d58a10e7f975ae2e4ca212532db769bf224b0f92b480e8c6f4cea8ccc27c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9882e2b44765995a72d810d83d1c0d624fea2372c3f87c50965207e2ba95c137",
            "container_config": {
                "Hostname": "9882e2b44765",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e50d58a10e7f975ae2e4ca212532db769bf224b0f92b480e8c6f4cea8ccc27c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-11T23:04:48.950503784Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:38.88529994Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49f9e47e678d868d5b023482aa8dded71276a241a665c4f8b55ca77269321b34 in / "
                },
                {
                    "created": "2018-09-11T22:19:39.058628442Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:44.361139546Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T23:01:45.174939377Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-11T23:01:45.367754332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:04:46.9177605Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-11T23:04:47.583668482Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:04:47.811026359Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:04:48.673704544Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-11T23:04:48.950503784Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebf12965380b39889c99a9c02e82ba465f887b45975b6e389d42e9e6a3857888",
                    "sha256:8c16c55130abe3adc40609904b33dc92813f6d2f7caf1ced629669adde1b409b",
                    "sha256:dde396d4d613d53a0b7428a5e566f5e667dadb0b171712cd9339ee2b652a88a4",
                    "sha256:71c7937a1c3789f2cc4ccf2c1ac2ca401651103299ca9f27ed09a14e9f9af8f9",
                    "sha256:d978ed91ed76145cb4e6ca4d675d33ee4e498702b3746b6e3b23b6318ae2e2ab"
                ]
            }
        },
        "1.11.0-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1a7ccd312221a0526838d90fea187a5a5db51a1f7d6b7418e2f3c3eb4357e6c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e108c2d311db5d428d76668612ce943f628f617a48a92d0206b1b41b5114116f",
            "container_config": {
                "Hostname": "e108c2d311db",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1a7ccd312221a0526838d90fea187a5a5db51a1f7d6b7418e2f3c3eb4357e6c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-11T23:01:23.075411566Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-11T22:58:20.616136061Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:20.972563296Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-11T23:01:21.703426885Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:21.947010666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:22.812322556Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-11T23:01:23.075411566Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:e7da93cd1ea251e0414977d8ecdbee0d0cdf4ae06fe558b66fdef9528681cc28",
                    "sha256:115270cf93deecee2546dceef409fae0e6ac3ce7a827262ce5fb6ef4a5706dcd"
                ]
            }
        },
        "1.11.0-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:613ea1213b262e71ede705be1e0200459ad306b8c98f7bef770124f6b3db1b7c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "279cd85b7668990b697076cc2c1a983db2454cffd7be873a3c15359176e72c64",
            "container_config": {
                "Hostname": "279cd85b7668",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:613ea1213b262e71ede705be1e0200459ad306b8c98f7bef770124f6b3db1b7c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-05T11:06:51.839399334Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-04T21:21:24.685563594Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:58d5c21fcabcf1eec94e8676a3b1e51c5fdc2db5c7b866a761f907fa30ede4d8 in / "
                },
                {
                    "created": "2018-09-04T21:21:24.962310464Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-04T22:33:34.272870374Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-04T22:33:43.932154953Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-09-04T22:34:19.627080813Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T11:06:31.614031582Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T11:06:31.971351988Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T11:06:49.798628195Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='8ffeb3577d8ca5477064f1cb8739835973c866487f2bf81df1227eaa96826acd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e4853168f41d0bea65e4d38f992a2d44b58552605f623640c5ead89d515c56c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a91932b65b4af2f84ef2dce10d790e6a0d3d22c9ea1bdf3d8c4d9279dfa680e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e874d617f0e322f8c2dda8c23ea3a2ea21d5dfe7177abb1f8b6a0ac7cd653272' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c113495fbb175d6beb1b881750de1dd034c7ae8657c30b3de8808032c9af0a15' ;; \t\t*) goRelArch='src'; goRelSha256='afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-05T11:06:50.422807047Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T11:06:50.66247987Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T11:06:51.554530305Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-05T11:06:51.839399334Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b28ef0b6fef80faa25436bec0a1375214d9a23a91e9b75975bba3b2889f8504f",
                    "sha256:0b703c74a09c1e55d52e6b689babc6ae6374a793c1acfe8ff21a554014d8f434",
                    "sha256:2eb1c9bfc5ead1e646e39ab760ead591f995cf606c327235a21eeb075ec5c178",
                    "sha256:ab016c9ea8f8bb97f7b1c2871b0560787028864d06a49d062816ad72b9336cc6",
                    "sha256:84a5f96d662162af0228092a11a25906a2aad78c761ba14f7c4ef7cb2a0757e4",
                    "sha256:cf2043c0e99ac327a3c1d77475f3f07e1a95f74cee6197ed8b237dcaf33d410c",
                    "sha256:cbc3342714a6396f710655784fef2274512647745c84c8d21520d9640e819559"
                ]
            }
        },
        "1.11.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cddf215e97d00492b5b638fe2da329bb4b6253ea93834b694a88cdcf8e5032f9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "32b5596fb5de7d355a678ac0a2ffd95385ed23a7c7c89533ed361944182a9819",
            "container_config": {
                "Hostname": "32b5596fb5de",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cddf215e97d00492b5b638fe2da329bb4b6253ea93834b694a88cdcf8e5032f9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T08:42:43.432359416Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:24:20.7838109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b3598c18dc395846ab2c5e4e8422c4a5dad7bc3b5b08c09ebceee80989904641 in / "
                },
                {
                    "created": "2018-10-15T23:24:21.111611143Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:00:49.945915631Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T01:00:57.258682859Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T01:01:29.418111504Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T08:42:27.8302524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T08:42:28.211440772Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:42:41.25124204Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2871270d8ff0c8c69f161aaae42f9f28739855ff5c5204752a8d92a1c9f63993' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bc601e428f458da6028671d66581b026092742baf6d3124748bb044c82497d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='25e1a281b937022c70571ac5a538c9402dd74bceb71c2526377a7e5747df5522' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='52935db83719739d84a389a8f3b14544874fba803a316250b8d596313283aadf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f929d434d6db09fc4c6b67b03951596e576af5d02ff009633ca3c5be1c832bdd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='93afc048ad72fa2a0e5ec56bcdcd8a34213eb262aee6f39a7e4dfeeb7e564c9d' ;; \t\t*) goRelArch='src'; goRelSha256='558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-16T08:42:41.931278427Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:42:42.218913506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:42:43.147661979Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-16T08:42:43.432359416Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f715ed19c28b66943ac8bc12dbfb828e8394de2530bbaf1ecce906e748e4fdff",
                    "sha256:8bb25f9cdc41e7d085033af15a522973b44086d6eedd24c11cc61c9232324f77",
                    "sha256:08a01612ffca33483a1847c909836610610ce523fb7e1aca880140ee84df23e9",
                    "sha256:1191b3f5862aa9231858809b7ac8b91c0b727ce85c9b3279932f0baacc92967d",
                    "sha256:52da4d4dcf59a2a01a4c4928516bf922944775862547dad6142bc477bbbdfa47",
                    "sha256:757fc57926be167de1ddcffd80c1cfafb412f460ece41fd3204e903c662538fd",
                    "sha256:7a7147543a13ba6e9fd6c49b7fdb9ee2599833c0cb5065fe10c993f64203a9e0"
                ]
            }
        },
        "1.11.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e101cd041af4a9134376ea01a153b3db154b1e04616f1eb4894e6217050b494",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "95042a6709ece11f10cf0ca1956b9f0e0d4d02f6df082b739a9a45f165745e61",
            "container_config": {
                "Hostname": "95042a6709ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e101cd041af4a9134376ea01a153b3db154b1e04616f1eb4894e6217050b494",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-02T17:17:03.278683625Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-02T17:15:22.298424469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:17:01.834042757Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-02T17:17:02.263034694Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:17:02.482688335Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:17:03.079781379Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-02T17:17:03.278683625Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:d98a902c153e8dca42169adcd7ef84466a610095e28ac98104f9ee3e099746c3",
                    "sha256:3b094adea8bc7a84596bba81d32fc64a163bc99cb18cf96404c1b4174ad3ffac"
                ]
            }
        },
        "1.11.1-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3982fc6531e3d597993ba093d9f568ce4e5bbb5c3f561eabd3bfcf59dd57a6ed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "a461503bee389e29e255ecc68af5f334317fc145f792214f046e6cb33c2e074e",
            "container_config": {
                "Hostname": "a461503bee38",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3982fc6531e3d597993ba093d9f568ce4e5bbb5c3f561eabd3bfcf59dd57a6ed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-02T17:18:56.342683199Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:38.88529994Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49f9e47e678d868d5b023482aa8dded71276a241a665c4f8b55ca77269321b34 in / "
                },
                {
                    "created": "2018-09-11T22:19:39.058628442Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:44.361139546Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T23:01:45.174939377Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-02T17:17:14.706177374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:18:54.868956058Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-02T17:18:55.306509212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:18:55.506355376Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:18:56.154104699Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-02T17:18:56.342683199Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebf12965380b39889c99a9c02e82ba465f887b45975b6e389d42e9e6a3857888",
                    "sha256:8c16c55130abe3adc40609904b33dc92813f6d2f7caf1ced629669adde1b409b",
                    "sha256:dde396d4d613d53a0b7428a5e566f5e667dadb0b171712cd9339ee2b652a88a4",
                    "sha256:4437243c7e5cb588dc7d101a838d230c44b4dc4f41a42672537c02160e8f7d07",
                    "sha256:fa3a9fd1c2715011035fdb895285935a1b0c7ee4addd2d2ce94acc8107e812c3"
                ]
            }
        },
        "1.11.1-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e101cd041af4a9134376ea01a153b3db154b1e04616f1eb4894e6217050b494",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "95042a6709ece11f10cf0ca1956b9f0e0d4d02f6df082b739a9a45f165745e61",
            "container_config": {
                "Hostname": "95042a6709ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e101cd041af4a9134376ea01a153b3db154b1e04616f1eb4894e6217050b494",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-02T17:17:03.278683625Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-02T17:15:22.298424469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:17:01.834042757Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-02T17:17:02.263034694Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:17:02.482688335Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-02T17:17:03.079781379Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-02T17:17:03.278683625Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:d98a902c153e8dca42169adcd7ef84466a610095e28ac98104f9ee3e099746c3",
                    "sha256:3b094adea8bc7a84596bba81d32fc64a163bc99cb18cf96404c1b4174ad3ffac"
                ]
            }
        },
        "1.11.1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cddf215e97d00492b5b638fe2da329bb4b6253ea93834b694a88cdcf8e5032f9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "32b5596fb5de7d355a678ac0a2ffd95385ed23a7c7c89533ed361944182a9819",
            "container_config": {
                "Hostname": "32b5596fb5de",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cddf215e97d00492b5b638fe2da329bb4b6253ea93834b694a88cdcf8e5032f9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T08:42:43.432359416Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-15T23:24:20.7838109Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b3598c18dc395846ab2c5e4e8422c4a5dad7bc3b5b08c09ebceee80989904641 in / "
                },
                {
                    "created": "2018-10-15T23:24:21.111611143Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T01:00:49.945915631Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T01:00:57.258682859Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T01:01:29.418111504Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T08:42:27.8302524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T08:42:28.211440772Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:42:41.25124204Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2871270d8ff0c8c69f161aaae42f9f28739855ff5c5204752a8d92a1c9f63993' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bc601e428f458da6028671d66581b026092742baf6d3124748bb044c82497d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='25e1a281b937022c70571ac5a538c9402dd74bceb71c2526377a7e5747df5522' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='52935db83719739d84a389a8f3b14544874fba803a316250b8d596313283aadf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f929d434d6db09fc4c6b67b03951596e576af5d02ff009633ca3c5be1c832bdd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='93afc048ad72fa2a0e5ec56bcdcd8a34213eb262aee6f39a7e4dfeeb7e564c9d' ;; \t\t*) goRelArch='src'; goRelSha256='558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-16T08:42:41.931278427Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:42:42.218913506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T08:42:43.147661979Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-16T08:42:43.432359416Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f715ed19c28b66943ac8bc12dbfb828e8394de2530bbaf1ecce906e748e4fdff",
                    "sha256:8bb25f9cdc41e7d085033af15a522973b44086d6eedd24c11cc61c9232324f77",
                    "sha256:08a01612ffca33483a1847c909836610610ce523fb7e1aca880140ee84df23e9",
                    "sha256:1191b3f5862aa9231858809b7ac8b91c0b727ce85c9b3279932f0baacc92967d",
                    "sha256:52da4d4dcf59a2a01a4c4928516bf922944775862547dad6142bc477bbbdfa47",
                    "sha256:757fc57926be167de1ddcffd80c1cfafb412f460ece41fd3204e903c662538fd",
                    "sha256:7a7147543a13ba6e9fd6c49b7fdb9ee2599833c0cb5065fe10c993f64203a9e0"
                ]
            }
        },
        "1.11.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2567006e84c8ab550aa53747495291894aecf8c2d99693ec050f6e04b308d0b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "09e70815038648edcf88dafa4a60a18492ff3cb8ad3c146a4e13366d8f6b522a",
            "container_config": {
                "Hostname": "09e708150386",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2567006e84c8ab550aa53747495291894aecf8c2d99693ec050f6e04b308d0b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-11T09:50:40.946114678Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-10T23:24:07.471694557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6e8620824300ccf3754fb5d8644a1dc7c69431d4cd1ef9d28d73f39260f96020 in / "
                },
                {
                    "created": "2019-06-10T23:24:07.737921504Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T00:29:50.960918655Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T00:30:00.462553703Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T00:30:36.451786846Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T09:49:59.864418042Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T09:50:25.395399906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T09:50:39.468735649Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aefaa228b68641e266d1f23f1d95dba33f17552ba132878b65bb798ffa37e6d0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='29812e3443c469de6b976e4e44b5e6402d55f6358a544278addc22446a0abe8b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6743c54f0e33873c113cbd66df7749e81785f378567734831c2e5d3b6b6aa2b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='619ddab5b56597d72681467810c63238063ab0d221fe0df9b2e85608c10161e5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a6c7129e92fe325645229846257e563dab1d970bb0e61820d63524df2b54fcf8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='35f196abd74db6f049018829ea6230fde6b8c2e24d2da9f9e75ce0e6d0292b49' ;; \t\t*) goRelArch='src'; goRelSha256='df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-11T09:50:39.887013385Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T09:50:40.051320013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T09:50:40.763794994Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-11T09:50:40.946114678Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0db06dff9d9aeb9bed4edde7bd772ad0f3aea497c129d48ed587664d098c6c41",
                    "sha256:f32868cde90bcb9aec7676c725c0d91738806c0eff429da4e9c99faaa40a9766",
                    "sha256:7b76d801397d8df8cec8db17415e525376be29edd2f479c3cfeac5acd8220b58",
                    "sha256:2c8d31157b818657c14d13625f3271f872842ed16d5028d5946fcea95719fb77",
                    "sha256:510e5f32af355205bf7103b7e6dd54a5077756a0222f01b579d69f5f3d31a71f",
                    "sha256:389926b47a06f7fd88652de05ed259ad5e6b9057f1d64b69c36adc0ec17d2beb",
                    "sha256:546cc0e6bd8e1f398e2a870ff08872006868818e6aa292a048b9a15077ee5acb"
                ]
            }
        },
        "1.11.10-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1342c56ab24453888f176373c99f41cafd0d5afe03b5507fbee532da3f250559",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ac052f9a2150f2b6c30c96e0a7c5a94da867c6d63bdc32170c97b98d225f19f",
            "container_config": {
                "Hostname": "2ac052f9a215",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1342c56ab24453888f176373c99f41cafd0d5afe03b5507fbee532da3f250559",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T00:32:37.799105974Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T00:30:09.802414966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:32:36.303650394Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T00:32:36.743723776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:32:36.918517767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:32:37.595059968Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T00:32:37.799105974Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:ebe465eb658ec1d51bd0e4e799725fe9aa8e9c955e08a40b428434f38ed855e1",
                    "sha256:c5bcb8207f47861fe405bac747e28e62088fc3de2d673184d412d1591875a8ec"
                ]
            }
        },
        "1.11.10-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c53b8fa792babf2a3e1185cdd43bd81550c518f1fc40fbb623aafa197e1ed43",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2d1b8cc2c63534b14a8b20699e987c1196c5e9ef85c53913d708c317394e77ad",
            "container_config": {
                "Hostname": "2d1b8cc2c635",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c53b8fa792babf2a3e1185cdd43bd81550c518f1fc40fbb623aafa197e1ed43",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-07T22:28:08.879014088Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:22.278616874Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:26:23.582281132Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-07T22:25:41.332409604Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T22:28:07.367375754Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-07T22:28:07.871518824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T22:28:08.023091218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T22:28:08.6833097Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-07T22:28:08.879014088Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e30375a8696c1d4e9bd625727ff22ad449de5e1bc424947e687c70feead895a7",
                    "sha256:d0aa1970c77f1c6aaee33de75681642d726f1a2111a9e65b61030dc4b82cf28b",
                    "sha256:476aa70ee05037dded77860ceb6dd49ee0e60a987ba351850eb6739545266f7e",
                    "sha256:d0deeeaedac16ab396e7ea225c9bf213ec757b26b069b234d64ae5968e677f89"
                ]
            }
        },
        "1.11.10-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1342c56ab24453888f176373c99f41cafd0d5afe03b5507fbee532da3f250559",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2ac052f9a2150f2b6c30c96e0a7c5a94da867c6d63bdc32170c97b98d225f19f",
            "container_config": {
                "Hostname": "2ac052f9a215",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1342c56ab24453888f176373c99f41cafd0d5afe03b5507fbee532da3f250559",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T00:32:37.799105974Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T00:30:09.802414966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:32:36.303650394Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T00:32:36.743723776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:32:36.918517767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:32:37.595059968Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T00:32:37.799105974Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:ebe465eb658ec1d51bd0e4e799725fe9aa8e9c955e08a40b428434f38ed855e1",
                    "sha256:c5bcb8207f47861fe405bac747e28e62088fc3de2d673184d412d1591875a8ec"
                ]
            }
        },
        "1.11.10-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2567006e84c8ab550aa53747495291894aecf8c2d99693ec050f6e04b308d0b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "09e70815038648edcf88dafa4a60a18492ff3cb8ad3c146a4e13366d8f6b522a",
            "container_config": {
                "Hostname": "09e708150386",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e2567006e84c8ab550aa53747495291894aecf8c2d99693ec050f6e04b308d0b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-11T09:50:40.946114678Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-10T23:24:07.471694557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6e8620824300ccf3754fb5d8644a1dc7c69431d4cd1ef9d28d73f39260f96020 in / "
                },
                {
                    "created": "2019-06-10T23:24:07.737921504Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T00:29:50.960918655Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T00:30:00.462553703Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T00:30:36.451786846Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T09:49:59.864418042Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T09:50:25.395399906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T09:50:39.468735649Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aefaa228b68641e266d1f23f1d95dba33f17552ba132878b65bb798ffa37e6d0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='29812e3443c469de6b976e4e44b5e6402d55f6358a544278addc22446a0abe8b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6743c54f0e33873c113cbd66df7749e81785f378567734831c2e5d3b6b6aa2b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='619ddab5b56597d72681467810c63238063ab0d221fe0df9b2e85608c10161e5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a6c7129e92fe325645229846257e563dab1d970bb0e61820d63524df2b54fcf8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='35f196abd74db6f049018829ea6230fde6b8c2e24d2da9f9e75ce0e6d0292b49' ;; \t\t*) goRelArch='src'; goRelSha256='df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-11T09:50:39.887013385Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T09:50:40.051320013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T09:50:40.763794994Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-11T09:50:40.946114678Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0db06dff9d9aeb9bed4edde7bd772ad0f3aea497c129d48ed587664d098c6c41",
                    "sha256:f32868cde90bcb9aec7676c725c0d91738806c0eff429da4e9c99faaa40a9766",
                    "sha256:7b76d801397d8df8cec8db17415e525376be29edd2f479c3cfeac5acd8220b58",
                    "sha256:2c8d31157b818657c14d13625f3271f872842ed16d5028d5946fcea95719fb77",
                    "sha256:510e5f32af355205bf7103b7e6dd54a5077756a0222f01b579d69f5f3d31a71f",
                    "sha256:389926b47a06f7fd88652de05ed259ad5e6b9057f1d64b69c36adc0ec17d2beb",
                    "sha256:546cc0e6bd8e1f398e2a870ff08872006868818e6aa292a048b9a15077ee5acb"
                ]
            }
        },
        "1.11.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ad643d83aa5d63c82ab4f80f00eee8cb8d3aa39afd6cf2f5361d1876757884c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "086a79eee033fd68b2e398e49536c5ba345fbe5872eb9232edf40239b6f94f38",
            "container_config": {
                "Hostname": "086a79eee033",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ad643d83aa5d63c82ab4f80f00eee8cb8d3aa39afd6cf2f5361d1876757884c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:22:57.723103851Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-10T23:24:07.471694557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6e8620824300ccf3754fb5d8644a1dc7c69431d4cd1ef9d28d73f39260f96020 in / "
                },
                {
                    "created": "2019-06-10T23:24:07.737921504Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T00:29:50.960918655Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T00:30:00.462553703Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T00:30:36.451786846Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T09:49:59.864418042Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-12T15:22:40.803127005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:22:55.990943122Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2fd47b824d6e32154b0f6c8742d066d816667715763e06cebb710304b195c775' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c2b882a5fbb3bac5c9cc6d65bfe17a5febfe0251a339fc059306bb825dec9b17' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5ee39ea08e5d8c017658f36d0f969b17a44d49576214f4a00710f2d98bb773be' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c711fe5025608e14bcd0efda9403e9b8f05cb4a53a125e296d639c10d280a65f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='98ff7ff2367239e26745231aabeaf9d7e51c40b616bb9aa15d4376792ff581d1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='d7471874ed396f72dd550c3593c9f42d5e3d38a2cca7658e669305bf9023e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:22:56.495076953Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:22:56.678729218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:22:57.510782643Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:22:57.723103851Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0db06dff9d9aeb9bed4edde7bd772ad0f3aea497c129d48ed587664d098c6c41",
                    "sha256:f32868cde90bcb9aec7676c725c0d91738806c0eff429da4e9c99faaa40a9766",
                    "sha256:7b76d801397d8df8cec8db17415e525376be29edd2f479c3cfeac5acd8220b58",
                    "sha256:2c8d31157b818657c14d13625f3271f872842ed16d5028d5946fcea95719fb77",
                    "sha256:510e5f32af355205bf7103b7e6dd54a5077756a0222f01b579d69f5f3d31a71f",
                    "sha256:1c7d528cb6ee0d719a37487c6e69ce8357259adf9e839dd2370f8dce55d18fa8",
                    "sha256:4a26ad0ad357f776b30ed949a54d2c26541f15e7081fb75a9475f2acda7484b0"
                ]
            }
        },
        "1.11.11-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2bff4c90892b00a035ff0b9e4f4dd0ba4bd070885ca47b13ae68f17b91ca1bed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d34ce97395678f2c0598bac94614f54830c1a74488a0491967393475589c8bbd",
            "container_config": {
                "Hostname": "d34ce9739567",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2bff4c90892b00a035ff0b9e4f4dd0ba4bd070885ca47b13ae68f17b91ca1bed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:24:40.390514816Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T21:19:43.525598973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fef3b00b3ae63967d8f4d83174b3fcecb55c9bada02b3e4f5a9b79a21b6c3bb3 in / "
                },
                {
                    "created": "2019-06-19T21:19:43.678347436Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:19:37.31729163Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:19:38.031819861Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:22:25.742377199Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:24:38.888115766Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:24:39.316927723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:24:39.490766526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:24:40.218810464Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:24:40.390514816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:256a7af3acb11f89914205b6eef07e05e4196e898329575d97185758b450eb52",
                    "sha256:8d7b1aa5fe548e86606764ef0d86a6ec9d8699f8f666df2cc9c4abda374dd2ea",
                    "sha256:2876b59bf7c15bf00ee3a364f241e85fca40e06cce6926d11bc9425837e21d30",
                    "sha256:1bdaa8cb46a9cf48018ab06998876fe8af71f0234b762ab24db659b824f53ace",
                    "sha256:5af49f7557de4fceaec049f5af283a9028e42b9b075fb75668a3385bd3ddaabb"
                ]
            }
        },
        "1.11.11-alpine3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2bff4c90892b00a035ff0b9e4f4dd0ba4bd070885ca47b13ae68f17b91ca1bed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d34ce97395678f2c0598bac94614f54830c1a74488a0491967393475589c8bbd",
            "container_config": {
                "Hostname": "d34ce9739567",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2bff4c90892b00a035ff0b9e4f4dd0ba4bd070885ca47b13ae68f17b91ca1bed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:24:40.390514816Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T21:19:43.525598973Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fef3b00b3ae63967d8f4d83174b3fcecb55c9bada02b3e4f5a9b79a21b6c3bb3 in / "
                },
                {
                    "created": "2019-06-19T21:19:43.678347436Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:19:37.31729163Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:19:38.031819861Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:22:25.742377199Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:24:38.888115766Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:24:39.316927723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:24:39.490766526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:24:40.218810464Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:24:40.390514816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:256a7af3acb11f89914205b6eef07e05e4196e898329575d97185758b450eb52",
                    "sha256:8d7b1aa5fe548e86606764ef0d86a6ec9d8699f8f666df2cc9c4abda374dd2ea",
                    "sha256:2876b59bf7c15bf00ee3a364f241e85fca40e06cce6926d11bc9425837e21d30",
                    "sha256:1bdaa8cb46a9cf48018ab06998876fe8af71f0234b762ab24db659b824f53ace",
                    "sha256:5af49f7557de4fceaec049f5af283a9028e42b9b075fb75668a3385bd3ddaabb"
                ]
            }
        },
        "1.11.11-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9526a931fdd50b89b04eba4383df827a32dff83bf89ec61f875fa07eb5fb478",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "476ce9a49adf5b0307c19a5e08aa200081f3cb1bf7a9a27894018a3399436f8f",
            "container_config": {
                "Hostname": "476ce9a49adf",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b9526a931fdd50b89b04eba4383df827a32dff83bf89ec61f875fa07eb5fb478",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:27:31.795799255Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:22.278616874Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:26:23.582281132Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-12T15:25:29.298986087Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:27:30.308878633Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:27:30.718726919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:27:30.886945556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:27:31.583730471Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:27:31.795799255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e30375a8696c1d4e9bd625727ff22ad449de5e1bc424947e687c70feead895a7",
                    "sha256:d0aa1970c77f1c6aaee33de75681642d726f1a2111a9e65b61030dc4b82cf28b",
                    "sha256:ecfe4bf30c95a687e2dd10669116208fc747295de826cc207dd67e8c0ad91af0",
                    "sha256:68067d743e904ba407ea20b733ea9cb748889e9834ac83d737e06c788b6a3b0f"
                ]
            }
        },
        "1.11.11-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f2065866fe98278401b8c58976590b44b9f15b2f885b3e4b9a364227e8a3064",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4b877c1cccdbcd0c0248b99b51b2f934c3c73650ebb57cc16aa8223d4ca649e5",
            "container_config": {
                "Hostname": "4b877c1cccdb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f2065866fe98278401b8c58976590b44b9f15b2f885b3e4b9a364227e8a3064",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:25:14.050858968Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-12T15:23:00.723828787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:25:12.556993578Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:25:13.006919482Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:25:13.18251081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:25:13.866624772Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:25:14.050858968Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:4d9a630e9cf211db94f8c22b1302a1a16a8ab0aa81144e9c0ec4f2c166b87812",
                    "sha256:506c8e43cd2c803e357f744082726bf167489c0c37d0616d3cbf17c1b9396f70"
                ]
            }
        },
        "1.11.11-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ad643d83aa5d63c82ab4f80f00eee8cb8d3aa39afd6cf2f5361d1876757884c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "086a79eee033fd68b2e398e49536c5ba345fbe5872eb9232edf40239b6f94f38",
            "container_config": {
                "Hostname": "086a79eee033",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ad643d83aa5d63c82ab4f80f00eee8cb8d3aa39afd6cf2f5361d1876757884c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:22:57.723103851Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-10T23:24:07.471694557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6e8620824300ccf3754fb5d8644a1dc7c69431d4cd1ef9d28d73f39260f96020 in / "
                },
                {
                    "created": "2019-06-10T23:24:07.737921504Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T00:29:50.960918655Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T00:30:00.462553703Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T00:30:36.451786846Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T09:49:59.864418042Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-12T15:22:40.803127005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:22:55.990943122Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2fd47b824d6e32154b0f6c8742d066d816667715763e06cebb710304b195c775' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c2b882a5fbb3bac5c9cc6d65bfe17a5febfe0251a339fc059306bb825dec9b17' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5ee39ea08e5d8c017658f36d0f969b17a44d49576214f4a00710f2d98bb773be' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c711fe5025608e14bcd0efda9403e9b8f05cb4a53a125e296d639c10d280a65f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='98ff7ff2367239e26745231aabeaf9d7e51c40b616bb9aa15d4376792ff581d1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='d7471874ed396f72dd550c3593c9f42d5e3d38a2cca7658e669305bf9023e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:22:56.495076953Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:22:56.678729218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:22:57.510782643Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:22:57.723103851Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0db06dff9d9aeb9bed4edde7bd772ad0f3aea497c129d48ed587664d098c6c41",
                    "sha256:f32868cde90bcb9aec7676c725c0d91738806c0eff429da4e9c99faaa40a9766",
                    "sha256:7b76d801397d8df8cec8db17415e525376be29edd2f479c3cfeac5acd8220b58",
                    "sha256:2c8d31157b818657c14d13625f3271f872842ed16d5028d5946fcea95719fb77",
                    "sha256:510e5f32af355205bf7103b7e6dd54a5077756a0222f01b579d69f5f3d31a71f",
                    "sha256:1c7d528cb6ee0d719a37487c6e69ce8357259adf9e839dd2370f8dce55d18fa8",
                    "sha256:4a26ad0ad357f776b30ed949a54d2c26541f15e7081fb75a9475f2acda7484b0"
                ]
            }
        },
        "1.11.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:590d2bd266ad521bfedf051464cfd6dacff6bc2e314aa4c610699789f8a4f2ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "398560cb6178fe23481035df5d7644fb4798bb20c8e76ecbfeddc6ebf0e2460c",
            "container_config": {
                "Hostname": "398560cb6178",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:590d2bd266ad521bfedf051464cfd6dacff6bc2e314aa4c610699789f8a4f2ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T01:20:20.698166896Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:21:51.978396486Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2cddee716e84c40540a69c48051bd2dcf6cd3bd02a3e399334e97f20a77126ff in / "
                },
                {
                    "created": "2019-07-09T21:21:52.431008512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:14:47.967928973Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:15:01.850431581Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-10T02:15:41.876601571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:18:10.533734739Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-20T01:20:07.838648176Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:20:19.21756285Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T01:20:19.648067483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:20:19.814616151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:20:20.511254Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T01:20:20.698166896Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:31b0e148310d3953be8ba9ff530a91424f01688ee604f99cbfb519dab9e8c66d",
                    "sha256:46601dcd41143bcf3068c33e6a3c243b91a9887cccc9f2538dd04e0052029db5",
                    "sha256:e9313b51f46d907a186066e017c68c9201dbfb858dc862e30ba25f0e1b2ea6b3",
                    "sha256:05c027e771c84f989d3014001fb68093d26433d8cdbd8a33ef6a9fb421236ebd",
                    "sha256:2eac6d41b7d2c4e9c49d1208c030c6348184a6b9818bdd33cde6080a06ecbd34",
                    "sha256:30ac98b0150a369b8beba87b52e89c93cbdc4b96c461055b754b98dd5af82bd9",
                    "sha256:6354a42e4c7ebaa9f0c9f0cbe78d86f72886aae6f3ef02bd065b4a222877fae0"
                ]
            }
        },
        "1.11.12-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a56281f467cdfa3c522230f78d383fe5ddca067d49bd969dcc89418c5e30ff05",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d8e1f8aeba27c551d0f3ebdad7a1e4b93f890b25a3fa2eadd688ee528f887d58",
            "container_config": {
                "Hostname": "d8e1f8aeba27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a56281f467cdfa3c522230f78d383fe5ddca067d49bd969dcc89418c5e30ff05",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-11T23:35:47.663747193Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T22:20:52.139709355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb5ea35741d23fe39cbac245b3a5d84856ed6384f4ff07d496369ee6d960bad in / "
                },
                {
                    "created": "2019-07-11T22:20:52.375286404Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:44:51.547685487Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:44:53.098842968Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-11T23:29:39.893819945Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:35:44.948621838Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-11T23:35:45.679320815Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:35:46.038338906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:35:47.380804355Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-11T23:35:47.663747193Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bfeebd65323b8ddf5bd6a51cc7097b72788bc982e9ab3280d53d3c613adffa7",
                    "sha256:05540d8bb3fdd0312181a5e77cd5c9e05bbe4f9ee1b201057bd996280e5ac59e",
                    "sha256:e0a42524f6654e4e52f5b0785a2b109bbef35214d0903d8a2423db463e92bd53",
                    "sha256:7d678c9a4e8630cab00c822e80d2da4e95ea23bb6504afd42bc1929c7aebaab3",
                    "sha256:264951dbc6c47f5982ab720670026dd0a2dd7ed8a7ca5c383781622565f64f79"
                ]
            }
        },
        "1.11.12-alpine3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a56281f467cdfa3c522230f78d383fe5ddca067d49bd969dcc89418c5e30ff05",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d8e1f8aeba27c551d0f3ebdad7a1e4b93f890b25a3fa2eadd688ee528f887d58",
            "container_config": {
                "Hostname": "d8e1f8aeba27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a56281f467cdfa3c522230f78d383fe5ddca067d49bd969dcc89418c5e30ff05",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-11T23:35:47.663747193Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T22:20:52.139709355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb5ea35741d23fe39cbac245b3a5d84856ed6384f4ff07d496369ee6d960bad in / "
                },
                {
                    "created": "2019-07-11T22:20:52.375286404Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:44:51.547685487Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:44:53.098842968Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-11T23:29:39.893819945Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:35:44.948621838Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-11T23:35:45.679320815Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:35:46.038338906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:35:47.380804355Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-11T23:35:47.663747193Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1bfeebd65323b8ddf5bd6a51cc7097b72788bc982e9ab3280d53d3c613adffa7",
                    "sha256:05540d8bb3fdd0312181a5e77cd5c9e05bbe4f9ee1b201057bd996280e5ac59e",
                    "sha256:e0a42524f6654e4e52f5b0785a2b109bbef35214d0903d8a2423db463e92bd53",
                    "sha256:7d678c9a4e8630cab00c822e80d2da4e95ea23bb6504afd42bc1929c7aebaab3",
                    "sha256:264951dbc6c47f5982ab720670026dd0a2dd7ed8a7ca5c383781622565f64f79"
                ]
            }
        },
        "1.11.12-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c2266e70b7c3ab983c5c5351eac1bfeb132aa9c9cf05cc0380c4a062f352c73",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "37c9391a46e2c98cc25218efc7d043edbd9701cafd1ff0cafcb51c7fe08e904c",
            "container_config": {
                "Hostname": "37c9391a46e2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c2266e70b7c3ab983c5c5351eac1bfeb132aa9c9cf05cc0380c4a062f352c73",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-09T00:46:16.25936174Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-09T00:42:05.568887167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:46:13.765058925Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-09T00:46:14.466899232Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:46:14.668153253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:46:16.006830547Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-09T00:46:16.25936174Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:e5b1ce1f2b1cdb9baff808b3e961dbd5d31164fec622a43820bba90ba51d6c20",
                    "sha256:0cd2b5adbcb4ec8aebade3eb9c862ad53dd2a29ca0a16731d8c3933a1ef52d21"
                ]
            }
        },
        "1.11.12-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:590d2bd266ad521bfedf051464cfd6dacff6bc2e314aa4c610699789f8a4f2ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "398560cb6178fe23481035df5d7644fb4798bb20c8e76ecbfeddc6ebf0e2460c",
            "container_config": {
                "Hostname": "398560cb6178",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:590d2bd266ad521bfedf051464cfd6dacff6bc2e314aa4c610699789f8a4f2ba",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T01:20:20.698166896Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:21:51.978396486Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2cddee716e84c40540a69c48051bd2dcf6cd3bd02a3e399334e97f20a77126ff in / "
                },
                {
                    "created": "2019-07-09T21:21:52.431008512Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:14:47.967928973Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:15:01.850431581Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-10T02:15:41.876601571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:18:10.533734739Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-20T01:20:07.838648176Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:20:19.21756285Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T01:20:19.648067483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:20:19.814616151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T01:20:20.511254Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T01:20:20.698166896Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:31b0e148310d3953be8ba9ff530a91424f01688ee604f99cbfb519dab9e8c66d",
                    "sha256:46601dcd41143bcf3068c33e6a3c243b91a9887cccc9f2538dd04e0052029db5",
                    "sha256:e9313b51f46d907a186066e017c68c9201dbfb858dc862e30ba25f0e1b2ea6b3",
                    "sha256:05c027e771c84f989d3014001fb68093d26433d8cdbd8a33ef6a9fb421236ebd",
                    "sha256:2eac6d41b7d2c4e9c49d1208c030c6348184a6b9818bdd33cde6080a06ecbd34",
                    "sha256:30ac98b0150a369b8beba87b52e89c93cbdc4b96c461055b754b98dd5af82bd9",
                    "sha256:6354a42e4c7ebaa9f0c9f0cbe78d86f72886aae6f3ef02bd065b4a222877fae0"
                ]
            }
        },
        "1.11.12-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:caa237cbdad33ec3f1f3a63bc3c6bd6b6168eeaa3157ce6d5ee61d54f3a4505c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "594305a4d19bc83ce1d6c39ce92f625eff00004300d994ceeac52759d27eb531",
            "container_config": {
                "Hostname": "594305a4d19b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:caa237cbdad33ec3f1f3a63bc3c6bd6b6168eeaa3157ce6d5ee61d54f3a4505c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-10T05:20:36.535985361Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:31:30.132810147Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f615b611820773fd6bdf2fda01a5b2f24ca2877bd63fa0abd274985bed212e67 in / "
                },
                {
                    "created": "2019-07-09T21:31:30.742281321Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:30:58.509369131Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:31:05.219098748Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-10T02:31:40.257536319Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:19:19.166068617Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T05:20:05.020812312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:20:33.823984399Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-10T05:20:34.548802093Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:20:34.780405441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T05:20:36.247312004Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-10T05:20:36.535985361Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e2a8a00a83b20c88b81952f81e6cfc2e2dd5aa7f00a23b067e6342c70602a567",
                    "sha256:15210a41d4ee66fef9f6917804a00d44f72517c8ed8feee1c97e08a35be52ad6",
                    "sha256:392f356944ff70fa41f6dbf6e6d207beef060f0869e584edb58ca8cd343b341f",
                    "sha256:a4e797bc3f155d8be8dcd6bb565fb41e07cc4febdba63efdf7a8dcb6ac10444e",
                    "sha256:644b4779c842131434698674e01c637b7c7137467b8e8f5494905650829db6e2",
                    "sha256:073f1b0bd45f5da9ac4ff4c3e80d55f5ed197608fce699ab1f2748da8c848985",
                    "sha256:9b4404b5450b72a9d8baf8a72f0223845f569786e108f6079cab1cdf37926d16"
                ]
            }
        },
        "1.11.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c67f3c31e14a34d196b176ce1a90a368a58f71962ff88efa81cbcb64922d6f63",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "95a2e15b309cdff08088704cdb349e179f19a186da521253935644ede05a241a",
            "container_config": {
                "Hostname": "95a2e15b309c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c67f3c31e14a34d196b176ce1a90a368a58f71962ff88efa81cbcb64922d6f63",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:26:16.191688021Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:21:56.254324217Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99bf629976cd3d79c99a16a69ea0b2554f8d122afd1de5412e6ab657510bdbfb in / "
                },
                {
                    "created": "2019-08-14T00:21:56.518106562Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T06:12:00.177626405Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T06:12:08.455105544Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T06:12:32.870005816Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:24:08.443734549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:25:59.326370508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:14.619081198Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:26:15.087571031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:15.24660105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:15.98324553Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:26:16.191688021Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:660314270d7683a945d0cc83e5561d61f022e7e6731fd2e3fad04a6544bf42d8",
                    "sha256:6d5a64ea8f376c1ae70d5fe11fe28920f4160b9035088627c3f058f396f4dacd",
                    "sha256:74e2ede3b29cfb611557715ac8c6d1045b9c7572c7d8ef87074a32c4c3a5c428",
                    "sha256:97e8dd85db4ed8be3e28dc1bad5863b8d886474594117a2f0d7aa856b52c462f",
                    "sha256:39a8c34bbaf3ccb2e3e82eec759a05c3095883db4a3e99926cef32595c3b8d58",
                    "sha256:7ffca9f27ea79eb80b25fa06110b0d595ffbb06ee71b1ae0560a0cc4479a56d6",
                    "sha256:18dccb3264f2d7ad636726c48444ead93846012872451b5e08c0d81cc0d3bdad"
                ]
            }
        },
        "1.11.13-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7106040c1d65ed40d36f7b4831bb6f68161320ccb0de04518f9d652803b576a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5d0f71893ae5094d825b171a3a70817d77dc249d30ff49e39c1989708ca641b",
            "container_config": {
                "Hostname": "a5d0f71893ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7106040c1d65ed40d36f7b4831bb6f68161320ccb0de04518f9d652803b576a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:15:51.782459762Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:59:29.071001361Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:59:29.814558232Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:12:34.802797092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:49.205591023Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:15:49.959957315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:50.215532712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:51.524401172Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:15:51.782459762Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:5ff34e0a6dec95d1f25943e98ca4e41b882004d422c93ed7a40f73bfe4ad9b97",
                    "sha256:c973660ff75c661b2e3a5d0d47dcafd2b8ae0022e0b714e2bcdf32e60169ef56",
                    "sha256:128c5ebbedfdf1680a6c91109dba55e1f4c570e1c49045604f94731643fd4052",
                    "sha256:1c5f3ece5b7b1b0e561c6a47dbdf372fa758461aebd8bfe553e4d5ba0414f1ad"
                ]
            }
        },
        "1.11.13-alpine3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7106040c1d65ed40d36f7b4831bb6f68161320ccb0de04518f9d652803b576a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5d0f71893ae5094d825b171a3a70817d77dc249d30ff49e39c1989708ca641b",
            "container_config": {
                "Hostname": "a5d0f71893ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7106040c1d65ed40d36f7b4831bb6f68161320ccb0de04518f9d652803b576a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:15:51.782459762Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:59:29.071001361Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:59:29.814558232Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:12:34.802797092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:49.205591023Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:15:49.959957315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:50.215532712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:15:51.524401172Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:15:51.782459762Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:5ff34e0a6dec95d1f25943e98ca4e41b882004d422c93ed7a40f73bfe4ad9b97",
                    "sha256:c973660ff75c661b2e3a5d0d47dcafd2b8ae0022e0b714e2bcdf32e60169ef56",
                    "sha256:128c5ebbedfdf1680a6c91109dba55e1f4c570e1c49045604f94731643fd4052",
                    "sha256:1c5f3ece5b7b1b0e561c6a47dbdf372fa758461aebd8bfe553e4d5ba0414f1ad"
                ]
            }
        },
        "1.11.13-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a45e5229a7e8e5bb390d199e187558ef736a1c986706a4311c823759e0ae191a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c9a3fb9c9e06cdf3335cf6382a492d8fa0d2f3aaec92fe88218eb1ce6d544a78",
            "container_config": {
                "Hostname": "c9a3fb9c9e06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a45e5229a7e8e5bb390d199e187558ef736a1c986706a4311c823759e0ae191a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:46:39.218029341Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:43:28.790884348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:46:36.623301796Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:46:37.363312426Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:46:37.630871661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:46:38.962805872Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:46:39.218029341Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:3a4771434ecb1e6a975f5d895c231744d94e12bd92df746749257d7ae3a0b0bb",
                    "sha256:d0bc733cb84bb690e80c55833b1799d50e46fad50b02b120b8402fd171d382c8"
                ]
            }
        },
        "1.11.13-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c67f3c31e14a34d196b176ce1a90a368a58f71962ff88efa81cbcb64922d6f63",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "95a2e15b309cdff08088704cdb349e179f19a186da521253935644ede05a241a",
            "container_config": {
                "Hostname": "95a2e15b309c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c67f3c31e14a34d196b176ce1a90a368a58f71962ff88efa81cbcb64922d6f63",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:26:16.191688021Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:21:56.254324217Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99bf629976cd3d79c99a16a69ea0b2554f8d122afd1de5412e6ab657510bdbfb in / "
                },
                {
                    "created": "2019-08-14T00:21:56.518106562Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T06:12:00.177626405Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T06:12:08.455105544Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T06:12:32.870005816Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:24:08.443734549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:25:59.326370508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:14.619081198Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:26:15.087571031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:15.24660105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:15.98324553Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:26:16.191688021Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:660314270d7683a945d0cc83e5561d61f022e7e6731fd2e3fad04a6544bf42d8",
                    "sha256:6d5a64ea8f376c1ae70d5fe11fe28920f4160b9035088627c3f058f396f4dacd",
                    "sha256:74e2ede3b29cfb611557715ac8c6d1045b9c7572c7d8ef87074a32c4c3a5c428",
                    "sha256:97e8dd85db4ed8be3e28dc1bad5863b8d886474594117a2f0d7aa856b52c462f",
                    "sha256:39a8c34bbaf3ccb2e3e82eec759a05c3095883db4a3e99926cef32595c3b8d58",
                    "sha256:7ffca9f27ea79eb80b25fa06110b0d595ffbb06ee71b1ae0560a0cc4479a56d6",
                    "sha256:18dccb3264f2d7ad636726c48444ead93846012872451b5e08c0d81cc0d3bdad"
                ]
            }
        },
        "1.11.13-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524f9ec004c19befb11b1b3e8b71d75ee60dd243510125dd544d77385c04776",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "91d80ec813982d2fdcbebf3803c2d9d41a79427b2376e8c6b4029938fc7fd6ee",
            "container_config": {
                "Hostname": "91d80ec81398",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524f9ec004c19befb11b1b3e8b71d75ee60dd243510125dd544d77385c04776",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T16:26:40.479632182Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:24:45.612796997Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9b24bd862a79bf6c6e79daf6babca27245063eb52a2f72ffc4fc3494ddd3d48 in / "
                },
                {
                    "created": "2019-08-14T00:24:45.872523599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T06:23:58.329863111Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T06:24:07.74714461Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T06:24:34.309116824Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:25:24.724729859Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T16:26:20.068672108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:38.169422469Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T16:26:38.815084738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:39.142723965Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T16:26:40.280593583Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T16:26:40.479632182Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f73e7e79899a33b4b9b78da62efb71520844f8dd518f3c390e27bc3063bce307",
                    "sha256:d09a13f0562727a458ffbb3a66f6e74e70f8963f6bb813baa03c4a5af77c9dac",
                    "sha256:057abc6c693757d66fb885c2e5c825cf27d3fb355f71eb69e72d6c9d3f27d25c",
                    "sha256:e7c6a88ad7ae5b7246c905a16d5941b4292342778ce7125256bedf9864a99eab",
                    "sha256:f5c5a39263b51bb7b1f92130684237fbee7ed9f86726837b521e6e2b4009671c",
                    "sha256:651f2c4e4c8d376f098fe97841ab963b7ff9a2281689e2b27f67d6edc5ce77a1",
                    "sha256:b900af33fe73228116c86e0e28d4d5bd779017909e2f23463f447f29b3b95d8d"
                ]
            }
        },
        "1.11.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33077217dcfaf2f1c70881094f156ecf86ecd994da4777b2bf96d62549bfbd98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ad1e46a82e87d1415383664995a0be4feb12808c5c408022ef89917373ee7167",
            "container_config": {
                "Hostname": "ad1e46a82e87",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33077217dcfaf2f1c70881094f156ecf86ecd994da4777b2bf96d62549bfbd98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-17T04:06:20.459151697Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-15T22:44:00.252707299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a61c14b18252183a4719980da97ac483044bcaa9df8a569a6d7bf0f719384b5e in / "
                },
                {
                    "created": "2018-11-15T22:44:09.056859416Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T11:15:57.824013954Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T11:16:02.994302329Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T11:17:06.349456518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:04.520057904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:05.030748388Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:17.986505701Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1dfe664fa3d8ad714bbd15a36627992effd150ddabd7523931f077b3926d736d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b9d16a8eb1f7b8fdadd27232f6300aa8b4427e5e4cb148c4be4089db8fb56429' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='98a42b9b8d3bacbcc6351a1e39af52eff582d0bc3ac804cd5a97ce497dd84026' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e74f2f37b43b9b1bcf18008a11e0efb8921b41dff399a4f48ac09a4f25729881' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='23291935a299fdfde4b6a988ce3faa0c7a498aab6d56bbafbf1e7476468529a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a67ef820ef8cfecc8d68c69dd5bf513aaf647c09b6605570af425bf5fe8a32f0' ;; \t\t*) goRelArch='src'; goRelSha256='042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-17T04:06:18.699426877Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:19.095656311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:20.100136589Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-17T04:06:20.459151697Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90d1009ce6fe3102fee728742a3bd73eea2b39c88cdda99977a3fb130dbc17ac",
                    "sha256:c23711a84ad43e5062e70a4055d7df344087649bec7eac06a40a8b1af4cef86e",
                    "sha256:8f7ee6d76fd9da1ecfcfcd893357e78d7dcd4ca877295b7565c71728411f9126",
                    "sha256:f75e64f96dbc610a00722afa3826745952db8d1416f6405e7e87c20868b9f542",
                    "sha256:e7b9eaeca2179b82cc5d6bce0bdbb35a21556d71e09f2c1a55b99565bbd50eca",
                    "sha256:8019683f918e1756ed8125a276d861fbd5290b4bed034cd263187552dbf57843",
                    "sha256:652fefcd9ea8ff059213cbe0dc46d79c28f78266154c2efdfee9433ad46c776a"
                ]
            }
        },
        "1.11.2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1380cf3a46084c3ee0fdb4b8c5dda2ea65f622883d9f4747d49c51a5b7f09546",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "61fc95cc0742b34abcdf769bbc483c3df9f1a6e07db3349b5e0d364d1f114767",
            "container_config": {
                "Hostname": "61fc95cc0742",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1380cf3a46084c3ee0fdb4b8c5dda2ea65f622883d9f4747d49c51a5b7f09546",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-02T23:52:52.810986224Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-02T23:50:52.642465778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:52:51.236856603Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-02T23:52:51.706575749Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:52:51.922808849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:52:52.595233839Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-02T23:52:52.810986224Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:cb9d0f9550f6a2b6e895d23456fea36b3394728c6cbcf23dfd40a79ea71f4fd7",
                    "sha256:93391cb9fd4bf8963c63f897894e8c4db28bdb1e35c89182437da46fa7591482"
                ]
            }
        },
        "1.11.2-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4003bcc2c60143c2a6974f7b51b174afd8990c65aacc4e3a9f4cf816dd6be05f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7c4a3834fe31982a075c30341cae2e03164038e3862ba76043c43e002047612f",
            "container_config": {
                "Hostname": "7c4a3834fe31",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4003bcc2c60143c2a6974f7b51b174afd8990c65aacc4e3a9f4cf816dd6be05f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-02T23:55:01.302557634Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:38.88529994Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49f9e47e678d868d5b023482aa8dded71276a241a665c4f8b55ca77269321b34 in / "
                },
                {
                    "created": "2018-09-11T22:19:39.058628442Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:44.361139546Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T23:01:45.174939377Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-02T23:53:20.051372143Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:54:59.72478853Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-02T23:55:00.207213472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:55:00.407502546Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:55:01.091363205Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-02T23:55:01.302557634Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebf12965380b39889c99a9c02e82ba465f887b45975b6e389d42e9e6a3857888",
                    "sha256:8c16c55130abe3adc40609904b33dc92813f6d2f7caf1ced629669adde1b409b",
                    "sha256:dde396d4d613d53a0b7428a5e566f5e667dadb0b171712cd9339ee2b652a88a4",
                    "sha256:bb0fe9f3ce0639c8e21542c36173e8c602b8a04128f36f110a72be222ac3c0d3",
                    "sha256:2f36d1d411355c6166550e7f5f544da63bd109605aa0b17914a1c644babda27c"
                ]
            }
        },
        "1.11.2-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1380cf3a46084c3ee0fdb4b8c5dda2ea65f622883d9f4747d49c51a5b7f09546",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "61fc95cc0742b34abcdf769bbc483c3df9f1a6e07db3349b5e0d364d1f114767",
            "container_config": {
                "Hostname": "61fc95cc0742",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1380cf3a46084c3ee0fdb4b8c5dda2ea65f622883d9f4747d49c51a5b7f09546",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-02T23:52:52.810986224Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-02T23:50:52.642465778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:52:51.236856603Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-02T23:52:51.706575749Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:52:51.922808849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-02T23:52:52.595233839Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-02T23:52:52.810986224Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:cb9d0f9550f6a2b6e895d23456fea36b3394728c6cbcf23dfd40a79ea71f4fd7",
                    "sha256:93391cb9fd4bf8963c63f897894e8c4db28bdb1e35c89182437da46fa7591482"
                ]
            }
        },
        "1.11.2-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33077217dcfaf2f1c70881094f156ecf86ecd994da4777b2bf96d62549bfbd98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ad1e46a82e87d1415383664995a0be4feb12808c5c408022ef89917373ee7167",
            "container_config": {
                "Hostname": "ad1e46a82e87",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33077217dcfaf2f1c70881094f156ecf86ecd994da4777b2bf96d62549bfbd98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-17T04:06:20.459151697Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-15T22:44:00.252707299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a61c14b18252183a4719980da97ac483044bcaa9df8a569a6d7bf0f719384b5e in / "
                },
                {
                    "created": "2018-11-15T22:44:09.056859416Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T11:15:57.824013954Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T11:16:02.994302329Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T11:17:06.349456518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:04.520057904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:05.030748388Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:17.986505701Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1dfe664fa3d8ad714bbd15a36627992effd150ddabd7523931f077b3926d736d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b9d16a8eb1f7b8fdadd27232f6300aa8b4427e5e4cb148c4be4089db8fb56429' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='98a42b9b8d3bacbcc6351a1e39af52eff582d0bc3ac804cd5a97ce497dd84026' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e74f2f37b43b9b1bcf18008a11e0efb8921b41dff399a4f48ac09a4f25729881' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='23291935a299fdfde4b6a988ce3faa0c7a498aab6d56bbafbf1e7476468529a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a67ef820ef8cfecc8d68c69dd5bf513aaf647c09b6605570af425bf5fe8a32f0' ;; \t\t*) goRelArch='src'; goRelSha256='042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-17T04:06:18.699426877Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:19.095656311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:06:20.100136589Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-17T04:06:20.459151697Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90d1009ce6fe3102fee728742a3bd73eea2b39c88cdda99977a3fb130dbc17ac",
                    "sha256:c23711a84ad43e5062e70a4055d7df344087649bec7eac06a40a8b1af4cef86e",
                    "sha256:8f7ee6d76fd9da1ecfcfcd893357e78d7dcd4ca877295b7565c71728411f9126",
                    "sha256:f75e64f96dbc610a00722afa3826745952db8d1416f6405e7e87c20868b9f542",
                    "sha256:e7b9eaeca2179b82cc5d6bce0bdbb35a21556d71e09f2c1a55b99565bbd50eca",
                    "sha256:8019683f918e1756ed8125a276d861fbd5290b4bed034cd263187552dbf57843",
                    "sha256:652fefcd9ea8ff059213cbe0dc46d79c28f78266154c2efdfee9433ad46c776a"
                ]
            }
        },
        "1.11.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4c0e134f37b942d68a3d8a03f9c70c54b86961a9b0a8638acb5c1d0853a9dfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0d0274371722582a4cfcf6dd80f79437efb8a9addeb45d0995e5480e3801d93f",
            "container_config": {
                "Hostname": "0d0274371722",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4c0e134f37b942d68a3d8a03f9c70c54b86961a9b0a8638acb5c1d0853a9dfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T22:55:11.519627013Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-15T22:44:00.252707299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a61c14b18252183a4719980da97ac483044bcaa9df8a569a6d7bf0f719384b5e in / "
                },
                {
                    "created": "2018-11-15T22:44:09.056859416Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T11:15:57.824013954Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T11:16:02.994302329Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T11:17:06.349456518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:04.520057904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-13T22:54:58.875011058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:55:09.859102523Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d20a4869ffb13cee0f7ee777bf18c7b9b67ef0375f93fac1298519e0c227a07f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='384933e6e97b74c5125011c8f0539362bbed5a015978a34e441d7333d8e519b9' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='723c54cb081dd629a44d620197e4a789dccdfe6dee7f8b4ad7a6659f76952056' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c3fadf7f8652c060e18b7907fb8e15b853955b25aa661dbd991f6d6bc581d7a9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='57c89a047ef4f539580af4cadebf1364a906891b065afa0664592e72a034b0ee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='183258709c051ceb2900dee5ee681abb0bc440624c8f657374bde2a5658bef27' ;; \t\t*) goRelArch='src'; goRelSha256='7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T22:55:10.319032435Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:55:10.546653204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:55:11.255065308Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T22:55:11.519627013Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90d1009ce6fe3102fee728742a3bd73eea2b39c88cdda99977a3fb130dbc17ac",
                    "sha256:c23711a84ad43e5062e70a4055d7df344087649bec7eac06a40a8b1af4cef86e",
                    "sha256:8f7ee6d76fd9da1ecfcfcd893357e78d7dcd4ca877295b7565c71728411f9126",
                    "sha256:f75e64f96dbc610a00722afa3826745952db8d1416f6405e7e87c20868b9f542",
                    "sha256:e7b9eaeca2179b82cc5d6bce0bdbb35a21556d71e09f2c1a55b99565bbd50eca",
                    "sha256:cf1e76d7bb6b6e0bce409048f7adc13b9af0a200ba9ac7fe85ad2ba694fe35a9",
                    "sha256:bc74e8103579fb81fdb82b17f64e3526fd3b509ee093e341767e1eb7860547e8"
                ]
            }
        },
        "1.11.3-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e3606762838e7a02f1794b25aac8ea11b10d992d2c58f7ade3efa3f2da0d45d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "63e3f7d47f49642182887dd9d3e2c5680409aa1661a4736f7cc58b3f04782218",
            "container_config": {
                "Hostname": "63e3f7d47f49",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e3606762838e7a02f1794b25aac8ea11b10d992d2c58f7ade3efa3f2da0d45d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T22:57:14.070314545Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-13T22:55:30.602648471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:57:12.366645913Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T22:57:12.854977822Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:57:13.091158752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:57:13.815185834Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T22:57:14.070314545Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:4d490293fba12f9689678a7557b8092fb11bb18d91db090e61ed94aead03820b",
                    "sha256:b57ef4778db1cd36ffd33e75ac0a1fa77a850c3642710e1863cc020192bfa056"
                ]
            }
        },
        "1.11.3-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33155004344db971afcd485e609543d7f566a308bc1de3678f3b9aa1f89184b1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4d23d62a5927b56b56580433f7f00c416b5fbdbe4cc40f2c7b99837d31930239",
            "container_config": {
                "Hostname": "4d23d62a5927",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33155004344db971afcd485e609543d7f566a308bc1de3678f3b9aa1f89184b1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T22:59:28.682889086Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:38.88529994Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49f9e47e678d868d5b023482aa8dded71276a241a665c4f8b55ca77269321b34 in / "
                },
                {
                    "created": "2018-09-11T22:19:39.058628442Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T23:01:44.361139546Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T23:01:45.174939377Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-13T22:57:46.675126132Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:59:27.02795847Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T22:59:27.499176948Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:59:27.762929098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:59:28.444108207Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T22:59:28.682889086Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ebf12965380b39889c99a9c02e82ba465f887b45975b6e389d42e9e6a3857888",
                    "sha256:8c16c55130abe3adc40609904b33dc92813f6d2f7caf1ced629669adde1b409b",
                    "sha256:dde396d4d613d53a0b7428a5e566f5e667dadb0b171712cd9339ee2b652a88a4",
                    "sha256:b129df253facf44b27c6db8bc24dd05b465c3736319acb87f0b42316e76e87f7",
                    "sha256:6aee3611b81cb47fc1561f5220fe49424fcf5445f4a081c41a7baf0a7bc37544"
                ]
            }
        },
        "1.11.3-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e3606762838e7a02f1794b25aac8ea11b10d992d2c58f7ade3efa3f2da0d45d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "63e3f7d47f49642182887dd9d3e2c5680409aa1661a4736f7cc58b3f04782218",
            "container_config": {
                "Hostname": "63e3f7d47f49",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e3606762838e7a02f1794b25aac8ea11b10d992d2c58f7ade3efa3f2da0d45d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T22:57:14.070314545Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-11T22:19:50.165674013Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25c10b1d1b41d46a1827ad0b0d2389c24df6d31430005ff4e9a2d84ea23ebd42 in / "
                },
                {
                    "created": "2018-09-11T22:19:50.322783064Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-11T22:52:16.273330105Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-11T22:52:16.988408392Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-13T22:55:30.602648471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:57:12.366645913Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T22:57:12.854977822Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:57:13.091158752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:57:13.815185834Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T22:57:14.070314545Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:df64d3292fd6194b7865d7326af5255db6d81e9df29f48adde61a918fbd8c332",
                    "sha256:c54f8a17910a27d799d33dfd0997625eb72ea10682dd2c033732d0c775e0589e",
                    "sha256:93448d8c26050418b6a9ef671217db21b8063c4ee2319888f2d76600e433736a",
                    "sha256:4d490293fba12f9689678a7557b8092fb11bb18d91db090e61ed94aead03820b",
                    "sha256:b57ef4778db1cd36ffd33e75ac0a1fa77a850c3642710e1863cc020192bfa056"
                ]
            }
        },
        "1.11.3-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4c0e134f37b942d68a3d8a03f9c70c54b86961a9b0a8638acb5c1d0853a9dfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0d0274371722582a4cfcf6dd80f79437efb8a9addeb45d0995e5480e3801d93f",
            "container_config": {
                "Hostname": "0d0274371722",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4c0e134f37b942d68a3d8a03f9c70c54b86961a9b0a8638acb5c1d0853a9dfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-13T22:55:11.519627013Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-15T22:44:00.252707299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a61c14b18252183a4719980da97ac483044bcaa9df8a569a6d7bf0f719384b5e in / "
                },
                {
                    "created": "2018-11-15T22:44:09.056859416Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T11:15:57.824013954Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T11:16:02.994302329Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T11:17:06.349456518Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:06:04.520057904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-13T22:54:58.875011058Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:55:09.859102523Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d20a4869ffb13cee0f7ee777bf18c7b9b67ef0375f93fac1298519e0c227a07f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='384933e6e97b74c5125011c8f0539362bbed5a015978a34e441d7333d8e519b9' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='723c54cb081dd629a44d620197e4a789dccdfe6dee7f8b4ad7a6659f76952056' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c3fadf7f8652c060e18b7907fb8e15b853955b25aa661dbd991f6d6bc581d7a9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='57c89a047ef4f539580af4cadebf1364a906891b065afa0664592e72a034b0ee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='183258709c051ceb2900dee5ee681abb0bc440624c8f657374bde2a5658bef27' ;; \t\t*) goRelArch='src'; goRelSha256='7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-13T22:55:10.319032435Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:55:10.546653204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-13T22:55:11.255065308Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-13T22:55:11.519627013Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:90d1009ce6fe3102fee728742a3bd73eea2b39c88cdda99977a3fb130dbc17ac",
                    "sha256:c23711a84ad43e5062e70a4055d7df344087649bec7eac06a40a8b1af4cef86e",
                    "sha256:8f7ee6d76fd9da1ecfcfcd893357e78d7dcd4ca877295b7565c71728411f9126",
                    "sha256:f75e64f96dbc610a00722afa3826745952db8d1416f6405e7e87c20868b9f542",
                    "sha256:e7b9eaeca2179b82cc5d6bce0bdbb35a21556d71e09f2c1a55b99565bbd50eca",
                    "sha256:cf1e76d7bb6b6e0bce409048f7adc13b9af0a200ba9ac7fe85ad2ba694fe35a9",
                    "sha256:bc74e8103579fb81fdb82b17f64e3526fd3b509ee093e341767e1eb7860547e8"
                ]
            }
        },
        "1.11.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:795c77e5709a11c80ea16530c8084f64d840681b3ddcc01274adc768b72303bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d0514b66246c0d6b2033246823cee76f8354e95e460e27c1f95042006889826e",
            "container_config": {
                "Hostname": "d0514b66246c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:795c77e5709a11c80ea16530c8084f64d840681b3ddcc01274adc768b72303bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-23T05:38:32.271977199Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-22T19:30:03.899485439Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:feb9fd29475961253e3449db036bbf56bf6f4d02f2df1202209e393a9e7e95f5 in / "
                },
                {
                    "created": "2019-01-22T19:30:04.166142077Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-22T20:05:43.070472877Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T20:05:48.103801346Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-01-22T20:06:13.576000306Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T05:37:42.600956511Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T05:38:19.470217692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:30.755187582Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fb26c30e6a04ad937bbc657a1b5bba92f80096af1e8ee6da6430c045a8db3a5b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f7a71d27fef69f654a93e265560c8d9db1a2ca3f1dcdbe5288c46facfde5821' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b76df430ba8caff197b8558921deef782cdb20b62fa36fa93f81a8c08ab7c8e7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cecd2da1849043237d5f0756a93d601db6798fa3bb27a14563d201088aa415f3' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1f10146826acd56716b00b9188079af53823ddd79ceb6362e78e2f3aafb370ab' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4467442dacf89eb94c5d6f9f700204cb360be82db60e6296cc2ef8d0e890cd42' ;; \t\t*) goRelArch='src'; goRelSha256='4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-23T05:38:31.182983001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:31.358793072Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:32.079418165Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-23T05:38:32.271977199Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:badfbcebf7f868b2dc0e4b1aa21db05bcd5cb2be0afb314ac196a0f51f7b04ed",
                    "sha256:c240c542ed55380befcc5ae81783624ad7c64378d07a86a5bd510651f24984fb",
                    "sha256:76dfa41f0a1d8ef70ad38fd1ceda5af26e9865c84032abfae75cb14d8c545fb9",
                    "sha256:a89464ad2a8f6e340f68b538b4f682f0a446c575450997caeb6f4640d86f2c9c",
                    "sha256:a7992cea6ed0c2f6737f3ae38cda151d4944189d06dbf06dcc02f66949ff624b",
                    "sha256:517faa7b53365482c3f3dbbd981c1ccb7baf9a5d99de220e999cf8fed35237bf",
                    "sha256:9e2a8bc148a4c2bba07b6a8093d8ea40534248e3c41b7002ea43a2f316de7283"
                ]
            }
        },
        "1.11.4-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcc413ce730bbf9f11d981906f0103be4f49c41ca58017763462c9cf83290724",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d14d3e8f904afba30b99b0c088f026b72ce723453c966b95a9def304e507f000",
            "container_config": {
                "Hostname": "d14d3e8f904a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcc413ce730bbf9f11d981906f0103be4f49c41ca58017763462c9cf83290724",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T04:09:54.331419515Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T00:21:29.97055571Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2ff00caea4e83dfade726ca47e3c795a1e9acb8ac24e392785c474ecf9a621f2 in / "
                },
                {
                    "created": "2018-12-21T00:21:30.122610396Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T01:10:06.894256856Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T01:10:08.012314313Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T04:07:35.542028691Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:09:52.701017853Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T04:09:53.187400525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:09:53.33821266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:09:54.131356978Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T04:09:54.331419515Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7bff100f35cb359a368537bb07829b055fe8e0b1cb01085a3a628ae9c187c7b8",
                    "sha256:b14874cfef599156b09eecfe6a0b6e27922ddf8f96f7b57e448e1f6b9eaac475",
                    "sha256:789935042c6fb6157c551988cff9c4f7b46b292e9b1b77bb1c26e0616737372f",
                    "sha256:61b145086eb80a3937b6a7280c051d71e2d51af474e45ddf1edf3a3b706f94be",
                    "sha256:e121936484eb318f211e3df38e3d6ec67823f1f638e316f0b5eb8574d21ed0e5"
                ]
            }
        },
        "1.11.4-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:370f251f60507fd506a31efe201e7eae6358962838af094f02e7faca3164b7d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f87096939dc11abdbe8e7b4bdea10d46b5765b364b17b00164df2d0986bbeb76",
            "container_config": {
                "Hostname": "f87096939dc1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:370f251f60507fd506a31efe201e7eae6358962838af094f02e7faca3164b7d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T04:12:30.35186773Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T00:21:10.984083489Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1c654f8c89128c1ac8363b251cb5e1e7d9326e430ae2740963f77cf6726aee0b in / "
                },
                {
                    "created": "2018-12-21T00:21:11.127085418Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:10:06.493197112Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T04:10:08.303283841Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T04:10:08.463120342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:12:28.760885112Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T04:12:29.251267673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:12:29.40655216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:12:30.16276872Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T04:12:30.35186773Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d6da3c54c8f3a43215d51cc0d43eff9759624996e40aaf11e4be5a555c038c32",
                    "sha256:e735e4e9cd4471ef069afb5fc886473ea1ccbfd5c7373ee41ed76fb9dc9efb9f",
                    "sha256:b092d5787e0ba3da910341d4d0fd4b62f475e274390f6085e7c0bec0903ddec0",
                    "sha256:31c57b3d31564a97e0c9db2cd2a49b7b925e58bb34ac562dc93e64f57e88266b",
                    "sha256:97577b6e2116e44aeca23ea52154dee1aeed1954e7a01fb69131ed81414e735f"
                ]
            }
        },
        "1.11.4-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcc413ce730bbf9f11d981906f0103be4f49c41ca58017763462c9cf83290724",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d14d3e8f904afba30b99b0c088f026b72ce723453c966b95a9def304e507f000",
            "container_config": {
                "Hostname": "d14d3e8f904a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcc413ce730bbf9f11d981906f0103be4f49c41ca58017763462c9cf83290724",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T04:09:54.331419515Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T00:21:29.97055571Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2ff00caea4e83dfade726ca47e3c795a1e9acb8ac24e392785c474ecf9a621f2 in / "
                },
                {
                    "created": "2018-12-21T00:21:30.122610396Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T01:10:06.894256856Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T01:10:08.012314313Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T04:07:35.542028691Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:09:52.701017853Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T04:09:53.187400525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:09:53.33821266Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T04:09:54.131356978Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T04:09:54.331419515Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7bff100f35cb359a368537bb07829b055fe8e0b1cb01085a3a628ae9c187c7b8",
                    "sha256:b14874cfef599156b09eecfe6a0b6e27922ddf8f96f7b57e448e1f6b9eaac475",
                    "sha256:789935042c6fb6157c551988cff9c4f7b46b292e9b1b77bb1c26e0616737372f",
                    "sha256:61b145086eb80a3937b6a7280c051d71e2d51af474e45ddf1edf3a3b706f94be",
                    "sha256:e121936484eb318f211e3df38e3d6ec67823f1f638e316f0b5eb8574d21ed0e5"
                ]
            }
        },
        "1.11.4-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:795c77e5709a11c80ea16530c8084f64d840681b3ddcc01274adc768b72303bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d0514b66246c0d6b2033246823cee76f8354e95e460e27c1f95042006889826e",
            "container_config": {
                "Hostname": "d0514b66246c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:795c77e5709a11c80ea16530c8084f64d840681b3ddcc01274adc768b72303bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-23T05:38:32.271977199Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-22T19:30:03.899485439Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:feb9fd29475961253e3449db036bbf56bf6f4d02f2df1202209e393a9e7e95f5 in / "
                },
                {
                    "created": "2019-01-22T19:30:04.166142077Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-22T20:05:43.070472877Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T20:05:48.103801346Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-01-22T20:06:13.576000306Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T05:37:42.600956511Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T05:38:19.470217692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:30.755187582Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fb26c30e6a04ad937bbc657a1b5bba92f80096af1e8ee6da6430c045a8db3a5b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f7a71d27fef69f654a93e265560c8d9db1a2ca3f1dcdbe5288c46facfde5821' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b76df430ba8caff197b8558921deef782cdb20b62fa36fa93f81a8c08ab7c8e7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cecd2da1849043237d5f0756a93d601db6798fa3bb27a14563d201088aa415f3' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1f10146826acd56716b00b9188079af53823ddd79ceb6362e78e2f3aafb370ab' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4467442dacf89eb94c5d6f9f700204cb360be82db60e6296cc2ef8d0e890cd42' ;; \t\t*) goRelArch='src'; goRelSha256='4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-23T05:38:31.182983001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:31.358793072Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T05:38:32.079418165Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-23T05:38:32.271977199Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:badfbcebf7f868b2dc0e4b1aa21db05bcd5cb2be0afb314ac196a0f51f7b04ed",
                    "sha256:c240c542ed55380befcc5ae81783624ad7c64378d07a86a5bd510651f24984fb",
                    "sha256:76dfa41f0a1d8ef70ad38fd1ceda5af26e9865c84032abfae75cb14d8c545fb9",
                    "sha256:a89464ad2a8f6e340f68b538b4f682f0a446c575450997caeb6f4640d86f2c9c",
                    "sha256:a7992cea6ed0c2f6737f3ae38cda151d4944189d06dbf06dcc02f66949ff624b",
                    "sha256:517faa7b53365482c3f3dbbd981c1ccb7baf9a5d99de220e999cf8fed35237bf",
                    "sha256:9e2a8bc148a4c2bba07b6a8093d8ea40534248e3c41b7002ea43a2f316de7283"
                ]
            }
        },
        "1.11.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cf6d188290f2e83ef515f8a270f27f0bcba5ecb6a24efa2aa3ca8812840a8afc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eabb7cc7d6de53cc78a78d0c8036fd98b0dc8d373f0c4c21ca274bfb2a29ba0d",
            "container_config": {
                "Hostname": "eabb7cc7d6de",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cf6d188290f2e83ef515f8a270f27f0bcba5ecb6a24efa2aa3ca8812840a8afc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T07:12:09.368071786Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-04T23:22:10.053695191Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4bdc12117ee95eaa94b89f258164dd42f9828c7c5c4332a608707187ccb470a in / "
                },
                {
                    "created": "2019-03-04T23:22:10.311230167Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T02:35:21.514620674Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T02:35:27.30755495Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T02:35:52.15741798Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T07:11:30.0906734Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T07:11:54.511620325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:12:07.297638374Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ff54aafedff961eb94792487e827515da683d61a5f9482f668008832631e5d25' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b26b53c94923f78955236386fee0725ef4e76b6cb47e0df0ed0c0c4724e7b198' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6ee9a5714444182a236d3cc4636e74cfc5e24a1bacf0463ac71dcf0e7d4288ed' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acd8e05f8d3eed406e09bb58eab89de3f0a139d4aef15f74adeed2d2c24cb440' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66e83152c68cb35d41f21453377d6a811585c9e01a6ac54b19f7a6e2cbb3d1f5' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='56209e5498c64a8338cd6f0fe0c2e2cbf6857c0acdb10c774894f0cc0d19f413' ;; \t\t*) goRelArch='src'; goRelSha256='bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T07:12:07.819595659Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:12:08.000143255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:12:09.121291127Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T07:12:09.368071786Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bb0785f2eee7f27e4c6d9ac3e7f05838e243d22feb827b55d70762f1eb4781a",
                    "sha256:a327787b3c7332a341b8c67ebd4541a6a353ef1cc4b9f4349ba6220feec47adc",
                    "sha256:f3a38968d0759ad29738fa74cb32c92b8520fee9670fd666c0087875b820ecbb",
                    "sha256:3443d6cf0f1f55d5b8ff780140cd047ec224c0b6e93810d4a229a8f0ccc9b36d",
                    "sha256:05edf1e1ffd702e7206e24f79f3126cf7cc894ab826003283bc4d0121ad9304f",
                    "sha256:9a0787389e7bd530d67832f51f108e15c46fc6ca321aed19fa47f50fbe5e7bbe",
                    "sha256:401eda81153fa6bc83189bb533fa01336e2a3f3ecbc290743f4d8ad0f39ee990"
                ]
            }
        },
        "1.11.5-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d89aca8d494c8589407d96671a1daf4dd11813098efad87fcf62f85ea209cd03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5c1133b376933d98e9cb0b91c57e77ab143640982d66044419662bc377628a3",
            "container_config": {
                "Hostname": "f5c1133b3769",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d89aca8d494c8589407d96671a1daf4dd11813098efad87fcf62f85ea209cd03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-07T23:26:11.146912227Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-07T23:23:21.171173353Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:07.53079889Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-07T23:26:09.09147218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:09.591165658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:10.841968781Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-07T23:26:11.146912227Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:3750eb21ceeca2669319cb5df4a6b5a3b388052b57600ada738fe1d36490ff28",
                    "sha256:95d6fa5e48bf9a5b455339e03e259fb71877a6d148ac2970851de52a7fb9a72d"
                ]
            }
        },
        "1.11.5-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5db9d59bd8c97dfe3d7878699325c00fd5e33eadc1f93ad22380aa9e76638cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "191b1ff07e2ba13917f13295f42ecfda308557a3c912cc0796dc05ee32e52673",
            "container_config": {
                "Hostname": "191b1ff07e2b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5db9d59bd8c97dfe3d7878699325c00fd5e33eadc1f93ad22380aa9e76638cd1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-30T22:54:48.143096139Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:40.704160499Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c13ab388a8e4c772b97ec8f6d2c576bece32cecdcfb6fee5175e1d3f613dd12 in / "
                },
                {
                    "created": "2019-01-30T22:19:40.859176347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:50:25.98069813Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:50:27.052105204Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-30T22:50:27.314512678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:45.699795128Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-30T22:54:46.479702878Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:46.727719033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:54:47.81248006Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-30T22:54:48.143096139Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:629164d914fc35be714ea121054f0a512ace424b675daa808ae037d6706c343f",
                    "sha256:af45321294a955bcaa746a303c4b65553a0f715053e814351b0d9fb363b2edc0",
                    "sha256:87a4d5fa9c89941f0b98a3b230886120665e23ab8b4ed56b3335a5fea58cfe55",
                    "sha256:e50b19bd2cfc7f977dea516cb77f815d1d77c16808290a16dd91ff5d7d50d5c5",
                    "sha256:be118fd816b43be6573a47267a4d8d3ce0950d3bb57f98f8e558b5962d0c4d88"
                ]
            }
        },
        "1.11.5-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9332faf2b5e3d2efca371afdde2c67ef33ef049d6ce6990ea38db2b196b3f4f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "26e4a2c68f986c4df7c115b22c3e9728a965c346b0a25929e196123c6823d10e",
            "container_config": {
                "Hostname": "26e4a2c68f98",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9332faf2b5e3d2efca371afdde2c67ef33ef049d6ce6990ea38db2b196b3f4f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-07T23:31:21.736082166Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:22.278616874Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:26:23.582281132Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-07T23:26:23.823959314Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:31:17.431263914Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-07T23:31:18.89281781Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:31:19.907040378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:31:21.469107806Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-07T23:31:21.736082166Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e30375a8696c1d4e9bd625727ff22ad449de5e1bc424947e687c70feead895a7",
                    "sha256:d0aa1970c77f1c6aaee33de75681642d726f1a2111a9e65b61030dc4b82cf28b",
                    "sha256:8ebbb1fb2207b1d947f2e71df25c63eb820e6292eaf4d50c8d9f93d4059c59fe",
                    "sha256:9d09b2608f367a2d3ba375104d35445cdc61ab29e934d7d2f028ced585c4cfc5"
                ]
            }
        },
        "1.11.5-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d89aca8d494c8589407d96671a1daf4dd11813098efad87fcf62f85ea209cd03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5c1133b376933d98e9cb0b91c57e77ab143640982d66044419662bc377628a3",
            "container_config": {
                "Hostname": "f5c1133b3769",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d89aca8d494c8589407d96671a1daf4dd11813098efad87fcf62f85ea209cd03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-07T23:26:11.146912227Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-07T23:23:21.171173353Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:07.53079889Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-07T23:26:09.09147218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:09.591165658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:10.841968781Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-07T23:26:11.146912227Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:3750eb21ceeca2669319cb5df4a6b5a3b388052b57600ada738fe1d36490ff28",
                    "sha256:95d6fa5e48bf9a5b455339e03e259fb71877a6d148ac2970851de52a7fb9a72d"
                ]
            }
        },
        "1.11.5-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cf6d188290f2e83ef515f8a270f27f0bcba5ecb6a24efa2aa3ca8812840a8afc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eabb7cc7d6de53cc78a78d0c8036fd98b0dc8d373f0c4c21ca274bfb2a29ba0d",
            "container_config": {
                "Hostname": "eabb7cc7d6de",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cf6d188290f2e83ef515f8a270f27f0bcba5ecb6a24efa2aa3ca8812840a8afc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T07:12:09.368071786Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-04T23:22:10.053695191Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4bdc12117ee95eaa94b89f258164dd42f9828c7c5c4332a608707187ccb470a in / "
                },
                {
                    "created": "2019-03-04T23:22:10.311230167Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T02:35:21.514620674Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T02:35:27.30755495Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T02:35:52.15741798Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T07:11:30.0906734Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T07:11:54.511620325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:12:07.297638374Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ff54aafedff961eb94792487e827515da683d61a5f9482f668008832631e5d25' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b26b53c94923f78955236386fee0725ef4e76b6cb47e0df0ed0c0c4724e7b198' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6ee9a5714444182a236d3cc4636e74cfc5e24a1bacf0463ac71dcf0e7d4288ed' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acd8e05f8d3eed406e09bb58eab89de3f0a139d4aef15f74adeed2d2c24cb440' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66e83152c68cb35d41f21453377d6a811585c9e01a6ac54b19f7a6e2cbb3d1f5' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='56209e5498c64a8338cd6f0fe0c2e2cbf6857c0acdb10c774894f0cc0d19f413' ;; \t\t*) goRelArch='src'; goRelSha256='bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T07:12:07.819595659Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:12:08.000143255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:12:09.121291127Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T07:12:09.368071786Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bb0785f2eee7f27e4c6d9ac3e7f05838e243d22feb827b55d70762f1eb4781a",
                    "sha256:a327787b3c7332a341b8c67ebd4541a6a353ef1cc4b9f4349ba6220feec47adc",
                    "sha256:f3a38968d0759ad29738fa74cb32c92b8520fee9670fd666c0087875b820ecbb",
                    "sha256:3443d6cf0f1f55d5b8ff780140cd047ec224c0b6e93810d4a229a8f0ccc9b36d",
                    "sha256:05edf1e1ffd702e7206e24f79f3126cf7cc894ab826003283bc4d0121ad9304f",
                    "sha256:9a0787389e7bd530d67832f51f108e15c46fc6ca321aed19fa47f50fbe5e7bbe",
                    "sha256:401eda81153fa6bc83189bb533fa01336e2a3f3ecbc290743f4d8ad0f39ee990"
                ]
            }
        },
        "1.11.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b6dfb1e1a2f4880aaed9a496c1683a6dcb623c116063c393fdda6e66e3b681c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f43c45e326dcf2e42b8e0c97d62103544afdf030f35a2d008c626aebaa881b2",
            "container_config": {
                "Hostname": "2f43c45e326d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b6dfb1e1a2f4880aaed9a496c1683a6dcb623c116063c393fdda6e66e3b681c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T04:41:38.278375348Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:41:17.763298829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:41:36.15331232Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4e1864282d8d20010d6385a12a1e35641783a380a7c57907bfb46a5499c5eb49' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62597fe72f1170cbb939958823555a701510e00362eb8a10b7ace6e59c8e7e6e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='29f64505cea47c57a46e2c8001ecf8d0c01cbf1ec86de96f4e3126b94a12ebb7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7d90e484bb92e68648c1a7b6b1790e97af33718bae457d2ee02ee5d1dd0ce2b7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43d7cc7d3cdc1e57af33a13296b48713735f55e25aa655187afb19a707143c77' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c7f83fa5975a8f11641962bad79f89a7e17a6580d0d21ca828733dc0cfe470f7' ;; \t\t*) goRelArch='src'; goRelSha256='a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T04:41:36.750862185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:41:37.007170154Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:41:38.039375Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T04:41:38.278375348Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:462a0f104bde696ae2f272bca8b7e2896790a361a336714f99f29e159cd2a7f3",
                    "sha256:a242a8b1bd57b1540aa222ffd33802467740ea8c69055ad8e25b357af1b56986"
                ]
            }
        },
        "1.11.6-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:08b4ad719c6a1874cb4fa83ab2bb1909f07a27bda1a35b39d902789832ce589b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "24f91cf7d4c7a0a25060cfd2c3639f5a03a07ae5badfac9d6452dfa22d5e2037",
            "container_config": {
                "Hostname": "24f91cf7d4c7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:08b4ad719c6a1874cb4fa83ab2bb1909f07a27bda1a35b39d902789832ce589b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-15T20:30:35.819703589Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-15T20:28:13.682529148Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:30:34.156243774Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-15T20:30:34.610897784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:30:34.791358464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:30:35.610941341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-15T20:30:35.819703589Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:2b678de51e2221a453885e307de7c9a1813e20b5b8253413f9d7c8a9f7f1767c",
                    "sha256:867b4a3b2e1a8b26b6756c88ead5d992469aff21e8f12eb43c1c37660688bcd4"
                ]
            }
        },
        "1.11.6-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f6de5b29c36c51b22a3b5ffdf1fb76b405b8f2a2c035ef993d850c8a05af9956",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d42ef852e5a6f4770be101be6ab5002aac4540fffdcf411711095060c19630c2",
            "container_config": {
                "Hostname": "d42ef852e5a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f6de5b29c36c51b22a3b5ffdf1fb76b405b8f2a2c035ef993d850c8a05af9956",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-15T20:32:42.258556324Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:22.278616874Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:26:23.582281132Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-15T20:30:42.247294171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:32:40.839965017Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-15T20:32:41.266758369Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:32:41.422307196Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:32:42.091973184Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-15T20:32:42.258556324Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e30375a8696c1d4e9bd625727ff22ad449de5e1bc424947e687c70feead895a7",
                    "sha256:d0aa1970c77f1c6aaee33de75681642d726f1a2111a9e65b61030dc4b82cf28b",
                    "sha256:bd240ca5b4e788c171eeb04ea34fe77b2f2923bd5d865a8ac0a1feaf8ff6e434",
                    "sha256:df71bb50ce5fa5caa158b4a5557aee990edc70aa4f8d2253215219aa89b174d1"
                ]
            }
        },
        "1.11.6-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:08b4ad719c6a1874cb4fa83ab2bb1909f07a27bda1a35b39d902789832ce589b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "24f91cf7d4c7a0a25060cfd2c3639f5a03a07ae5badfac9d6452dfa22d5e2037",
            "container_config": {
                "Hostname": "24f91cf7d4c7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:08b4ad719c6a1874cb4fa83ab2bb1909f07a27bda1a35b39d902789832ce589b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-15T20:30:35.819703589Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-15T20:28:13.682529148Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:30:34.156243774Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-15T20:30:34.610897784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:30:34.791358464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:30:35.610941341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-15T20:30:35.819703589Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:2b678de51e2221a453885e307de7c9a1813e20b5b8253413f9d7c8a9f7f1767c",
                    "sha256:867b4a3b2e1a8b26b6756c88ead5d992469aff21e8f12eb43c1c37660688bcd4"
                ]
            }
        },
        "1.11.6-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b6dfb1e1a2f4880aaed9a496c1683a6dcb623c116063c393fdda6e66e3b681c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f43c45e326dcf2e42b8e0c97d62103544afdf030f35a2d008c626aebaa881b2",
            "container_config": {
                "Hostname": "2f43c45e326d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b6dfb1e1a2f4880aaed9a496c1683a6dcb623c116063c393fdda6e66e3b681c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T04:41:38.278375348Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:41:17.763298829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:41:36.15331232Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4e1864282d8d20010d6385a12a1e35641783a380a7c57907bfb46a5499c5eb49' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62597fe72f1170cbb939958823555a701510e00362eb8a10b7ace6e59c8e7e6e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='29f64505cea47c57a46e2c8001ecf8d0c01cbf1ec86de96f4e3126b94a12ebb7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7d90e484bb92e68648c1a7b6b1790e97af33718bae457d2ee02ee5d1dd0ce2b7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43d7cc7d3cdc1e57af33a13296b48713735f55e25aa655187afb19a707143c77' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c7f83fa5975a8f11641962bad79f89a7e17a6580d0d21ca828733dc0cfe470f7' ;; \t\t*) goRelArch='src'; goRelSha256='a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T04:41:36.750862185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:41:37.007170154Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:41:38.039375Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T04:41:38.278375348Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:462a0f104bde696ae2f272bca8b7e2896790a361a336714f99f29e159cd2a7f3",
                    "sha256:a242a8b1bd57b1540aa222ffd33802467740ea8c69055ad8e25b357af1b56986"
                ]
            }
        },
        "1.11.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ce571cda4ac705afc0c5706e4f5977649c0312dbf4a7e98d54378f606682b88",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d7024df2db5196d6d316da51bb04a1bfe804b68b4a00080ba766c6a77e8c56da",
            "container_config": {
                "Hostname": "d7024df2db51",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ce571cda4ac705afc0c5706e4f5977649c0312dbf4a7e98d54378f606682b88",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T01:22:36.799622541Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-06T01:22:19.51940918Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:22:34.904440342Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='db687814288b3b541c1754dfd4ecc2b8fd0d5e7995624945e3054a350ca573d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7d6ae2e119a432a4b00a6dc2c2085f56ead4973f40d58e534308f1535b45afc2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='fe7ba5046aa4f52ae8fa36531aac4a949ad8e10c02b0f4aa05a420b4e803f8c6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='86d11a58bd99298719cb7ebea160255aefc56735d14089d2b2241d581967a482' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43b04f58b37808f86f526e6f1a8d6643fe196c1314acc3d7db710ec9ae960d18' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='178932743c7af70c94f170f800202f490e0f85e74796dabe0a23d50630ba0333' ;; \t\t*) goRelArch='src'; goRelSha256='cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T01:22:35.713550744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:22:35.911084462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:22:36.627389484Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T01:22:36.799622541Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:ed83522b2754b44a7c7fb91571f6b1c0e789e663606939691b675bed3aafb613",
                    "sha256:7fbac997fdf6dd04a3f315d2fd2791e5db2e4fc7d51f287b86130a477ec3fa91"
                ]
            }
        },
        "1.11.7-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:279a1d33f114e6db1743c609ecc9af740f02cfbdfb6c8b2ef14527a08f3ec12d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a18dcff6607a055b26b793bc3ef998d0043653df8754ed1011a1792faa967ff",
            "container_config": {
                "Hostname": "8a18dcff6607",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:279a1d33f114e6db1743c609ecc9af740f02cfbdfb6c8b2ef14527a08f3ec12d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T01:24:40.607194337Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T01:22:39.543627229Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:24:39.105604487Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T01:24:39.538369953Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:24:39.706473861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:24:40.434834453Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T01:24:40.607194337Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:5cf88baea988f7db1a6460f9e04e9194ee5968212be4c55e5af843745d79f4dc",
                    "sha256:3c27781740896e4dbb55554f5aa2eb72e60daffe6a925171d288268b834ba24f"
                ]
            }
        },
        "1.11.7-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e632d0d57dc777fbdcf2ad70441f2a4d9de7e6f752e2dc08028c278bbadd8163",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5bef70d589011b461b4f70ebed1e00ae32806c9ca490992a59d4870303f83911",
            "container_config": {
                "Hostname": "5bef70d58901",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e632d0d57dc777fbdcf2ad70441f2a4d9de7e6f752e2dc08028c278bbadd8163",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T01:26:52.038753497Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:22.278616874Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:26:23.582281132Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T01:24:53.060400677Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:26:50.537003423Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T01:26:50.958319899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:26:51.118958184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:26:51.846950118Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T01:26:52.038753497Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e30375a8696c1d4e9bd625727ff22ad449de5e1bc424947e687c70feead895a7",
                    "sha256:d0aa1970c77f1c6aaee33de75681642d726f1a2111a9e65b61030dc4b82cf28b",
                    "sha256:aebbcce0c9fd5e1a6b753e937f8bebfae97877069236f263ca0006978dc45291",
                    "sha256:111ecde276d881438f7c34bb7b47ec28a4c76e78e3dde491146a0f1a85e286c1"
                ]
            }
        },
        "1.11.7-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:279a1d33f114e6db1743c609ecc9af740f02cfbdfb6c8b2ef14527a08f3ec12d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8a18dcff6607a055b26b793bc3ef998d0043653df8754ed1011a1792faa967ff",
            "container_config": {
                "Hostname": "8a18dcff6607",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:279a1d33f114e6db1743c609ecc9af740f02cfbdfb6c8b2ef14527a08f3ec12d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T01:24:40.607194337Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T01:22:39.543627229Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:24:39.105604487Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T01:24:39.538369953Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:24:39.706473861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:24:40.434834453Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T01:24:40.607194337Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:5cf88baea988f7db1a6460f9e04e9194ee5968212be4c55e5af843745d79f4dc",
                    "sha256:3c27781740896e4dbb55554f5aa2eb72e60daffe6a925171d288268b834ba24f"
                ]
            }
        },
        "1.11.7-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ce571cda4ac705afc0c5706e4f5977649c0312dbf4a7e98d54378f606682b88",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d7024df2db5196d6d316da51bb04a1bfe804b68b4a00080ba766c6a77e8c56da",
            "container_config": {
                "Hostname": "d7024df2db51",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ce571cda4ac705afc0c5706e4f5977649c0312dbf4a7e98d54378f606682b88",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T01:22:36.799622541Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-06T01:22:19.51940918Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:22:34.904440342Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='db687814288b3b541c1754dfd4ecc2b8fd0d5e7995624945e3054a350ca573d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7d6ae2e119a432a4b00a6dc2c2085f56ead4973f40d58e534308f1535b45afc2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='fe7ba5046aa4f52ae8fa36531aac4a949ad8e10c02b0f4aa05a420b4e803f8c6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='86d11a58bd99298719cb7ebea160255aefc56735d14089d2b2241d581967a482' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43b04f58b37808f86f526e6f1a8d6643fe196c1314acc3d7db710ec9ae960d18' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='178932743c7af70c94f170f800202f490e0f85e74796dabe0a23d50630ba0333' ;; \t\t*) goRelArch='src'; goRelSha256='cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T01:22:35.713550744Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:22:35.911084462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T01:22:36.627389484Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T01:22:36.799622541Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:ed83522b2754b44a7c7fb91571f6b1c0e789e663606939691b675bed3aafb613",
                    "sha256:7fbac997fdf6dd04a3f315d2fd2791e5db2e4fc7d51f287b86130a477ec3fa91"
                ]
            }
        },
        "1.11.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e295265842d9103e35946bfbcb4ccf827deb965fc86e6610534e4dffa9594e6d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a30cb4cce9a8eddc3f1a27ef6cd256f80c94d9db3a7b3a44d8b7c56a257440b",
            "container_config": {
                "Hostname": "6a30cb4cce9a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e295265842d9103e35946bfbcb4ccf827deb965fc86e6610534e4dffa9594e6d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T00:22:33.372566954Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-09T00:22:20.167197483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:22:31.978558527Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e32ab1c934b747999d04e8a550b97f4647f8b1b43e152de5650d4476bfd1d2e1' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c5d4fd90242761c214124eedb0ffc35af52be19e7a4eb4006b036b5dcb422c87' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='68c42239d118b27f5e52a449f444c8a53e64a181b12d9ecbda14d0c3b765a5ee' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0e62a02516fa2197a2eb319a6957e7bd7007005a11b4da5c6650879999db899' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4f0559832957c37022f771420902c1f19100c0a5b391c4957753c521a9eba56e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='023928ee1d896af181c62acfd0a4e7bd713c8503a9b3b9aec745a3a830630e1b' ;; \t\t*) goRelArch='src'; goRelSha256='ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T00:22:32.359305446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:22:32.523475088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:22:33.190803782Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T00:22:33.372566954Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:b275af95ec6078cf912f0b2c26afd8e099eb2701123bd520de5dd61eb633239c",
                    "sha256:3ccee8d0a312a0b70ade0d799326234ae57dfbf69e508a8bc2a62fdb6dca5325"
                ]
            }
        },
        "1.11.8-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5e5e0bc83a7c00b73c5f9a14fed92767bf592a4210d1d6b4ae28b60a919eb30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bf8df463d560dcbeb6a0e8fa3d811fe7143e04862a7092c68439509ff939ede1",
            "container_config": {
                "Hostname": "bf8df463d560",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5e5e0bc83a7c00b73c5f9a14fed92767bf592a4210d1d6b4ae28b60a919eb30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T02:12:59.655578047Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-09T23:20:18.226548168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b in / "
                },
                {
                    "created": "2019-04-09T23:20:18.391201481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T23:20:33.175691959Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-09T23:20:40.387313276Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T02:08:46.084236114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T02:12:57.372222043Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T02:12:58.107578576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T02:12:58.368452605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T02:12:59.419333516Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T02:12:59.655578047Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a464c54f93a9e88fc1d33df1e0e39cca427d60145a360962e8f19a1dbf900da9",
                    "sha256:d0e4fb621c6d276cae8694bb823d0f921d60385723e0f61ce312b417e1866353",
                    "sha256:daf1b73f0d7f1f44604517d541425cf9dc5abebc3006f22c46f5e2cf8ed2f75a",
                    "sha256:8bef9b2e5fb6c0996efcc7e0f2bce2b09390800d33b6639160de3f841e34fa0d",
                    "sha256:2524991ccf8c493aaaf29ebb5c0753f480a5884d6e526fcae923277eb2bae176"
                ]
            }
        },
        "1.11.8-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8610a21ecea64be46fa31799997675d0f82e55857d1210f0255fe2ea3a59ddb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "61a4de1c6b22b2897d7576d3c8765f67dd33f687caf967d3c49fcaf83fcd9e1f",
            "container_config": {
                "Hostname": "61a4de1c6b22",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8610a21ecea64be46fa31799997675d0f82e55857d1210f0255fe2ea3a59ddb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T00:26:51.780400939Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:22.278616874Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:26:23.582281132Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-09T00:24:50.775095867Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:26:50.317857448Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T00:26:50.743634633Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:26:50.910912505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:26:51.600140408Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T00:26:51.780400939Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e30375a8696c1d4e9bd625727ff22ad449de5e1bc424947e687c70feead895a7",
                    "sha256:d0aa1970c77f1c6aaee33de75681642d726f1a2111a9e65b61030dc4b82cf28b",
                    "sha256:1d284cf53e7a7bcab62dad6351298eea20a1e5fd155f0f9d51e67b2f65066d72",
                    "sha256:631cc485eba5631cc0439aacce41a6d05082f77a5647aec41d423fc7477d9a7c"
                ]
            }
        },
        "1.11.8-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5e5e0bc83a7c00b73c5f9a14fed92767bf592a4210d1d6b4ae28b60a919eb30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bf8df463d560dcbeb6a0e8fa3d811fe7143e04862a7092c68439509ff939ede1",
            "container_config": {
                "Hostname": "bf8df463d560",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d5e5e0bc83a7c00b73c5f9a14fed92767bf592a4210d1d6b4ae28b60a919eb30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T02:12:59.655578047Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-09T23:20:18.226548168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b in / "
                },
                {
                    "created": "2019-04-09T23:20:18.391201481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T23:20:33.175691959Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-09T23:20:40.387313276Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T02:08:46.084236114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T02:12:57.372222043Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T02:12:58.107578576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T02:12:58.368452605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T02:12:59.419333516Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T02:12:59.655578047Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a464c54f93a9e88fc1d33df1e0e39cca427d60145a360962e8f19a1dbf900da9",
                    "sha256:d0e4fb621c6d276cae8694bb823d0f921d60385723e0f61ce312b417e1866353",
                    "sha256:daf1b73f0d7f1f44604517d541425cf9dc5abebc3006f22c46f5e2cf8ed2f75a",
                    "sha256:8bef9b2e5fb6c0996efcc7e0f2bce2b09390800d33b6639160de3f841e34fa0d",
                    "sha256:2524991ccf8c493aaaf29ebb5c0753f480a5884d6e526fcae923277eb2bae176"
                ]
            }
        },
        "1.11.8-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e295265842d9103e35946bfbcb4ccf827deb965fc86e6610534e4dffa9594e6d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a30cb4cce9a8eddc3f1a27ef6cd256f80c94d9db3a7b3a44d8b7c56a257440b",
            "container_config": {
                "Hostname": "6a30cb4cce9a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e295265842d9103e35946bfbcb4ccf827deb965fc86e6610534e4dffa9594e6d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T00:22:33.372566954Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-09T00:22:20.167197483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:22:31.978558527Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e32ab1c934b747999d04e8a550b97f4647f8b1b43e152de5650d4476bfd1d2e1' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c5d4fd90242761c214124eedb0ffc35af52be19e7a4eb4006b036b5dcb422c87' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='68c42239d118b27f5e52a449f444c8a53e64a181b12d9ecbda14d0c3b765a5ee' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0e62a02516fa2197a2eb319a6957e7bd7007005a11b4da5c6650879999db899' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4f0559832957c37022f771420902c1f19100c0a5b391c4957753c521a9eba56e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='023928ee1d896af181c62acfd0a4e7bd713c8503a9b3b9aec745a3a830630e1b' ;; \t\t*) goRelArch='src'; goRelSha256='ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T00:22:32.359305446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:22:32.523475088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T00:22:33.190803782Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T00:22:33.372566954Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:b275af95ec6078cf912f0b2c26afd8e099eb2701123bd520de5dd61eb633239c",
                    "sha256:3ccee8d0a312a0b70ade0d799326234ae57dfbf69e508a8bc2a62fdb6dca5325"
                ]
            }
        },
        "1.11.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d3bf494dc695330d5e14955aba14a3a128fb1ebe55cd2db95eff9ab8aa223d1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8aabb0e5d229f8249d06c02c9ec1359bb76860dca3c8658ebb46ff262dd84d1d",
            "container_config": {
                "Hostname": "8aabb0e5d229",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d3bf494dc695330d5e14955aba14a3a128fb1ebe55cd2db95eff9ab8aa223d1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-12T22:23:35.672046679Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-12T22:23:20.739326139Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:23:34.23581284Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e88aa3e39104e3ba6a95a4e05629348b4a1ec82791fb3c941a493ca349730608' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f0d7b039cae61efdc346669f3459460e3dc03b6c6de528ca107fc53970cba0d1' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='892ab6c2510c4caa5905b3b1b6a1d4c6f04e384841fec50881ca2be7e8accf05' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='0fa4001fcf1ef0644e261bf6dde02fc9f10ae4df6d74fda61fc4d3c3cbef1d79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6a0a6a80997529543a434667f404ead2da88ac8fecc59bfba82f62bd2588e6c8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0dd7073469d0f414b264fbadc4f720f9582b13ff6a0a978a9ef23020f9e42ac1' ;; \t\t*) goRelArch='src'; goRelSha256='ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-12T22:23:34.623656286Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:23:34.799788784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:23:35.474942825Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-12T22:23:35.672046679Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:3523f5bad42ceee1eaa11f84d66976cfb51dd8b644bb39d02afa0ab76a70efc9",
                    "sha256:2d6d3a5f90e2c743de530f9393ae37fdac3b1d7087e6c1c72580e70682a0fe36"
                ]
            }
        },
        "1.11.9-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f5f1dba0ea7c7460951908ce8c9d5aa621df06257666ca2a3add7a0bc2a4ea0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d427540d087468728c190640e8798789b34a1e9d19bbaaf425867705e33763c6",
            "container_config": {
                "Hostname": "d427540d0874",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f5f1dba0ea7c7460951908ce8c9d5aa621df06257666ca2a3add7a0bc2a4ea0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-12T22:25:42.203299618Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-09T23:20:18.226548168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b in / "
                },
                {
                    "created": "2019-04-09T23:20:18.391201481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T23:20:33.175691959Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-09T23:20:40.387313276Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-12T22:23:41.480820037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:25:40.757130455Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-12T22:25:41.163105711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:25:41.346847881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:25:42.016053967Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-12T22:25:42.203299618Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a464c54f93a9e88fc1d33df1e0e39cca427d60145a360962e8f19a1dbf900da9",
                    "sha256:d0e4fb621c6d276cae8694bb823d0f921d60385723e0f61ce312b417e1866353",
                    "sha256:daf1b73f0d7f1f44604517d541425cf9dc5abebc3006f22c46f5e2cf8ed2f75a",
                    "sha256:aa0ef82f58333ae83a9f2c176a14eb68628fe24ad6fa4a4511fe246033525a2a",
                    "sha256:56edec059673f2ec3fb91bf5f07872029cf12cb145cd95504dcf0cf18113de73"
                ]
            }
        },
        "1.11.9-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c16829b8c39bfa263a9a80c504afc511a38646938d66e975ea57a2dd6f758326",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7a88f8a9ac42c938e674b93429a53f3e9bd6e24e67d006d34a899931fbeeb71e",
            "container_config": {
                "Hostname": "7a88f8a9ac42",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c16829b8c39bfa263a9a80c504afc511a38646938d66e975ea57a2dd6f758326",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-12T22:28:35.732955774Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:46.661698137Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38bc6b51693b13d84a63e281403e2f6d0218c44b1d7ff12157c4523f9f0ebb1e in / "
                },
                {
                    "created": "2019-03-07T22:19:46.815331171Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:26:22.278616874Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:26:23.582281132Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-12T22:25:54.167208996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:28:05.119067515Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-12T22:28:32.909050335Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:28:33.082512547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:28:35.052325513Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-12T22:28:35.732955774Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9ff549177a94a413c425ffe14ae1cc0aa254bc9c7df781add08e7d2fba25d27",
                    "sha256:e30375a8696c1d4e9bd625727ff22ad449de5e1bc424947e687c70feead895a7",
                    "sha256:d0aa1970c77f1c6aaee33de75681642d726f1a2111a9e65b61030dc4b82cf28b",
                    "sha256:b00d20af4921648c310123e8f310a62c4f251f69d7d407fbea6d24865f06b065",
                    "sha256:11a9758031b090ec9ecf1ca86782042f9107ed99fc4625af83a0a7c8aa7667d1"
                ]
            }
        },
        "1.11.9-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f5f1dba0ea7c7460951908ce8c9d5aa621df06257666ca2a3add7a0bc2a4ea0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d427540d087468728c190640e8798789b34a1e9d19bbaaf425867705e33763c6",
            "container_config": {
                "Hostname": "d427540d0874",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f5f1dba0ea7c7460951908ce8c9d5aa621df06257666ca2a3add7a0bc2a4ea0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-12T22:25:42.203299618Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-09T23:20:18.226548168Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2e3a37883f56a4a278bec2931fc9f91fb9ebdaa9047540fe8fde419b84a1701b in / "
                },
                {
                    "created": "2019-04-09T23:20:18.391201481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T23:20:33.175691959Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-09T23:20:40.387313276Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-12T22:23:41.480820037Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:25:40.757130455Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-12T22:25:41.163105711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:25:41.346847881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:25:42.016053967Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-12T22:25:42.203299618Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a464c54f93a9e88fc1d33df1e0e39cca427d60145a360962e8f19a1dbf900da9",
                    "sha256:d0e4fb621c6d276cae8694bb823d0f921d60385723e0f61ce312b417e1866353",
                    "sha256:daf1b73f0d7f1f44604517d541425cf9dc5abebc3006f22c46f5e2cf8ed2f75a",
                    "sha256:aa0ef82f58333ae83a9f2c176a14eb68628fe24ad6fa4a4511fe246033525a2a",
                    "sha256:56edec059673f2ec3fb91bf5f07872029cf12cb145cd95504dcf0cf18113de73"
                ]
            }
        },
        "1.11.9-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d3bf494dc695330d5e14955aba14a3a128fb1ebe55cd2db95eff9ab8aa223d1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8aabb0e5d229f8249d06c02c9ec1359bb76860dca3c8658ebb46ff262dd84d1d",
            "container_config": {
                "Hostname": "8aabb0e5d229",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9d3bf494dc695330d5e14955aba14a3a128fb1ebe55cd2db95eff9ab8aa223d1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-12T22:23:35.672046679Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-12T22:23:20.739326139Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:23:34.23581284Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e88aa3e39104e3ba6a95a4e05629348b4a1ec82791fb3c941a493ca349730608' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f0d7b039cae61efdc346669f3459460e3dc03b6c6de528ca107fc53970cba0d1' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='892ab6c2510c4caa5905b3b1b6a1d4c6f04e384841fec50881ca2be7e8accf05' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='0fa4001fcf1ef0644e261bf6dde02fc9f10ae4df6d74fda61fc4d3c3cbef1d79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6a0a6a80997529543a434667f404ead2da88ac8fecc59bfba82f62bd2588e6c8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0dd7073469d0f414b264fbadc4f720f9582b13ff6a0a978a9ef23020f9e42ac1' ;; \t\t*) goRelArch='src'; goRelSha256='ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-12T22:23:34.623656286Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:23:34.799788784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-12T22:23:35.474942825Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-12T22:23:35.672046679Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:3523f5bad42ceee1eaa11f84d66976cfb51dd8b644bb39d02afa0ab76a70efc9",
                    "sha256:2d6d3a5f90e2c743de530f9393ae37fdac3b1d7087e6c1c72580e70682a0fe36"
                ]
            }
        },
        "1.11beta1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:934860d724073bfc57d34736cd39fff56c6a2a3e67ebd129a8fce4ca98a5ab50",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "75aebe6307c0984760283351651fa16a438544cf02fac531f27e3a29be8e7f5f",
            "container_config": {
                "Hostname": "75aebe6307c0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:934860d724073bfc57d34736cd39fff56c6a2a3e67ebd129a8fce4ca98a5ab50",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-17T12:30:28.392676508Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.987134824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:30:26.270455444Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='df7fe096ffab5d331d35c6d038d2ec0426b45ce17f55a93037e371d3af9d4e6d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='844ed9e34b118a9c2b069a18924a7879236929e08c887a92e5be1af5d701fb90' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9c1795148e777c81ac3cb381e3ea970eea60f5db2323658c061e5c4382125dd4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a6e804652f58785b3dfe272d96b8206250210e7ba7bdcb1ffb726ab3753db4af' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66529a525c0369d2b79ecd19f6d16444ed162c9bf88f7b37715520841c36de65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='731b9e6ac0d4c9709297f0efc1a6455589b978d2ecc207184d3e5be07a130c9c' ;; \t\t*) goRelArch='src'; goRelSha256='5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-17T12:30:26.831620608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:30:27.076339749Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:30:28.11248668Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-17T12:30:28.392676508Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:3f432c453c08f0d56c5e3624c088be9aa5c50dbf3c20c862e4797066c5c84d5e",
                    "sha256:cb0f4b0753fa47d8aeb248376236b49aebf373ba7a83b178d07e14e3dfdf03d5"
                ]
            }
        },
        "1.11beta1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:398d3e7d0f42c76eaac15b99d171ffd4416be711ced603c2fe047897dae04a8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1e8b5877d675f007e8e082cf0ff6086229c073a9c6046b08640b967604f60668",
            "container_config": {
                "Hostname": "1e8b5877d675",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:398d3e7d0f42c76eaac15b99d171ffd4416be711ced603c2fe047897dae04a8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-12T21:21:37.212308611Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-12T21:19:44.207815132Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:21:35.294728114Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-12T21:21:36.092325492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:21:36.29219049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:21:36.999731266Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-12T21:21:37.212308611Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:d066f6e07bbb4327af5a9376102c709dbd087b29d179d360090248f40ecdf2b5",
                    "sha256:8ba8421241bc0efa1a9ad023aff649e221d52010b4f69505d2289008896e48f4"
                ]
            }
        },
        "1.11beta1-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1a69fcc6a67311a385c35d317bce591486843905fb0433972c4185b107d5024",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "72470b20fb14bc03c5cbff3feeb976730e178410f1c85532c33205c7d993864f",
            "container_config": {
                "Hostname": "72470b20fb14",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1a69fcc6a67311a385c35d317bce591486843905fb0433972c4185b107d5024",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-06T15:00:35.672845429Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:13:45.666164062Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ee19b92d5cb1bf143947fe2e2481cb3b353d42e1e54888a8ba48c03dd4155f2 in / "
                },
                {
                    "created": "2018-07-06T14:13:45.901173503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:45:09.216744395Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-06T14:45:09.941574136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-06T14:58:44.352663972Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T15:00:33.432504545Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-06T15:00:34.176431686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T15:00:34.443971685Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T15:00:35.381900434Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-06T15:00:35.672845429Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:717b092b8c86356cf976d9c83fa6f0ea67f2bf3148a5bbb7e02026a5d3245e68",
                    "sha256:6b2edeabe17e3c818efe9117d2b39c77846292012f081da8b0bf5ca4a2c9c09b",
                    "sha256:db88a4fd1709661a218a704e33978944c8fb38abd9a4621201b06367b84c14da",
                    "sha256:c38cf28d4122b76e300b2a7ebdc667d4f0d65f5c8098993fd67662d10613052e",
                    "sha256:96db5ee9333d33cad711dd943caf153ebfa555413e40227002817e4e90364c38"
                ]
            }
        },
        "1.11beta1-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:398d3e7d0f42c76eaac15b99d171ffd4416be711ced603c2fe047897dae04a8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1e8b5877d675f007e8e082cf0ff6086229c073a9c6046b08640b967604f60668",
            "container_config": {
                "Hostname": "1e8b5877d675",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:398d3e7d0f42c76eaac15b99d171ffd4416be711ced603c2fe047897dae04a8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-12T21:21:37.212308611Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-12T21:19:44.207815132Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:21:35.294728114Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-12T21:21:36.092325492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:21:36.29219049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:21:36.999731266Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-12T21:21:37.212308611Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:d066f6e07bbb4327af5a9376102c709dbd087b29d179d360090248f40ecdf2b5",
                    "sha256:8ba8421241bc0efa1a9ad023aff649e221d52010b4f69505d2289008896e48f4"
                ]
            }
        },
        "1.11beta1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:934860d724073bfc57d34736cd39fff56c6a2a3e67ebd129a8fce4ca98a5ab50",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "75aebe6307c0984760283351651fa16a438544cf02fac531f27e3a29be8e7f5f",
            "container_config": {
                "Hostname": "75aebe6307c0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:934860d724073bfc57d34736cd39fff56c6a2a3e67ebd129a8fce4ca98a5ab50",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-17T12:30:28.392676508Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.987134824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:30:26.270455444Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='df7fe096ffab5d331d35c6d038d2ec0426b45ce17f55a93037e371d3af9d4e6d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='844ed9e34b118a9c2b069a18924a7879236929e08c887a92e5be1af5d701fb90' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9c1795148e777c81ac3cb381e3ea970eea60f5db2323658c061e5c4382125dd4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a6e804652f58785b3dfe272d96b8206250210e7ba7bdcb1ffb726ab3753db4af' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66529a525c0369d2b79ecd19f6d16444ed162c9bf88f7b37715520841c36de65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='731b9e6ac0d4c9709297f0efc1a6455589b978d2ecc207184d3e5be07a130c9c' ;; \t\t*) goRelArch='src'; goRelSha256='5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-17T12:30:26.831620608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:30:27.076339749Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T12:30:28.11248668Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-17T12:30:28.392676508Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:3f432c453c08f0d56c5e3624c088be9aa5c50dbf3c20c862e4797066c5c84d5e",
                    "sha256:cb0f4b0753fa47d8aeb248376236b49aebf373ba7a83b178d07e14e3dfdf03d5"
                ]
            }
        },
        "1.11beta2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20d867071d50c024417685bc31c377d48d037dcb051406eb0451d2b31936b445",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "76cfe232bdcd7319271f3848f6346a41eb28809e28160d228b4114c1801f3211",
            "container_config": {
                "Hostname": "76cfe232bdcd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20d867071d50c024417685bc31c377d48d037dcb051406eb0451d2b31936b445",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T07:30:36.013227473Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-21T07:30:12.470303263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:30:31.770940164Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ccb60f1ae6efe4fcef115db8143eb7f9ba134c63486f47b2c5176706ede35af5' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3242225cc9bb151789b4ba606903862b68b0e81682a5ab75245d76ab1ddf38fb' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='835fc6ebae5cb4368fc39683a911fe5a25c36b4251b2b254112f3fc8f36a9f39' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acc26b494699f7dca7e30ec2c08d0f2af8813437a234f17605fafe9c7c8cf69e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='31168f17e2791e664e591dc4c5e2c37ab5c3b942a2898d84075437daed3fc9f9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='648b0f22ff517668bf4b642749a2a479d421f69b1e11bcd0ab1a71994e1c94db' ;; \t\t*) goRelArch='src'; goRelSha256='50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T07:30:34.381465553Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:30:34.604438874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:30:35.765631835Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T07:30:36.013227473Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:6f74d4b1f6e349ddc5e9b302335842714ef03985478ae3a898e5987bb18856e8",
                    "sha256:fe9aed16dcae3f6bdda6baeea71cc8fe6d4318622a6fd6b46cf22e75b0ea73c4"
                ]
            }
        },
        "1.11beta2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f46706a4c899cee0d0543b88738d62a71ff757d514a48a9cb2a136802ea282f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "3c3f65f07d3dfe731f395df57667fa47f99dc07ba593a36ebcca88575d65df19",
            "container_config": {
                "Hostname": "3c3f65f07d3d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f46706a4c899cee0d0543b88738d62a71ff757d514a48a9cb2a136802ea282f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T07:33:15.641283881Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T07:31:10.593660079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:33:06.112993716Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T07:33:14.262007497Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:33:14.496269895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:33:15.317837179Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T07:33:15.641283881Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:cac97fe22f63c7f1b51fa00d2100b60236261f044ad6e444c5690f21efc27e21",
                    "sha256:22a1749896001a8c3749ce483586688775003286c423376dbabddbdcc53ed06f"
                ]
            }
        },
        "1.11beta2-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:201569dfbc6ffabb7db03578afbdf7c78fe8c74d646d953493bfd0ca48a231e0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9a304f72677c38137b940b60d140d4056349c67b9705981a75883d80e764062c",
            "container_config": {
                "Hostname": "9a304f72677c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:201569dfbc6ffabb7db03578afbdf7c78fe8c74d646d953493bfd0ca48a231e0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T07:35:27.953052124Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:13:45.666164062Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ee19b92d5cb1bf143947fe2e2481cb3b353d42e1e54888a8ba48c03dd4155f2 in / "
                },
                {
                    "created": "2018-07-06T14:13:45.901173503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:45:09.216744395Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-06T14:45:09.941574136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T07:33:34.85745568Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:35:25.962612651Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T07:35:26.760882223Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:35:26.972257311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:35:27.70985482Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T07:35:27.953052124Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:717b092b8c86356cf976d9c83fa6f0ea67f2bf3148a5bbb7e02026a5d3245e68",
                    "sha256:6b2edeabe17e3c818efe9117d2b39c77846292012f081da8b0bf5ca4a2c9c09b",
                    "sha256:db88a4fd1709661a218a704e33978944c8fb38abd9a4621201b06367b84c14da",
                    "sha256:92e045ff6c3cf4714193bf2305a7c906e117ce5777b963ef711ad6ea0afb67c9",
                    "sha256:a8bf3c05f157622ecd44d24f17c8d9415a1df03f85a37b9a3a2985ffd8dd5778"
                ]
            }
        },
        "1.11beta2-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f46706a4c899cee0d0543b88738d62a71ff757d514a48a9cb2a136802ea282f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "3c3f65f07d3dfe731f395df57667fa47f99dc07ba593a36ebcca88575d65df19",
            "container_config": {
                "Hostname": "3c3f65f07d3d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f46706a4c899cee0d0543b88738d62a71ff757d514a48a9cb2a136802ea282f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T07:33:15.641283881Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T07:31:10.593660079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:33:06.112993716Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T07:33:14.262007497Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:33:14.496269895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:33:15.317837179Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T07:33:15.641283881Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:cac97fe22f63c7f1b51fa00d2100b60236261f044ad6e444c5690f21efc27e21",
                    "sha256:22a1749896001a8c3749ce483586688775003286c423376dbabddbdcc53ed06f"
                ]
            }
        },
        "1.11beta2-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20d867071d50c024417685bc31c377d48d037dcb051406eb0451d2b31936b445",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "76cfe232bdcd7319271f3848f6346a41eb28809e28160d228b4114c1801f3211",
            "container_config": {
                "Hostname": "76cfe232bdcd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20d867071d50c024417685bc31c377d48d037dcb051406eb0451d2b31936b445",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T07:30:36.013227473Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-21T07:30:12.470303263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:30:31.770940164Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ccb60f1ae6efe4fcef115db8143eb7f9ba134c63486f47b2c5176706ede35af5' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3242225cc9bb151789b4ba606903862b68b0e81682a5ab75245d76ab1ddf38fb' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='835fc6ebae5cb4368fc39683a911fe5a25c36b4251b2b254112f3fc8f36a9f39' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acc26b494699f7dca7e30ec2c08d0f2af8813437a234f17605fafe9c7c8cf69e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='31168f17e2791e664e591dc4c5e2c37ab5c3b942a2898d84075437daed3fc9f9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='648b0f22ff517668bf4b642749a2a479d421f69b1e11bcd0ab1a71994e1c94db' ;; \t\t*) goRelArch='src'; goRelSha256='50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T07:30:34.381465553Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:30:34.604438874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T07:30:35.765631835Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T07:30:36.013227473Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:6f74d4b1f6e349ddc5e9b302335842714ef03985478ae3a898e5987bb18856e8",
                    "sha256:fe9aed16dcae3f6bdda6baeea71cc8fe6d4318622a6fd6b46cf22e75b0ea73c4"
                ]
            }
        },
        "1.11beta3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09e8a48794515c59da8d4367c2a0499e3ec36fd179c7913ec7ca018f27fdda53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "fa76aefd9c9670570215d72a90eb924106e59f6deb9c8a7aff75052a68a2477a",
            "container_config": {
                "Hostname": "fa76aefd9c96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09e8a48794515c59da8d4367c2a0499e3ec36fd179c7913ec7ca018f27fdda53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T02:20:32.556891472Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-04T02:19:59.005898496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:20:23.274668781Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='674c1091f4712c1cfdcd77ecddafe6aef81cbda740af64a6e3f893ddf3dfb11c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='491e4d1288ad9f69d16e8ec990d4a4a2b9cc494c3b9488743a96c168424cbb5c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d8fb9d36a3c862a68db828eb22268e0723e3e245f41cc33f5da0a5b7e293fea5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e3e4e1271aa74f7dc64c586048f351e89d7ab20b5f3c3a518e87a628f5abf582' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6fe3a4db6a43a59fbe364069fd94536e1d2920df897d5ec93bea7fd519031c54' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='518762a66c9992d667bf7cae4adda285d14f856413ccc7cd853876aae0670382' ;; \t\t*) goRelArch='src'; goRelSha256='b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T02:20:31.028129401Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:20:31.356422207Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:20:32.250867715Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T02:20:32.556891472Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:a8ded7665f2bf3105f9ae60342913a3ad1bc0238f0245d98024c2a9a1b012eca",
                    "sha256:89fcc226fff98b752319c48c9b1ecb6e560de1616c736a062e8cdacc0ff2fafb"
                ]
            }
        },
        "1.11beta3-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e22416c097fd2feb20f05a82b305d09f0b50bebfab29509ec1b0240405771eea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5e7d20a7e8ae6e23e9c231aa240e203e9d7c11a7a6536c37f5edbfda3ba38a10",
            "container_config": {
                "Hostname": "5e7d20a7e8ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e22416c097fd2feb20f05a82b305d09f0b50bebfab29509ec1b0240405771eea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T02:22:54.405362868Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T02:20:55.541168245Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:22:47.938467641Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T02:22:52.97389324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:22:53.228330951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:22:54.090992481Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T02:22:54.405362868Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:11ae2adac4137dae194000f3356a9595f311c9f4e6d327e7280cf7e722824b61",
                    "sha256:249fcb39f251f496b116948856d626f2a6c12a2dd9fc2134d9ca1ecd2b67416a"
                ]
            }
        },
        "1.11beta3-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d9750a05dd7874376490fc7687d9b96611682ce791a338079c4a89dc80da29a8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "006740da21415e6f71d625af53a19d28fec09a57b8f7ba357e0a33eb86cba605",
            "container_config": {
                "Hostname": "006740da2141",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d9750a05dd7874376490fc7687d9b96611682ce791a338079c4a89dc80da29a8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T02:25:44.320564287Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:13:45.666164062Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ee19b92d5cb1bf143947fe2e2481cb3b353d42e1e54888a8ba48c03dd4155f2 in / "
                },
                {
                    "created": "2018-07-06T14:13:45.901173503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:45:09.216744395Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-06T14:45:09.941574136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T02:23:45.910455618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:25:42.071030867Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T02:25:42.916174486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:25:43.176068218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:25:44.065576373Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T02:25:44.320564287Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:717b092b8c86356cf976d9c83fa6f0ea67f2bf3148a5bbb7e02026a5d3245e68",
                    "sha256:6b2edeabe17e3c818efe9117d2b39c77846292012f081da8b0bf5ca4a2c9c09b",
                    "sha256:db88a4fd1709661a218a704e33978944c8fb38abd9a4621201b06367b84c14da",
                    "sha256:8572794acf1e41b75213c55326e98d22f09292803d1b34dcf688e8df9726e9fc",
                    "sha256:c3cf8fc48d9f7469ede1f71a46c36a16324cf655573c746cd82979f527212a87"
                ]
            }
        },
        "1.11beta3-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e22416c097fd2feb20f05a82b305d09f0b50bebfab29509ec1b0240405771eea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5e7d20a7e8ae6e23e9c231aa240e203e9d7c11a7a6536c37f5edbfda3ba38a10",
            "container_config": {
                "Hostname": "5e7d20a7e8ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e22416c097fd2feb20f05a82b305d09f0b50bebfab29509ec1b0240405771eea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T02:22:54.405362868Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T02:20:55.541168245Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:22:47.938467641Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T02:22:52.97389324Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:22:53.228330951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:22:54.090992481Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T02:22:54.405362868Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:11ae2adac4137dae194000f3356a9595f311c9f4e6d327e7280cf7e722824b61",
                    "sha256:249fcb39f251f496b116948856d626f2a6c12a2dd9fc2134d9ca1ecd2b67416a"
                ]
            }
        },
        "1.11beta3-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09e8a48794515c59da8d4367c2a0499e3ec36fd179c7913ec7ca018f27fdda53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "fa76aefd9c9670570215d72a90eb924106e59f6deb9c8a7aff75052a68a2477a",
            "container_config": {
                "Hostname": "fa76aefd9c96",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:09e8a48794515c59da8d4367c2a0499e3ec36fd179c7913ec7ca018f27fdda53",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T02:20:32.556891472Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-04T02:19:59.005898496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:20:23.274668781Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='674c1091f4712c1cfdcd77ecddafe6aef81cbda740af64a6e3f893ddf3dfb11c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='491e4d1288ad9f69d16e8ec990d4a4a2b9cc494c3b9488743a96c168424cbb5c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d8fb9d36a3c862a68db828eb22268e0723e3e245f41cc33f5da0a5b7e293fea5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e3e4e1271aa74f7dc64c586048f351e89d7ab20b5f3c3a518e87a628f5abf582' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6fe3a4db6a43a59fbe364069fd94536e1d2920df897d5ec93bea7fd519031c54' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='518762a66c9992d667bf7cae4adda285d14f856413ccc7cd853876aae0670382' ;; \t\t*) goRelArch='src'; goRelSha256='b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T02:20:31.028129401Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:20:31.356422207Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T02:20:32.250867715Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T02:20:32.556891472Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:a8ded7665f2bf3105f9ae60342913a3ad1bc0238f0245d98024c2a9a1b012eca",
                    "sha256:89fcc226fff98b752319c48c9b1ecb6e560de1616c736a062e8cdacc0ff2fafb"
                ]
            }
        },
        "1.11rc1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f8fa42ff0c342fb1ae5011f7be67f8d6c564ad18a1f2bc264e2f7e00cd883da2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "dadc5eabeee8dd0e61dc4cbb6792f72d1ab835b45af64f1422474bcc14ed1d64",
            "container_config": {
                "Hostname": "dadc5eabeee8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f8fa42ff0c342fb1ae5011f7be67f8d6c564ad18a1f2bc264e2f7e00cd883da2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-14T16:24:12.234829251Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-14T16:23:52.411681319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:24:10.321824599Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1a071f069982427b245aea736d3174e065a12e8481c34051c672d62a5ca59ca9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2c0a53850e7dcd2f1592eb51325fa5da20ee953512bebf1b0d3fb046874dc4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8a3d96e3e7604cf5390b7e318ff35112cdb13e0e44ddf0130659cefd196ab50e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='afe8f516fbd0316981e70fc0dda8c67116837baaa0431ee2da47f4fee4614433' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='972e7b6bfecee780a9cd970100297b35bed4c82cacc2bd55d78428928b66683d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd30adfb32de8c441fc0b12a9a9acbd5098a77ab77609269aed7ea4f8dd682ae' ;; \t\t*) goRelArch='src'; goRelSha256='fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-14T16:24:11.008212647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:24:11.237592504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:24:12.008457445Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-14T16:24:12.234829251Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:72c9e95e5d5e53d0fc1b1a6b0a45f16fde09338c39a555f7c7b4c3253b4ebbc1",
                    "sha256:2a248128e986ef2046ead4df0cecff5c7f64a8d0a320f49eb2ffbd4c71fd3e10"
                ]
            }
        },
        "1.11rc1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b956cd850c6be035d274f3d225b9ca6910e4aa79b3273da2411d219d83ea9c3a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2d7b7d4eee08dc09c57c1e949594615020e5ab49ac68ad1d563032b9a97d2521",
            "container_config": {
                "Hostname": "2d7b7d4eee08",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b956cd850c6be035d274f3d225b9ca6910e4aa79b3273da2411d219d83ea9c3a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T01:56:23.351215953Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:24:39.031509968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:56:21.104580414Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T01:56:21.839769635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:56:22.123647471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:56:23.052273963Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T01:56:23.351215953Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:3c4bf7adbe5004f7382af4b636e74f5d35bb9e9d18540df881d99a4646c494c8",
                    "sha256:673387d4b344c88335cb40f5bd894b308eb161de3c95bc33f5222f4c6e34d6e2"
                ]
            }
        },
        "1.11rc1-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e95db51c581e9db16c606fb54531b21ca24060c832770322595d3d9688532797",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "319d66996cfe680257c2dc205c9eb145b9a1a03aa19470457c1e439b93cf657f",
            "container_config": {
                "Hostname": "319d66996cfe",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e95db51c581e9db16c606fb54531b21ca24060c832770322595d3d9688532797",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T01:58:45.133355012Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:13:45.666164062Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ee19b92d5cb1bf143947fe2e2481cb3b353d42e1e54888a8ba48c03dd4155f2 in / "
                },
                {
                    "created": "2018-07-06T14:13:45.901173503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:45:09.216744395Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-06T14:45:09.941574136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:26:51.019045043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:58:42.962239807Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T01:58:43.526424334Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:58:43.849080234Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:58:44.826816404Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T01:58:45.133355012Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:717b092b8c86356cf976d9c83fa6f0ea67f2bf3148a5bbb7e02026a5d3245e68",
                    "sha256:6b2edeabe17e3c818efe9117d2b39c77846292012f081da8b0bf5ca4a2c9c09b",
                    "sha256:db88a4fd1709661a218a704e33978944c8fb38abd9a4621201b06367b84c14da",
                    "sha256:a84e43b179864cfbb80570140b9e7ab712881a79de426e3d4298ffb2b397c890",
                    "sha256:3af00da479e6ea66d551f7382aacb54d06a22b1bb7a634b229cf3b3166ef34ec"
                ]
            }
        },
        "1.11rc1-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b956cd850c6be035d274f3d225b9ca6910e4aa79b3273da2411d219d83ea9c3a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "2d7b7d4eee08dc09c57c1e949594615020e5ab49ac68ad1d563032b9a97d2521",
            "container_config": {
                "Hostname": "2d7b7d4eee08",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b956cd850c6be035d274f3d225b9ca6910e4aa79b3273da2411d219d83ea9c3a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T01:56:23.351215953Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:24:39.031509968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:56:21.104580414Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T01:56:21.839769635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:56:22.123647471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T01:56:23.052273963Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T01:56:23.351215953Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:3c4bf7adbe5004f7382af4b636e74f5d35bb9e9d18540df881d99a4646c494c8",
                    "sha256:673387d4b344c88335cb40f5bd894b308eb161de3c95bc33f5222f4c6e34d6e2"
                ]
            }
        },
        "1.11rc1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f8fa42ff0c342fb1ae5011f7be67f8d6c564ad18a1f2bc264e2f7e00cd883da2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "dadc5eabeee8dd0e61dc4cbb6792f72d1ab835b45af64f1422474bcc14ed1d64",
            "container_config": {
                "Hostname": "dadc5eabeee8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f8fa42ff0c342fb1ae5011f7be67f8d6c564ad18a1f2bc264e2f7e00cd883da2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-14T16:24:12.234829251Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-14T16:23:52.411681319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:24:10.321824599Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1a071f069982427b245aea736d3174e065a12e8481c34051c672d62a5ca59ca9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2c0a53850e7dcd2f1592eb51325fa5da20ee953512bebf1b0d3fb046874dc4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8a3d96e3e7604cf5390b7e318ff35112cdb13e0e44ddf0130659cefd196ab50e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='afe8f516fbd0316981e70fc0dda8c67116837baaa0431ee2da47f4fee4614433' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='972e7b6bfecee780a9cd970100297b35bed4c82cacc2bd55d78428928b66683d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd30adfb32de8c441fc0b12a9a9acbd5098a77ab77609269aed7ea4f8dd682ae' ;; \t\t*) goRelArch='src'; goRelSha256='fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-14T16:24:11.008212647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:24:11.237592504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:24:12.008457445Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-14T16:24:12.234829251Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:72c9e95e5d5e53d0fc1b1a6b0a45f16fde09338c39a555f7c7b4c3253b4ebbc1",
                    "sha256:2a248128e986ef2046ead4df0cecff5c7f64a8d0a320f49eb2ffbd4c71fd3e10"
                ]
            }
        },
        "1.11rc2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d03ea04e460a6994ad774b2ee717578370d65aafc771a0e8f2cd0ff030061695",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c27f307fcc47a679ac17dadad803f333eb7625c37dcbd41caa239916582c3132",
            "container_config": {
                "Hostname": "c27f307fcc47",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d03ea04e460a6994ad774b2ee717578370d65aafc771a0e8f2cd0ff030061695",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:27:40.413986823Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T01:27:07.615174332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:25.038422973Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:27:38.990891541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:39.266021127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:40.130941627Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:27:40.413986823Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:9a46d149ffec20a47667ec3d76d6a1852eb50230be9cd8f56addd6cd54919d00",
                    "sha256:4cd4a4de8ed0e193eaa2ab21554e4503ed636b537b2b4f41465c44b4e709274d"
                ]
            }
        },
        "1.11rc2-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb1c1f9bf7642fc12299efb6ccfe1d879c0611e707f0967da76d8a1b95c0b5ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4772e051d72f01754aecfc21e619ee6cc72269286423ca7a2747f9c18d887b4a",
            "container_config": {
                "Hostname": "4772e051d72f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb1c1f9bf7642fc12299efb6ccfe1d879c0611e707f0967da76d8a1b95c0b5ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:30:27.395012404Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:28:35.032939441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:25.040065605Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:30:25.818600192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:26.118280431Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:27.087133477Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:30:27.395012404Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:879c2fefc5605bc901ce3a707b3bbd47bd7a3ccb226254f5f03ea1c7422aeecf",
                    "sha256:e18143c20240873492b62da76e108e45ec8475d8288a3986cbe7d985282731bc"
                ]
            }
        },
        "1.11rc2-alpine3.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12996f0ca34886f90e59c945f40e49e44e27b6e52d7985d155b08e271f1d6314",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c2bd299ab9d4353d4babd661dd089824d5d67aa9de17987149a11253e5fa8920",
            "container_config": {
                "Hostname": "c2bd299ab9d4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12996f0ca34886f90e59c945f40e49e44e27b6e52d7985d155b08e271f1d6314",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:33:04.346419759Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:13:45.666164062Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ee19b92d5cb1bf143947fe2e2481cb3b353d42e1e54888a8ba48c03dd4155f2 in / "
                },
                {
                    "created": "2018-07-06T14:13:45.901173503Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-06T14:45:09.216744395Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-06T14:45:09.941574136Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:31:10.067462042Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:32:54.607440104Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:33:02.709803937Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:33:03.034341627Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:33:04.018765345Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:33:04.346419759Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:717b092b8c86356cf976d9c83fa6f0ea67f2bf3148a5bbb7e02026a5d3245e68",
                    "sha256:6b2edeabe17e3c818efe9117d2b39c77846292012f081da8b0bf5ca4a2c9c09b",
                    "sha256:db88a4fd1709661a218a704e33978944c8fb38abd9a4621201b06367b84c14da",
                    "sha256:83d67278e81e9118d7cf544426fd305e6ced029d3fbec5430716a1a238d8006e",
                    "sha256:504764e3b4c6f8a563f38a8140a6803cae566d7f34ca2322739e6c8703dacdf2"
                ]
            }
        },
        "1.11rc2-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb1c1f9bf7642fc12299efb6ccfe1d879c0611e707f0967da76d8a1b95c0b5ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "4772e051d72f01754aecfc21e619ee6cc72269286423ca7a2747f9c18d887b4a",
            "container_config": {
                "Hostname": "4772e051d72f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:eb1c1f9bf7642fc12299efb6ccfe1d879c0611e707f0967da76d8a1b95c0b5ab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:30:27.395012404Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T14:14:06.165546783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:25f61d70254b9807a40cd3e8d820f6a5ec0e1e596de04e325f6a33810393e95a in / "
                },
                {
                    "created": "2018-07-06T14:14:06.393355914Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-12T21:19:43.185490691Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-12T21:19:44.025652023Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T01:28:35.032939441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:25.040065605Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:30:25.818600192Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:26.118280431Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:30:27.087133477Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:30:27.395012404Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:73046094a9b835e443af1a9d736fcfc11a994107500e474d0abf399499ed280c",
                    "sha256:8b34f02ac284b4ba6f173647edbc72240456b6962d57da0e2fadea8511f9265a",
                    "sha256:5222eeb73419749e8b9488992fdae1b461f29cf42e82462dfd2c5538443a8ba6",
                    "sha256:879c2fefc5605bc901ce3a707b3bbd47bd7a3ccb226254f5f03ea1c7422aeecf",
                    "sha256:e18143c20240873492b62da76e108e45ec8475d8288a3986cbe7d985282731bc"
                ]
            }
        },
        "1.11rc2-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d03ea04e460a6994ad774b2ee717578370d65aafc771a0e8f2cd0ff030061695",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c27f307fcc47a679ac17dadad803f333eb7625c37dcbd41caa239916582c3132",
            "container_config": {
                "Hostname": "c27f307fcc47",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d03ea04e460a6994ad774b2ee717578370d65aafc771a0e8f2cd0ff030061695",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T01:27:40.413986823Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T00:27:24.046669557Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:370028dca6e8ca9ed228549d52231cf8139515cc3a14c00aaed75a60b679775f in / "
                },
                {
                    "created": "2018-07-17T00:27:24.548161429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T03:12:45.067807853Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T03:13:02.154515165Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T03:13:48.075788029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T12:30:04.57785213Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T01:27:07.615174332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:25.038422973Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T01:27:38.990891541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:39.266021127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T01:27:40.130941627Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T01:27:40.413986823Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b10514a95bec77489a57d6e2fbfddb7ddfdb643907470ce5de0f1b05c603706",
                    "sha256:719d45669b35360e3ca0d53d159c42ca9985eb925a6b28ac38d0ded39a1314e8",
                    "sha256:ce6466f43b110e66d7d3a72600262a1f1b015d9a64aad5f133f081868d4825fc",
                    "sha256:fa0c3f992cbd10a0569ed212414b50f1c35d97521f7e4a9e55a9abcf47ca77e2",
                    "sha256:920961b94eb367eb39736364ebd3197098b46ca7a10476b1df052ee01a6c10b3",
                    "sha256:9a46d149ffec20a47667ec3d76d6a1852eb50230be9cd8f56addd6cd54919d00",
                    "sha256:4cd4a4de8ed0e193eaa2ab21554e4503ed636b537b2b4f41465c44b4e709274d"
                ]
            }
        },
        "1.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:771c04ae93cb4b3a4d8d3503e06340ec5d2b74760c114d419610337085052ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "468dfa2f043e0cef6b29c5665b7abd818c74a3528c454fa25bbf2bef00f4d1e3",
            "container_config": {
                "Hostname": "468dfa2f043e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:771c04ae93cb4b3a4d8d3503e06340ec5d2b74760c114d419610337085052ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:27:24.959319595Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:20:38.786278773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5ec219cbfc4e0c31e7df48cc51abd9a5b92754e15403b2ab726e25042041680 in / "
                },
                {
                    "created": "2020-02-01T17:20:39.084113089Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T00:18:59.614817188Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T00:19:06.436498665Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-02T00:19:27.612049611Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:05:28.903355586Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T01:27:12.883110601Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:23.419050968Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:27:23.838760059Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:24.006611831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:24.755681503Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:27:24.959319595Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce8168f123378f7e04b085c9672717013d1d28b2aa726361bb132c1c64fe76ac",
                    "sha256:faac394a1ad320e6123d491e976781da28195672dbbe10783f79ecaf2d302f38",
                    "sha256:bdca38f94ff0602333c034890771efceb615d5605ad3f643184780d243641e44",
                    "sha256:5c813a85f7f0c2271b79827109fcfbb20088a6259afced3be34d7c6587dfe5f3",
                    "sha256:8378cd889737997f02c6f9b9b2558ff73091a468cfbee40e325f061da4094494",
                    "sha256:709502c58bd49671eb8e46157e7e302b991219d93db6fdf16775819caf562a03",
                    "sha256:2b91982b1a06f8b66b2c5d7fb11ee6dd8c867b2c301cfb5b415ecc28f38a1f94"
                ]
            }
        },
        "1.12-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75c5b25f8e605955e278315e8a7fdb625232aa055309f94efb57aa0e6b363691",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c004728d7ca82faaa30497cee86e9b4200a211a4203faec658da93ffff3c5552",
            "container_config": {
                "Hostname": "c004728d7ca8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75c5b25f8e605955e278315e8a7fdb625232aa055309f94efb57aa0e6b363691",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:30:04.543101865Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:19:37.02673981Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e69d441d729412d24675dcd33e04580885df99981cec43de8c9b24015313ff8e in / "
                },
                {
                    "created": "2020-01-18T01:19:37.187497623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T02:06:05.128472071Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T02:06:05.858153231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:27:48.31410174Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:30:02.905312413Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:30:03.390650504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:30:03.564782941Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:30:04.318614973Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:30:04.543101865Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5216338b40a7b96416b8b9858974bbe4acc3096ee60acbc4dfb1ee02aecceb10",
                    "sha256:45182158f5da0392151d293ad2f09a1ed006db7d5d39f9873ae09d6ec3862a0f",
                    "sha256:12c4e92b2d4850b87124fb9692ae9be902ac941ef59c71ccd77a1c9d417be9f4",
                    "sha256:3957f7032fc4c2a6075dc25feda5ad114be7b9fa190f4149b53148af8e271384",
                    "sha256:7306dca01e79be53ff856ca1f2754a7f15ddc65d490ea38eaed6e193cb2afbf4"
                ]
            }
        },
        "1.12-alpine3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3cbe0d7d637209be16f54fe4b6f4c440f263d692a4be3862404600b1b4e27596",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "db30cdabcd74771b61964b6fe22fce366e6196acc8205bfb5f310864b17ff1c5",
            "container_config": {
                "Hostname": "db30cdabcd74",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3cbe0d7d637209be16f54fe4b6f4c440f263d692a4be3862404600b1b4e27596",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:32:33.706459206Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:53:06.551172402Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d48cac34fac385cbc1de6adfdd88300f76f9bbe346cd17e64fd834d042a98326 in / "
                },
                {
                    "created": "2020-01-23T16:53:06.686519038Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T18:41:28.524119879Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T18:41:29.907084916Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:30:17.869941607Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:32:32.098304697Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:32:32.562551587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:32:32.724038145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:32:33.514893224Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:32:33.706459206Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:531743b7098cb2aaf615641007a129173f63ed86ca32fe7b5a246a1c47286028",
                    "sha256:63d3c4a13e1f81e03eb0c2dc86901a60ee28402c2f83d190e118b3ae41827ff4",
                    "sha256:9f999fe78ac49843b2777bb7d92848525170059428982fefede4d427e3eafb67",
                    "sha256:2344e37943843d51f8d4e57b3017b86356503e479b8ad6e0509a2b55ddcf0c20",
                    "sha256:b9bc74350ecc9f786313c851bf79b4a52e58af87e3b8719f8659141d79988ed3"
                ]
            }
        },
        "1.12-alpine3.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75c5b25f8e605955e278315e8a7fdb625232aa055309f94efb57aa0e6b363691",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c004728d7ca82faaa30497cee86e9b4200a211a4203faec658da93ffff3c5552",
            "container_config": {
                "Hostname": "c004728d7ca8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:75c5b25f8e605955e278315e8a7fdb625232aa055309f94efb57aa0e6b363691",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:30:04.543101865Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:19:37.02673981Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e69d441d729412d24675dcd33e04580885df99981cec43de8c9b24015313ff8e in / "
                },
                {
                    "created": "2020-01-18T01:19:37.187497623Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T02:06:05.128472071Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T02:06:05.858153231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T01:27:48.31410174Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:30:02.905312413Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:30:03.390650504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:30:03.564782941Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:30:04.318614973Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:30:04.543101865Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5216338b40a7b96416b8b9858974bbe4acc3096ee60acbc4dfb1ee02aecceb10",
                    "sha256:45182158f5da0392151d293ad2f09a1ed006db7d5d39f9873ae09d6ec3862a0f",
                    "sha256:12c4e92b2d4850b87124fb9692ae9be902ac941ef59c71ccd77a1c9d417be9f4",
                    "sha256:3957f7032fc4c2a6075dc25feda5ad114be7b9fa190f4149b53148af8e271384",
                    "sha256:7306dca01e79be53ff856ca1f2754a7f15ddc65d490ea38eaed6e193cb2afbf4"
                ]
            }
        },
        "1.12-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d8b7152abdef0badf1e71f14410a290aade8ae3c5b53071ed39dacc0669fa821",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "afdf0bf14de64429c3e86722b4c2da7ef861b7ae43b9a70980c370ea2a09615b",
            "container_config": {
                "Hostname": "afdf0bf14de6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d8b7152abdef0badf1e71f14410a290aade8ae3c5b53071ed39dacc0669fa821",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-05T22:28:09.103384044Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:25:52.319576809Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:28:07.593825298Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-05T22:28:08.058266056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:28:08.222206835Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:28:08.906980389Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-05T22:28:09.103384044Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:9c58e2d5a661c191841736cad4f1972284fd628a233dc16626e495d4965222f2",
                    "sha256:a4261d8c3c47019f7061fb9bc55affa7f2a7b41064e5c0d2d2e356efae38eb1f"
                ]
            }
        },
        "1.12-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:771c04ae93cb4b3a4d8d3503e06340ec5d2b74760c114d419610337085052ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "468dfa2f043e0cef6b29c5665b7abd818c74a3528c454fa25bbf2bef00f4d1e3",
            "container_config": {
                "Hostname": "468dfa2f043e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:771c04ae93cb4b3a4d8d3503e06340ec5d2b74760c114d419610337085052ff3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:27:24.959319595Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:20:38.786278773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5ec219cbfc4e0c31e7df48cc51abd9a5b92754e15403b2ab726e25042041680 in / "
                },
                {
                    "created": "2020-02-01T17:20:39.084113089Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T00:18:59.614817188Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T00:19:06.436498665Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-02T00:19:27.612049611Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:05:28.903355586Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T01:27:12.883110601Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:23.419050968Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:27:23.838760059Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:24.006611831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:24.755681503Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:27:24.959319595Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce8168f123378f7e04b085c9672717013d1d28b2aa726361bb132c1c64fe76ac",
                    "sha256:faac394a1ad320e6123d491e976781da28195672dbbe10783f79ecaf2d302f38",
                    "sha256:bdca38f94ff0602333c034890771efceb615d5605ad3f643184780d243641e44",
                    "sha256:5c813a85f7f0c2271b79827109fcfbb20088a6259afced3be34d7c6587dfe5f3",
                    "sha256:8378cd889737997f02c6f9b9b2558ff73091a468cfbee40e325f061da4094494",
                    "sha256:709502c58bd49671eb8e46157e7e302b991219d93db6fdf16775819caf562a03",
                    "sha256:2b91982b1a06f8b66b2c5d7fb11ee6dd8c867b2c301cfb5b415ecc28f38a1f94"
                ]
            }
        },
        "1.12-rc": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b64f94d17a447c6edbf14038ac41f4fd83b2c6a37cdbb558fe27085f567edf7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e6edbd7d7c291f90171862d0d085c9e8dff7525951cce5f4820fd36be8f0a3ff",
            "container_config": {
                "Hostname": "e6edbd7d7c29",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b64f94d17a447c6edbf14038ac41f4fd83b2c6a37cdbb558fe27085f567edf7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-12T21:19:44.395236084Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T03:30:01.714540068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fec879fdca802d6920b8981b409b19ded75aff693eaaba1ba4cf5ecb7594fdb in / "
                },
                {
                    "created": "2019-02-06T03:30:02.095682729Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T05:51:03.607050513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T05:51:14.391936075Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T05:51:50.706559429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:52:35.276902308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-12T21:19:32.515733416Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:19:42.871760758Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e5a03e1f2e065b17b2fbbd3429f18a6f51fe2848e0120586652b9f14ada72c9a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62126e4ca72e2fea9856fe0ec1a0f28cf1b385fb362d32cb56413c39cab318f8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='654b90f75902d501e2201a7b438965132fd1242a102f54529e9ff7dbbdf0d4bb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1d8615576655decbadeefcfaa6d5144b370dbea67fd4b426f58b573deedbd918' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='cb6c7ba83ee8211da1d13d6db148adfdd6b86a790d3974d0c5702d229ca1da40' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='40208d21fca8469c20054e67250f288ab62d68794690aa2c0324d67018ba99c2' ;; \t\t*) goRelArch='src'; goRelSha256='ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-12T21:19:43.326551497Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:19:43.498757735Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:19:44.19565467Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-12T21:19:44.395236084Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13d5529fd232cacdd8cd561148560e0bf5d65dbc1149faf0c68240985607c303",
                    "sha256:abc3250a6c7ff22a6a366d9c175033ef0b2859f9d03676410c2f21d0fe568da4",
                    "sha256:578414b395b98d02c5f284e83c8db080afcbbde8012478054af22df2edb9336d",
                    "sha256:6257fa9f9597f43a167036d7bf748c5872c38803fa09e2493e119e512c6ac949",
                    "sha256:77b4b6493272fcf3797f846518defabab8fc232e67752f42b5cc42d48542ce19",
                    "sha256:4ace76519c0abf51da59c78f25980eb5934d0fec9fa303fb04cbbf33988a7215",
                    "sha256:1054a1d2b57e6e520cfa2f22d649bb1bff7f200a2a901674b9adc3b7b80249a9"
                ]
            }
        },
        "1.12-rc-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7557f1066c88784a3e7d8c3aaaa6422ea128474ee635aaf15eb91f4cc7c0e7a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ed1d0378bba8e9a2a178399680ff1f21133a309736dc279c88942d41b5d8c52a",
            "container_config": {
                "Hostname": "ed1d0378bba8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7557f1066c88784a3e7d8c3aaaa6422ea128474ee635aaf15eb91f4cc7c0e7a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-12T21:22:56.234859028Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:52.585366638Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a1fc9351afe35698918545b2d466d9805c2e8afcec52f916785ee65bbafeced in / "
                },
                {
                    "created": "2019-01-30T22:19:52.734509838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:19:38.154965526Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-05T20:19:38.870907345Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-12T21:19:47.547929025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:22:54.008047467Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-12T21:22:54.858658169Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:22:55.031687013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:22:55.967411438Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-12T21:22:56.234859028Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503e53e365f34399c4d58d8f4e23c161106cfbce4400e3d0a0357967bad69390",
                    "sha256:c1df871adf385af8f0e2e2f4beb1e7b31b5c6e4a3aa82b2dae76adc31e384dcf",
                    "sha256:2b7fb36704d4d78bf2abb1ea6ed984dcc23604ae8fca4ec9c50dcfe4b411514f",
                    "sha256:89fd3e367f8540f92334438c4e40b339d857b5507cae989c441a31e0e584e4ad",
                    "sha256:df3fd4e4974253eabc7eaaad16d49eca1ebf84936209f23315541f8ad1005ec8"
                ]
            }
        },
        "1.12-rc-alpine3.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:495f9b12ba83e6a93e1ef690e168670b4403e741af31f3d6ba7cef342c13d2ef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4a48d7eede5730502899b8dd2873995ecb36c0622216bb4bfbe2a93cb632df69",
            "container_config": {
                "Hostname": "4a48d7eede57",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:495f9b12ba83e6a93e1ef690e168670b4403e741af31f3d6ba7cef342c13d2ef",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-12T21:25:42.083668108Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:46.858068773Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91fb97ea3549e52e7b6e22b93a6736cf915c756f3d13348406d8ad5f1a872680 in / "
                },
                {
                    "created": "2019-01-30T22:19:47.011395921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T22:41:04.0365714Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-01-30T22:41:05.092248759Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-12T21:23:01.827650461Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:25:40.359368575Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-12T21:25:40.860962962Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:25:41.034519549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:25:41.78649199Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-12T21:25:42.083668108Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:767f936afb51c8a3ad9a96592a4be092048bb70f2ca410028a0b3f64b826acbb",
                    "sha256:6a365d07810ac08ed35567c641a63fc13f710f3db2165664d47240d0d3d1892f",
                    "sha256:bf8c13944a7828d5dfe569fdb621051752ff480be8b8cf70e0679a21fd04c711",
                    "sha256:aa62277e7138adf179d0112542fcf0eb492c85acc623e85422b2b4f389f3553e",
                    "sha256:dff713b44db100c8e276cc7f1446cf0f38859e32b7d789972f953156f4287472"
                ]
            }
        },
        "1.12-rc-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7557f1066c88784a3e7d8c3aaaa6422ea128474ee635aaf15eb91f4cc7c0e7a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ed1d0378bba8e9a2a178399680ff1f21133a309736dc279c88942d41b5d8c52a",
            "container_config": {
                "Hostname": "ed1d0378bba8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7557f1066c88784a3e7d8c3aaaa6422ea128474ee635aaf15eb91f4cc7c0e7a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-12T21:22:56.234859028Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-30T22:19:52.585366638Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a1fc9351afe35698918545b2d466d9805c2e8afcec52f916785ee65bbafeced in / "
                },
                {
                    "created": "2019-01-30T22:19:52.734509838Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T20:19:38.154965526Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-05T20:19:38.870907345Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-12T21:19:47.547929025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:22:54.008047467Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-12T21:22:54.858658169Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:22:55.031687013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:22:55.967411438Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-12T21:22:56.234859028Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:503e53e365f34399c4d58d8f4e23c161106cfbce4400e3d0a0357967bad69390",
                    "sha256:c1df871adf385af8f0e2e2f4beb1e7b31b5c6e4a3aa82b2dae76adc31e384dcf",
                    "sha256:2b7fb36704d4d78bf2abb1ea6ed984dcc23604ae8fca4ec9c50dcfe4b411514f",
                    "sha256:89fd3e367f8540f92334438c4e40b339d857b5507cae989c441a31e0e584e4ad",
                    "sha256:df3fd4e4974253eabc7eaaad16d49eca1ebf84936209f23315541f8ad1005ec8"
                ]
            }
        },
        "1.12-rc-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b64f94d17a447c6edbf14038ac41f4fd83b2c6a37cdbb558fe27085f567edf7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e6edbd7d7c291f90171862d0d085c9e8dff7525951cce5f4820fd36be8f0a3ff",
            "container_config": {
                "Hostname": "e6edbd7d7c29",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1b64f94d17a447c6edbf14038ac41f4fd83b2c6a37cdbb558fe27085f567edf7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-12T21:19:44.395236084Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T03:30:01.714540068Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fec879fdca802d6920b8981b409b19ded75aff693eaaba1ba4cf5ecb7594fdb in / "
                },
                {
                    "created": "2019-02-06T03:30:02.095682729Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T05:51:03.607050513Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T05:51:14.391936075Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T05:51:50.706559429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T12:52:35.276902308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-12T21:19:32.515733416Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:19:42.871760758Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e5a03e1f2e065b17b2fbbd3429f18a6f51fe2848e0120586652b9f14ada72c9a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62126e4ca72e2fea9856fe0ec1a0f28cf1b385fb362d32cb56413c39cab318f8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='654b90f75902d501e2201a7b438965132fd1242a102f54529e9ff7dbbdf0d4bb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1d8615576655decbadeefcfaa6d5144b370dbea67fd4b426f58b573deedbd918' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='cb6c7ba83ee8211da1d13d6db148adfdd6b86a790d3974d0c5702d229ca1da40' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='40208d21fca8469c20054e67250f288ab62d68794690aa2c0324d67018ba99c2' ;; \t\t*) goRelArch='src'; goRelSha256='ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-12T21:19:43.326551497Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:19:43.498757735Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-12T21:19:44.19565467Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-12T21:19:44.395236084Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13d5529fd232cacdd8cd561148560e0bf5d65dbc1149faf0c68240985607c303",
                    "sha256:abc3250a6c7ff22a6a366d9c175033ef0b2859f9d03676410c2f21d0fe568da4",
                    "sha256:578414b395b98d02c5f284e83c8db080afcbbde8012478054af22df2edb9336d",
                    "sha256:6257fa9f9597f43a167036d7bf748c5872c38803fa09e2493e119e512c6ac949",
                    "sha256:77b4b6493272fcf3797f846518defabab8fc232e67752f42b5cc42d48542ce19",
                    "sha256:4ace76519c0abf51da59c78f25980eb5934d0fec9fa303fb04cbbf33988a7215",
                    "sha256:1054a1d2b57e6e520cfa2f22d649bb1bff7f200a2a901674b9adc3b7b80249a9"
                ]
            }
        },
        "1.12-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:136df384fc7c0af8e3dc5c70cb778d8ed7a1b73f17b7a0742785cb40087a3a3d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f354d7074c6b21b1a532648bd5542eddaea9ddfd5a6616707bbb72dfdbba9f60",
            "container_config": {
                "Hostname": "f354d7074c6b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:136df384fc7c0af8e3dc5c70cb778d8ed7a1b73f17b7a0742785cb40087a3a3d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T01:27:42.595018002Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T17:23:41.468764783Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8a9218592e5d736a05a1821a6dd38b205cdd8197c26a5aa33f6fc22fbfaa1c4d in / "
                },
                {
                    "created": "2020-02-01T17:23:41.779347941Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-02T00:33:57.472084922Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T00:34:02.575926722Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-02T00:34:28.382621018Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-02T14:06:20.534883807Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T01:27:30.51562968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:40.92655091Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T01:27:41.359527338Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:41.542617449Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T01:27:42.399409471Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T01:27:42.595018002Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7948c3e5790c6df89fe48041fabd8f1c576d4bb7c869183e03b9e3873a5f33d9",
                    "sha256:4d1ab3827f6b69f4e55bd69cc8abe1dde7d7a7f61bd6e32c665f12e0a8efd1c9",
                    "sha256:69dfa7bd7a92b8ba12a617ff56f22533223007c5ba6b3a191c91b852320f012e",
                    "sha256:01727b1a72df8ba02293a98ab365bb4e8015aefadd661aaf7e6aa76567b706b9",
                    "sha256:48d3a6ebc741bcacc9507d9e7a5a6b7d5242c13e57ef487c8c30635420328105",
                    "sha256:3912efddd08968a51d617b60409e318c53e22be083f1a0ff5045582a43863ae9",
                    "sha256:ba77e235042e904bd622b47536038640e61d8c02a9e6463eace15a1614b78a3e"
                ]
            }
        },
        "1.12.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1a68b04ea4f64fa18199224fda40575d38aeda50ce331d7bf68ecc2ec09a85d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ea266d87e68b3449a1030001e1205cc662129ccbe9dda457ae594ea4ec702f54",
            "container_config": {
                "Hostname": "ea266d87e68b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1a68b04ea4f64fa18199224fda40575d38aeda50ce331d7bf68ecc2ec09a85d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T07:11:45.811376621Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-04T23:22:10.053695191Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4bdc12117ee95eaa94b89f258164dd42f9828c7c5c4332a608707187ccb470a in / "
                },
                {
                    "created": "2019-03-04T23:22:10.311230167Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T02:35:21.514620674Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T02:35:27.30755495Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T02:35:52.15741798Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T07:11:30.0906734Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T07:11:30.512334294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:11:44.279202868Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='750a07fef8579ae4839458701f4df690e0b20b8bcce33b437e4df89c451b6f13' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ea0636f055763d309437461b5817452419411eb1f598dc7f35999fae05bcb79a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b7bf59c2f1ac48eb587817a2a30b02168ecc99635fc19b6e677cce01406e3fac' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3ac1db65a6fa5c13f424b53ee181755429df0c33775733cede1e0d540440fd7b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='5be21e7035efa4a270802ea04fb104dc7a54e3492641ae44632170b93166fb68' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c0aef360b99ebb4b834db8b5b22777b73a11fa37b382121b24bf587c40603915' ;; \t\t*) goRelArch='src'; goRelSha256='09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T07:11:44.707802974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:11:44.899445854Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:11:45.613423033Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T07:11:45.811376621Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bb0785f2eee7f27e4c6d9ac3e7f05838e243d22feb827b55d70762f1eb4781a",
                    "sha256:a327787b3c7332a341b8c67ebd4541a6a353ef1cc4b9f4349ba6220feec47adc",
                    "sha256:f3a38968d0759ad29738fa74cb32c92b8520fee9670fd666c0087875b820ecbb",
                    "sha256:3443d6cf0f1f55d5b8ff780140cd047ec224c0b6e93810d4a229a8f0ccc9b36d",
                    "sha256:05edf1e1ffd702e7206e24f79f3126cf7cc894ab826003283bc4d0121ad9304f",
                    "sha256:87a8f75c90a28fb342b00acbeb6e65b78e3ab0046aa319809f6183133547753a",
                    "sha256:ba2ebd02f92deac0cace2ba0eeeed6e69ae4ef6f34d83948df21aa93f2ac54e2"
                ]
            }
        },
        "1.12.0-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81bb082a4ff69bdf5944657c66d52a26a0d4d4f8a012ddc5a2703feba2f44a23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a4ab8d0e22e9ba83188531767edfbeae1a83a828f1c26955e9f4eb3bf43f8f4e",
            "container_config": {
                "Hostname": "a4ab8d0e22e9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81bb082a4ff69bdf5944657c66d52a26a0d4d4f8a012ddc5a2703feba2f44a23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-07T23:23:04.608596637Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-07T23:20:04.546678549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:23:01.657074311Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-07T23:23:03.213504789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:23:03.498271313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:23:04.25187156Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-07T23:23:04.608596637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:dbf140e0475c310090a3f6bf0bce07bcf45be0adabeef70f8a3f9b94d4b50d1f",
                    "sha256:a124fdb5e3b1ff71b000a5ebbeca45ac181107408704f551b9d589ffbde631b8"
                ]
            }
        },
        "1.12.0-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81bb082a4ff69bdf5944657c66d52a26a0d4d4f8a012ddc5a2703feba2f44a23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a4ab8d0e22e9ba83188531767edfbeae1a83a828f1c26955e9f4eb3bf43f8f4e",
            "container_config": {
                "Hostname": "a4ab8d0e22e9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81bb082a4ff69bdf5944657c66d52a26a0d4d4f8a012ddc5a2703feba2f44a23",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-07T23:23:04.608596637Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-07T23:20:04.546678549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:23:01.657074311Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-07T23:23:03.213504789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:23:03.498271313Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:23:04.25187156Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-07T23:23:04.608596637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:dbf140e0475c310090a3f6bf0bce07bcf45be0adabeef70f8a3f9b94d4b50d1f",
                    "sha256:a124fdb5e3b1ff71b000a5ebbeca45ac181107408704f551b9d589ffbde631b8"
                ]
            }
        },
        "1.12.0-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1a68b04ea4f64fa18199224fda40575d38aeda50ce331d7bf68ecc2ec09a85d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ea266d87e68b3449a1030001e1205cc662129ccbe9dda457ae594ea4ec702f54",
            "container_config": {
                "Hostname": "ea266d87e68b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1a68b04ea4f64fa18199224fda40575d38aeda50ce331d7bf68ecc2ec09a85d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T07:11:45.811376621Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-04T23:22:10.053695191Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4bdc12117ee95eaa94b89f258164dd42f9828c7c5c4332a608707187ccb470a in / "
                },
                {
                    "created": "2019-03-04T23:22:10.311230167Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T02:35:21.514620674Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T02:35:27.30755495Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T02:35:52.15741798Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T07:11:30.0906734Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T07:11:30.512334294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:11:44.279202868Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='750a07fef8579ae4839458701f4df690e0b20b8bcce33b437e4df89c451b6f13' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ea0636f055763d309437461b5817452419411eb1f598dc7f35999fae05bcb79a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b7bf59c2f1ac48eb587817a2a30b02168ecc99635fc19b6e677cce01406e3fac' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3ac1db65a6fa5c13f424b53ee181755429df0c33775733cede1e0d540440fd7b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='5be21e7035efa4a270802ea04fb104dc7a54e3492641ae44632170b93166fb68' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c0aef360b99ebb4b834db8b5b22777b73a11fa37b382121b24bf587c40603915' ;; \t\t*) goRelArch='src'; goRelSha256='09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T07:11:44.707802974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:11:44.899445854Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T07:11:45.613423033Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T07:11:45.811376621Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bb0785f2eee7f27e4c6d9ac3e7f05838e243d22feb827b55d70762f1eb4781a",
                    "sha256:a327787b3c7332a341b8c67ebd4541a6a353ef1cc4b9f4349ba6220feec47adc",
                    "sha256:f3a38968d0759ad29738fa74cb32c92b8520fee9670fd666c0087875b820ecbb",
                    "sha256:3443d6cf0f1f55d5b8ff780140cd047ec224c0b6e93810d4a229a8f0ccc9b36d",
                    "sha256:05edf1e1ffd702e7206e24f79f3126cf7cc894ab826003283bc4d0121ad9304f",
                    "sha256:87a8f75c90a28fb342b00acbeb6e65b78e3ab0046aa319809f6183133547753a",
                    "sha256:ba2ebd02f92deac0cace2ba0eeeed6e69ae4ef6f34d83948df21aa93f2ac54e2"
                ]
            }
        },
        "1.12.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d07d2502dd5978354630401185f211b6ccdf18ff238a7c8b1edd7be7b7a578fe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1193d43d2ed6390b3c30152d8c5ba2594d4bb6dcdf12eb31ef1243e7124a5bf0",
            "container_config": {
                "Hostname": "1193d43d2ed6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d07d2502dd5978354630401185f211b6ccdf18ff238a7c8b1edd7be7b7a578fe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T04:40:59.136612521Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:38.067450636Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:40:56.906081059Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2a3fdabf665496a0db5f41ec6af7a9b15a49fbe71a85a50ca38b1f13a103aeec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ceac33f07f8fdbccd6c6f7339db33479e1be8c206e67458ba259470fe796dbf2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='10dba44cf95c7aa7abc3c72610c12ebcaf7cad6eed761d5ad92736ca3bc0d547' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='af74b6572dd0c133e5de121928616eab60a6252c66f6d9b15007c82207416a2c' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e1258c81f420c88339abf40888423904c0023497b4e9bbffac9ee484597a57d3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a9b8f49be6b2083e2586c2ce8a2a86d5dbf47cca64ac6195546a81c9927f9513' ;; \t\t*) goRelArch='src'; goRelSha256='0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T04:40:57.523074927Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:40:57.751622727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:40:58.855292623Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T04:40:59.136612521Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:9ccbb4ca29f82670e9939fa5848cb7c92a6f26d457768d965604bdedf9699a38",
                    "sha256:49c92637f9e900719aefbd45a9bbdd1d3d9b9d549f724d197c16b6e9aabaadcd"
                ]
            }
        },
        "1.12.1-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:196c6786724f13289ec30d32c9a96efaf4ad63b5c67d6e7d4932aa7204ee1fc2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "858db173f02513c846026c6ded1fd7e0533cf3c21312ee9836c418f3e9f73e4e",
            "container_config": {
                "Hostname": "858db173f025",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:196c6786724f13289ec30d32c9a96efaf4ad63b5c67d6e7d4932aa7204ee1fc2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-15T20:27:42.644297077Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-15T20:25:06.611250946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:27:39.684412005Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-15T20:27:40.483045094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:27:40.870313386Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:27:42.380262631Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-15T20:27:42.644297077Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:ee78d2c39c3a5a0717f9d06df5aa4b3ebba30ed9a12c0b5504504bee3494785a",
                    "sha256:5f4a9b53c5fe71c142efc57cab534c35e08366addeedcec6d29b65e3ec667212"
                ]
            }
        },
        "1.12.1-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:196c6786724f13289ec30d32c9a96efaf4ad63b5c67d6e7d4932aa7204ee1fc2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "858db173f02513c846026c6ded1fd7e0533cf3c21312ee9836c418f3e9f73e4e",
            "container_config": {
                "Hostname": "858db173f025",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:196c6786724f13289ec30d32c9a96efaf4ad63b5c67d6e7d4932aa7204ee1fc2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-15T20:27:42.644297077Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-07T22:19:40.113750514Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:88875982b0512a9d0ba001bfea19497ae9a9442c257b19c61bffc56e7201b0c3 in / "
                },
                {
                    "created": "2019-03-07T22:19:40.247110971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-07T23:17:18.73991222Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-07T23:17:19.506934389Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-15T20:25:06.611250946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:27:39.684412005Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-15T20:27:40.483045094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:27:40.870313386Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-15T20:27:42.380262631Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-15T20:27:42.644297077Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bcf2f368fe234217249e00ad9d762d8f1a3156d60c442ed92079fa5b120634a1",
                    "sha256:4afd4ab746df28ea1d4c04ba5c4dcb675e37ab2ee8cb1fba0dbac7293ae9edcc",
                    "sha256:41a6c6e6c287b666aa90c0ca2947085b2a6340e3ea26ad35b6877bb34f876e79",
                    "sha256:ee78d2c39c3a5a0717f9d06df5aa4b3ebba30ed9a12c0b5504504bee3494785a",
                    "sha256:5f4a9b53c5fe71c142efc57cab534c35e08366addeedcec6d29b65e3ec667212"
                ]
            }
        },
        "1.12.1-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d07d2502dd5978354630401185f211b6ccdf18ff238a7c8b1edd7be7b7a578fe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1193d43d2ed6390b3c30152d8c5ba2594d4bb6dcdf12eb31ef1243e7124a5bf0",
            "container_config": {
                "Hostname": "1193d43d2ed6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d07d2502dd5978354630401185f211b6ccdf18ff238a7c8b1edd7be7b7a578fe",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T04:40:59.136612521Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-26T22:41:12.259614565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:843b8a2a9df1a07305ff3d02484d4be7f769057c6d2e311d52d59e00deb917c6 in / "
                },
                {
                    "created": "2019-03-26T22:41:12.5277452Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-26T23:26:30.916493288Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-26T23:26:40.715971014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-26T23:27:04.653189308Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:37.694896032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T04:40:38.067450636Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:40:56.906081059Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2a3fdabf665496a0db5f41ec6af7a9b15a49fbe71a85a50ca38b1f13a103aeec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ceac33f07f8fdbccd6c6f7339db33479e1be8c206e67458ba259470fe796dbf2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='10dba44cf95c7aa7abc3c72610c12ebcaf7cad6eed761d5ad92736ca3bc0d547' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='af74b6572dd0c133e5de121928616eab60a6252c66f6d9b15007c82207416a2c' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e1258c81f420c88339abf40888423904c0023497b4e9bbffac9ee484597a57d3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a9b8f49be6b2083e2586c2ce8a2a86d5dbf47cca64ac6195546a81c9927f9513' ;; \t\t*) goRelArch='src'; goRelSha256='0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T04:40:57.523074927Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:40:57.751622727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T04:40:58.855292623Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T04:40:59.136612521Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fbb641a8b94349e89886f65d79928e4673530e2a2b4d33c2c95e0426713f78e4",
                    "sha256:604829a174eb966a2102e2e68c7669e1fe56721e8d7ea27f9a286aa33be8be20",
                    "sha256:12cb127eee44270330891b1b610ce34e81f53a91a22e3a7f53f0632391d99892",
                    "sha256:b17cc31e431beb2f39988dff23d04f85ba4b446fc0a13f304774852fa3c87d85",
                    "sha256:f4907c4e3f89444cd9335d15d11147407cac77c8233d621c979c95227df103a4",
                    "sha256:9ccbb4ca29f82670e9939fa5848cb7c92a6f26d457768d965604bdedf9699a38",
                    "sha256:49c92637f9e900719aefbd45a9bbdd1d3d9b9d549f724d197c16b6e9aabaadcd"
                ]
            }
        },
        "1.12.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:041613af533ff1b94bed01f7b9de089aab040c5dd0a2b4ac2cc7ce5429ceabc2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56a2dd86a809ef306f5f262f38468d0a250dfee6d3aa46ef653176d08923491d",
            "container_config": {
                "Hostname": "56a2dd86a809",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:041613af533ff1b94bed01f7b9de089aab040c5dd0a2b4ac2cc7ce5429ceabc2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:59:10.981899905Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T23:21:51.123609274Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:770e381defc5e4a0ba5df52265a96494b9f5d94309234cb3f7bc6b00e1d18f9a in / "
                },
                {
                    "created": "2019-09-11T23:21:51.562946709Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:21:53.276836735Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:22:01.47430606Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:22:37.089716208Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-13T02:58:40.007482452Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-25T22:58:59.231236919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:09.44867039Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:59:09.861658456Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:10.028266057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:10.77377335Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:59:10.981899905Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78c1b9419976227e05be9d243b7fa583bea44a5258e52018b2af4cdfe23d148d",
                    "sha256:52dba9daa22c15d1ecd8f1d43d4240ef1bfb6056daaf9af7309f1b806ba4232d",
                    "sha256:9cae1895156d8f350cac4bd3b6611115f62ecb0726386c6d867df685ee66db47",
                    "sha256:ea1227feeccb7e5d339b94b42aef069eb582995e3fe85ed81be12726809155d8",
                    "sha256:5e28718a7d23e58d1cbe1bd5b2db738cefa23f8c02ce6538bbebcfd110e5a2ec",
                    "sha256:35a6af91fd1fdd5030fd9488d802c3ccca19d3230a2c3d8326a923bc4f0132b1",
                    "sha256:32d25ed0e3714ab181b00f255c0979c3bd710123c798e6272fc9c745ab78b3e3"
                ]
            }
        },
        "1.12.10-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7f8e12f565ae305661cf4a561b61cee0ef7aeb6fbc59d234737ced429398211a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d99d8ed34ff706edf123b6e2cfc9583651a08511128e440bd4449a28607254e8",
            "container_config": {
                "Hostname": "d99d8ed34ff7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7f8e12f565ae305661cf4a561b61cee0ef7aeb6fbc59d234737ced429398211a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T23:02:18.990282277Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:59:29.071001361Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:59:29.814558232Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:59:33.139704404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:02:17.257778672Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T23:02:17.794857041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:02:18.006548365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:02:18.77050749Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T23:02:18.990282277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:5ff34e0a6dec95d1f25943e98ca4e41b882004d422c93ed7a40f73bfe4ad9b97",
                    "sha256:c973660ff75c661b2e3a5d0d47dcafd2b8ae0022e0b714e2bcdf32e60169ef56",
                    "sha256:bbd26440225e27e87c69873c9e00ea2e0e3b6f6ce5b0a16617567f1e7ab1cc6a",
                    "sha256:9eeb11bb892c27a0dac92090266192d955c4cffa9e298e6c441ab65f881ec285"
                ]
            }
        },
        "1.12.10-alpine3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7f8e12f565ae305661cf4a561b61cee0ef7aeb6fbc59d234737ced429398211a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d99d8ed34ff706edf123b6e2cfc9583651a08511128e440bd4449a28607254e8",
            "container_config": {
                "Hostname": "d99d8ed34ff7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7f8e12f565ae305661cf4a561b61cee0ef7aeb6fbc59d234737ced429398211a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T23:02:18.990282277Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:59:29.071001361Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:59:29.814558232Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:59:33.139704404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:02:17.257778672Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T23:02:17.794857041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:02:18.006548365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:02:18.77050749Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T23:02:18.990282277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:5ff34e0a6dec95d1f25943e98ca4e41b882004d422c93ed7a40f73bfe4ad9b97",
                    "sha256:c973660ff75c661b2e3a5d0d47dcafd2b8ae0022e0b714e2bcdf32e60169ef56",
                    "sha256:bbd26440225e27e87c69873c9e00ea2e0e3b6f6ce5b0a16617567f1e7ab1cc6a",
                    "sha256:9eeb11bb892c27a0dac92090266192d955c4cffa9e298e6c441ab65f881ec285"
                ]
            }
        },
        "1.12.10-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19be3695cf078456993bbb16a55e09bec5e64b73f4fbb33d1dcc1db97f14a75a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "445e97b59d661d89567e65082708978fefc300ba3622bd664686db9ede3ae127",
            "container_config": {
                "Hostname": "445e97b59d66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19be3695cf078456993bbb16a55e09bec5e64b73f4fbb33d1dcc1db97f14a75a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T23:04:57.390216603Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T23:02:32.878978494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:04:55.858233271Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T23:04:56.294110153Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:04:56.481563016Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T23:04:57.200019179Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T23:04:57.390216603Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:9bfe20a2354eb2e025e412eb4d670bdb4ac48d02f68d54eb3fbb6b4e6a4793f6",
                    "sha256:dad76fbdc039403f50ebbe0047ef8cebf15778557c3a72dd895524a7050c2f3d"
                ]
            }
        },
        "1.12.10-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:041613af533ff1b94bed01f7b9de089aab040c5dd0a2b4ac2cc7ce5429ceabc2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56a2dd86a809ef306f5f262f38468d0a250dfee6d3aa46ef653176d08923491d",
            "container_config": {
                "Hostname": "56a2dd86a809",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:041613af533ff1b94bed01f7b9de089aab040c5dd0a2b4ac2cc7ce5429ceabc2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:59:10.981899905Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T23:21:51.123609274Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:770e381defc5e4a0ba5df52265a96494b9f5d94309234cb3f7bc6b00e1d18f9a in / "
                },
                {
                    "created": "2019-09-11T23:21:51.562946709Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:21:53.276836735Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:22:01.47430606Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:22:37.089716208Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-13T02:58:40.007482452Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-25T22:58:59.231236919Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:09.44867039Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:59:09.861658456Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:10.028266057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:10.77377335Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:59:10.981899905Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78c1b9419976227e05be9d243b7fa583bea44a5258e52018b2af4cdfe23d148d",
                    "sha256:52dba9daa22c15d1ecd8f1d43d4240ef1bfb6056daaf9af7309f1b806ba4232d",
                    "sha256:9cae1895156d8f350cac4bd3b6611115f62ecb0726386c6d867df685ee66db47",
                    "sha256:ea1227feeccb7e5d339b94b42aef069eb582995e3fe85ed81be12726809155d8",
                    "sha256:5e28718a7d23e58d1cbe1bd5b2db738cefa23f8c02ce6538bbebcfd110e5a2ec",
                    "sha256:35a6af91fd1fdd5030fd9488d802c3ccca19d3230a2c3d8326a923bc4f0132b1",
                    "sha256:32d25ed0e3714ab181b00f255c0979c3bd710123c798e6272fc9c745ab78b3e3"
                ]
            }
        },
        "1.12.10-stretch": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f885b82845803405a5b6e8daefdbfbe50fb6a7cf78c849bdd87efc8720bc6dbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "602e9ca7492c17eff885db0c6d6494fa3989bcc6cc51eadd13acd6492a9fd819",
            "container_config": {
                "Hostname": "602e9ca7492c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f885b82845803405a5b6e8daefdbfbe50fb6a7cf78c849bdd87efc8720bc6dbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:59:28.786920832Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T23:27:26.526904575Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9788b61de35351489958c8abe175960865790312ced56458caa94ccb0b9bb757 in / "
                },
                {
                    "created": "2019-09-11T23:27:26.803363994Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:34:50.119121945Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:34:56.229425591Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:35:30.581768979Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-13T02:59:12.158549066Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-25T22:59:14.906693289Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:27.018150465Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:59:27.522326824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:27.732105977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:59:28.582890406Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:59:28.786920832Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:55e6b89812f369277290d098c1e44c9e85a5ab0286c649f37e66e11074f8ebd1",
                    "sha256:26b1991f37bd5b798e1523f65d7f6aa6961b75515f465cf44123fa0ad3b8961b",
                    "sha256:8bacec4e34468110538ebf108ca8ec0d880a37018a55be91b9670b8e900c593a",
                    "sha256:2e669e0134f53839293f077f21dd124634f92aa5f7e3fd013c530779dd41d1c5",
                    "sha256:67ed26094b25d66ec80c3c55a69cbb894014690a91e5ee752c4384f73b83c96e",
                    "sha256:63e1070a2d42c28ce3782dcef4dcc8d31e846c5c2f9d1441a453d4edbf24120c",
                    "sha256:60550a87ed4941d15df275d83b2c3717dfab0eadbdaee471de4ec7a37300bbab"
                ]
            }
        },
        "1.12.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:628df564248c25cc4d1ef69961074d304571c57233ef373f3bb507cf5eef17a7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb940d7e54b4c236371d0042f459a51bb72ff631dfef4744453b1c5462d7a63c",
            "container_config": {
                "Hostname": "fb940d7e54b4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:628df564248c25cc4d1ef69961074d304571c57233ef373f3bb507cf5eef17a7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:19:10.282379969Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:25:59.187228121Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e9de089953800c4e62d1698db72539608e912b7ae2875abf220d45f209822d3 in / "
                },
                {
                    "created": "2019-10-16T23:25:59.441700271Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T03:58:03.604806065Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T03:58:09.894725026Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T03:58:37.389422282Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T03:01:19.737099061Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T23:18:51.936848925Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:08.835002397Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2c5960292da8b747d83f171a28a04116b2977e809169c344268c893e4cf0a857' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='895766c9c1d1a32e9e0e7ea2f9fac6f33df0397954564c05b56ecdc58605fd1e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a05361badb95f6cc5724e32f59b0f33048dfca63b539cf2bd8ab77fa4f2ba923' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9d979c489471c5ec9b9cd6b0922f061b2dca7b801effc39d7826a1255e8221c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8f962f84bd36f5caad78710b32e074406d12e864e334bf6c8820836dbd1b6409' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='faa9de31cc41c0ecb79382569f1269758a7e51ca526aaf849d7189da6e28f716' ;; \t\t*) goRelArch='src'; goRelSha256='fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:19:09.278023342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:09.438143587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:10.094124795Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:19:10.282379969Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:831b66a484dc30b193f5d64771e8c01fa7e8fa5c8dab3e5adab5bea21b4223a4",
                    "sha256:9674e3075904468cbf3d9e4ef84114903ae43945006b6e5ac331c663d5837c01",
                    "sha256:7a435d49206fef3d0d7862e527cda5bf2d31a6f01ef73017c6f383545790b6ae",
                    "sha256:2ea751c0f96cbbfb06b41b347898fe2d30d0284574189aa189078c21f4699120",
                    "sha256:164116942aa42751f10ff3432b28829481d37946e15f4f9deb9ddf1a9c703a0d",
                    "sha256:36b59ab9a5d0ca12ad492fd864fe5ec74df7ee863fc865f8c53e9a46e22a4b70",
                    "sha256:132249852abd31d8130eb8c2eb45aa44629d1506c6ccb9697d3f920130620d4d"
                ]
            }
        },
        "1.12.11-alpine": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c74f927a34e9ad6abfdb22618ee92207fb1263d7e31650c6bb76cbbecc585ed6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "457d7f30ef36fa4c58ea3cdb5219ff4a77502bf53f78a07fc1c101fdbd5c7668",
            "container_config": {
                "Hostname": "457d7f30ef36",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c74f927a34e9ad6abfdb22618ee92207fb1263d7e31650c6bb76cbbecc585ed6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:23:06.412419014Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:59:29.071001361Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:59:29.814558232Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T23:19:33.232100641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:23:03.870616344Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:23:04.62522911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:23:04.865313775Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:23:06.112901116Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:23:06.412419014Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:5ff34e0a6dec95d1f25943e98ca4e41b882004d422c93ed7a40f73bfe4ad9b97",
                    "sha256:c973660ff75c661b2e3a5d0d47dcafd2b8ae0022e0b714e2bcdf32e60169ef56",
                    "sha256:8bb11e5be3aaa435e732fd7255fd7fece4fd0d8101bffaf34dd1ea44349fb34e",
                    "sha256:834046fc103b08841a0555ecd3a44153a979d51f1c6008d214aa3002a1a90703"
                ]
            }
        },
        "1.12.11-alpine3.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c74f927a34e9ad6abfdb22618ee92207fb1263d7e31650c6bb76cbbecc585ed6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "457d7f30ef36fa4c58ea3cdb5219ff4a77502bf53f78a07fc1c101fdbd5c7668",
            "container_config": {
                "Hostname": "457d7f30ef36",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c74f927a34e9ad6abfdb22618ee92207fb1263d7e31650c6bb76cbbecc585ed6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:23:06.412419014Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:19:55.062606894Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fe64057fbb83dccb960efabbf1cd8777920ef279a7fa8dbca0a8801c651bdf7c in / "
                },
                {
                    "created": "2019-08-20T20:19:55.211423266Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T20:59:29.071001361Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T20:59:29.814558232Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T23:19:33.232100641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:23:03.870616344Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:23:04.62522911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:23:04.865313775Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:23:06.112901116Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:23:06.412419014Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:03901b4a2ea88eeaad62dbe59b072b28b6efa00491962b8741081c5df50c65e0",
                    "sha256:5ff34e0a6dec95d1f25943e98ca4e41b882004d422c93ed7a40f73bfe4ad9b97",
                    "sha256:c973660ff75c661b2e3a5d0d47dcafd2b8ae0022e0b714e2bcdf32e60169ef56",
                    "sha256:8bb11e5be3aaa435e732fd7255fd7fece4fd0d8101bffaf34dd1ea44349fb34e",
                    "sha256:834046fc103b08841a0555ecd3a44153a979d51f1c6008d214aa3002a1a90703"
                ]
            }
        },
        "1.12.11-alpine3.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7fc8ac47f04fd82f6499716c866ea8163024427017164ea3e0b1183c736713c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7c13662e6a35a2f460c98c6c18ea0bd9d0cddaa7ad13d69e03a1107a6dfaf29b",
            "container_config": {
                "Hostname": "7c13662e6a35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7fc8ac47f04fd82f6499716c866ea8163024427017164ea3e0b1183c736713c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:27:56.942474706Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T00:07:03.358250803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "
                },
                {
                    "created": "2019-05-11T00:07:03.510395965Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T00:23:26.49862481Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T00:23:27.259954371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T23:23:19.438572859Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:27:54.333885532Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:27:55.103080828Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:27:55.318897796Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:27:56.698986435Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:27:56.942474706Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81",
                    "sha256:b87598efb2f0c82daa5d873ba0ad6c2b31bca4e32b71d39ecffa64345165136c",
                    "sha256:968d46c1d20e83a7f2bc570cd072184a8d5541b32ead01010250e1198e2a4969",
                    "sha256:b8a0b5611845047f314ab640154f596066809257d99959b3d2c57c5e444b07c5",
                    "sha256:87e097dd1e50554bfe835234a97fa486f4f71dc14c9a4a5d40e45eb96faa5d83"
                ]
            }
        },
        "1.12.11-buster": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:628df564248c25cc4d1ef69961074d304571c57233ef373f3bb507cf5eef17a7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb940d7e54b4c236371d0042f459a51bb72ff631dfef4744453b1c5462d7a63c",
            "container_config": {
                "Hostname": "fb940d7e54b4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:628df564248c25cc4d1ef69961074d304571c57233ef373f3bb507cf5eef17a7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:19:10.282379969Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:25:59.187228121Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e9de089953800c4e62d1698db72539608e912b7ae2875abf220d45f209822d3 in / "
                },
                {
                    "created": "2019-10-16T23:25:59.441700271Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T03:58:03.604806065Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T03:58:09.894725026Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T03:58:37.389422282Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T03:01:19.737099061Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T23:18:51.936848925Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:08.835002397Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2c5960292da8b747d83f171a28a04116b2977e809169c344268c893e4cf0a857' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='895766c9c1d1a32e9e0e7ea2f9fac6f33df0397954564c05b56ecdc58605fd1e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a05361badb95f6cc5724e32f59b0f33048dfca63b539cf2bd8ab77fa4f2ba923' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9d979c489471c5ec9b9cd6b0922f061b2dca7b801effc39d7826a1255e8221c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8f962f84bd36f5caad78710b32e074406d12e864e334bf6c8820836dbd1b6409' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='faa9de31cc41c0ecb79382569f1269758a7e51ca526aaf849d7189da6e28f716' ;; \t\t*) goRelArch='src'; goRelSha256='fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:19:09.278023342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:09.438143587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:10.094124795Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:19:10.282379969Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:831b66a484dc30b193f5d64771e8c01fa7e8fa5c8dab3e5adab5bea21b4223a4",
                    "sha256:9674e3075904468cbf3d9e4ef84114903ae43945006b6e5ac331c663d5837c01",
                    "sha256:7a435d49206fef3d0d7862e527cda5bf2d31a6f01ef73017c6f383545790b6ae",
                    "sha256:2ea751c0f96cbbfb06b41b347898fe2d30d0284574189aa189078c21f4699120",
                    "sha256:164116942aa42751f10ff3432b28829481d37946e15f4f9deb9ddf1a9c703a0d",
                    "sha256:36b59ab9a5d0ca12ad492fd864fe5ec74df7ee863fc865f8c53e9a46e22a4b70",
                    "sha256:132249852abd31d8130eb8c2eb45aa44629d1506c6ccb9697d3f920130620d4d"
                ]
            }
        }
    }
}