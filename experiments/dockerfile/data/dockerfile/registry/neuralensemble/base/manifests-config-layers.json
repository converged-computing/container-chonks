{
    "manifests": {
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8591,
                "digest": "sha256:dfa306b5614a74152b2dff562516d4f27fdef323783e0d8d65cf1e67f8a2049b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44247132,
                    "digest": "sha256:e92ed755c008afc1863a616a5ba743b670c09c1698f7328f05591932452a425f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:b9fd7cb1ff8f489cf082781b0e1fe0c13b840e20147e8fc8204b4592da7c2f70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 853,
                    "digest": "sha256:ee690f2d57a128744cf4c5b52646ad0ba7a5af113d9d7e0e02b62c06d35fd14c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:53e3366ec435596bed2563cc882ba47ec25df6be2b1027e3243e83589c667c1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0e04156e43a3cc9ab467ab0f149fbd1ef6cdb26812b8581180cd52e161dadb4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3151,
                    "digest": "sha256:dfa849116ad24cbd16b5b3661680a7b5f25b2b8de1980b1ce2cdea88741fec23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245,
                    "digest": "sha256:9d1a5a1026f7423bde55cd564d653d086eb8f5016b414db4179915ac4b1f203b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226149,
                    "digest": "sha256:46aea6a70fdf56753846c3c85be8a5c14e9f95f5ce07239648f3d1897578c386"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 257808976,
                    "digest": "sha256:d1e365d6169d301c5f6735143313732a75368d19281cd04dc0972bb5b8055239"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4573,
                    "digest": "sha256:81f977243895214639a9cff0eb0ce679996fd87665ae80ddd9520dd1afb59e49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 158,
                    "digest": "sha256:ad22bdacec34dd7d323dc3ad8913f17e74122eea76121c174850b4b3a33bd8bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1850439,
                    "digest": "sha256:930d66cb18d1a4590c936bc7218c298f4e9cab0bba7157a8ed3449de3dcbc6ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4159170,
                    "digest": "sha256:4226bc3b501a9f1952ad843503446bb7e11fa47c0fe96b5c3fe1d22122e04bf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19439975,
                    "digest": "sha256:e5102719ad08f29c6fb521ff0602a5afb1217893961aed6deade88e9e4903611"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6516128,
                    "digest": "sha256:a56694a46f3358e2cfead8c76d90c65e6bc3daa5896ac3079fc96c8e1a907e67"
                }
            ]
        },
        "py2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6225,
                "digest": "sha256:523a5a831c30294c7590966710e2c2bd6e7e923152a319b04a6a2701f99e7344"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52599697,
                    "digest": "sha256:f49cf87b52c10aa83b4f4405800527a74400fb19ea1821d209293bc4d53966aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 295,
                    "digest": "sha256:0681979a632d7a29c019efb2ee8070785d12bbb75edb4dea4dcf2d99b3e47c17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3156,
                    "digest": "sha256:54e2b5cbf92bffe6d419f7cf3db5b34c257c185767759bb31e03f7f275857c2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 240,
                    "digest": "sha256:588566b54e4a2c7cf5718aa8f83ac35e44fd9a640e28201587f819050a45fa9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281896011,
                    "digest": "sha256:224dacb09f0f0b740ecb96294c3603a8d29ca84ccad1bb8056977a4e229a09e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4526,
                    "digest": "sha256:0be3db31c84f146e24fd6908cf38e9d7e61d6a11a51c9148f184af9ddb99ec45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159,
                    "digest": "sha256:dbec8824e5e039fa8938aa79fcb9a5bc92784e7cc04379f6c59c8f1df58b341c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3690667,
                    "digest": "sha256:695827adcffd7263a60e7a5cd9a9fbc94e7e7e289445cca291d723f9ada28609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2153930,
                    "digest": "sha256:5f5eb13b675f73136b2834ee7cb72af94e538aabc665a1b8ad3b7022b82989a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20438800,
                    "digest": "sha256:d7ccaf049067d4aae2726fffb8e99707865e46dfa1712d28e7de0fa3846aec3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7930616,
                    "digest": "sha256:a8c5075a3adce8bb76f67abdb97b7ed0b7c837f77f9e0434620fa41be1e1c646"
                }
            ]
        }
    },
    "tags": [
        "latest",
        "py2"
    ],
    "configs": {
        "latest": {
            "architecture": "amd64",
            "author": "andrew.davison@unic.cnrs-gif.fr",
            "config": {
                "Hostname": "29b2421c7017",
                "Domainname": "",
                "User": "docker",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LANG=C.UTF-8",
                    "HOME=/home/docker",
                    "VENV=/home/docker/env/neurosci"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b03b09c6f43589d8ea9dd1b721426e2f138810d5c587801b6063165026168a52",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "container": "c17677c5fed71742949a7440f87eeb2405e9952d74893002bae8f39c2584d03b",
            "container_config": {
                "Hostname": "29b2421c7017",
                "Domainname": "",
                "User": "docker",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LANG=C.UTF-8",
                    "HOME=/home/docker",
                    "VENV=/home/docker/env/neurosci"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$VENV/bin/pip3 install --upgrade nose ipython"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b03b09c6f43589d8ea9dd1b721426e2f138810d5c587801b6063165026168a52",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2020-05-18T13:09:26.553612094Z",
            "docker_version": "17.05.0-ce",
            "history": [
                {
                    "created": "2020-04-24T01:08:29.930500697Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fe14d9555e739e4d006eecb273a2f4a53e6dbe93bd0db26d5f999168b5d4114 in / "
                },
                {
                    "created": "2020-04-24T01:08:31.812205621Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-24T01:08:33.600214229Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:08:35.236242131Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:08:35.618968339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-24T20:40:16.59902824Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-24T20:40:17.544054246Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --batch --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2020-04-24T20:40:18.326035215Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian xenial main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel xenial main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2020-04-24T20:40:23.892321357Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& apt-get install -y --no-install-recommends neurodebian-freeze eatmydata \t&& ln -s /usr/bin/eatmydata /usr/local/bin/apt-get \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-18T13:06:25.573558821Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER andrew.davison@unic.cnrs-gif.fr",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-18T13:06:25.713794787Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-18T13:06:25.856970209Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-18T13:08:30.167091333Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c apt-get update; apt-get install -y automake libtool build-essential openmpi-bin libopenmpi-dev git vim                         wget python3 libpython3-dev libncurses5-dev libreadline-dev libgsl0-dev cython3                        python3-numpy python3-scipy python3-matplotlib python3-jinja2 python3-mock                        ipython3 python3-httplib2 python3-docutils python3-yaml                        subversion python3-venv python3-mpi4py python3-tables python3-h5py cmake zlib1g-dev"
                },
                {
                    "created": "2020-05-18T13:08:33.403912293Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c useradd -ms /bin/bash docker"
                },
                {
                    "created": "2020-05-18T13:08:33.549282494Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  USER [docker]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-18T13:08:33.69095544Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  ENV HOME=/home/docker",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-18T13:08:34.670533174Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c mkdir $HOME/env; mkdir $HOME/packages"
                },
                {
                    "created": "2020-05-18T13:08:34.811258782Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  ENV VENV=/home/docker/env/neurosci",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-18T13:08:38.78321586Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c python3 -m venv $VENV && python3 -m venv --system-site-packages $VENV"
                },
                {
                    "created": "2020-05-18T13:08:44.722797638Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c $VENV/bin/pip3 install --upgrade pip"
                },
                {
                    "created": "2020-05-18T13:09:11.731247592Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c $VENV/bin/pip3 install parameters quantities neo==0.7.2 \"django<1.9\" django-tagging future hgapi gitpython sumatra nixio"
                },
                {
                    "created": "2020-05-18T13:09:26.553612094Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c $VENV/bin/pip3 install --upgrade nose ipython"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b592b5433bbffb04389a0e6349cdba6af8d006779bbb93beb69aa77d59133be4",
                    "sha256:4a048ea09024fc68a2d21f8614d9e49f246efe0902dee85fb27ccc8ac17be73b",
                    "sha256:0d3833376c2f2b31bbaa02e419615355fd529b624b2cda1ef1dca0c856a25e73",
                    "sha256:64d2e4aaa54cf6b127584b366d73d4ab66ca40897cd88e1f9fe971e7f2e09082",
                    "sha256:9ab177420fa211aa1af3584d1801cbe3d885e9edc5cfb8555b1897bf45798253",
                    "sha256:a23308cfc3926e2b6edb675bfeaae2ea4bf83ef978f5fa0c577ee3d360651de3",
                    "sha256:d21396894a174602969d4f310b9633c181a4265caa03ba7014df8d4c271ba7d5",
                    "sha256:9124ef032f9dcd69b4e059950c81914ae59c0b74e077d5950dc15d16d38e38e9",
                    "sha256:99fdc1561555273e56272455e400cc27a17c69782fae697af9a64e5acda31247",
                    "sha256:9dc24258924934b6810bd6be64b667c2999b094471272bac90aad491f733fe10",
                    "sha256:bb510ea7da0c82fd39336a67c1b7ce4d72cc3b2c9e8f508ea606ed2fcf9aea7c",
                    "sha256:1c06bd5a546aa2bcfd480d69a0be879c8a627a3a0427f4db39a30d1f85c6de14",
                    "sha256:2a80714a2a7bf6571ad5d70dfe41d33170d737b7e89b712a3c30998568347165",
                    "sha256:95122def60f92aebf82cccd0d7f24d51a11fe494ecc773361b9de21f8332d6e9",
                    "sha256:d4c74b10371c398cae37e3a5ac8467978d1fb7dcf8c0c3940acc1a2c0df4b901"
                ]
            }
        },
        "py2": {
            "architecture": "amd64",
            "author": "andrew.davison@unic.cnrs-gif.fr",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "docker",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LANG=C.UTF-8",
                    "HOME=/home/docker",
                    "VENV=/home/docker/env/neurosci"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1480b0fb22f1ef1e758ebbe02fd5d7be62ef1b4585dc3238227951fc620fd52b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9238ad3a8aae5974850c4a06cea7973182053c956a6e5d33bf2629b5f9338b0b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "docker",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DEBIAN_FRONTEND=noninteractive",
                    "LANG=C.UTF-8",
                    "HOME=/home/docker",
                    "VENV=/home/docker/env/neurosci"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$VENV/bin/pip install --upgrade nose ipython"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1480b0fb22f1ef1e758ebbe02fd5d7be62ef1b4585dc3238227951fc620fd52b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-01-03T23:18:27.994169571Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2017-12-12T01:41:12.616369009Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1dd78a123212328bdc72ef7888024ea27fe141a72e24e0ea7c3c92b63b73d8d1 in / "
                },
                {
                    "created": "2017-12-12T01:41:12.933932119Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T05:10:42.340564361Z",
                    "created_by": "/bin/sh -c set -x \t&& apt-get update \t&& { \t\twhich gpg \t\t|| apt-get install -y --no-install-recommends gnupg \t; } \t&& { \t\tgpg --version | grep -q '^gpg (GnuPG) 1\\.' \t\t|| apt-get install -y --no-install-recommends dirmngr \t; } \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T05:10:47.061481016Z",
                    "created_by": "/bin/sh -c set -x \t&& export GNUPGHOME=\"$(mktemp -d)\" \t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys DD95CC430502E37EF840ACEEA5D32F012649A5A9 \t&& gpg --export DD95CC430502E37EF840ACEEA5D32F012649A5A9 > /etc/apt/trusted.gpg.d/neurodebian.gpg \t&& rm -rf \"$GNUPGHOME\" \t&& apt-key list | grep neurodebian"
                },
                {
                    "created": "2017-12-12T05:10:47.786960007Z",
                    "created_by": "/bin/sh -c { \techo 'deb http://neuro.debian.net/debian jessie main'; \techo 'deb http://neuro.debian.net/debian data main'; \techo '#deb-src http://neuro.debian.net/debian-devel jessie main'; } > /etc/apt/sources.list.d/neurodebian.sources.list"
                },
                {
                    "created": "2018-01-03T23:09:24.099500961Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER andrew.davison@unic.cnrs-gif.fr",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-03T23:09:24.459352694Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-03T23:09:24.782040467Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  ENV LANG=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-03T23:17:04.958460523Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c apt-get update; apt-get install -y automake libtool build-essential openmpi-bin libopenmpi-dev git vim                         wget python libpython-dev libncurses5-dev libreadline-dev libgsl0-dev cython                        python-pip python-numpy python-scipy python-matplotlib python-jinja2 python-mock                        python-virtualenv ipython python-httplib2 python-docutils python-yaml                        subversion python-mpi4py python-tables python-h5py cmake"
                },
                {
                    "created": "2018-01-03T23:17:05.74745981Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c useradd -ms /bin/bash docker"
                },
                {
                    "created": "2018-01-03T23:17:05.936600299Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  USER [docker]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-03T23:17:06.128696983Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  ENV HOME=/home/docker",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-03T23:17:06.894604753Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c mkdir $HOME/env; mkdir $HOME/packages"
                },
                {
                    "created": "2018-01-03T23:17:07.074755963Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c #(nop)  ENV VENV=/home/docker/env/neurosci",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-03T23:17:14.850358595Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c virtualenv --system-site-packages $VENV"
                },
                {
                    "created": "2018-01-03T23:17:23.378752198Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c $VENV/bin/pip install --upgrade pip"
                },
                {
                    "created": "2018-01-03T23:18:02.172986408Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c $VENV/bin/pip install parameters quantities neo \"django<1.9\" django-tagging future hgapi gitpython sumatra nixio"
                },
                {
                    "created": "2018-01-03T23:18:27.994169571Z",
                    "author": "andrew.davison@unic.cnrs-gif.fr",
                    "created_by": "/bin/sh -c $VENV/bin/pip install --upgrade nose ipython"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4bcdffd70da292293d059d2435c7056711fab2655f8b74f48ad0abe042b63687",
                    "sha256:996105ac9ae49a3e0a354e81a4513de5983fedd38e78558ed4bbd874069efcf9",
                    "sha256:937fbe692c4cc9fdc8e384b6e8fe5edd55e205f8f13f8b38dbe6dfde2dbe529f",
                    "sha256:f178e04f7ff32358bb82befdd0a112639dd649c069062a9d5150985ac170452d",
                    "sha256:c9c5ba07b04ecf467992203bf2a9610b39e7a5a609cffe2e89bb2be98ab80954",
                    "sha256:0ed5ebeca859dae3bfe5801a1c797bd3cc1eef2e33e020507541a66bc81bde51",
                    "sha256:8aee35d3f27cfde3dbfcee0d4d58b63f76db1da8fb236b2beec6158359ea2847",
                    "sha256:dc516ce6affb5c63cbbad9f5009dbbf41e2e45aafa349e208f5fb3b693f4edc9",
                    "sha256:c896a37a138ed860e8de1a2ccd4c8faf13f764df9bfc1e9a64bdb7aecc320e56",
                    "sha256:a6de3909e9abe6cf337e4405dcae48b283c567e5a7effdc04b658e99c3cbaead",
                    "sha256:a4765e883891e6e8605052eb31851360202f7269d1d971534f0aaf8f45f18459"
                ]
            }
        }
    }
}