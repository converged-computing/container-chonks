{
    "manifests": {
        "0.110.0": {
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "schemaVersion": 2,
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:47df883a25627b3eb1d9eccc600508d0fd91cd97d6e70d8c1746a97c4f10d29c",
                    "size": 2008,
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:96efcf576b0a0a8a4cc64c57eba1f44351f173544acf13c96d8228edfb6831c0",
                    "size": 567,
                    "annotations": {
                        "vnd.docker.reference.digest": "sha256:47df883a25627b3eb1d9eccc600508d0fd91cd97d6e70d8c1746a97c4f10d29c",
                        "vnd.docker.reference.type": "attestation-manifest"
                    },
                    "platform": {
                        "architecture": "unknown",
                        "os": "unknown"
                    }
                }
            ]
        },
        "0.111.0": {
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "schemaVersion": 2,
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9807c4723c80a342d2351dea9262df408bc9f13c4dbde01cb92cc1fa051ee3e1",
                "size": 7539
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c",
                    "size": 3374446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075",
                    "size": 48162864
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438",
                    "size": 2353683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29",
                    "size": 451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc33b63c860ee81fbee7ae12371247a0e416ec3f9fe76bcfc8a793689270007d",
                    "size": 122354142
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e403cb4abb574c6e6d6a2cc2b1d522c547f7719fe8b59d2da15fcf5b35e272c2",
                    "size": 43326415
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:322debbe9f10f09633427ffecd0c59c77056c59a38f3ea233d3d496b4e2570da",
                    "size": 176
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d49f1a2fa5b6aa35bae66810c7de9daa3f8df5dc47e273d8a9d50f5f48791fd9",
                    "size": 4421704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55775f762c68197ea907ce4245b66d005e87e3557d25ed7759023a439486f22a",
                    "size": 99
                }
            ]
        },
        "0.111.1": {
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "schemaVersion": 2,
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bb0540a18e50349aee2e0bd6e9a298e345e2b6e66367e8488ec4a4fa5c543b66",
                "size": 7540
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c",
                    "size": 3374446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075",
                    "size": 48162864
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438",
                    "size": 2353683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29",
                    "size": 451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4988144fd1d194ac03855af4483340efc48f699469de1b314d8fc8fad2ae89bb",
                    "size": 122354143
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8354b2c37417cf2cf4fd07caac4674eedfc1addc4da411c78af7e1e99d34c265",
                    "size": 43326505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e585138fc6d12ca76d5717dd9d23557132ae515842c9585addc41cb69f282929",
                    "size": 176
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7049daeeacb87bb6a12cfb85994bd4a79ddcf0ed6959560f003756cbc9579349",
                    "size": 4421768
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72c0be6b2649b0b571b5956adbe6d88adcfbb356f8b7a58bb27aad09a2fa1cfa",
                    "size": 99
                }
            ]
        },
        "0.111.2": {
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "schemaVersion": 2,
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f9f35de5850b52b37a32b114ce663a40af6bad42fcab3e384d29b32d97710ee",
                "size": 7537
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c",
                    "size": 3374446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075",
                    "size": 48162864
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438",
                    "size": 2353683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29",
                    "size": 451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a4946597909704503c4a3526b37554db16b5aa63ea326204c890daa6a7370f",
                    "size": 122354147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac345b9dadcfa75d5f262d8d462c1afe3f843e8a6e12f6c841ba08ae6330a1c2",
                    "size": 43346611
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b2d5587f19c6ede84f46056a430bf8e5b947635bad1a5543566856aa019bdaf",
                    "size": 175
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fa231b9f5bc40059a6d9e07d3745aae03faebf2bfa6fabd4a38ff6bc65562d3",
                    "size": 4421661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fef0d1a432ff4463959c85389dbc45f46a4de35ee897917a2aabb66ff5f09cb",
                    "size": 97
                }
            ]
        },
        "0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6800,
                "digest": "sha256:ad409fc69afc8b1f5b2e60454619a1ccd95ae312174a069e27666406133684a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48162864,
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353683,
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 451,
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828505,
                    "digest": "sha256:1b033803bb9cd3db6b7859c34d28a1f37ce393043d1f29dffb59898f1a9ea464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:78abb94c67d8d9702d0f2524aac21e3dfe1c6d340e04a138378c74767c05660b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337826,
                    "digest": "sha256:26b30403cbfef3969ab8c4b9f1523d2143aaf74f68f6ae5bd4ef70ed33e78897"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4421553,
                    "digest": "sha256:f128c5be5b0ceb5f32afc254ceb6f5fd6762de8ef6f31a978c4a20979f8a7647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:fd455fed759b32afd014c7849e082d1b137628543683bbb7e0c658d3beee502f"
                }
            ]
        },
        "base": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 1826,
                "digest": "sha256:5be7f133830223024b935ca4415f2743d09a527bd61ad7f09ab5d1891ea9c882"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284717,
                    "digest": "sha256:02349b910f37a509a3da169570f5913b3565889317f0ffb18012cbab1b8c0833"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52816454,
                    "digest": "sha256:b02e2dc44f65fb72f403e1b348d636c9e2202fe6329430f228b74314fa715c3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337768,
                    "digest": "sha256:bf1ffb685192fec214dbcdc6261ea663555640b5a4623e1ad8ede1b7756f2197"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:80fe25bfe3313df24f6bb2b181dbfcc6e907b4dc3e8aec0161d582aac96f4a79"
                }
            ]
        },
        "base-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 1826,
                "digest": "sha256:5be7f133830223024b935ca4415f2743d09a527bd61ad7f09ab5d1891ea9c882"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284717,
                    "digest": "sha256:02349b910f37a509a3da169570f5913b3565889317f0ffb18012cbab1b8c0833"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52816454,
                    "digest": "sha256:b02e2dc44f65fb72f403e1b348d636c9e2202fe6329430f228b74314fa715c3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337768,
                    "digest": "sha256:bf1ffb685192fec214dbcdc6261ea663555640b5a4623e1ad8ede1b7756f2197"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:80fe25bfe3313df24f6bb2b181dbfcc6e907b4dc3e8aec0161d582aac96f4a79"
                }
            ]
        },
        "exts": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7368,
                "digest": "sha256:c63fae09cc4e37a635953fb407280ce0be34b834461f4fe22c86bd5e1cfc7ac8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48162864,
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353683,
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 451,
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828505,
                    "digest": "sha256:edf643bd249f5a37696a1024ce60234361efe41f369a5d94543b3c9ebf3ccaaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:0544f6c76bbd6574d60f7ed858c2297d99bb8c0d935047832cc66178920b870f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337819,
                    "digest": "sha256:a1809eaea2aeb62d2e2267c27940c69a93d1f1f9a6d87315ad87b12bba327d7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6823020,
                    "digest": "sha256:0949092d51ee0f7457b85aa831a0ab6c604b91d3cb26209a5899bc818be3b4b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4421891,
                    "digest": "sha256:c83ec56b36c71b49a8177a4b5a014a309fcb6112c85796da2b8e4c03b2669c62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8803817,
                    "digest": "sha256:d8f6f31fd85c603141d3e224bb9c09638c196cbb7762b0814909538d99794def"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:33a1ead9fb809230cc27b471cf5a085f7171f7e60e734ad63c25697f88fb71c6"
                }
            ]
        },
        "exts-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7368,
                "digest": "sha256:c63fae09cc4e37a635953fb407280ce0be34b834461f4fe22c86bd5e1cfc7ac8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48162864,
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353683,
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 451,
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828505,
                    "digest": "sha256:edf643bd249f5a37696a1024ce60234361efe41f369a5d94543b3c9ebf3ccaaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:0544f6c76bbd6574d60f7ed858c2297d99bb8c0d935047832cc66178920b870f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337819,
                    "digest": "sha256:a1809eaea2aeb62d2e2267c27940c69a93d1f1f9a6d87315ad87b12bba327d7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6823020,
                    "digest": "sha256:0949092d51ee0f7457b85aa831a0ab6c604b91d3cb26209a5899bc818be3b4b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4421891,
                    "digest": "sha256:c83ec56b36c71b49a8177a4b5a014a309fcb6112c85796da2b8e4c03b2669c62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8803817,
                    "digest": "sha256:d8f6f31fd85c603141d3e224bb9c09638c196cbb7762b0814909538d99794def"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:33a1ead9fb809230cc27b471cf5a085f7171f7e60e734ad63c25697f88fb71c6"
                }
            ]
        },
        "go": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5411,
                "digest": "sha256:aa893f30ccf6eb3cf673d7ec89e6722f9ed23f3995979243a903bad809a6b53f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284816,
                    "digest": "sha256:a2d21d5440ebff5aaaaeb115a003f7a4a3897f1866a87de95bc4a21436fc563c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828981,
                    "digest": "sha256:935e6c44a52cfcbd8b70f453843a8ac311407c9fe45e21f251024fe1a4e18570"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:94cc34f8dd06570f615f334bee0b61a4afb0ff496761aac1b6ccb9f999580de7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12934,
                    "digest": "sha256:6484f5322621028b42847f654be802bac9434878ba07e1dedf75af8dedb59c62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52816465,
                    "digest": "sha256:a7dd5523a74f73f1147fdf2d07850c0793632f593bd37428e6411512b6725517"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337808,
                    "digest": "sha256:ff73f525e21d4b4a4726b27ea41ea6a633d3bd964e6a2a98276429f62c93cbe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:2b3d8a8aa99764cba907aae2d75c1d601321fd099a4d9901b67f5999b46f6c2e"
                }
            ]
        },
        "go-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5411,
                "digest": "sha256:aa893f30ccf6eb3cf673d7ec89e6722f9ed23f3995979243a903bad809a6b53f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284816,
                    "digest": "sha256:a2d21d5440ebff5aaaaeb115a003f7a4a3897f1866a87de95bc4a21436fc563c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828981,
                    "digest": "sha256:935e6c44a52cfcbd8b70f453843a8ac311407c9fe45e21f251024fe1a4e18570"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:94cc34f8dd06570f615f334bee0b61a4afb0ff496761aac1b6ccb9f999580de7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12934,
                    "digest": "sha256:6484f5322621028b42847f654be802bac9434878ba07e1dedf75af8dedb59c62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52816465,
                    "digest": "sha256:a7dd5523a74f73f1147fdf2d07850c0793632f593bd37428e6411512b6725517"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337808,
                    "digest": "sha256:ff73f525e21d4b4a4726b27ea41ea6a633d3bd964e6a2a98276429f62c93cbe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:2b3d8a8aa99764cba907aae2d75c1d601321fd099a4d9901b67f5999b46f6c2e"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6800,
                "digest": "sha256:ad409fc69afc8b1f5b2e60454619a1ccd95ae312174a069e27666406133684a9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48162864,
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353683,
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 451,
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828505,
                    "digest": "sha256:1b033803bb9cd3db6b7859c34d28a1f37ce393043d1f29dffb59898f1a9ea464"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:78abb94c67d8d9702d0f2524aac21e3dfe1c6d340e04a138378c74767c05660b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337826,
                    "digest": "sha256:26b30403cbfef3969ab8c4b9f1523d2143aaf74f68f6ae5bd4ef70ed33e78897"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4421553,
                    "digest": "sha256:f128c5be5b0ceb5f32afc254ceb6f5fd6762de8ef6f31a978c4a20979f8a7647"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:fd455fed759b32afd014c7849e082d1b137628543683bbb7e0c658d3beee502f"
                }
            ]
        },
        "nginx": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6816,
                "digest": "sha256:18e4615f0764948072b046bbb36970f3bc5182302e1c7dd9fe0a1bb769ac09c6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31411403,
                    "digest": "sha256:3f9582a2cbe7197f39185419c0ced2c986389f8fc6aa805e1f5c090eea6511e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25471180,
                    "digest": "sha256:9a8c6f28671867118799d40ec6748ffbd9eab3747503ca47a2a79856dffc7553"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 626,
                    "digest": "sha256:e81b85700bc2530b1298885f74210138872f60cd139920b54aef3d268d61f0de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 956,
                    "digest": "sha256:73ae4d4511202a823260a789f97afb3a46b8c9172ae8d99d22a5a16ad2fa673b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 772,
                    "digest": "sha256:6058e3569a68e825f1085592ab0bb04c29345726119ed059ad933c0d9af5f533"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1402,
                    "digest": "sha256:3a1b8f20135650110763d223f82a25007e00b28b268e6a875fe87c85ba7570e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 438,
                    "digest": "sha256:a720d9cb42aff95bc7d9dca31d6e1545fa7597e5dfb69af521d082704763a220"
                }
            ]
        },
        "node": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6802,
                "digest": "sha256:ebb6e76e2ae3c52c7238716c964b1a25ea88ecf19c278421336aebf552b313ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48231554,
                    "digest": "sha256:bc59db64d63d87a2863457b909c9a6ca8772a8f04b85959ce55bd955b0ebfcfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353528,
                    "digest": "sha256:c8fd6d18c4a07741813297d22a4b571d0a72a7bebe60a80935aa471e737ae1d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:eb563838426b1ec0a8b95b825a372c46dfe0c89749eaca0e47cd75d09fc7ff51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 285051,
                    "digest": "sha256:e1a27fa4d3b3fe1a24a7c9b3390bbc052a277495eda48c95e2f3694b0c80d3cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51929176,
                    "digest": "sha256:1c82242bb013d9fdd595221e24bf3c1b261e158dd075c937cb9e227ad34e1a40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337813,
                    "digest": "sha256:9e6d21d540fdbef69aab06e6e72eee69dc28c1e282428a2c473371719a5f57a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:32cbc944f99254dde23370f426f32314117ed5780301f8cd0c48e1af4895e738"
                }
            ]
        },
        "node-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6802,
                "digest": "sha256:ebb6e76e2ae3c52c7238716c964b1a25ea88ecf19c278421336aebf552b313ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48231554,
                    "digest": "sha256:bc59db64d63d87a2863457b909c9a6ca8772a8f04b85959ce55bd955b0ebfcfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353528,
                    "digest": "sha256:c8fd6d18c4a07741813297d22a4b571d0a72a7bebe60a80935aa471e737ae1d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:eb563838426b1ec0a8b95b825a372c46dfe0c89749eaca0e47cd75d09fc7ff51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 285051,
                    "digest": "sha256:e1a27fa4d3b3fe1a24a7c9b3390bbc052a277495eda48c95e2f3694b0c80d3cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51929176,
                    "digest": "sha256:1c82242bb013d9fdd595221e24bf3c1b261e158dd075c937cb9e227ad34e1a40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43337813,
                    "digest": "sha256:9e6d21d540fdbef69aab06e6e72eee69dc28c1e282428a2c473371719a5f57a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:32cbc944f99254dde23370f426f32314117ed5780301f8cd0c48e1af4895e738"
                }
            ]
        },
        "reg": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6800,
                "digest": "sha256:cc2d9a9c524f53d17a3018c4bda579654eab58d3a9192b9037fa8f985d9bc9c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48162864,
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353683,
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 451,
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828511,
                    "digest": "sha256:b629c22df5dbc15d832530db9a03686aaa10a8d5a8a3d61cff25cc93c186be1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:7ec838fe02208302fc8596cc43887bbdf57b022d673d8b1a67c329e7124710ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30311757,
                    "digest": "sha256:e2348e8275765798c640596aa1829651881fd19feadd7d461a7188de852340f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4421487,
                    "digest": "sha256:ea59fe0f9ae5f8b1a8206d319dc963782839936b3ee0144b752681d0ba68156b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:05389daf894cba71272060f21502691c22bf7c499b8a27b3524758ad2dd22aea"
                }
            ]
        },
        "reg-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6800,
                "digest": "sha256:cc2d9a9c524f53d17a3018c4bda579654eab58d3a9192b9037fa8f985d9bc9c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48162864,
                    "digest": "sha256:d5bdfeed6dfad70f9df0b629953da51e464fc6b82e13dda206b68775c6f05075"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353683,
                    "digest": "sha256:75ec85813c149650393e1df04572d2d534b75952df3703fd36d33f46c45cb438"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 451,
                    "digest": "sha256:a6f48326f540df680819ef87dbb9f4011c759628f651a05c85306f796eba1a29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828511,
                    "digest": "sha256:b629c22df5dbc15d832530db9a03686aaa10a8d5a8a3d61cff25cc93c186be1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:7ec838fe02208302fc8596cc43887bbdf57b022d673d8b1a67c329e7124710ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30311757,
                    "digest": "sha256:e2348e8275765798c640596aa1829651881fd19feadd7d461a7188de852340f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4421487,
                    "digest": "sha256:ea59fe0f9ae5f8b1a8206d319dc963782839936b3ee0144b752681d0ba68156b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:05389daf894cba71272060f21502691c22bf7c499b8a27b3524758ad2dd22aea"
                }
            ]
        },
        "reg-base": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 1816,
                "digest": "sha256:613cc16288b6c5ae25775e6438511705ec3ef6aadc431863e61dcc81f9bcf4eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374563,
                    "digest": "sha256:f56be85fc22e46face30e2c3de3f7fe7c15f8fd7c4e5add29d7f64b87abdaa09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284709,
                    "digest": "sha256:d6241c0a2d24b228ded6e8e326b0a797bd1461ac1de4fafab6022a316e03c418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30314180,
                    "digest": "sha256:a59f6e78f65aefc7492f3fc43e53a9fe462b6d9277b4da733102a44e7116c18e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:23cce4b07b7fabc5e1fe17745c7c9b0c2aba2e3c890c977f6189d9231b0a4e3e"
                }
            ]
        },
        "reg-base-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 1816,
                "digest": "sha256:613cc16288b6c5ae25775e6438511705ec3ef6aadc431863e61dcc81f9bcf4eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374563,
                    "digest": "sha256:f56be85fc22e46face30e2c3de3f7fe7c15f8fd7c4e5add29d7f64b87abdaa09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284709,
                    "digest": "sha256:d6241c0a2d24b228ded6e8e326b0a797bd1461ac1de4fafab6022a316e03c418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30314180,
                    "digest": "sha256:a59f6e78f65aefc7492f3fc43e53a9fe462b6d9277b4da733102a44e7116c18e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:23cce4b07b7fabc5e1fe17745c7c9b0c2aba2e3c890c977f6189d9231b0a4e3e"
                }
            ]
        },
        "reg-exts": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7417,
                "digest": "sha256:8341c6895238068691dba524b01679d4afb894c17cf7a58222570749f6323df0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48231554,
                    "digest": "sha256:bc59db64d63d87a2863457b909c9a6ca8772a8f04b85959ce55bd955b0ebfcfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353528,
                    "digest": "sha256:c8fd6d18c4a07741813297d22a4b571d0a72a7bebe60a80935aa471e737ae1d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:eb563838426b1ec0a8b95b825a372c46dfe0c89749eaca0e47cd75d09fc7ff51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828480,
                    "digest": "sha256:ab0e92ded0ceaff9757a7f1e42b2b8733e9b543e54eb6ac2528b4cde2329be11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:1bdf35e3bf22bcee10de147732cde883cb8e55298311df184057c39c24079e17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30311743,
                    "digest": "sha256:7d04e10f2b55b9e88e7797c2cbd77bbebc9162720e4d0bfdc5c25410fa9eb73a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6832920,
                    "digest": "sha256:bd0f9dc469d476426558dfe70f36e5e1fa7fc3361cb65d4887251f21264fa093"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4422128,
                    "digest": "sha256:a43d0a4526c9f6bacf45811030726061ff19950785d954aaf97adb849382005e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8829728,
                    "digest": "sha256:efffdaca95c9cc685d37292841af0f8dc36bce08456b1c7f2183d245686ca2c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:8e5f52391274b298853305010a34d5957ac7ef905d81021db36787bbf9c68eb8"
                }
            ]
        },
        "reg-exts-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7417,
                "digest": "sha256:8341c6895238068691dba524b01679d4afb894c17cf7a58222570749f6323df0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48231554,
                    "digest": "sha256:bc59db64d63d87a2863457b909c9a6ca8772a8f04b85959ce55bd955b0ebfcfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353528,
                    "digest": "sha256:c8fd6d18c4a07741813297d22a4b571d0a72a7bebe60a80935aa471e737ae1d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:eb563838426b1ec0a8b95b825a372c46dfe0c89749eaca0e47cd75d09fc7ff51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828480,
                    "digest": "sha256:ab0e92ded0ceaff9757a7f1e42b2b8733e9b543e54eb6ac2528b4cde2329be11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:1bdf35e3bf22bcee10de147732cde883cb8e55298311df184057c39c24079e17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30311743,
                    "digest": "sha256:7d04e10f2b55b9e88e7797c2cbd77bbebc9162720e4d0bfdc5c25410fa9eb73a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6832920,
                    "digest": "sha256:bd0f9dc469d476426558dfe70f36e5e1fa7fc3361cb65d4887251f21264fa093"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4422128,
                    "digest": "sha256:a43d0a4526c9f6bacf45811030726061ff19950785d954aaf97adb849382005e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8829728,
                    "digest": "sha256:efffdaca95c9cc685d37292841af0f8dc36bce08456b1c7f2183d245686ca2c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:8e5f52391274b298853305010a34d5957ac7ef905d81021db36787bbf9c68eb8"
                }
            ]
        },
        "reg-go": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5403,
                "digest": "sha256:4bac232cf8f5b653201b7b10b84368fd84ecfd031ff01d4062b1503586718470"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284816,
                    "digest": "sha256:a2d21d5440ebff5aaaaeb115a003f7a4a3897f1866a87de95bc4a21436fc563c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828981,
                    "digest": "sha256:935e6c44a52cfcbd8b70f453843a8ac311407c9fe45e21f251024fe1a4e18570"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:94cc34f8dd06570f615f334bee0b61a4afb0ff496761aac1b6ccb9f999580de7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12933,
                    "digest": "sha256:9315d042422e6715acd7585a8cc896b733d26d02372534cfa2f4e4b7f6bb87e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30311742,
                    "digest": "sha256:723f07b623be40530ee55680028abcd69a64d44d0f9f7eeee2794c0f69d916f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:9a506f4b6a95a0a07e81abf4a4fd6898dc378a8663759f4c13623d513d0cc154"
                }
            ]
        },
        "reg-go-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5403,
                "digest": "sha256:4bac232cf8f5b653201b7b10b84368fd84ecfd031ff01d4062b1503586718470"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284816,
                    "digest": "sha256:a2d21d5440ebff5aaaaeb115a003f7a4a3897f1866a87de95bc4a21436fc563c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100828981,
                    "digest": "sha256:935e6c44a52cfcbd8b70f453843a8ac311407c9fe45e21f251024fe1a4e18570"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:94cc34f8dd06570f615f334bee0b61a4afb0ff496761aac1b6ccb9f999580de7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12933,
                    "digest": "sha256:9315d042422e6715acd7585a8cc896b733d26d02372534cfa2f4e4b7f6bb87e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30311742,
                    "digest": "sha256:723f07b623be40530ee55680028abcd69a64d44d0f9f7eeee2794c0f69d916f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:9a506f4b6a95a0a07e81abf4a4fd6898dc378a8663759f4c13623d513d0cc154"
                }
            ]
        },
        "reg-node": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6792,
                "digest": "sha256:d06afa9db7e52090c705902fd302a67197a9671c4ba26ed5c553106a11c84a8c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48231554,
                    "digest": "sha256:bc59db64d63d87a2863457b909c9a6ca8772a8f04b85959ce55bd955b0ebfcfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353528,
                    "digest": "sha256:c8fd6d18c4a07741813297d22a4b571d0a72a7bebe60a80935aa471e737ae1d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:eb563838426b1ec0a8b95b825a372c46dfe0c89749eaca0e47cd75d09fc7ff51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 285053,
                    "digest": "sha256:743429b3079ac38d1fadd4fe3337f97d909f5258ee0bac71b7d18f1d337bafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30311741,
                    "digest": "sha256:a150b3871996ebc08eda29f9a0a999555997abd90bf11568356804381dfa28de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:70a140692d7bfb6a3c4651d501682d2ec651aca8f9d7bc98e5f63dbed8210ae9"
                }
            ]
        },
        "reg-node-0.111.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6792,
                "digest": "sha256:d06afa9db7e52090c705902fd302a67197a9671c4ba26ed5c553106a11c84a8c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3374446,
                    "digest": "sha256:63b65145d645c1250c391b2d16ebe53b3747c295ca8ba2fcb6b0cf064a4dc21c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48231554,
                    "digest": "sha256:bc59db64d63d87a2863457b909c9a6ca8772a8f04b85959ce55bd955b0ebfcfb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2353528,
                    "digest": "sha256:c8fd6d18c4a07741813297d22a4b571d0a72a7bebe60a80935aa471e737ae1d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 447,
                    "digest": "sha256:eb563838426b1ec0a8b95b825a372c46dfe0c89749eaca0e47cd75d09fc7ff51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 285053,
                    "digest": "sha256:743429b3079ac38d1fadd4fe3337f97d909f5258ee0bac71b7d18f1d337bafe9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30311741,
                    "digest": "sha256:a150b3871996ebc08eda29f9a0a999555997abd90bf11568356804381dfa28de"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 92,
                    "digest": "sha256:70a140692d7bfb6a3c4651d501682d2ec651aca8f9d7bc98e5f63dbed8210ae9"
                }
            ]
        }
    },
    "tags": [
        "0.110.0",
        "0.111.0",
        "0.111.1",
        "0.111.2",
        "0.111.3",
        "base",
        "base-0.111.3",
        "exts",
        "exts-0.111.3",
        "go",
        "go-0.111.3",
        "latest",
        "nginx",
        "node",
        "node-0.111.3",
        "reg",
        "reg-0.111.3",
        "reg-base",
        "reg-base-0.111.3",
        "reg-exts",
        "reg-exts-0.111.3",
        "reg-go",
        "reg-go-0.111.3",
        "reg-node",
        "reg-node-0.111.3"
    ],
    "configs": {
        "0.110.0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.5.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo --minify --gc --enableGitInfo"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-01-27T15:25:08.28717193Z",
            "history": [
                {
                    "created": "2023-01-09T17:05:20.497231175Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e4d600fc4c9c293efe360be7b30ee96579925d1b4634c94332e2ec73f7d8eca1 in / "
                },
                {
                    "created": "2023-01-09T17:05:20.656498283Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-25T18:20:27.399311964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.5.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-25T18:20:36.39845048Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"f7eb17cd6f5821f2dbe697956fd93ef4caaafc0385cbd85df4d47eb5fd9ee5aa\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-01-25T18:20:37.064864137Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-25T18:20:41.471339142Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-01-25T18:20:41.601240566Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-01-25T18:20:41.693099743Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-25T18:20:41.791872253Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-27T15:25:06.949425057Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T15:25:07.376792401Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T15:25:07.435925451Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T15:25:08.275902667Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T15:25:08.28717193Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-01-27T15:25:08.28717193Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo --minify --gc --enableGitInfo\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTktYWxwaW5lIiwicGluIjoic2hhMjU2OjIzODFjMWU1ZjgzNTBhOTAxNTk3ZDYzM2IyZTUxNzc3NWVlYWM3YTY2ODJiZTM5MjI1YTkzYjIyY2ZkMGY4YmIifSx7InR5cGUiOiJkb2NrZXItaW1hZ2UiLCJyZWYiOiJkb2NrZXIuaW8vbGlicmFyeS9ub2RlOjE5LWFscGluZSIsInBpbiI6InNoYTI1Njo0NjE5ZWM2YzlhNDNhYjRlZGZhMTJjZjk2NzQ1MzE5YzNjYTQzYWZmOWRkNjMwYWIyMGU2ODRkZDM2MzIzMThlIn0seyJ0eXBlIjoiZ2l0IiwicmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3Jhem9ueWFuZy9kb2NrZXItaHVnby5naXQjMGQ4NTU5ODFiZDlkMzIzMDY5ZDQ5YmIwOGEyOGNhODhkNmEyZTdhYSIsInBpbiI6IjBkODU1OTgxYmQ5ZDMyMzA2OWQ0OWJiMDhhMjhjYTg4ZDZhMmU3YWEifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8e012198eea15b2554b07014081c85fec4967a1b9cc4b65bd9a4bce3ae1c0c88",
                    "sha256:423f68dd19dc9188593fb272fe367cc3bef4fec6c5b69751688953157dd04216",
                    "sha256:683a2ed728dc5f94d5d395cfebd139f76e782208d756c8ab292d9419ee004079",
                    "sha256:07248e5314ee12aaef7a1bfa7021f35a830d487defa2c0b8f388d691ad23cb97",
                    "sha256:e300690d6300136e4e8b9fba7861ea6fd21b900ede789ae306aee12c5e4e58ed",
                    "sha256:b7189b9699658ed908069a8a32517a30c9c61b55bab5e000382260f37cb5ee88",
                    "sha256:81f97618dcf4c708969190db088edfea4b75674cc5254941af8ff2d61d3884e8",
                    "sha256:ec321561a523057a2b541499eb62d47c42410707ee08e59cac15f78a08e6ef11",
                    "sha256:f4bb7fff1c31bbc9d093526d98103527cc59dd2b8350946c868e872839f0dcbc"
                ]
            }
        },
        "0.111.0": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo --minify --gc --enableGitInfo"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-02T03:31:37.497118553Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T03:31:35.867749847Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T03:31:36.27941748Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T03:31:36.363261857Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T03:31:37.475947608Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T03:31:37.497118553Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T03:31:37.497118553Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo --minify --gc --enableGitInfo\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTktYWxwaW5lIiwicGluIjoic2hhMjU2OjU2ZWNlMjU0MGUzZmMyY2M0YzY5OTQ2NjM5NDc0MDMzMmFiNjZmNmNmOGI0Y2JhNDZkZTM4NGJhNDNjYWVkZjgifSx7InR5cGUiOiJkb2NrZXItaW1hZ2UiLCJyZWYiOiJkb2NrZXIuaW8vbGlicmFyeS9ub2RlOjE5LWFscGluZSIsInBpbiI6InNoYTI1NjoxNTVlMzI0ODAyZWJmZGQzZjUwODM0MGRjYjBjZDRhNzUxMGY4NTk0ODAyYTJlNTMxNTBmMTcxYWU4YWEyNDYyIn0seyJ0eXBlIjoiZ2l0IiwicmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3Jhem9ueWFuZy9kb2NrZXItaHVnby5naXQjYjc1ODZiYmY5MTVmMzAwZWI0YTZmNmZkZGVkOGQ0MzUxZTVkM2ZlMCIsInBpbiI6ImI3NTg2YmJmOTE1ZjMwMGViNGE2ZjZmZGRlZDhkNDM1MWU1ZDNmZTAifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:700a4224967b28fa58e09d2a204808d6e427618fcbd2c16cacf34fc259d54bb6",
                    "sha256:928e9ce023510e6c2ae18db9a417db5439c46813f7a925f236422fb4c578a167",
                    "sha256:7a895b3ba6f6e2c8dff60e6f5bc3f04bb8a5730412e71af0d96e6e19050527f3",
                    "sha256:05788eacf9d275db51cb057cf8a6739cebf9537b081760bb9aeab8aa64b871b6",
                    "sha256:093f9e4e06d27252ba7da9bfba87c8cfd54ca97e3e053c0a83b329bdb46a71fa"
                ]
            }
        },
        "0.111.1": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo --minify --gc --enableGitInfo"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-02T14:56:10.223782421Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-02T14:56:08.854691349Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T14:56:09.280587693Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T14:56:09.339409376Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T14:56:10.207427642Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T14:56:10.223782421Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-02T14:56:10.223782421Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo --minify --gc --enableGitInfo\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTktYWxwaW5lIiwicGluIjoic2hhMjU2OjYyYTJjODQyZTllNTlkOTg4ODNjYjdiMTMwNzI2NTE4M2VlNWZkZWRhNmY0ZDA2MjYwZjZiYzQwZWE3MTI4OTAifSx7InR5cGUiOiJkb2NrZXItaW1hZ2UiLCJyZWYiOiJkb2NrZXIuaW8vbGlicmFyeS9ub2RlOjE5LWFscGluZSIsInBpbiI6InNoYTI1NjoxNTVlMzI0ODAyZWJmZGQzZjUwODM0MGRjYjBjZDRhNzUxMGY4NTk0ODAyYTJlNTMxNTBmMTcxYWU4YWEyNDYyIn0seyJ0eXBlIjoiZ2l0IiwicmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3Jhem9ueWFuZy9kb2NrZXItaHVnby5naXQjYjc1ODZiYmY5MTVmMzAwZWI0YTZmNmZkZGVkOGQ0MzUxZTVkM2ZlMCIsInBpbiI6ImI3NTg2YmJmOTE1ZjMwMGViNGE2ZjZmZGRlZDhkNDM1MWU1ZDNmZTAifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:93f3734db51fb3bbb514fda54f44ee580cad8cdfd2115bdcc88b5cdadb88762c",
                    "sha256:aafc834175b2613cb9dea539f2eabf0dcf781f712f025baa7fde11874bcb7704",
                    "sha256:ce74a944c140e1115eaa4d1c90ad7959b86eaf247a3661eab6929ef1eb85998a",
                    "sha256:8fd5a727cd0d72eefac19d6544f8e98ab59829da5de50fb9b5a20e96421877e9",
                    "sha256:5cbab4c2901c893094cc1b63e798fef5164c6cf378032c2e69643ce94f0a16a4"
                ]
            }
        },
        "0.111.2": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo --minify --gc --enableGitInfo"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-05T14:11:57.64732974Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-05T14:11:56.361513209Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-05T14:11:56.754872814Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-05T14:11:56.825099783Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-05T14:11:57.628626535Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-05T14:11:57.64732974Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-05T14:11:57.64732974Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo --minify --gc --enableGitInfo\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "moby.buildkit.buildinfo.v1": "eyJmcm9udGVuZCI6ImRvY2tlcmZpbGUudjAiLCJzb3VyY2VzIjpbeyJ0eXBlIjoiZG9ja2VyLWltYWdlIiwicmVmIjoiZG9ja2VyLmlvL2xpYnJhcnkvZ29sYW5nOjEuMTktYWxwaW5lIiwicGluIjoic2hhMjU2OjYyYTJjODQyZTllNTlkOTg4ODNjYjdiMTMwNzI2NTE4M2VlNWZkZWRhNmY0ZDA2MjYwZjZiYzQwZWE3MTI4OTAifSx7InR5cGUiOiJkb2NrZXItaW1hZ2UiLCJyZWYiOiJkb2NrZXIuaW8vbGlicmFyeS9ub2RlOjE5LWFscGluZSIsInBpbiI6InNoYTI1NjoxNTVlMzI0ODAyZWJmZGQzZjUwODM0MGRjYjBjZDRhNzUxMGY4NTk0ODAyYTJlNTMxNTBmMTcxYWU4YWEyNDYyIn0seyJ0eXBlIjoiZ2l0IiwicmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3Jhem9ueWFuZy9kb2NrZXItaHVnby5naXQjMjYxYzk3NzJiOTVhYzQyMmFmNzM0YTAxMjEwYjkxZWYwN2U4YjYyOCIsInBpbiI6IjI2MWM5NzcyYjk1YWM0MjJhZjczNGEwMTIxMGI5MWVmMDdlOGI2MjgifV19",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:47fdb41f8c5e3290bbaf7ab4ce0130a03efc6a201d924200c76ee2575e4f875e",
                    "sha256:52799a6816812913cccc33b7f8cc3a4bafbaac90537403fdeae8d1d6caf5ad63",
                    "sha256:c44b7f80b87a66897fe170423ecadb8a8c0037839cf2eb3bd87fd00a1157447f",
                    "sha256:c8f27813ca85f78cb364b99c216bcc02e36ff3b2ed1f64978534eeaf14a6a9ce",
                    "sha256:71338603201688eb48d328a5e382e5bedcf629ccc980e1471421d47a0087f5f5"
                ]
            }
        },
        "0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-12T18:40:20.297844673Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:40:18.337835854Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:18.538737722Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:18.765793477Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:20.285333131Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:20.297844673Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:20.297844673Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:e15ad7712e572462dd15d8f79edd88950430d03ebd04912d03894d177ebbd638",
                    "sha256:82131a6bc2600aec89803c099f07802f057d7bf9bb0a8405db3b6e4d79bfbd77",
                    "sha256:1655f90ed24eb29dac0b8b0a455a24bfa62dbcbf5236df5e4812b09b209263a7",
                    "sha256:639d03b026d82d22f23b9668e3be916c7e613baf337efa5b67c7b5e97f432732",
                    "sha256:b3dcd017ca8311636a98e5ad2ca53a6779390ff1b4f378be94e632d90d5b0805"
                ]
            }
        },
        "base": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-28T05:22:50.172293858Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T05:17:32.224025692Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T05:17:32.224025692Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-28T05:17:34.659833457Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-28T05:22:50.160300772Z",
                    "created_by": "COPY /go/bin/hugo /usr/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-28T05:22:50.172293858Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-28T05:22:50.172293858Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:4b08103d105a741808206d939724ccad2fb23a24a9dd3ebc63201fa917049717",
                    "sha256:ce45fa4b2347324cdd7f42bd499b123fa896a30ce10836c388ba41e22e803b46",
                    "sha256:058d45330ce1653a12573abfe48e61c75c6402ede8422a2c4e993fdb4b5cfd5e",
                    "sha256:3dd5684b5c21802454a5fa28db37e6ecc06d1a6f2c65d207c9212b96e9cad983"
                ]
            }
        },
        "base-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-28T05:22:50.172293858Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T05:17:32.224025692Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-28T05:17:32.224025692Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-28T05:17:34.659833457Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-28T05:22:50.160300772Z",
                    "created_by": "COPY /go/bin/hugo /usr/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-28T05:22:50.172293858Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-28T05:22:50.172293858Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:4b08103d105a741808206d939724ccad2fb23a24a9dd3ebc63201fa917049717",
                    "sha256:ce45fa4b2347324cdd7f42bd499b123fa896a30ce10836c388ba41e22e803b46",
                    "sha256:058d45330ce1653a12573abfe48e61c75c6402ede8422a2c4e993fdb4b5cfd5e",
                    "sha256:3dd5684b5c21802454a5fa28db37e6ecc06d1a6f2c65d207c9212b96e9cad983"
                ]
            }
        },
        "exts": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-14T03:14:37.370350031Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-14T03:14:29.40753242Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:29.663517343Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:29.895261146Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:31.534261017Z",
                    "created_by": "RUN /bin/sh -c apk add dart-sass-embedded --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:32.727138092Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache dart-sass-embedded git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:37.351768668Z",
                    "created_by": "RUN /bin/sh -c npm i -g postcss-cli autoprefixer @fullhuman/postcss-purgecss rtlcss # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:37.370350031Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:37.370350031Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:e7fd9c041d890a540af830399dc77f5ff95b26db097388da789321479541bbe3",
                    "sha256:13bd77728835015b8309e4d85ab20f680b1531b4a952fdcb9c68e48d5e776b68",
                    "sha256:67ee3eb2bb5f0ed9de91fafc3a5a85f26a0f443b3c2aef8b81dda0781b0b4e17",
                    "sha256:7a8f6a46ca26d98c455a7a21afde490e4d86af05783900148a3aad7527fa7dde",
                    "sha256:3d27035ebb863f045b9953deb1cfaa00c5af076aced3e6a62999a4ddba0d8d30",
                    "sha256:c959ea60f963c96c0273fbf26ffed9ac57be1223838a7e3e90c4516e72e77dbf",
                    "sha256:e15f5f6931210abb478244fe2bdddcff58f24ff20e3db290c0fdbb6d493e09c2"
                ]
            }
        },
        "exts-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-14T03:14:37.370350031Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-14T03:14:29.40753242Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:29.663517343Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:29.895261146Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:31.534261017Z",
                    "created_by": "RUN /bin/sh -c apk add dart-sass-embedded --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:32.727138092Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache dart-sass-embedded git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:37.351768668Z",
                    "created_by": "RUN /bin/sh -c npm i -g postcss-cli autoprefixer @fullhuman/postcss-purgecss rtlcss # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:37.370350031Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-14T03:14:37.370350031Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:e7fd9c041d890a540af830399dc77f5ff95b26db097388da789321479541bbe3",
                    "sha256:13bd77728835015b8309e4d85ab20f680b1531b4a952fdcb9c68e48d5e776b68",
                    "sha256:67ee3eb2bb5f0ed9de91fafc3a5a85f26a0f443b3c2aef8b81dda0781b0b4e17",
                    "sha256:7a8f6a46ca26d98c455a7a21afde490e4d86af05783900148a3aad7527fa7dde",
                    "sha256:3d27035ebb863f045b9953deb1cfaa00c5af076aced3e6a62999a4ddba0d8d30",
                    "sha256:c959ea60f963c96c0273fbf26ffed9ac57be1223838a7e3e90c4516e72e77dbf",
                    "sha256:e15f5f6931210abb478244fe2bdddcff58f24ff20e3db290c0fdbb6d493e09c2"
                ]
            }
        },
        "go": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-12T18:41:19.219087838Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T08:21:54.624791947Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-02-11T08:21:54.736566954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:20:06.940775686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:44.315191198Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.2.src.tar.gz'; \t\tsha256='4d0e2850d197b4ddad3bdb0196300179d095bb3aefd4dfbc3b36702c3728f8ab'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-03-08T00:21:45.268414342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:45.363059315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:45.918933443Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-03-08T00:21:46.018530108Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:41:16.300597902Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:41:16.300597902Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:41:18.740067586Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:41:19.202446254Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:41:19.219087838Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:41:19.219087838Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:d270ab11cf6e38e4a816b0eb37a8db32af4b062c073e93d1c05bdf248999332a",
                    "sha256:8bcdc05896d381bc720a0437d134363841e9a11a113da91039e6a9aff5e5bdd3",
                    "sha256:d63ee118692e679c27135b975589941f498d375965863a54ac973dd5ac5c86ed",
                    "sha256:2f818a96aaae32c0880f257ca3b848f11422ad65738725647cb53fe64bd24219",
                    "sha256:57c978905c05a16a9332946fcb90e177d22cabdf776b03c7c14e6c4780b32b1c",
                    "sha256:0aa3a43b149130425904c011081a3cca772a85ff68fe76aa42dc9aba1e27701c",
                    "sha256:4afe81ea24f13e94fb81a55d5bd4a45da1eeaf172300582ec0d72bfb7f9d594a"
                ]
            }
        },
        "go-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-12T18:41:19.219087838Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T08:21:54.624791947Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-02-11T08:21:54.736566954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:20:06.940775686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:44.315191198Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.2.src.tar.gz'; \t\tsha256='4d0e2850d197b4ddad3bdb0196300179d095bb3aefd4dfbc3b36702c3728f8ab'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-03-08T00:21:45.268414342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:45.363059315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:45.918933443Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-03-08T00:21:46.018530108Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:41:16.300597902Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:41:16.300597902Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:41:18.740067586Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:41:19.202446254Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:41:19.219087838Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:41:19.219087838Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:d270ab11cf6e38e4a816b0eb37a8db32af4b062c073e93d1c05bdf248999332a",
                    "sha256:8bcdc05896d381bc720a0437d134363841e9a11a113da91039e6a9aff5e5bdd3",
                    "sha256:d63ee118692e679c27135b975589941f498d375965863a54ac973dd5ac5c86ed",
                    "sha256:2f818a96aaae32c0880f257ca3b848f11422ad65738725647cb53fe64bd24219",
                    "sha256:57c978905c05a16a9332946fcb90e177d22cabdf776b03c7c14e6c4780b32b1c",
                    "sha256:0aa3a43b149130425904c011081a3cca772a85ff68fe76aa42dc9aba1e27701c",
                    "sha256:4afe81ea24f13e94fb81a55d5bd4a45da1eeaf172300582ec0d72bfb7f9d594a"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-12T18:40:20.297844673Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:40:18.337835854Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:18.538737722Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:18.765793477Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:20.285333131Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:20.297844673Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:40:20.297844673Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:e15ad7712e572462dd15d8f79edd88950430d03ebd04912d03894d177ebbd638",
                    "sha256:82131a6bc2600aec89803c099f07802f057d7bf9bb0a8405db3b6e4d79bfbd77",
                    "sha256:1655f90ed24eb29dac0b8b0a455a24bfa62dbcbf5236df5e4812b09b209263a7",
                    "sha256:639d03b026d82d22f23b9668e3be916c7e613baf337efa5b67c7b5e97f432732",
                    "sha256:b3dcd017ca8311636a98e5ad2ca53a6779390ff1b4f378be94e632d90d5b0805"
                ]
            }
        },
        "nginx": {
            "architecture": "amd64",
            "config": {
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.23.3",
                    "NJS_VERSION=0.7.9",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT",
                "OnBuild": null
            },
            "created": "2023-03-13T04:58:15.422275414Z",
            "history": [
                {
                    "created": "2023-03-01T04:09:58.669479866Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:493a5b0c8d2d63a1343258b3f9aa5fcd59a93f44fe26ad9e56b094c3a08fd3be in / "
                },
                {
                    "created": "2023-03-01T04:09:59.032972609Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.144487445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.241141683Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.23.3",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.333097773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.9",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:42:53.429197225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:11.955985229Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2023-03-01T18:43:12.236344221Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7b307b62e82255f040c9812421a30090bf9abf3685f27b02d77fcca99f997911 in / "
                },
                {
                    "created": "2023-03-01T18:43:12.33344009Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:5c18272734349488bd0c94ec8d382c872c1a0a435cca13bd4671353d6021d2cb in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.433127252Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:abbcbf84dc17ee4454b6b2e3cf914be88e02cf84d344ec45a5b31235379d722a in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.535486131Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e57eef017a414ca793499729d80a7b9075790c9a804f930f1417e56d506970cf in /docker-entrypoint.d "
                },
                {
                    "created": "2023-03-01T18:43:12.628381806Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.73026265Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.824086367Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-01T18:43:12.914398123Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-13T04:58:15.422275414Z",
                    "created_by": "COPY conf.d/default.conf /etc/nginx/conf.d/default.conf # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:650abce4b096b06ac8bec2046d821d66d801af34f1f1d4c5e272ad030c7873db",
                    "sha256:4dc5cd799a08ff49a603870c8378ea93083bfc2a4176f56e5531997e94c195d0",
                    "sha256:e161c82b34d21179db1f546c1cd84153d28a17d865ccaf2dedeb06a903fec12c",
                    "sha256:83ba6d8ffb8c2974174c02d3ba549e7e0656ebb1bc075a6b6ee89b6c609c6a71",
                    "sha256:d8466e142d8710abf5b495ebb536478f7e19d9d03b151b5d5bd09df4cfb49248",
                    "sha256:101af4ba983b04be266217ecee414e88b23e394f62e9801c7c1bdb37cb37bcaa",
                    "sha256:0a9b17935f7e289514f9385f76afb032ae587ebc533c27ebdd43c3d846451665"
                ]
            }
        },
        "node": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.8.1",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-18T16:49:28.364590484Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:33:54.479426261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:03.20103694Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"3106608fc62f92519578148e872a6862f36ea7b1ef6ac7c1475e2064fe65a9c6\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-03-16T19:34:03.764753805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:08.829481961Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-03-16T19:34:08.937975276Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-03-16T19:34:09.017551603Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:09.099121106Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-18T16:49:25.452239667Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-18T16:49:25.452239667Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-18T16:49:27.933543118Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-18T16:49:28.329987118Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-18T16:49:28.364590484Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-18T16:49:28.364590484Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:fb1f755fd9d578cef0a1efa7703e23929c55816b0cfea5257252d2ab748e2def",
                    "sha256:6dc3cd4155cc45aa9651d8690494af7e64b7bedd61a8b89f4065a33e1476da5f",
                    "sha256:a153225bcf3b539412eefc8889b68aaa443d40a2b476cdfee68e8aab3623f59b",
                    "sha256:835737601bedcb49366739029b6627ab6a86b3baa01cf085d156783539149e1d",
                    "sha256:13f375e01067c30b6a7548df97e3ab93ec4c4ee71d948bd4bedf32e2d8c6c7ad",
                    "sha256:dc5e933fd5d6e4f8cec775baf92b92daf53de84c3fdfe26547a2a051d3c5f484",
                    "sha256:5a6883d48a2432c7eed4ffab922d4faa88f4504e19e4431922c48ae8391978eb"
                ]
            }
        },
        "node-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.8.1",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-18T16:49:28.364590484Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:33:54.479426261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:03.20103694Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"3106608fc62f92519578148e872a6862f36ea7b1ef6ac7c1475e2064fe65a9c6\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-03-16T19:34:03.764753805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:08.829481961Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-03-16T19:34:08.937975276Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-03-16T19:34:09.017551603Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:09.099121106Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-18T16:49:25.452239667Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-18T16:49:25.452239667Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-18T16:49:27.933543118Z",
                    "created_by": "RUN |1 GCC=true /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-18T16:49:28.329987118Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-18T16:49:28.364590484Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-18T16:49:28.364590484Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:fb1f755fd9d578cef0a1efa7703e23929c55816b0cfea5257252d2ab748e2def",
                    "sha256:6dc3cd4155cc45aa9651d8690494af7e64b7bedd61a8b89f4065a33e1476da5f",
                    "sha256:a153225bcf3b539412eefc8889b68aaa443d40a2b476cdfee68e8aab3623f59b",
                    "sha256:835737601bedcb49366739029b6627ab6a86b3baa01cf085d156783539149e1d",
                    "sha256:13f375e01067c30b6a7548df97e3ab93ec4c4ee71d948bd4bedf32e2d8c6c7ad",
                    "sha256:dc5e933fd5d6e4f8cec775baf92b92daf53de84c3fdfe26547a2a051d3c5f484",
                    "sha256:5a6883d48a2432c7eed4ffab922d4faa88f4504e19e4431922c48ae8391978eb"
                ]
            }
        },
        "reg": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-12T18:32:20.863887366Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:32:19.443903829Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.644245674Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.778033003Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:20.843736552Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:20.863887366Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:20.863887366Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:2c247c9496b440d49c9341e91f4dcf1b388abec2288c7a2600b4a725b250d3c2",
                    "sha256:f4e24eb3f3cd547a4f9bb33053d45b96cb22b76ce19f893035ff2ee74afce923",
                    "sha256:d7aaad76b178f61303ee0155526db611009ac2454ff2835068f9e962ca3d74f6",
                    "sha256:18213487e53b8bd72acf874d9513a5af31de24aa7ae08a447b6fd467d3b45100",
                    "sha256:a86a8a820884710dd1d25c676ef3276fb7bfb6bc4650925f063f482cb0b860f7"
                ]
            }
        },
        "reg-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.7.0",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-12T18:32:20.863887366Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:29.727141642Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.7.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:38.673211254Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"a3bf3bd218fd77aa91e187ae5c77964820a35c0f58018151aa9653e2fc5b2313\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-02-22T18:25:39.244688492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.31519801Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-02-22T18:25:43.43526074Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-02-22T18:25:43.523957457Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-22T18:25:43.617296024Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:32:19.443903829Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.644245674Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.778033003Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:20.843736552Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:20.863887366Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:20.863887366Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:25927219b4b7e720aa05d0da3de65fa3e718727ed47001906b32d796e567f8b7",
                    "sha256:1194a4b7d67540a3c77e8a4b0b8f9b9318dbccb17a8626b482b737be72875ad5",
                    "sha256:12e09510884d5a5e1450be6bd48a6b160f295c0e9137fbb206a6d93414e724cf",
                    "sha256:2c247c9496b440d49c9341e91f4dcf1b388abec2288c7a2600b4a725b250d3c2",
                    "sha256:f4e24eb3f3cd547a4f9bb33053d45b96cb22b76ce19f893035ff2ee74afce923",
                    "sha256:d7aaad76b178f61303ee0155526db611009ac2454ff2835068f9e962ca3d74f6",
                    "sha256:18213487e53b8bd72acf874d9513a5af31de24aa7ae08a447b6fd467d3b45100",
                    "sha256:a86a8a820884710dd1d25c676ef3276fb7bfb6bc4650925f063f482cb0b860f7"
                ]
            }
        },
        "reg-base": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-04-14T20:20:33.521902911Z",
            "history": [
                {
                    "created": "2023-03-29T18:19:24.348438709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9a4f77dfaba7fd2aa78186e4ef0e7486ad55101cefc1fabbc1b385601bb38920 in / "
                },
                {
                    "created": "2023-03-29T18:19:24.45578926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T20:18:21.039323482Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T20:18:21.039323482Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T20:18:21.40292227Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T20:20:33.508949135Z",
                    "created_by": "COPY /go/bin/hugo /usr/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T20:20:33.521902911Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T20:20:33.521902911Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1417ff83b319fbdae6dd9cd6d8c9c88002dcd75ecf6ec201c8c6894681cf2b5",
                    "sha256:e78cdc0b4f4d70b255579c48ff2b784795ca884753ddf79aa5ebfc4c9963ee5b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:675e8346de27c3013607f34ef8b44fe289bfe45cdf9c541202e53eb263ab7484",
                    "sha256:6cf02868cec67b3eddd00c7275873fed09842dd60d81670a5f95186150b326d2"
                ]
            }
        },
        "reg-base-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-04-14T20:20:33.521902911Z",
            "history": [
                {
                    "created": "2023-03-29T18:19:24.348438709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9a4f77dfaba7fd2aa78186e4ef0e7486ad55101cefc1fabbc1b385601bb38920 in / "
                },
                {
                    "created": "2023-03-29T18:19:24.45578926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T20:18:21.039323482Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-14T20:18:21.039323482Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T20:18:21.40292227Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T20:20:33.508949135Z",
                    "created_by": "COPY /go/bin/hugo /usr/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T20:20:33.521902911Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-04-14T20:20:33.521902911Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1417ff83b319fbdae6dd9cd6d8c9c88002dcd75ecf6ec201c8c6894681cf2b5",
                    "sha256:e78cdc0b4f4d70b255579c48ff2b784795ca884753ddf79aa5ebfc4c9963ee5b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:675e8346de27c3013607f34ef8b44fe289bfe45cdf9c541202e53eb263ab7484",
                    "sha256:6cf02868cec67b3eddd00c7275873fed09842dd60d81670a5f95186150b326d2"
                ]
            }
        },
        "reg-exts": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.8.1",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-21T17:18:10.312690791Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:33:54.479426261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:03.20103694Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"3106608fc62f92519578148e872a6862f36ea7b1ef6ac7c1475e2064fe65a9c6\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-03-16T19:34:03.764753805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:08.829481961Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-03-16T19:34:08.937975276Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-03-16T19:34:09.017551603Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:09.099121106Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T17:18:02.908899013Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:03.106040135Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:03.277540833Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:04.803660265Z",
                    "created_by": "RUN /bin/sh -c apk add dart-sass-embedded --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:05.859199486Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache dart-sass-embedded git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:10.283241885Z",
                    "created_by": "RUN /bin/sh -c npm i -g postcss-cli autoprefixer @fullhuman/postcss-purgecss rtlcss # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:10.312690791Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:10.312690791Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:fb1f755fd9d578cef0a1efa7703e23929c55816b0cfea5257252d2ab748e2def",
                    "sha256:6dc3cd4155cc45aa9651d8690494af7e64b7bedd61a8b89f4065a33e1476da5f",
                    "sha256:a153225bcf3b539412eefc8889b68aaa443d40a2b476cdfee68e8aab3623f59b",
                    "sha256:05015e4985c10f9d20e91674d6c64a5af85dbf441727d1990e88a126bd4c2d24",
                    "sha256:cc799499955e2e3c2dafdc5b6a253123a1c4bca4fa76d1eb782a77bed43b5698",
                    "sha256:28ebb27c409e4c0aac3d8692eb400da573c7da4a42c36f66687727da365ea5c3",
                    "sha256:433b10820fc6320f67052cf5f49a43ae845790a57091845c9f6ac4ec48248cf1",
                    "sha256:6a7149e1be3c0bc10f9679ef20ef05c68e46e45dc93aa89ccb2091021b88e72d",
                    "sha256:d8cf6d30750ac2d223bf442031b758afbfc2e97a2b6dc15ccc8678e2dbb7d678",
                    "sha256:0497f244c87fe07a2ef3d4c4372dff6a0b98683b34c14555541b3c1960266fb3"
                ]
            }
        },
        "reg-exts-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.8.1",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-21T17:18:10.312690791Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:33:54.479426261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:03.20103694Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"3106608fc62f92519578148e872a6862f36ea7b1ef6ac7c1475e2064fe65a9c6\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-03-16T19:34:03.764753805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:08.829481961Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-03-16T19:34:08.937975276Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-03-16T19:34:09.017551603Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:09.099121106Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-21T17:18:02.908899013Z",
                    "created_by": "COPY /usr/local/go /usr/local/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:03.106040135Z",
                    "created_by": "RUN /bin/sh -c ln -s /usr/local/go/bin/go /usr/local/bin/go # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:03.277540833Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:04.803660265Z",
                    "created_by": "RUN /bin/sh -c apk add dart-sass-embedded --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:05.859199486Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache dart-sass-embedded git # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:10.283241885Z",
                    "created_by": "RUN /bin/sh -c npm i -g postcss-cli autoprefixer @fullhuman/postcss-purgecss rtlcss # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:10.312690791Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-21T17:18:10.312690791Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:fb1f755fd9d578cef0a1efa7703e23929c55816b0cfea5257252d2ab748e2def",
                    "sha256:6dc3cd4155cc45aa9651d8690494af7e64b7bedd61a8b89f4065a33e1476da5f",
                    "sha256:a153225bcf3b539412eefc8889b68aaa443d40a2b476cdfee68e8aab3623f59b",
                    "sha256:05015e4985c10f9d20e91674d6c64a5af85dbf441727d1990e88a126bd4c2d24",
                    "sha256:cc799499955e2e3c2dafdc5b6a253123a1c4bca4fa76d1eb782a77bed43b5698",
                    "sha256:28ebb27c409e4c0aac3d8692eb400da573c7da4a42c36f66687727da365ea5c3",
                    "sha256:433b10820fc6320f67052cf5f49a43ae845790a57091845c9f6ac4ec48248cf1",
                    "sha256:6a7149e1be3c0bc10f9679ef20ef05c68e46e45dc93aa89ccb2091021b88e72d",
                    "sha256:d8cf6d30750ac2d223bf442031b758afbfc2e97a2b6dc15ccc8678e2dbb7d678",
                    "sha256:0497f244c87fe07a2ef3d4c4372dff6a0b98683b34c14555541b3c1960266fb3"
                ]
            }
        },
        "reg-go": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-12T18:32:19.370901341Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T08:21:54.624791947Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-02-11T08:21:54.736566954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:20:06.940775686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:44.315191198Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.2.src.tar.gz'; \t\tsha256='4d0e2850d197b4ddad3bdb0196300179d095bb3aefd4dfbc3b36702c3728f8ab'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-03-08T00:21:45.268414342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:45.363059315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:45.918933443Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-03-08T00:21:46.018530108Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:32:18.889517847Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:32:18.889517847Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.149790966Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.353414798Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.370901341Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.370901341Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:d270ab11cf6e38e4a816b0eb37a8db32af4b062c073e93d1c05bdf248999332a",
                    "sha256:8bcdc05896d381bc720a0437d134363841e9a11a113da91039e6a9aff5e5bdd3",
                    "sha256:d63ee118692e679c27135b975589941f498d375965863a54ac973dd5ac5c86ed",
                    "sha256:15a5801431f7f34a2d9922b7aa66f88ed54282493cd6252da85ac0c42c50fc0e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b15e0495d1f4bde14e434e63c1ac200c016cfc838293e46311425018ecd59c43",
                    "sha256:0ca9bcb0b470ba7356c313ff1066094ad8c974412d2f18e4dcabe64eff1241ca"
                ]
            }
        },
        "reg-go-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-12T18:32:19.370901341Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-11T08:21:54.624791947Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-02-11T08:21:54.736566954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:20:06.940775686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.2",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:44.315191198Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.2.src.tar.gz'; \t\tsha256='4d0e2850d197b4ddad3bdb0196300179d095bb3aefd4dfbc3b36702c3728f8ab'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-03-08T00:21:45.268414342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:45.363059315Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-08T00:21:45.918933443Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2023-03-08T00:21:46.018530108Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:32:18.889517847Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-12T18:32:18.889517847Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.149790966Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.353414798Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.370901341Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-12T18:32:19.370901341Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:d270ab11cf6e38e4a816b0eb37a8db32af4b062c073e93d1c05bdf248999332a",
                    "sha256:8bcdc05896d381bc720a0437d134363841e9a11a113da91039e6a9aff5e5bdd3",
                    "sha256:d63ee118692e679c27135b975589941f498d375965863a54ac973dd5ac5c86ed",
                    "sha256:15a5801431f7f34a2d9922b7aa66f88ed54282493cd6252da85ac0c42c50fc0e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b15e0495d1f4bde14e434e63c1ac200c016cfc838293e46311425018ecd59c43",
                    "sha256:0ca9bcb0b470ba7356c313ff1066094ad8c974412d2f18e4dcabe64eff1241ca"
                ]
            }
        },
        "reg-node": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.8.1",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-20T06:28:06.965557256Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:33:54.479426261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:03.20103694Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"3106608fc62f92519578148e872a6862f36ea7b1ef6ac7c1475e2064fe65a9c6\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-03-16T19:34:03.764753805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:08.829481961Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-03-16T19:34:08.937975276Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-03-16T19:34:09.017551603Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:09.099121106Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-20T06:28:06.32226413Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-20T06:28:06.32226413Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-20T06:28:06.713389908Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-20T06:28:06.944703826Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-20T06:28:06.965557256Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-20T06:28:06.965557256Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:fb1f755fd9d578cef0a1efa7703e23929c55816b0cfea5257252d2ab748e2def",
                    "sha256:6dc3cd4155cc45aa9651d8690494af7e64b7bedd61a8b89f4065a33e1476da5f",
                    "sha256:a153225bcf3b539412eefc8889b68aaa443d40a2b476cdfee68e8aab3623f59b",
                    "sha256:916b59d081acb95340b18ceff22e7660136e0bfc97855bf2570d720f2ebcbe3f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5b8b30cacb0f4861ee80d290c5b9aba5216a0bfc00530040fc435e38528b0843",
                    "sha256:32c5a14bb86c0fbfa745f7408b9333f77e24c3f5cff83212cda1f1dbfed9aae3"
                ]
            }
        },
        "reg-node-0.111.3": {
            "architecture": "amd64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NODE_VERSION=19.8.1",
                    "YARN_VERSION=1.22.19"
                ],
                "Entrypoint": [
                    "docker-entrypoint.sh"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "hugo env"
                ],
                "WorkingDir": "/src",
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-03-20T06:28:06.965557256Z",
            "history": [
                {
                    "created": "2023-02-11T04:46:42.449083344Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40887ab7c06977737e63c215c9bd297c0c74de8d12d16ebdf1c3d40ac392f62d in / "
                },
                {
                    "created": "2023-02-11T04:46:42.558343068Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:33:54.479426261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NODE_VERSION=19.8.1",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:03.20103694Z",
                    "created_by": "/bin/sh -c addgroup -g 1000 node     && adduser -u 1000 -G node -s /bin/sh -D node     && apk add --no-cache         libstdc++     && apk add --no-cache --virtual .build-deps         curl     && ARCH= && alpineArch=\"$(apk --print-arch)\"       && case \"${alpineArch##*-}\" in         x86_64)           ARCH='x64'           CHECKSUM=\"3106608fc62f92519578148e872a6862f36ea7b1ef6ac7c1475e2064fe65a9c6\"           ;;         *) ;;       esac   && if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       && ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     && apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3     && for key in       4ED778F539E3634C779C87C6D7062848A1AB005C       141F07595B7B3FFE74309A937405533BE57C7D57       74F12602B6F1C4E913FAA37AD3A89613643B6201       DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7       61FC681DFB92A079F1685E77973F295594EC4689       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     && tar -xf \"node-v$NODE_VERSION.tar.xz\"     && cd \"node-v$NODE_VERSION\"     && ./configure     && make -j$(getconf _NPROCESSORS_ONLN) V=     && make install     && apk del .build-deps-full     && cd ..     && rm -Rf \"node-v$NODE_VERSION\"     && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   && apk del .build-deps   && node --version   && npm --version"
                },
                {
                    "created": "2023-03-16T19:34:03.764753805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV YARN_VERSION=1.22.19",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:08.829481961Z",
                    "created_by": "/bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   && for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && mkdir -p /opt   && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   && apk del .build-deps-yarn   && yarn --version"
                },
                {
                    "created": "2023-03-16T19:34:08.937975276Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:4d192565a7220e135cab6c77fbc1c73211b69f3d9fb37e62857b2c6eb9363d51 in /usr/local/bin/ "
                },
                {
                    "created": "2023-03-16T19:34:09.017551603Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-16T19:34:09.099121106Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"node\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-20T06:28:06.32226413Z",
                    "created_by": "ARG GCC",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-20T06:28:06.32226413Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c apk add --no-cache ca-certificates # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-20T06:28:06.713389908Z",
                    "created_by": "RUN |1 GCC= /bin/sh -c if [[ -n \"$GCC\" ]]; then apk add --no-cache gcc; fi # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-20T06:28:06.944703826Z",
                    "created_by": "COPY /go/bin/hugo /usr/local/bin/hugo # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-20T06:28:06.965557256Z",
                    "created_by": "WORKDIR /src",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-20T06:28:06.965557256Z",
                    "created_by": "CMD [\"/bin/sh\" \"-c\" \"hugo env\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7cd52847ad775a5ddc4b58326cf884beee34544296402c6292ed76474c686d39",
                    "sha256:fb1f755fd9d578cef0a1efa7703e23929c55816b0cfea5257252d2ab748e2def",
                    "sha256:6dc3cd4155cc45aa9651d8690494af7e64b7bedd61a8b89f4065a33e1476da5f",
                    "sha256:a153225bcf3b539412eefc8889b68aaa443d40a2b476cdfee68e8aab3623f59b",
                    "sha256:916b59d081acb95340b18ceff22e7660136e0bfc97855bf2570d720f2ebcbe3f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5b8b30cacb0f4861ee80d290c5b9aba5216a0bfc00530040fc435e38528b0843",
                    "sha256:32c5a14bb86c0fbfa745f7408b9333f77e24c3f5cff83212cda1f1dbfed9aae3"
                ]
            }
        }
    }
}