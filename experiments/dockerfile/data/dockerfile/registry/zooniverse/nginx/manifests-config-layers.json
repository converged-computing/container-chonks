{
    "manifests": {
        "1.19": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8285,
                "digest": "sha256:218079a929feaa1c5c337c63e46cca27b8587c09031a0f7cc494399b3eb3dd3c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27108069,
                    "digest": "sha256:a076a628af6f7dcabc536bee373c0d9b48d9f0516788e64080c4e841746e6ce6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26500247,
                    "digest": "sha256:0732ab25fa22b144865915d3eacc0552e30495549b9f897be8331511c3131ca6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 600,
                    "digest": "sha256:d7f36f6fe38fea767000aa5d275a6f3176b1be06b2e2aad67a24e32c560535e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 895,
                    "digest": "sha256:f72584a26f32a61cd0e3968e4204f0c9043abf72fda53d47f7423f5eaaaca614"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 667,
                    "digest": "sha256:7125e4df9063a34f9ce6445faee4da15a0974a60605de80ea40402cd2aca9943"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150,
                    "digest": "sha256:01b8f6b0ac0da2acb7a0c3a9efed95a33f280e89c5841b72b9e68d470f5874c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 171,
                    "digest": "sha256:a7cf2dbd67b0b5b3bd1bf269a518164c710a1cc6096ac258a9ac7d024cfdb6cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159,
                    "digest": "sha256:745a84bf87bc736125697787799e8dcf0f7e7be27721fc3f259bcc61febb4b7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 573,
                    "digest": "sha256:99c30df3065d2aba4408efb2b7ffe9293aa0bc8c69ac1ca31c9c419a3a5af63a"
                }
            ]
        },
        "1.19.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8311,
                "digest": "sha256:122b8800c54f74653d5cf9c64f6d15b533be2900c930ae0b36d3f823b3dde93f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27098265,
                    "digest": "sha256:8559a31e96f442f2c7b6da49d6c84705f98a39d8be10b3f5f14821d0ee8417df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26212264,
                    "digest": "sha256:8d69e59170f7dac013ef436408ed9ddc688dd9ad3bc030bd868add55a77e25f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 538,
                    "digest": "sha256:3f9f1ec1d262b2889a5fc19bf295f48346dbd8238e22f3eb3dd8a907ca002372"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 902,
                    "digest": "sha256:d1f5ff4f210df5d5f6bf48438d33ba0d086c4e08a803acf22292ccd4ede92bd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 672,
                    "digest": "sha256:1e22bfa8652e0db3a316e2c946ea048b60560630d4faa58405da4c5fcdb3ff07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:0016cde59c9abd66ab320241ac47b974e32bf8a864683df6717b53987a19b1cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 174,
                    "digest": "sha256:4e57a09434e9deb6711a7a1320d0dc01879fbcaf72db80a7629ad391006d571d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:35f91e6aacd6d35029f689ab78777f82afa62171e3c71cdfa345c2043c10684b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 575,
                    "digest": "sha256:3b433284485ec3ccba84ad4ab302d286c4e7ccbbf111329502bf39b21b7ec0f8"
                }
            ]
        },
        "1.20": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8437,
                "digest": "sha256:f99e0443e7d57831f89a664f47f1ad689e00532bd92956649cdf53453043bb28"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31379476,
                    "digest": "sha256:214ca5fb90323fe769c63a12af092f2572bf1c6b300263e09883909fc865d260"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25338790,
                    "digest": "sha256:50836501937ff210a4ee8eedcb17b49b3b7627c5b7104397b2a6198c569d9231"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 600,
                    "digest": "sha256:d838e0361e8efc1fb3ec2b7aed16ba935ee9b62b6631c304256b0326c048a330"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 893,
                    "digest": "sha256:fcc7a415e354b2e1a2fcf80005278d0439a2f87556e683bb98891414339f9bee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 664,
                    "digest": "sha256:dc73b4533047ea21262e7d35b3b2598e3d2c00b6d63426f47698fe2adac5b1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1394,
                    "digest": "sha256:e8750203e98541223fb970b2b04058aae5ca11833a93b9f3df26bd835f66d223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:409112c9a2eeb305822d5857dc147ed7ee1ace7f3aff901a9a68746bf27ee5a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:9f9b90fae206963c209f14d4862250138ad0b59bc85d3f6034e78f4f91ad35a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:c89846207e9ff4242063e795a693e2ecddc18d59314d26f922f3da1719e22911"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 582,
                    "digest": "sha256:accbba8745ab7bc3f1b2ce6339054450227ada13e87219b234f3d076842b1a79"
                }
            ]
        },
        "certbot-renew": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6178,
                "digest": "sha256:4a37b862424730369f45ce9ab27fdc53d5b0feacc091aeb830670c7295ab29bc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 67103479,
                    "digest": "sha256:cf0a75889057c9255505ce5ef36a0d00ac480c945557adfb12674417a0d3efed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72621,
                    "digest": "sha256:c8de9902faf0bd04893447386c8aeeb1e551b3b6622470f4eb838428359672d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 364,
                    "digest": "sha256:a3c0f7711c5e6b6f9181958c18daa56809bfa45a03f3a45da4cd0d83675dd896"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 675,
                    "digest": "sha256:e6391432e12cf7305a906d4264230c98cfe04f9a96ba2d97305964ad1b709986"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:624ce029a17f47b8a009a436b1190e11820261f63408a1e7e213d30845c1d0ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 20351796,
                    "digest": "sha256:33ee38e9e3be1001782e5f5f4d58658be59c5d6096bae1a3ee8e661e3428f5fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56303701,
                    "digest": "sha256:e26b62709fc82867e90ee57f5ed939fe75a572502b81656872cc0d18e037ae08"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 357,
                    "digest": "sha256:3f6d784498341be1742ab10f47bbd0e1cd44dbb8927cfe23694b637eb22cc8b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248,
                    "digest": "sha256:a9d40e4f1855f9633440fa4af79b78c5ed50bf59482cdeda0d99ae9c0b9b34aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217,
                    "digest": "sha256:d8853842ed2b27e4ce708d2abe0fd577fdc5aa2d4d2f75c8ce4fe2bdec41296a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 272,
                    "digest": "sha256:5e5fab82bcb831436b06cc11d95592bb172d246a5c7c2fe439cf710c687ba7ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 485,
                    "digest": "sha256:ea5549c95dedf51d02a9c233e636a32ec60199a030d4b6ea9d889e7af642d66c"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8437,
                "digest": "sha256:f99e0443e7d57831f89a664f47f1ad689e00532bd92956649cdf53453043bb28"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31379476,
                    "digest": "sha256:214ca5fb90323fe769c63a12af092f2572bf1c6b300263e09883909fc865d260"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25338790,
                    "digest": "sha256:50836501937ff210a4ee8eedcb17b49b3b7627c5b7104397b2a6198c569d9231"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 600,
                    "digest": "sha256:d838e0361e8efc1fb3ec2b7aed16ba935ee9b62b6631c304256b0326c048a330"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 893,
                    "digest": "sha256:fcc7a415e354b2e1a2fcf80005278d0439a2f87556e683bb98891414339f9bee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 664,
                    "digest": "sha256:dc73b4533047ea21262e7d35b3b2598e3d2c00b6d63426f47698fe2adac5b1d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1394,
                    "digest": "sha256:e8750203e98541223fb970b2b04058aae5ca11833a93b9f3df26bd835f66d223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:409112c9a2eeb305822d5857dc147ed7ee1ace7f3aff901a9a68746bf27ee5a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:9f9b90fae206963c209f14d4862250138ad0b59bc85d3f6034e78f4f91ad35a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:c89846207e9ff4242063e795a693e2ecddc18d59314d26f922f3da1719e22911"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 582,
                    "digest": "sha256:accbba8745ab7bc3f1b2ce6339054450227ada13e87219b234f3d076842b1a79"
                }
            ]
        },
        "stable": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5888,
                "digest": "sha256:7bfa948221d8b725cad1fc11807b03118b2882cd984111d1b4ccd77e67a05b45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73162466,
                    "digest": "sha256:28bfaceaff9b7464b1e768b0af7e1efe7877a34f238f935c36978a1ecf82c9b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 72656,
                    "digest": "sha256:ac540055f2f8da75b6587a88763021178d876a2b789ff0c696fbdb62485b62cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 631,
                    "digest": "sha256:2965585ef8b8370dc8c443e35c743ba723ee427c515535e3ff35d898804cacf9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:2416bb9f3ad2b5b0c700a4412e2ffbb671f001c45b4b7433ecdcc9c352847814"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:93b55a6a680757144baae1671d00d4328eee63e790ab36b27d8d52ceb62b179f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30190569,
                    "digest": "sha256:60815d7fb318f34aee96270bca409c295c96ba59f1975c7fb620cce7c7e09d67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 357,
                    "digest": "sha256:57d6a023974800f1065f2d45972610e34c3de966416455083861fc41eee1f43c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250,
                    "digest": "sha256:2bb7fcd2c98db790994c48e6840345cb066e1b139da05472bb65a18726221e45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 221,
                    "digest": "sha256:9eb686983b74202d1cd21a4b7dca0d156b5be5affc8356c6af41e5ef72472054"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 275,
                    "digest": "sha256:76973e00cd6ed877ddca8318967b0fb32caebc8cf9677766ef1f33ecc173469c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 274,
                    "digest": "sha256:d1d1695a45370c685f9c46ca9a95c31805724ad5e2d1e1df2a4fe35ea595128a"
                }
            ]
        },
        "xenial": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6172,
                "digest": "sha256:a86c030944419c11a3f6e359b3d883bdcf33f78ef1b60780cad45c3ea75e54b4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43122477,
                    "digest": "sha256:b234f539f7a1d65eabae1617e63c81ac01768abffd48b5cbbf7166efca6a3429"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 853,
                    "digest": "sha256:55172d420b43cf03feeec11bcc917c7ddfc192036102e065ab57aa9abb95311e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 619,
                    "digest": "sha256:5ba5bbeb6b91e2676c98255c6babc66d7b05cac40185eeba4b3773199c701da0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:43ae2841ad7a7fd1aeae30028105cac7f6ee0ec955e5229e52b3333fea3c17b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:f6c9c6de41905e9a66f2bc2c4a19858c8dc5b0a94f01e03eafc719afe25888aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38116089,
                    "digest": "sha256:bb58fa38ce2eec542a800e9f3a67d0d300595f84f360739f8138dfd382204088"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 83337205,
                    "digest": "sha256:d77ac734b4dcc043245a0b5b33ee0089848774134024da519ac72da60f9800b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 358,
                    "digest": "sha256:c34ac22d1b142ece92979a3c411f632fdb58bfce19641f36d6552e68ee4e8e6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251,
                    "digest": "sha256:e715847372c981138cb865e35df9ddde4e952e8a271a0e48177cbb25f2eda089"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 222,
                    "digest": "sha256:e191bd6db306a96aa29009ab840ca109d67b69654986eb0c1711f9c6edc4e1f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 275,
                    "digest": "sha256:1175f10da6c70b87db6efa248ad6b9d5527437d960a51dc51a48501716796fb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 487,
                    "digest": "sha256:fb9ba5b85d5e9b8891450942b2ce2b986851db0f34d866134a9949bd1831a06f"
                }
            ]
        }
    },
    "tags": [
        "1.19",
        "1.19.0",
        "1.20",
        "certbot-renew",
        "latest",
        "stable",
        "xenial"
    ],
    "configs": {
        "1.19": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.6",
                    "NJS_VERSION=0.5.0",
                    "PKG_RELEASE=1~buster"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:555b0439e2572344b32c5e654219b7e56e954ddc4126c0a8b5c78c9b2fb4c94a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.6",
                    "NJS_VERSION=0.5.0",
                    "PKG_RELEASE=1~buster"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:eae99b467220eff0787a20816c25a894f655c0a22489c3a3dda8c932408806b9 in /etc/nginx/nginx.conf "
                ],
                "Image": "sha256:555b0439e2572344b32c5e654219b7e56e954ddc4126c0a8b5c78c9b2fb4c94a",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2021-01-14T11:11:53.940770893Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:32:51.692277281Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:422aca8901ae3d869a815051cea7f1e4c0204fad16884e7cd01da57d142f2e3a in / "
                },
                {
                    "created": "2021-01-12T00:32:51.939863901Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T10:16:41.330098738Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T10:16:41.541765812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.6",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T10:16:41.776893718Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.5.0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T10:16:42.006590227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T10:17:39.212666389Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|i386|arm64)             echo \"deb https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2021-01-12T10:17:39.610333911Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:e7e183879c35719c18aa7f733651029fbcc55f5d8c22a877ae199b389425789e in / "
                },
                {
                    "created": "2021-01-12T10:17:40.035711007Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2021-01-12T10:17:40.431083215Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2021-01-12T10:17:40.716094834Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T10:17:41.028430317Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T10:17:41.327345084Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T10:17:41.649267496Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-14T11:11:52.223644847Z",
                    "created_by": "/bin/sh -c mkdir -p /etc/nginx-sites"
                },
                {
                    "created": "2021-01-14T11:11:53.014419346Z",
                    "created_by": "/bin/sh -c echo \"listen 80;\" > /etc/nginx/listen.default.conf"
                },
                {
                    "created": "2021-01-14T11:11:53.78238497Z",
                    "created_by": "/bin/sh -c ln -s /etc/nginx/listen.default.conf /etc/nginx/ssl.default.conf"
                },
                {
                    "created": "2021-01-14T11:11:53.940770893Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:eae99b467220eff0787a20816c25a894f655c0a22489c3a3dda8c932408806b9 in /etc/nginx/nginx.conf "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cb42413394c4059335228c137fe884ff3ab8946a014014309676c25e3ac86864",
                    "sha256:1c91bf69a08b515a1f9c36893d01bd3123d896b38b082e7c21b4b7cc7023525a",
                    "sha256:56bc37de0858bc2a5c94db9d69b85b4ded4e0d03684bb44da77e0fe93a829292",
                    "sha256:3e5288f7a70f526d6bceb54b3568d13c72952936cebfe28ddcb3386fe3a236ba",
                    "sha256:85fcec7ef3efbf3b4e76a0f5fb8ea14eca6a6c7cbc0c52a1d401ad5548a29ba5",
                    "sha256:0aeac00912b5cbafb7eebb4fbf7f0c980f5136535d6068304d7f1cc950155065",
                    "sha256:4f0c9a127ef04ee857bfc3508f8e35a5463ddb08c39ce6cfaa840cf3c12092db",
                    "sha256:68e4b9057ff7426d83e48937c60ced7ece5bbed7e252c14ec0b94e8b1e6cc88f",
                    "sha256:6e71e4762885aa513a62fb9da1df30505cbd09c08ed782c9c928f2576cada9dc"
                ]
            }
        },
        "1.19.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.0",
                    "NJS_VERSION=0.4.1",
                    "PKG_RELEASE=1~buster"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:32a3e06bf51d350a0de22396ed80ef1021df2028d5137fc02078a00fd84397f3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.19.0",
                    "NJS_VERSION=0.4.1",
                    "PKG_RELEASE=1~buster"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:eae99b467220eff0787a20816c25a894f655c0a22489c3a3dda8c932408806b9 in /etc/nginx/nginx.conf "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:32a3e06bf51d350a0de22396ed80ef1021df2028d5137fc02078a00fd84397f3",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGTERM"
            },
            "created": "2020-12-10T11:19:52.98329264Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-06-09T01:20:56.175917193Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4d35f6c8bbbe6801cc5f44989730fb6d349a644ecb36eca481e7df25842d6321 in / "
                },
                {
                    "created": "2020-06-09T01:20:56.423338297Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T16:57:13.600953942Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T16:57:13.787285299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T16:57:13.987729051Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.4.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T16:57:14.199374396Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~buster",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T16:57:41.112901286Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         ha.pool.sks-keyservers.net         hkp://keyserver.ubuntu.com:80         hkp://p80.pool.sks-keyservers.net:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|i386)             echo \"deb https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/mainline/debian/ buster nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2020-06-09T16:57:41.40225645Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:d68fadb480cbc781c3424ce3e42e1b5be80133bdcce2569655e90411a4045da2 in / "
                },
                {
                    "created": "2020-06-09T16:57:41.618573088Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:b96f664d94ca7bbe69241468d85ee421e9d310ffa36f3b04c762dcce9a42c7f1 in /docker-entrypoint.d "
                },
                {
                    "created": "2020-06-09T16:57:41.863566469Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:cc7d4f1d03426ebd11e960d6a487961e0540059dcfad14b33762f008eed03788 in /docker-entrypoint.d "
                },
                {
                    "created": "2020-06-09T16:57:42.042805946Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T16:57:42.25507629Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T16:57:42.442754761Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGTERM",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T16:57:42.632836191Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-10T11:19:51.2485853Z",
                    "created_by": "/bin/sh -c mkdir -p /etc/nginx-sites"
                },
                {
                    "created": "2020-12-10T11:19:52.022219994Z",
                    "created_by": "/bin/sh -c echo \"listen 80;\" > /etc/nginx/listen.default.conf"
                },
                {
                    "created": "2020-12-10T11:19:52.81247092Z",
                    "created_by": "/bin/sh -c ln -s /etc/nginx/listen.default.conf /etc/nginx/ssl.default.conf"
                },
                {
                    "created": "2020-12-10T11:19:52.98329264Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:eae99b467220eff0787a20816c25a894f655c0a22489c3a3dda8c932408806b9 in /etc/nginx/nginx.conf "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:13cb14c2acd34e45446a50af25cb05095a17624678dbafbcc9e26086547c1d74",
                    "sha256:d4cf327d8ef50eb2e31b646f17217a3baf455391bfd59bce47df50c770ff8c07",
                    "sha256:7c7d7f4461826dd22f9234a81f9bed9c0bdb0b70b3ce66228bfc87418a9b8313",
                    "sha256:9040af41bb6677b114134de15ddeb10b070eb1f940dbbe277574ee154d89f6b9",
                    "sha256:f978b9ed3f26a49b55cf4849e4cadb29335be45a633cbe95a2f4e445e70086bf",
                    "sha256:9d80254355bddd07ef9896cfb2c35db6298e09b4652d1873e5968a392f6ddffb",
                    "sha256:a500673c4b93936650775bc64dde4027fec1e88729d762c275491f240f29ed5e",
                    "sha256:750ef4ee6398e51e07e279527aaa9013a35bd2f290566a4eccafea2d14fdac3a",
                    "sha256:efad4fc06a0dea27b740b4eb7fc8f9d05d6c290262f1d77f6318551e3fc14b37"
                ]
            }
        },
        "1.20": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.20.2",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:a69e22bd87ecf29462d8a8d475ab118d4f3db4633dda391b02a5fe38fc0d4408",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.20.2",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:eae99b467220eff0787a20816c25a894f655c0a22489c3a3dda8c932408806b9 in /etc/nginx/nginx.conf "
                ],
                "Image": "sha256:a69e22bd87ecf29462d8a8d475ab118d4f3db4633dda391b02a5fe38fc0d4408",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2024-01-28T20:37:13.1832688Z",
            "docker_version": "20.10.22",
            "history": [
                {
                    "created": "2022-05-11T01:20:16.520708229Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4a0bb88956083aa56032fdd9601d9b66c39b18c896ba35ea33594cd75621640a in / "
                },
                {
                    "created": "2022-05-11T01:20:16.833449474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T05:04:29.216415069Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T05:05:20.5186653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.20.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:58.109357274Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:58.209807672Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.079017297Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-05-17T22:37:16.308331577Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-05-17T22:37:16.42037498Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.526730341Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.63286206Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.723840482Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.816451964Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.912604472Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:17.011072851Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-28T20:37:11.811094859Z",
                    "created_by": "/bin/sh -c mkdir -p /etc/nginx-sites"
                },
                {
                    "created": "2024-01-28T20:37:12.403355474Z",
                    "created_by": "/bin/sh -c echo \"listen 80;\" > /etc/nginx/listen.default.conf"
                },
                {
                    "created": "2024-01-28T20:37:13.024744841Z",
                    "created_by": "/bin/sh -c ln -s /etc/nginx/listen.default.conf /etc/nginx/ssl.default.conf"
                },
                {
                    "created": "2024-01-28T20:37:13.1832688Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:eae99b467220eff0787a20816c25a894f655c0a22489c3a3dda8c932408806b9 in /etc/nginx/nginx.conf "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fd95118eade99a75b949f634a0994e0f0732ff18c2573fabdfc8d4f95b092f0e",
                    "sha256:c2a3d4a53f9adaef9826a74511dcab96c18c6cab06d39270b82dcd2b0c496e5f",
                    "sha256:a64d597d6b14cfa4291fb73cbe9c998610d37d049b34b9e6271f0b72a893ebb2",
                    "sha256:4f49c6d6dd075585b63d71ad3e63a3cc9ae2c3319a01ecb9ca1fbc78768d4b7b",
                    "sha256:881700cb7ab2ce8da6ae29674416aa6dbe6ce0a652a9a81a9d5aefc36da122ee",
                    "sha256:07ef16952879508db7972ea8a2815a3bc8caea4950c0195223d67ea938b44957",
                    "sha256:6e1064b2a248c0dd12cb4456cd3d17ba0b6155621f89521556bbc25bc5cdeac7",
                    "sha256:04070e0be981624cd60a8bdc2b3572c673b009ac32b338ba63dfe6811e539d74",
                    "sha256:42e5a2a2d1e78a3c7dd980a7f14f8860271e3061616edc7ee54d4e16b0988f65",
                    "sha256:f09052520d6a728465c6fdfcc3cbe7e3abc0e0157f33981430965a1131d0359b"
                ]
            }
        },
        "certbot-renew": {
            "architecture": "amd64",
            "config": {
                "Hostname": "72cb11c66133",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": null,
                "ArgsEscaped": true,
                "Image": "sha256:23cd20a2915c6fc19304685cb2f57b63609275c267486bb6f3555506d3689b45",
                "Volumes": {
                    "/var/log/nginx/": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/bin/sh",
                    "-c",
                    "/entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "container": "8a3bb37b13176c3611ec5053d6fd416003844846c82cfe261b328b95d4d04073",
            "container_config": {
                "Hostname": "72cb11c66133",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENTRYPOINT [\"/bin/sh\" \"-c\" \"/entrypoint.sh\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:23cd20a2915c6fc19304685cb2f57b63609275c267486bb6f3555506d3689b45",
                "Volumes": {
                    "/var/log/nginx/": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/bin/sh",
                    "-c",
                    "/entrypoint.sh"
                ],
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-05-22T10:44:43.359257567Z",
            "docker_version": "17.03.1-ee-2",
            "history": [
                {
                    "created": "2017-05-15T16:42:44.590674313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:352ee0cc1cc352d862c55cade419e2e7b64a63c663b896d8014efdf44008bce4 in / "
                },
                {
                    "created": "2017-05-15T16:42:46.297080033Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2017-05-15T16:42:47.615558439Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-05-15T16:42:49.024475091Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2017-05-15T16:42:50.343718001Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2017-05-15T16:42:51.0075547Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-22T10:43:31.919156252Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get -y -q install         nginx         logrotate         supervisor         openssl         curl         &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-05-22T10:44:42.157648823Z",
                    "created_by": "/bin/sh -c curl -o /usr/local/bin/certbot-auto https://dl.eff.org/certbot-auto &&     chmod +x /usr/local/bin/certbot-auto &&     yes y | /usr/local/bin/certbot-auto --os-packages-only &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-05-22T10:44:42.407695247Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bfd4bf548550cccf15e6fa9f25f34b0f0577fd8569f043160db69ee1a8af2722 in /etc/logrotate.d/nginx "
                },
                {
                    "created": "2017-05-22T10:44:42.543182521Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ceff82c0d03a7c0015097a1c9ee5470a95ce98998fd48ed53bd837bcec100cbe in /etc/supervisor/conf.d/nginx.conf "
                },
                {
                    "created": "2017-05-22T10:44:42.685469061Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5edfcb4d7eea2f83e98344d465d5655db18d2c5f1178e3a60d7a00eb92861a in /etc/supervisor/conf.d/cron.conf "
                },
                {
                    "created": "2017-05-22T10:44:42.842222299Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c618a63b165c87a2adb5f6f4e09aa7a1710c4b423559315032016b75cac592f7 in /etc/nginx/ssl.default.conf "
                },
                {
                    "created": "2017-05-22T10:44:42.974336948Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2c454f3b07b4a6ec0a24e90dfe120a70d011d1d355aeef37f6c18a4b14aeb233 in /entrypoint.sh "
                },
                {
                    "created": "2017-05-22T10:44:43.094125448Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-22T10:44:43.225773718Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/log/nginx/]",
                    "empty_layer": true
                },
                {
                    "created": "2017-05-22T10:44:43.359257567Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/bin/sh\" \"-c\" \"/entrypoint.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a8e78858b03ba02c3df71d555f90057f890495aabc86e7a39396c68c87ed5ff2",
                    "sha256:99840408c5ea26a638e0a78411a944e72b483aa2b4c3eb12ad896ea39a6cc1a1",
                    "sha256:a30ab2bcda94d94af440a8fad67ec8f403b09cabacc0c3c4710abc78ac0f3ea1",
                    "sha256:0fb55a72eab219b02e9ddcab55c3d70edd7351ccb89ac9d56f507c04b1374f03",
                    "sha256:776d5289b76ef580f4e84f743792372dfa2cd72575c32b51e7eec6bf5b9c0987",
                    "sha256:0a1681a79fadf741932caec37f4fa875a44d4caf97f05dda2e496c9489a21659",
                    "sha256:a4b85cd2ca0747db019591998bc8b750ef4d4f133dc47e6053ca3ca0af948676",
                    "sha256:ced3d749c4644fdb5b05cb8e1b523b6c2a9ddc687306a9b2783141a5ba9d5fdf",
                    "sha256:9cd9f27269b92a3400bfb7f232c0ff192d4c186c71d2bb30c3a895330a264722",
                    "sha256:27e78ca4a522aaeb5dfe6893019d8294e98bb8ea5afdba9da874cf5028faaf80",
                    "sha256:1e84eb2e4f80ef6688abb96036d8237c4707ec11a68f6e0cc459e4ff68f5c297",
                    "sha256:c748c4ef2f599d9cd7d2b5f03c9206b6f68aff3710996e68a43711f0373d0ace"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.20.2",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "nginx",
                    "-g",
                    "daemon off;"
                ],
                "Image": "sha256:a69e22bd87ecf29462d8a8d475ab118d4f3db4633dda391b02a5fe38fc0d4408",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "NGINX_VERSION=1.20.2",
                    "NJS_VERSION=0.7.3",
                    "PKG_RELEASE=1~bullseye"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:eae99b467220eff0787a20816c25a894f655c0a22489c3a3dda8c932408806b9 in /etc/nginx/nginx.conf "
                ],
                "Image": "sha256:a69e22bd87ecf29462d8a8d475ab118d4f3db4633dda391b02a5fe38fc0d4408",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/docker-entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {
                    "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
                },
                "StopSignal": "SIGQUIT"
            },
            "created": "2024-01-28T20:37:13.1832688Z",
            "docker_version": "20.10.22",
            "history": [
                {
                    "created": "2022-05-11T01:20:16.520708229Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4a0bb88956083aa56032fdd9601d9b66c39b18c896ba35ea33594cd75621640a in / "
                },
                {
                    "created": "2022-05-11T01:20:16.833449474Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T05:04:29.216415069Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-11T05:05:20.5186653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NGINX_VERSION=1.20.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:58.109357274Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NJS_VERSION=0.7.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:36:58.209807672Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.079017297Z",
                    "created_by": "/bin/sh -c set -x     && addgroup --system --gid 101 nginx     && adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx     && apt-get update     && apt-get install --no-install-recommends --no-install-suggests -y gnupg1 ca-certificates     &&     NGINX_GPGKEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62;     found='';     for server in         hkp://keyserver.ubuntu.com:80         pgp.mit.edu     ; do         echo \"Fetching GPG key $NGINX_GPGKEY from $server\";         apt-key adv --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$NGINX_GPGKEY\" && found=yes && break;     done;     test -z \"$found\" && echo >&2 \"error: failed to fetch GPG key $NGINX_GPGKEY\" && exit 1;     apt-get remove --purge --auto-remove -y gnupg1 && rm -rf /var/lib/apt/lists/*     && dpkgArch=\"$(dpkg --print-architecture)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}+${NJS_VERSION}-${PKG_RELEASE}     \"     && case \"$dpkgArch\" in         amd64|arm64)             echo \"deb https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list             && apt-get update             ;;         *)             echo \"deb-src https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list                         && tempDir=\"$(mktemp -d)\"             && chmod 777 \"$tempDir\"                         && savedAptMark=\"$(apt-mark showmanual)\"                         && apt-get update             && apt-get build-dep -y $nginxPackages             && (                 cd \"$tempDir\"                 && DEB_BUILD_OPTIONS=\"nocheck parallel=$(nproc)\"                     apt-get source --compile $nginxPackages             )                         && apt-mark showmanual | xargs apt-mark auto > /dev/null             && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; }                         && ls -lAFh \"$tempDir\"             && ( cd \"$tempDir\" && dpkg-scanpackages . > Packages )             && grep '^Package: ' \"$tempDir/Packages\"             && echo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list             && apt-get -o Acquire::GzipIndexes=false update             ;;     esac         && apt-get install --no-install-recommends --no-install-suggests -y                         $nginxPackages                         gettext-base                         curl     && apt-get remove --purge --auto-remove -y && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/nginx.list         && if [ -n \"$tempDir\" ]; then         apt-get purge -y --auto-remove         && rm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list;     fi     && ln -sf /dev/stdout /var/log/nginx/access.log     && ln -sf /dev/stderr /var/log/nginx/error.log     && mkdir /docker-entrypoint.d"
                },
                {
                    "created": "2022-05-17T22:37:16.308331577Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "
                },
                {
                    "created": "2022-05-17T22:37:16.42037498Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.526730341Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.63286206Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "
                },
                {
                    "created": "2022-05-17T22:37:16.723840482Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.816451964Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:16.912604472Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-17T22:37:17.011072851Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-28T20:37:11.811094859Z",
                    "created_by": "/bin/sh -c mkdir -p /etc/nginx-sites"
                },
                {
                    "created": "2024-01-28T20:37:12.403355474Z",
                    "created_by": "/bin/sh -c echo \"listen 80;\" > /etc/nginx/listen.default.conf"
                },
                {
                    "created": "2024-01-28T20:37:13.024744841Z",
                    "created_by": "/bin/sh -c ln -s /etc/nginx/listen.default.conf /etc/nginx/ssl.default.conf"
                },
                {
                    "created": "2024-01-28T20:37:13.1832688Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:eae99b467220eff0787a20816c25a894f655c0a22489c3a3dda8c932408806b9 in /etc/nginx/nginx.conf "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fd95118eade99a75b949f634a0994e0f0732ff18c2573fabdfc8d4f95b092f0e",
                    "sha256:c2a3d4a53f9adaef9826a74511dcab96c18c6cab06d39270b82dcd2b0c496e5f",
                    "sha256:a64d597d6b14cfa4291fb73cbe9c998610d37d049b34b9e6271f0b72a893ebb2",
                    "sha256:4f49c6d6dd075585b63d71ad3e63a3cc9ae2c3319a01ecb9ca1fbc78768d4b7b",
                    "sha256:881700cb7ab2ce8da6ae29674416aa6dbe6ce0a652a9a81a9d5aefc36da122ee",
                    "sha256:07ef16952879508db7972ea8a2815a3bc8caea4950c0195223d67ea938b44957",
                    "sha256:6e1064b2a248c0dd12cb4456cd3d17ba0b6155621f89521556bbc25bc5cdeac7",
                    "sha256:04070e0be981624cd60a8bdc2b3572c673b009ac32b338ba63dfe6811e539d74",
                    "sha256:42e5a2a2d1e78a3c7dd980a7f14f8860271e3061616edc7ee54d4e16b0988f65",
                    "sha256:f09052520d6a728465c6fdfcc3cbe7e3abc0e0157f33981430965a1131d0359b"
                ]
            }
        },
        "stable": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": null,
                "ArgsEscaped": true,
                "Image": "sha256:5acfdbf1ebaf894dea54ffe18c0fb98962c2ce95cbe18fb3eb887060b843d8b1",
                "Volumes": {
                    "/var/log/nginx/": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/bin/sh",
                    "-c",
                    "/entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "cf1b28a828a8ffa31c7eb66ba718db4187a294c8d5f66ce4f3b4c1906959121c",
            "container_config": {
                "Hostname": "cf1b28a828a8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENTRYPOINT [\"/bin/sh\" \"-c\" \"/entrypoint.sh\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5acfdbf1ebaf894dea54ffe18c0fb98962c2ce95cbe18fb3eb887060b843d8b1",
                "Volumes": {
                    "/var/log/nginx/": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/bin/sh",
                    "-c",
                    "/entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-07-04T13:34:32.914333231Z",
            "docker_version": "18.03.1-ee-1-tp5",
            "history": [
                {
                    "created": "2018-06-05T21:21:33.478951491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c65bdbcf1318520e7af157cb00317c8312ec16bcaf181d0db919c45f0d7a85e in / "
                },
                {
                    "created": "2018-06-05T21:21:34.404410473Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-06-05T21:21:35.061060868Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-05T21:21:35.763627341Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-06-05T21:21:36.427695954Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-06-05T21:21:36.655541773Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-04T13:34:29.776428845Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get install -y -q software-properties-common &&     add-apt-repository ppa:nginx/stable &&     apt-get update &&     apt-get -y -q install nginx logrotate supervisor openssl &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-04T13:34:30.596531721Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:57624f2fe7a0310214c5655cc4ce13d085e4e220c5b7e757d11caf61c83bcc94 in /etc/logrotate.d/nginx "
                },
                {
                    "created": "2018-07-04T13:34:30.975369872Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2f83fcfc4b887f3fab1b3b1dabe4c45b04acfb10b0d993c4cdc0f2862a32766 in /etc/supervisor/conf.d/nginx.conf "
                },
                {
                    "created": "2018-07-04T13:34:31.300438505Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:416985967dd7e1dc3324731642bee904d9052069c09967cf993362ceec51cead in /etc/supervisor/conf.d/cron.conf "
                },
                {
                    "created": "2018-07-04T13:34:31.663910276Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f0e3f20c689383be9dcc21aca7295f3f0de66853e3c5c205ecb1d9cee61d8879 in /etc/nginx/ssl.default.conf "
                },
                {
                    "created": "2018-07-04T13:34:32.077253715Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9a98b82a3a86b73fdaaf58496ce721236154f65aef1352686841d0e5e746336f in /entrypoint.sh "
                },
                {
                    "created": "2018-07-04T13:34:32.362641449Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-04T13:34:32.604593163Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/log/nginx/]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-04T13:34:32.914333231Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/bin/sh\" \"-c\" \"/entrypoint.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:04964fddc9461e6657e6fb372f96ca77e671871829ed453d933a03c491e70803",
                    "sha256:a4aaef726d022d0d7e49c09bebf4a619d6db41bb05cc21d2f6b86d510e2cf3b3",
                    "sha256:705419d10b1391753cc659618c6c76deae49e55513714025007440a65d4ed3fd",
                    "sha256:6ec525dfd0603634b8e0e7eec752e43f9ab72460f0e3cf29beeba822d708851b",
                    "sha256:70d93396f87f34c5b8fa4080bbf22d06cce8c05341a6b11c2e03c6d4d3959747",
                    "sha256:f40aeef760e3269b35ec18100cc6c69164802c065e94473a0769b237191fcd6f",
                    "sha256:7aea040e7f6c185df965b5c6db7116a28d64b9a26b6cf7096796dc347f8919cc",
                    "sha256:156a282399da8374af145350f7e3e05fdb7239af63fe3688ae79464da9bfca3c",
                    "sha256:9df6884b0e7bdc7ed8eb07ce9c854b39d1320814b27a32a808d3aad3aa6e28b1",
                    "sha256:1fa2dec363c76902bb26f7431c3e861dd5c2d9834bff8078494fca82d9cc6340",
                    "sha256:7b8c13af59c76f2e9cd2ea48058c1b43ae9c481cf8a9a69a5c042b30b7df800e"
                ]
            }
        },
        "xenial": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": null,
                "ArgsEscaped": true,
                "Image": "sha256:b555fae76b9ffb2f6c1d708472f16ffb40f8a29b38e8c8bf5b73fb56985632d1",
                "Volumes": {
                    "/var/log/nginx/": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/bin/sh",
                    "-c",
                    "/entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "e44b7eba45d20f6101b4b1488a810e684edf45dca9f0b4a34719fa9dec010773",
            "container_config": {
                "Hostname": "e44b7eba45d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "80/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENTRYPOINT [\"/bin/sh\" \"-c\" \"/entrypoint.sh\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b555fae76b9ffb2f6c1d708472f16ffb40f8a29b38e8c8bf5b73fb56985632d1",
                "Volumes": {
                    "/var/log/nginx/": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/bin/sh",
                    "-c",
                    "/entrypoint.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-07-04T13:35:06.960250466Z",
            "docker_version": "18.03.1-ee-1-tp5",
            "history": [
                {
                    "created": "2018-06-05T21:21:52.734509731Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d37ff24540ea7700d0fc053e1996b234428a88f3a324d7fcbd83d8ef95318040 in / "
                },
                {
                    "created": "2018-06-05T21:21:53.543957497Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-06-05T21:21:54.199485999Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-05T21:21:54.883506595Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-06-05T21:21:55.559734528Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-06-05T21:21:55.789179453Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-04T13:33:28.541222243Z",
                    "created_by": "/bin/sh -c apt-get update &&     apt-get -y -q install         nginx         logrotate         supervisor         openssl         curl         &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-04T13:35:03.690723785Z",
                    "created_by": "/bin/sh -c curl -o /usr/local/bin/certbot-auto https://dl.eff.org/certbot-auto &&     chmod +x /usr/local/bin/certbot-auto &&     yes y | /usr/local/bin/certbot-auto --os-packages-only &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-04T13:35:04.501451651Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:57624f2fe7a0310214c5655cc4ce13d085e4e220c5b7e757d11caf61c83bcc94 in /etc/logrotate.d/nginx "
                },
                {
                    "created": "2018-07-04T13:35:04.89883597Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2f83fcfc4b887f3fab1b3b1dabe4c45b04acfb10b0d993c4cdc0f2862a32766 in /etc/supervisor/conf.d/nginx.conf "
                },
                {
                    "created": "2018-07-04T13:35:05.266784185Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:416985967dd7e1dc3324731642bee904d9052069c09967cf993362ceec51cead in /etc/supervisor/conf.d/cron.conf "
                },
                {
                    "created": "2018-07-04T13:35:05.701242758Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f0e3f20c689383be9dcc21aca7295f3f0de66853e3c5c205ecb1d9cee61d8879 in /etc/nginx/ssl.default.conf "
                },
                {
                    "created": "2018-07-04T13:35:06.08990408Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:31c27078c534143e97ad5858c217ebceafd787ec89a010d1162c2fd61614065d in /entrypoint.sh "
                },
                {
                    "created": "2018-07-04T13:35:06.360612779Z",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 80",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-04T13:35:06.673197746Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/log/nginx/]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-04T13:35:06.960250466Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/bin/sh\" \"-c\" \"/entrypoint.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644879075e24394efef8a7dddefbc133aad42002df6223cacf98bd1e3d5ddde2",
                    "sha256:d7ff1dc646ba52a02312b535446d6c9b72cd09fda0480524e4828554efb2f748",
                    "sha256:686245e78935e73b737c9a82111c3c7df35f5529d06ce8c2f9a7cd32ec90b456",
                    "sha256:d73dd9e652956dccbbef716de4b172cc15fff644cc92fc69d221cc3a1cb89a39",
                    "sha256:2de391e51d731ba02b708038a7f98b7103061b916727bcd165e9ee6402f4cdde",
                    "sha256:7f3ab6eb36f2f5338ea00fe3c7015daae83c0f36cd9852f971bef4887b9af535",
                    "sha256:7f459932c91039104e310c01f5aa4cef7a9a92b3fdb890141ad3535b109566bd",
                    "sha256:9b1ce37cffe49e3fe4aa14deda679cc854117d5c6b98bfe27484b2765a7341ba",
                    "sha256:f30d3138a0efa1887bb353248934f5db0d335c46a8eca6b061a9909b0787ac66",
                    "sha256:f36fc45d801b25174ee479a8d3713650b17a0069a3a42dc64a023b895e36fb7c",
                    "sha256:029a9f01d8f0108ba597ba288eff09bac20444003fc744158af41f2a27c26dd4",
                    "sha256:4dc3b2b959ea024ea01c63bebd510d8c05bd908f1028a79617747a9266f99f5c"
                ]
            }
        }
    }
}