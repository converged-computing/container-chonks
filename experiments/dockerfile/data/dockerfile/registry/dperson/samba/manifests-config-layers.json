{
    "manifests": {
        "aarch64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7544,
                "digest": "sha256:80540d473f2b3af80e749fdf8b1f97979e794a0013d165b3d2dcc9ed2d0c5102"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2709626,
                    "digest": "sha256:58ab47519297212468320b23b8100fc1b2b96e8d342040806ae509a778a0a07a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570997,
                    "digest": "sha256:9b6870d79f94268cec2f8cf9b30f2fab530262f206e1f19a8c27eb05f3c20454"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15439223,
                    "digest": "sha256:6fa56e76e6cc704031f5a63567e2310b585e1c6782eef6108977c648b17dd40f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3688,
                    "digest": "sha256:386b802bf3045801786f9a35b55d89f8785814585d703f8d2b20f9088cb7306e"
                }
            ]
        },
        "amd64": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7303,
                "digest": "sha256:aac8a52c5b16558f44d5fa6595a30d6c86d102fedec4f86629c6253cc41f0404"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2797541,
                    "digest": "sha256:df20fa9351a15782c64e6dddb2d4a6f50bf6d3688060a34c4014b0d9a752eb4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17193597,
                    "digest": "sha256:cdd17995a233dfe566ef79bca205a1eea056a30b71cf5172d34bd7bc83957ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3687,
                    "digest": "sha256:02fdab01eee54c69544bb31691a52a7b2c0735b31cb08249e6fe6533d6e68979"
                }
            ]
        },
        "armhf": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6038,
                "digest": "sha256:86fd73de81cf6974a24bac6fe030033fcca1c326550c48eef646c416a57a51eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2624382,
                    "digest": "sha256:b4c9a0924271af3466de27804af26420eb58da1466e7eaaba127d178b380fea3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2384592,
                    "digest": "sha256:c83890e9808a9a31cfa4df384c2bea6f26b0876d0566b547dfcc244269d144d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16024644,
                    "digest": "sha256:5386fd68ffb0e254c3d1df203626c9119254cb6916e08c124f59a5ca8106e289"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3688,
                    "digest": "sha256:c0dfe8aba948ab60c457800344c120ca1b25fd8194ee9e9efe5a7ea71a32ede0"
                }
            ]
        },
        "armv7hf": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10992,
                "digest": "sha256:611acc53828115683ea1953b0d7062857e0f0d89654fe77fceadf67a3d0baf76"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19277135,
                    "digest": "sha256:59e81a3fde58ec8d4b8f2f58b98ef2f4d951d37dd9b99b016fd294a8e07d7796"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1226004,
                    "digest": "sha256:5dd92c42d525c10f89c62c399b69aca4ed5b7e480cc16c620bd10668ff8c2169"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 465259,
                    "digest": "sha256:000f295535d5bc5daf2b87bd264e3819edd39251a2678ac473579b4904e5d293"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 174,
                    "digest": "sha256:ca8be640e5e1788125e5b2f9cf0e814dbff361d416d7a08d4f622a07adaacc9e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12553023,
                    "digest": "sha256:f95e2c3c69923280a702f46344d786d546d88c0fed3c23df67bbca3ff870feb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7116,
                    "digest": "sha256:8ff045dfbf696ee0383255b4018500228f88b3c4ec95260e47664b99ce31c683"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300,
                    "digest": "sha256:36a25bd2026a73bd8644371454d3c705f250ba4784a96252e67c90d500ca472e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 296,
                    "digest": "sha256:a098d28d756b03216373d5200426aeba9ea203ab43ee07a1304f317cdbaf0998"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 147,
                    "digest": "sha256:810b1196c3f32bea81f350eac8efa0ef54e4a8fac1446f72bfd00a32f73dbd46"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6957356,
                    "digest": "sha256:ff09355975efdc6ae2b6d05b0a737e2e25d201b054d870c80bf24c01e6a945c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1149,
                    "digest": "sha256:4aac038a1c28aa19a0cf248f6ad9b6c3a1c0492a6c7c627b2434a9e495161e3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1438,
                    "digest": "sha256:b533dc64811b168a6698899d16a249396cb22e86c715b6d78a8336837345d6cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 336,
                    "digest": "sha256:018724bdd3d615cc60282baa60fb47756ca91e565e1a5fe3b3be243c8e27c0a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215,
                    "digest": "sha256:e62f8e53d80b7d1ed7162de15cef1ac1e42f46d18fd93b3686983c93bd6e8e83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473501,
                    "digest": "sha256:50afdbf85b9b7ce8fce97cd2f211e63ab7d7064fd80adc08234ab6aa547272ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30958555,
                    "digest": "sha256:2faa78ce7588dc29596d64941684f460e62b1b2697a84ff27ccb0a58ee8d78e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 128,
                    "digest": "sha256:55080bbef7164a6831cc9f11a6c210ca9dcf3df8495bbb623f93abde08df6934"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3344,
                    "digest": "sha256:c994ddeb0cf55ef4f861ca1d4b9cd2874c48772ea15c6a3eba005db241c9f5c7"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 948,
                    "digest": "sha256:e1d2a7366690749a7be06f72bdbf6a5a7d15726fc84e4e4f41e967214516edfd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1159,
                    "digest": "sha256:4cb487986c024c4b42c7900b03ee5cc051d66ba57ec687c9f393e64a54cac3e3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux",
                        "variant": "v8"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1159,
                    "digest": "sha256:9295923d089cb29c56786c1092c295442f6ca88e3362deb7600a6774cb63434b",
                    "platform": {
                        "architecture": "arm",
                        "os": "linux",
                        "variant": "v6"
                    }
                }
            ]
        },
        "rpi": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10215,
                "digest": "sha256:74072e309f5ea955c2639908dbb0db293d686c09312b65fb1dacb5dc17cfca73"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52359860,
                    "digest": "sha256:2d87fc42e13907dc249b26268284fad451671812bff1b96b62e9d087fcf7c3ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 298,
                    "digest": "sha256:2b976004d02197db1525b5917954b11bceff4f451f1a41e7d9057cabaa3ab711"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 258,
                    "digest": "sha256:9d631d8509d77a3e4f2f9ebef0d66eeee433f0291700bddbf56077709f999aa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228,
                    "digest": "sha256:e622a3dee0ff84c8ca073fe77f5cf43fae230fa03c8b7cefdfad16ba9c98a2ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1399,
                    "digest": "sha256:e92bbfac80c1b45387eca06b73ee1068b1e1cadb6ee189d3c7bc00ee36787381"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 336,
                    "digest": "sha256:26ff709383a95f6127f09461fd48b23ad7fd6f11156d19bc886ae243b69afa1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 173,
                    "digest": "sha256:15b26cf297d2dc50b336839f28e5c63660ef59db664747107513cb0d3f26bd54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7481,
                    "digest": "sha256:aa660bf14d9e9d64f0778e124a5dad44857c436c87a81d57061c5101c5c4ee3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 373,
                    "digest": "sha256:20a63276933aecf9b61cac1e6315f15d893b817fa4f834eefdab746c9916febc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215,
                    "digest": "sha256:0e4bf6fb983e254619dcbb7baa73f198c1ab976f8be49b15c4ff6f1c5d310e87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 473498,
                    "digest": "sha256:5e7ac84dbbb30b244d0282f1eefced03555758975a29c0f53fc0b6034f0a61a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32021995,
                    "digest": "sha256:92b0959577a17e1e5d5f961a67ff7d80bf1d294b139c849c3112e49b52f2927f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:82c37fbf599a51c2346c20293f4391f9d3cef303e0ac7aa4bfca42538758bd79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3343,
                    "digest": "sha256:c1742dbe3ff3be62dccfd0f034d6f45e04bb1cdf3a8f8cc9724295f98b2eb098"
                }
            ]
        }
    },
    "tags": [
        "aarch64",
        "amd64",
        "armhf",
        "armv7hf",
        "latest",
        "rpi"
    ],
    "configs": {
        "aarch64": {
            "architecture": "arm64",
            "author": "David Personette <dperson@gmail.com>",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": null,
                "Healthcheck": {
                    "Test": [
                        "CMD-SHELL",
                        "smbclient -L \\\\localhost -U % -m SMB3"
                    ],
                    "Interval": 60000000000,
                    "Timeout": 15000000000
                },
                "Image": "sha256:336afa7dcd5c04abef8760b670209d77e533baf6de8b6ed2f1d0bbee4ec0c323",
                "Volumes": {
                    "/etc": {},
                    "/run/samba": {},
                    "/var/cache/samba": {},
                    "/var/lib/samba": {},
                    "/var/log/samba": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/sbin/tini",
                    "--",
                    "/usr/bin/samba.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "50eb51cc2f4ecbc9436482406c23ca2c49da5f54c96b6506c1e1b06715ea18e0",
            "container_config": {
                "Hostname": "50eb51cc2f4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENTRYPOINT [\"/sbin/tini\" \"--\" \"/usr/bin/samba.sh\"]"
                ],
                "Healthcheck": {
                    "Test": [
                        "CMD-SHELL",
                        "smbclient -L \\\\localhost -U % -m SMB3"
                    ],
                    "Interval": 60000000000,
                    "Timeout": 15000000000
                },
                "Image": "sha256:336afa7dcd5c04abef8760b670209d77e533baf6de8b6ed2f1d0bbee4ec0c323",
                "Volumes": {
                    "/etc": {},
                    "/run/samba": {},
                    "/var/cache/samba": {},
                    "/var/lib/samba": {},
                    "/var/log/samba": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/sbin/tini",
                    "--",
                    "/usr/bin/samba.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-15T21:48:58.902506948Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2021-06-15T21:44:56.685862991Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6797caacbfe41bfe44000b39ed017016c6fcc492b3d6557cdaba88536df6c876 in / "
                },
                {
                    "created": "2021-06-15T21:44:56.891078327Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T21:48:45.060138723Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:6fb5d6c99c0377603be5afd3fbcd6f49d4c2fa1ca608366e0dc4597c5aee25c5 in /usr/bin/ "
                },
                {
                    "created": "2021-06-15T21:48:45.317909964Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Personette <dperson@gmail.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T21:48:57.282450242Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c apk --no-cache --no-progress upgrade &&     apk --no-cache --no-progress add bash samba shadow tini tzdata &&     addgroup -S smb &&     adduser -S -D -H -h /tmp -s /sbin/nologin -G smb -g 'Samba User' smbuser &&    file=\"/etc/samba/smb.conf\" &&     sed -i 's|^;* *\\(log file = \\).*|   \\1/dev/stdout|' $file &&     sed -i 's|^;* *\\(load printers = \\).*|   \\1no|' $file &&     sed -i 's|^;* *\\(printcap name = \\).*|   \\1/dev/null|' $file &&     sed -i 's|^;* *\\(printing = \\).*|   \\1bsd|' $file &&     sed -i 's|^;* *\\(unix password sync = \\).*|   \\1no|' $file &&     sed -i 's|^;* *\\(preserve case = \\).*|   \\1yes|' $file &&     sed -i 's|^;* *\\(short preserve case = \\).*|   \\1yes|' $file &&     sed -i 's|^;* *\\(default case = \\).*|   \\1lower|' $file &&     sed -i '/Share Definitions/,$d' $file &&     echo '   pam password change = yes' >>$file &&     echo '   map to guest = bad user' >>$file &&     echo '   usershare allow guests = yes' >>$file &&     echo '   create mask = 0664' >>$file &&     echo '   force create mode = 0664' >>$file &&     echo '   directory mask = 0775' >>$file &&     echo '   force directory mode = 0775' >>$file &&     echo '   force user = smbuser' >>$file &&     echo '   force group = smb' >>$file &&     echo '   follow symlinks = yes' >>$file &&     echo '   load printers = no' >>$file &&     echo '   printing = bsd' >>$file &&     echo '   printcap name = /dev/null' >>$file &&     echo '   disable spoolss = yes' >>$file &&     echo '   strict locking = no' >>$file &&     echo '   aio read size = 0' >>$file &&     echo '   aio write size = 0' >>$file &&     echo '   vfs objects = catia fruit recycle streams_xattr' >>$file &&     echo '   recycle:keeptree = yes' >>$file &&     echo '   recycle:maxsize = 0' >>$file &&     echo '   recycle:repository = .deleted' >>$file &&     echo '   recycle:versions = yes' >>$file &&     echo '' >>$file &&     echo '   # Security' >>$file &&     echo '   client ipc max protocol = SMB3' >>$file &&     echo '   client ipc min protocol = SMB2_10' >>$file &&     echo '   client max protocol = SMB3' >>$file &&     echo '   client min protocol = SMB2_10' >>$file &&     echo '   server max protocol = SMB3' >>$file &&     echo '   server min protocol = SMB2_10' >>$file &&     echo '' >>$file &&     echo '   # Time Machine' >>$file &&     echo '   fruit:delete_empty_adfiles = yes' >>$file &&     echo '   fruit:time machine = yes' >>$file &&     echo '   fruit:veto_appledouble = no' >>$file &&     echo '   fruit:wipe_intentionally_left_blank_rfork = yes' >>$file &&     echo '' >>$file &&     rm -rf /tmp/*"
                },
                {
                    "created": "2021-06-15T21:48:57.662011963Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:0753c1de004fff05ef0ea8d2deae88ffe5751fe681f0e8975d5de0136bc61cde in /usr/bin/ "
                },
                {
                    "created": "2021-06-15T21:48:57.926707593Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 137/udp 138/udp 139 445",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T21:48:58.186136037Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  HEALTHCHECK &{[\"CMD-SHELL\" \"smbclient -L \\\\\\\\localhost -U % -m SMB3\"] \"1m0s\" \"15s\" \"0s\" '\\x00'}",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T21:48:58.509423635Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc /var/cache/samba /var/lib/samba /var/log/samba /run/samba]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-15T21:48:58.902506948Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/sbin/tini\" \"--\" \"/usr/bin/samba.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5e04d10b60a48b2fef3614c8b2bf64312b03380ac01bcec220e16885fe660be5",
                    "sha256:1ea9c88e0489b8d84355932b8e882c9b0b4d1d415a8a601f4d827faa4194e783",
                    "sha256:e35d94b33342f16651bce9f27eecab470a1c453674018053e7acc465fb95d485",
                    "sha256:f4091790ad0cd1f6a5ae7a3e41e8524c6f03f8ccdb4715ecb2ec02518061586a"
                ]
            }
        },
        "amd64": {
            "architecture": "amd64",
            "author": "David Personette <dperson@gmail.com>",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": null,
                "Healthcheck": {
                    "Test": [
                        "CMD-SHELL",
                        "smbclient -L \\\\localhost -U % -m SMB3"
                    ],
                    "Interval": 60000000000,
                    "Timeout": 15000000000
                },
                "Image": "sha256:0ecfc4635604330642003923e892bad58773782ade3c5a271d1317b08ac76f5c",
                "Volumes": {
                    "/etc": {},
                    "/run/samba": {},
                    "/var/cache/samba": {},
                    "/var/lib/samba": {},
                    "/var/log/samba": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/sbin/tini",
                    "--",
                    "/usr/bin/samba.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "e30c43628bee6b4b1daafbc154b59ca2879e967e6a39baf21f1e52d1406a5951",
            "container_config": {
                "Hostname": "e30c43628bee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENTRYPOINT [\"/sbin/tini\" \"--\" \"/usr/bin/samba.sh\"]"
                ],
                "Healthcheck": {
                    "Test": [
                        "CMD-SHELL",
                        "smbclient -L \\\\localhost -U % -m SMB3"
                    ],
                    "Interval": 60000000000,
                    "Timeout": 15000000000
                },
                "Image": "sha256:0ecfc4635604330642003923e892bad58773782ade3c5a271d1317b08ac76f5c",
                "Volumes": {
                    "/etc": {},
                    "/run/samba": {},
                    "/var/cache/samba": {},
                    "/var/lib/samba": {},
                    "/var/log/samba": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/sbin/tini",
                    "--",
                    "/usr/bin/samba.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-03T22:25:13.576851395Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2020-05-29T21:19:46.192045972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c92c248239f8c7b9b3c067650954815f391b7bcb09023f984972c082ace2a8d0 in / "
                },
                {
                    "created": "2020-05-29T21:19:46.363518345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:07.855599856Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Personette <dperson@gmail.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:12.014505653Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c apk --no-cache --no-progress upgrade &&     apk --no-cache --no-progress add bash samba shadow tini tzdata &&     addgroup -S smb &&     adduser -S -D -H -h /tmp -s /sbin/nologin -G smb -g 'Samba User' smbuser &&    file=\"/etc/samba/smb.conf\" &&     sed -i 's|^;* *\\(log file = \\).*|   \\1/dev/stdout|' $file &&     sed -i 's|^;* *\\(load printers = \\).*|   \\1no|' $file &&     sed -i 's|^;* *\\(printcap name = \\).*|   \\1/dev/null|' $file &&     sed -i 's|^;* *\\(printing = \\).*|   \\1bsd|' $file &&     sed -i 's|^;* *\\(unix password sync = \\).*|   \\1no|' $file &&     sed -i 's|^;* *\\(preserve case = \\).*|   \\1yes|' $file &&     sed -i 's|^;* *\\(short preserve case = \\).*|   \\1yes|' $file &&     sed -i 's|^;* *\\(default case = \\).*|   \\1lower|' $file &&     sed -i '/Share Definitions/,$d' $file &&     echo '   pam password change = yes' >>$file &&     echo '   map to guest = bad user' >>$file &&     echo '   usershare allow guests = yes' >>$file &&     echo '   create mask = 0664' >>$file &&     echo '   force create mode = 0664' >>$file &&     echo '   directory mask = 0775' >>$file &&     echo '   force directory mode = 0775' >>$file &&     echo '   force user = smbuser' >>$file &&     echo '   force group = smb' >>$file &&     echo '   follow symlinks = yes' >>$file &&     echo '   load printers = no' >>$file &&     echo '   printing = bsd' >>$file &&     echo '   printcap name = /dev/null' >>$file &&     echo '   disable spoolss = yes' >>$file &&     echo '   strict locking = no' >>$file &&     echo '   aio read size = 0' >>$file &&     echo '   aio write size = 0' >>$file &&     echo '   vfs objects = catia fruit recycle streams_xattr' >>$file &&     echo '   recycle:keeptree = yes' >>$file &&     echo '   recycle:maxsize = 0' >>$file &&     echo '   recycle:repository = .deleted' >>$file &&     echo '   recycle:versions = yes' >>$file &&     echo '' >>$file &&     echo '   # Security' >>$file &&     echo '   client ipc max protocol = SMB3' >>$file &&     echo '   client ipc min protocol = SMB2_10' >>$file &&     echo '   client max protocol = SMB3' >>$file &&     echo '   client min protocol = SMB2_10' >>$file &&     echo '   server max protocol = SMB3' >>$file &&     echo '   server min protocol = SMB2_10' >>$file &&     echo '' >>$file &&     echo '   # Time Machine' >>$file &&     echo '   fruit:delete_empty_adfiles = yes' >>$file &&     echo '   fruit:time machine = yes' >>$file &&     echo '   fruit:veto_appledouble = no' >>$file &&     echo '   fruit:wipe_intentionally_left_blank_rfork = yes' >>$file &&     echo '' >>$file &&     rm -rf /tmp/*"
                },
                {
                    "created": "2020-07-03T22:25:12.364669044Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:0753c1de004fff05ef0ea8d2deae88ffe5751fe681f0e8975d5de0136bc61cde in /usr/bin/ "
                },
                {
                    "created": "2020-07-03T22:25:12.647179892Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 137/udp 138/udp 139 445",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:12.893347755Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  HEALTHCHECK &{[\"CMD-SHELL\" \"smbclient -L \\\\\\\\localhost -U % -m SMB3\"] \"1m0s\" \"15s\" \"0s\" '\\x00'}",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:13.221043497Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc /var/cache/samba /var/lib/samba /var/log/samba /run/samba]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:13.576851395Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/sbin/tini\" \"--\" \"/usr/bin/samba.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a",
                    "sha256:0111a0c3dabbb5c407a9c4ea3a830d373908f5188c52fd27570e83f7c868b4b8",
                    "sha256:1f4b576cb3d16cbf7c925c31dcbf34d88e2f2562bd871f0f2cd60bd76b295529"
                ]
            }
        },
        "armhf": {
            "architecture": "arm",
            "author": "David Personette <dperson@gmail.com>",
            "config": {
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Entrypoint": [
                    "/sbin/tini",
                    "--",
                    "/usr/bin/samba.sh"
                ],
                "Volumes": {
                    "/etc": {},
                    "/run/samba": {},
                    "/var/cache/samba": {},
                    "/var/lib/samba": {},
                    "/var/log/samba": {}
                },
                "Healthcheck": {
                    "Test": [
                        "CMD-SHELL",
                        "smbclient -L \\\\localhost -U % -m SMB3"
                    ],
                    "Interval": 60000000000,
                    "Timeout": 15000000000
                },
                "OnBuild": null
            },
            "created": "2021-07-30T17:53:54.526134361Z",
            "history": [
                {
                    "created": "2021-07-30T17:49:42.118606879Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c80bc2b093cbc0fc466582ef21cbed377de9fa874aedbf320079525ddacd1200 in / "
                },
                {
                    "created": "2021-07-30T17:49:42.597703509Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-30T17:53:42.893928694Z",
                    "created_by": "COPY qemu-arm-static /usr/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T17:53:54.416706827Z",
                    "created_by": "MAINTAINER David Personette <dperson@gmail.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-30T17:53:54.416706827Z",
                    "created_by": "RUN /bin/sh -c apk --no-cache --no-progress upgrade &&     apk --no-cache --no-progress add bash samba shadow tini tzdata &&     addgroup -S smb &&     adduser -S -D -H -h /tmp -s /sbin/nologin -G smb -g 'Samba User' smbuser &&    file=\"/etc/samba/smb.conf\" &&     sed -i 's|^;* *\\(log file = \\).*|   \\1/dev/stdout|' $file &&     sed -i 's|^;* *\\(load printers = \\).*|   \\1no|' $file &&     sed -i 's|^;* *\\(printcap name = \\).*|   \\1/dev/null|' $file &&     sed -i 's|^;* *\\(printing = \\).*|   \\1bsd|' $file &&     sed -i 's|^;* *\\(unix password sync = \\).*|   \\1no|' $file &&     sed -i 's|^;* *\\(preserve case = \\).*|   \\1yes|' $file &&     sed -i 's|^;* *\\(short preserve case = \\).*|   \\1yes|' $file &&     sed -i 's|^;* *\\(default case = \\).*|   \\1lower|' $file &&     sed -i '/Share Definitions/,$d' $file &&     echo '   pam password change = yes' >>$file &&     echo '   map to guest = bad user' >>$file &&     echo '   usershare allow guests = yes' >>$file &&     echo '   create mask = 0664' >>$file &&     echo '   force create mode = 0664' >>$file &&     echo '   directory mask = 0775' >>$file &&     echo '   force directory mode = 0775' >>$file &&     echo '   force user = smbuser' >>$file &&     echo '   force group = smb' >>$file &&     echo '   follow symlinks = yes' >>$file &&     echo '   load printers = no' >>$file &&     echo '   printing = bsd' >>$file &&     echo '   printcap name = /dev/null' >>$file &&     echo '   disable spoolss = yes' >>$file &&     echo '   strict locking = no' >>$file &&     echo '   aio read size = 0' >>$file &&     echo '   aio write size = 0' >>$file &&     echo '   vfs objects = catia fruit recycle streams_xattr' >>$file &&     echo '   recycle:keeptree = yes' >>$file &&     echo '   recycle:maxsize = 0' >>$file &&     echo '   recycle:repository = .deleted' >>$file &&     echo '   recycle:versions = yes' >>$file &&     echo '' >>$file &&     echo '   # Security' >>$file &&     echo '   client ipc max protocol = SMB3' >>$file &&     echo '   client ipc min protocol = SMB2_10' >>$file &&     echo '   client max protocol = SMB3' >>$file &&     echo '   client min protocol = SMB2_10' >>$file &&     echo '   server max protocol = SMB3' >>$file &&     echo '   server min protocol = SMB2_10' >>$file &&     echo '' >>$file &&     echo '   # Time Machine' >>$file &&     echo '   fruit:delete_empty_adfiles = yes' >>$file &&     echo '   fruit:time machine = yes' >>$file &&     echo '   fruit:veto_appledouble = no' >>$file &&     echo '   fruit:wipe_intentionally_left_blank_rfork = yes' >>$file &&     echo '' >>$file &&     rm -rf /tmp/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T17:53:54.526134361Z",
                    "created_by": "COPY samba.sh /usr/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-30T17:53:54.526134361Z",
                    "created_by": "EXPOSE map[137/udp:{} 138/udp:{} 139/tcp:{} 445/tcp:{}]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-30T17:53:54.526134361Z",
                    "created_by": "HEALTHCHECK &{[\"CMD-SHELL\" \"smbclient -L \\\\\\\\localhost -U % -m SMB3\"] \"1m0s\" \"15s\" \"0s\" '\\x00'}",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-30T17:53:54.526134361Z",
                    "created_by": "VOLUME [/etc /var/cache/samba /var/lib/samba /var/log/samba /run/samba]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-30T17:53:54.526134361Z",
                    "created_by": "ENTRYPOINT [\"/sbin/tini\" \"--\" \"/usr/bin/samba.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:400786ca5ed00f7550fbac5520211b5bf3bb8eaff18d274b9eae6fe6e4121f89",
                    "sha256:ace7909f1f1377fef85611a29e7efb83941f8355c68e50d343b422a5639c7b86",
                    "sha256:27a7cf7511803ebeddb3ef5d43385992339aa921c2ac83c495f50056513fff16",
                    "sha256:3c43712a6d251ba2dd5599e5aa9a7ba2b0dc442a06c6bf16da6f818d102e5efe"
                ]
            },
            "variant": "v7"
        },
        "armv7hf": {
            "architecture": "amd64",
            "author": "David Personette <dperson@gmail.com>",
            "config": {
                "Hostname": "6b33ba4c1b41",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "TINI_VERSION=0.14.0",
                    "container=docker"
                ],
                "Cmd": null,
                "ArgsEscaped": true,
                "Image": "sha256:89e1fcdd3cb615f9039d416a40122bfcbc0650cc5768d442d55c13a294985959",
                "Volumes": {
                    "/etc/samba": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "samba.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "io.resin.architecture": "armv7hf",
                    "io.resin.qemu.version": "2.9.0.resin1-arm"
                },
                "StopSignal": "37"
            },
            "container": "684c897455a9f046a4cc3c4bb7487734c43802f384c1062f4de91ab371758f1c",
            "container_config": {
                "Hostname": "6b33ba4c1b41",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "TINI_VERSION=0.14.0",
                    "container=docker"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENTRYPOINT [\"samba.sh\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89e1fcdd3cb615f9039d416a40122bfcbc0650cc5768d442d55c13a294985959",
                "Volumes": {
                    "/etc/samba": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "samba.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "io.resin.architecture": "armv7hf",
                    "io.resin.qemu.version": "2.9.0.resin1-arm"
                },
                "StopSignal": "37"
            },
            "created": "2017-10-17T20:22:26.076718584Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2017-10-09T21:45:43.798994767Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b758c6c3ff989778bd740dde35c86b953fa09be913a7e02711b2881de6b8911d in / "
                },
                {
                    "created": "2017-10-09T21:45:44.223100386Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-14T06:24:15.930689923Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.resin.architecture=armv7hf io.resin.qemu.version=2.9.0.resin1-arm",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-14T06:24:17.366652903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LC_ALL=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-14T06:24:20.819689845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-14T06:24:23.190733764Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:93465050062659ceb09b15f26fa20fe6b3c729f9db95a8f3d7f779f2ac385af3 in /usr/bin/ "
                },
                {
                    "created": "2017-10-14T06:24:26.516635411Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9ccb4b6ab28c69593f6d5c0cc4c7a9fb1e00fc28763ff5ba6395c78930e098c8 in /usr/bin/ "
                },
                {
                    "created": "2017-10-14T06:24:29.218785264Z",
                    "created_by": "/bin/sh -c ln -s resin-xbuild /usr/bin/cross-build-start \t&& ln -s resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2017-10-14T06:26:01.132421947Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tsudo \t\tca-certificates \t\tfindutils \t\tgnupg \t\tdirmngr \t\tinetutils-ping \t\tiproute \t\tnetbase \t\tcurl \t\tudev \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-10-14T06:26:03.038656294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV TINI_VERSION=0.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-14T06:26:06.82294191Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/tini/v$TINI_VERSION/tini0.14.0.linux-armv7hf.tar.gz\" \t&& echo \"cab86b2ad88ae6a3ef649293a5fecbc55bc31722cc8220f7b82bd6c960553e44  tini0.14.0.linux-armv7hf.tar.gz\" | sha256sum -c - \t&& tar -xzf \"tini0.14.0.linux-armv7hf.tar.gz\" \t&& rm \"tini0.14.0.linux-armv7hf.tar.gz\"     && chmod +x tini     && mv tini /sbin/tini"
                },
                {
                    "created": "2017-10-14T06:26:09.202973364Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:b9b5591c1353314db0a3878053b9cce9dbbdbaee98cb14482e69bd9ebd26d1cb in /etc/dpkg/dpkg.cfg.d/ "
                },
                {
                    "created": "2017-10-14T06:26:11.590807172Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ec15a2e3b775b3a445bd4a1936d7360c901e23793fcd92f722809e4e8d3f9b61 in /etc/apt/apt.conf.d/ "
                },
                {
                    "created": "2017-10-14T06:26:14.146934492Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/share/man/man1"
                },
                {
                    "created": "2017-10-14T06:27:03.445172859Z",
                    "created_by": "/bin/sh -c echo 'deb http://deb.debian.org/debian jessie-backports main' >> /etc/apt/sources.list.d/jessie-backports.list \t&& apt-get remove -y --allow-remove-essential systemd libsystemd0 udev libudev1 \t&& apt autoremove -y \t&& apt-get update \t&& apt-get -t jessie-backports install -y --no-install-recommends \t\tsystemd \t\tsystemd-sysv udev \t&& apt-mark hold systemd \t&& rm -rf /etc/apt/sources.list.d/jessie-backports.list \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-10-14T06:27:05.014726233Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-14T06:27:08.823681591Z",
                    "created_by": "/bin/sh -c find /etc/systemd/system \t\t/lib/systemd/system \t\t-path '*.wants/*' \t\t-not -name '*journald*' \t\t-not -name '*udevd*' \t\t-not -name '*systemd-tmpfiles*' \t\t-not -name '*systemd-user-sessions*' \t\t-exec rm \\{} \\;"
                },
                {
                    "created": "2017-10-14T06:27:11.2788027Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:98d8d80250f486f0fb9ebfc69ebcce875a6a758a1bfc8c75cb8dbab6a4971379 in /usr/bin/entry.sh "
                },
                {
                    "created": "2017-10-14T06:27:13.610784912Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:77528f97b3e6000d9b8c8c76ee4d0bab77501cd6477335c09f1ddf8dbde5630d in /etc/systemd/system/launch.service "
                },
                {
                    "created": "2017-10-14T06:27:16.398838483Z",
                    "created_by": "/bin/sh -c systemctl enable /etc/systemd/system/launch.service"
                },
                {
                    "created": "2017-10-14T06:27:17.854631302Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [37]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-14T06:27:19.406762168Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-17T20:18:29.221697432Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Personette <dperson@gmail.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-17T20:18:30.027890246Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "cross-build-start"
                },
                {
                    "created": "2017-10-17T20:22:24.035582614Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c export DEBIAN_FRONTEND='noninteractive' &&     apt-get update -qq &&     apt-get install -qqy --no-install-recommends procps samba samba-vfs-modules                $(apt-get -s dist-upgrade|awk '/^Inst.*ecurity/ {print $2}') &&    useradd -c 'Samba User' -d /tmp -M -r smbuser &&     sed -i 's|^\\(   log file = \\).*|\\1/dev/stdout|' /etc/samba/smb.conf &&     sed -i 's|^\\(   unix password sync = \\).*|\\1no|' /etc/samba/smb.conf &&     sed -i '/Share Definitions/,$d' /etc/samba/smb.conf &&     echo '   security = user' >>/etc/samba/smb.conf &&     echo '   create mask = 0664' >>/etc/samba/smb.conf &&     echo '   force create mode = 0664' >>/etc/samba/smb.conf &&     echo '   directory mask = 0775' >>/etc/samba/smb.conf &&     echo '   force directory mode = 0775' >>/etc/samba/smb.conf &&     echo '   force user = smbuser' >>/etc/samba/smb.conf &&     echo '   force group = users' >>/etc/samba/smb.conf &&     echo '   follow symlinks = yes' >>/etc/samba/smb.conf &&     echo '   load printers = no' >>/etc/samba/smb.conf &&     echo '   printing = bsd' >>/etc/samba/smb.conf &&     echo '   printcap name = /dev/null' >>/etc/samba/smb.conf &&     echo '   disable spoolss = yes' >>/etc/samba/smb.conf &&     echo '   socket options = TCP_NODELAY' >>/etc/samba/smb.conf &&     echo '   strict locking = no' >>/etc/samba/smb.conf &&     echo '   vfs objects = recycle' >>/etc/samba/smb.conf &&     echo '   recycle:keeptree = yes' >>/etc/samba/smb.conf &&     echo '   recycle:versions = yes' >>/etc/samba/smb.conf &&     echo '   min protocol = SMB2' >>/etc/samba/smb.conf &&     echo '' >>/etc/samba/smb.conf &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2017-10-17T20:22:25.122551302Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "cross-build-end"
                },
                {
                    "created": "2017-10-17T20:22:25.55568138Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:fe7ca3f779c287698682943fd60546151247419f7e799c63081c2f9e23697a26 in /usr/bin/ "
                },
                {
                    "created": "2017-10-17T20:22:25.727631771Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/samba]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-17T20:22:25.903373594Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 137/udp 138/udp 139/tcp 445/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-17T20:22:26.076718584Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"samba.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:56529802496b41844d9afa384ef6f761c983ea484e1c40652883e50e8b6cb9c6",
                    "sha256:e92773ff0ece82b3e1b74cd8ca7bfb6aa3ae8c02262dc673dbf7f4d934edae71",
                    "sha256:3e3a2eb373b6a5760b06344178a6a3407d6f6d3fe0bf6202717e7d6b9c3d76e7",
                    "sha256:db3b03cf9d6f85b2021ccbb26369448adb7f08e918a4d2e7d2cc5defb3e494de",
                    "sha256:936ab8b35ed3f564258fff7bcde29c850733bfd6e636b2fd1e4d15f0fb22b3ec",
                    "sha256:c58492b1e8c0ec1b608e795c27c727fd34c80c0bcab17ae7486990a984ec5b73",
                    "sha256:bc96265714ad9c91fd978e0ba37c189917867243cff6d3d50e30b464eb069e72",
                    "sha256:826f993d4b85997742940a44516b733c94696c3202043ce565870d285786a9d9",
                    "sha256:32541e66a1deef3735042228027b6d2916f8ec4c87e3df07cacca66cea498aca",
                    "sha256:a522f55524e3711b5cff384a04912b5a34485c366ae5838486f3bd214d483364",
                    "sha256:ab6b9b02b5713941b1790f8470eb1391e309ecc56c7cf4bcb7613b9bbd9d9a97",
                    "sha256:90f7c5f4fceee8f920da1311f494f95168c23731e0df7b495730129fed1dbb88",
                    "sha256:e4fb505fea35d09613b7219f54ed6cc352efa637064493102dbf47b3d0c3c533",
                    "sha256:eae4b4501cc5387943be5b2e6dc11915d7a7d21ed1e56d1aaad8b339208d6759",
                    "sha256:bf06755e23d7ca4229dc4ffdb4cf1ef4dead51d0adc7ae64c7004aa0c02770ec",
                    "sha256:b5bddd66d414169ee69b2277822dca18f9242235275f0e70e984fd1e7a7c299c",
                    "sha256:86e9ae4401890efcc32dfaafbbf0962341accca5c8b2b2fb67f269a4d907d855",
                    "sha256:24056b9f0e32f923d17dca3c2e7b9c570a85bb69fa4f003d25853f566384a364"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "author": "David Personette <dperson@gmail.com>",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": null,
                "Healthcheck": {
                    "Test": [
                        "CMD-SHELL",
                        "smbclient -L \\\\localhost -U % -m SMB3"
                    ],
                    "Interval": 60000000000,
                    "Timeout": 15000000000
                },
                "Image": "sha256:0ecfc4635604330642003923e892bad58773782ade3c5a271d1317b08ac76f5c",
                "Volumes": {
                    "/etc": {},
                    "/run/samba": {},
                    "/var/cache/samba": {},
                    "/var/lib/samba": {},
                    "/var/log/samba": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/sbin/tini",
                    "--",
                    "/usr/bin/samba.sh"
                ],
                "OnBuild": null,
                "Labels": null
            },
            "container": "e30c43628bee6b4b1daafbc154b59ca2879e967e6a39baf21f1e52d1406a5951",
            "container_config": {
                "Hostname": "e30c43628bee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENTRYPOINT [\"/sbin/tini\" \"--\" \"/usr/bin/samba.sh\"]"
                ],
                "Healthcheck": {
                    "Test": [
                        "CMD-SHELL",
                        "smbclient -L \\\\localhost -U % -m SMB3"
                    ],
                    "Interval": 60000000000,
                    "Timeout": 15000000000
                },
                "Image": "sha256:0ecfc4635604330642003923e892bad58773782ade3c5a271d1317b08ac76f5c",
                "Volumes": {
                    "/etc": {},
                    "/run/samba": {},
                    "/var/cache/samba": {},
                    "/var/lib/samba": {},
                    "/var/log/samba": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/sbin/tini",
                    "--",
                    "/usr/bin/samba.sh"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-03T22:25:13.576851395Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2020-05-29T21:19:46.192045972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c92c248239f8c7b9b3c067650954815f391b7bcb09023f984972c082ace2a8d0 in / "
                },
                {
                    "created": "2020-05-29T21:19:46.363518345Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:07.855599856Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Personette <dperson@gmail.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:12.014505653Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c apk --no-cache --no-progress upgrade &&     apk --no-cache --no-progress add bash samba shadow tini tzdata &&     addgroup -S smb &&     adduser -S -D -H -h /tmp -s /sbin/nologin -G smb -g 'Samba User' smbuser &&    file=\"/etc/samba/smb.conf\" &&     sed -i 's|^;* *\\(log file = \\).*|   \\1/dev/stdout|' $file &&     sed -i 's|^;* *\\(load printers = \\).*|   \\1no|' $file &&     sed -i 's|^;* *\\(printcap name = \\).*|   \\1/dev/null|' $file &&     sed -i 's|^;* *\\(printing = \\).*|   \\1bsd|' $file &&     sed -i 's|^;* *\\(unix password sync = \\).*|   \\1no|' $file &&     sed -i 's|^;* *\\(preserve case = \\).*|   \\1yes|' $file &&     sed -i 's|^;* *\\(short preserve case = \\).*|   \\1yes|' $file &&     sed -i 's|^;* *\\(default case = \\).*|   \\1lower|' $file &&     sed -i '/Share Definitions/,$d' $file &&     echo '   pam password change = yes' >>$file &&     echo '   map to guest = bad user' >>$file &&     echo '   usershare allow guests = yes' >>$file &&     echo '   create mask = 0664' >>$file &&     echo '   force create mode = 0664' >>$file &&     echo '   directory mask = 0775' >>$file &&     echo '   force directory mode = 0775' >>$file &&     echo '   force user = smbuser' >>$file &&     echo '   force group = smb' >>$file &&     echo '   follow symlinks = yes' >>$file &&     echo '   load printers = no' >>$file &&     echo '   printing = bsd' >>$file &&     echo '   printcap name = /dev/null' >>$file &&     echo '   disable spoolss = yes' >>$file &&     echo '   strict locking = no' >>$file &&     echo '   aio read size = 0' >>$file &&     echo '   aio write size = 0' >>$file &&     echo '   vfs objects = catia fruit recycle streams_xattr' >>$file &&     echo '   recycle:keeptree = yes' >>$file &&     echo '   recycle:maxsize = 0' >>$file &&     echo '   recycle:repository = .deleted' >>$file &&     echo '   recycle:versions = yes' >>$file &&     echo '' >>$file &&     echo '   # Security' >>$file &&     echo '   client ipc max protocol = SMB3' >>$file &&     echo '   client ipc min protocol = SMB2_10' >>$file &&     echo '   client max protocol = SMB3' >>$file &&     echo '   client min protocol = SMB2_10' >>$file &&     echo '   server max protocol = SMB3' >>$file &&     echo '   server min protocol = SMB2_10' >>$file &&     echo '' >>$file &&     echo '   # Time Machine' >>$file &&     echo '   fruit:delete_empty_adfiles = yes' >>$file &&     echo '   fruit:time machine = yes' >>$file &&     echo '   fruit:veto_appledouble = no' >>$file &&     echo '   fruit:wipe_intentionally_left_blank_rfork = yes' >>$file &&     echo '' >>$file &&     rm -rf /tmp/*"
                },
                {
                    "created": "2020-07-03T22:25:12.364669044Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:0753c1de004fff05ef0ea8d2deae88ffe5751fe681f0e8975d5de0136bc61cde in /usr/bin/ "
                },
                {
                    "created": "2020-07-03T22:25:12.647179892Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 137/udp 138/udp 139 445",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:12.893347755Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  HEALTHCHECK &{[\"CMD-SHELL\" \"smbclient -L \\\\\\\\localhost -U % -m SMB3\"] \"1m0s\" \"15s\" \"0s\" '\\x00'}",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:13.221043497Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc /var/cache/samba /var/lib/samba /var/log/samba /run/samba]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-03T22:25:13.576851395Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/sbin/tini\" \"--\" \"/usr/bin/samba.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50644c29ef5a27c9a40c393a73ece2479de78325cae7d762ef3cdc19bf42dd0a",
                    "sha256:0111a0c3dabbb5c407a9c4ea3a830d373908f5188c52fd27570e83f7c868b4b8",
                    "sha256:1f4b576cb3d16cbf7c925c31dcbf34d88e2f2562bd871f0f2cd60bd76b295529"
                ]
            }
        },
        "rpi": {
            "architecture": "amd64",
            "author": "David Personette <dperson@gmail.com>",
            "config": {
                "Hostname": "77fe927ce20b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "TINI_VERSION=0.14.0",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "QEMU_CPU=arm1176",
                    "container=docker"
                ],
                "Cmd": null,
                "ArgsEscaped": true,
                "Image": "sha256:243d046ebe2a7e84f11c4a79cb69b33ba561ebbdc296431c069e467935726030",
                "Volumes": {
                    "/etc/samba": {},
                    "/sys/fs/cgroup": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "samba.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "io.resin.architecture": "rpi",
                    "io.resin.device-type": "raspberrypi",
                    "io.resin.qemu.version": ""
                },
                "StopSignal": "37"
            },
            "container": "455297366f1d7f284a8f220253e3ce17ef71f431055b187f359251a003395020",
            "container_config": {
                "Hostname": "77fe927ce20b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "ExposedPorts": {
                    "137/udp": {},
                    "138/udp": {},
                    "139/tcp": {},
                    "445/tcp": {}
                },
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "TINI_VERSION=0.14.0",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "QEMU_CPU=arm1176",
                    "container=docker"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ENTRYPOINT [\"samba.sh\"]"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:243d046ebe2a7e84f11c4a79cb69b33ba561ebbdc296431c069e467935726030",
                "Volumes": {
                    "/etc/samba": {},
                    "/sys/fs/cgroup": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "samba.sh"
                ],
                "OnBuild": [],
                "Labels": {
                    "io.resin.architecture": "rpi",
                    "io.resin.device-type": "raspberrypi",
                    "io.resin.qemu.version": ""
                },
                "StopSignal": "37"
            },
            "created": "2017-10-17T20:08:44.729703942Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2017-10-11T08:26:47.024265357Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c9226c566068c5a99e078b4c9a03f7d196d5768bd707138866438f56b18d1c75 in / "
                },
                {
                    "created": "2017-10-11T08:26:53.321500763Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:7e96bef641cb464ab5ecebb3e587e9602e44343ea6ef5053120a1bc89b195904 in /etc/dpkg/dpkg.cfg.d/ "
                },
                {
                    "created": "2017-10-11T08:26:59.158087087Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:d4c6d2dc420bd63f62781343c5a5278d920759fa76336e2831b4ac41e93b877d in /etc/apt/apt.conf.d/ "
                },
                {
                    "created": "2017-10-11T08:27:04.679612688Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:b49688b1132ba51b06815114fff795462b9fa874bceef41d396479ba8fa64ac5 in /etc/apt/preferences.d/ "
                },
                {
                    "created": "2017-10-11T08:27:10.002519126Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:b7d962f689cb170752f273150ce71a8935cc6ea15874ca1cc4fe044012daa528 in /usr/bin/entry.sh "
                },
                {
                    "created": "2017-10-11T08:27:14.238869373Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:99019e56c40f02f1e5f698d7b2edf270e9f20579880610b6abeec1939b4934ac in /etc/systemd/system/launch.service "
                },
                {
                    "created": "2017-10-11T08:27:22.850699539Z",
                    "created_by": "/bin/sh -c mkdir -p /usr/share/man/man1",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:27:30.684608297Z",
                    "created_by": "/bin/sh -c ln -s resin-xbuild /usr/bin/cross-build-start     && ln -s resin-xbuild /usr/bin/cross-build-end"
                },
                {
                    "created": "2017-10-11T08:27:35.017806788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV TINI_VERSION=0.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:27:43.117953873Z",
                    "created_by": "/bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/tini/v$TINI_VERSION/tini0.14.0.linux-armv6hf.tar.gz\"     && echo \"33a5089c4f222f0504110000e7d3fd0c3c29830a64a19bae4b34f31dcaf6fb31  tini0.14.0.linux-armv6hf.tar.gz\" | sha256sum -c -     && tar -xzf \"tini0.14.0.linux-armv6hf.tar.gz\"     && rm \"tini0.14.0.linux-armv6hf.tar.gz\"     && chmod +x tini     && mv tini /sbin/tini"
                },
                {
                    "created": "2017-10-11T08:27:46.827017004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LC_ALL=C.UTF-8",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:27:49.818939566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:27:53.903127227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:27:59.570626615Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL io.resin.architecture=rpi io.resin.qemu.version= io.resin.device-type=raspberrypi",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:28:03.853766435Z",
                    "created_by": "/bin/sh -c #(nop)  ENV QEMU_CPU=arm1176",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:28:16.814821628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:28:27.027187808Z",
                    "created_by": "/bin/sh -c systemctl mask     dev-hugepages.mount     sys-fs-fuse-connections.mount     sys-kernel-config.mount     display-manager.service     getty@.service     systemd-logind.service     systemd-remount-fs.service     getty.target     graphical.target"
                },
                {
                    "created": "2017-10-11T08:28:38.130991496Z",
                    "created_by": "/bin/sh -c systemctl enable /etc/systemd/system/launch.service"
                },
                {
                    "created": "2017-10-11T08:28:42.403214627Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL [37]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:28:48.322622084Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/sys/fs/cgroup]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:28:53.666843698Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-11T08:28:59.994611034Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-17T20:04:47.392840527Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER David Personette <dperson@gmail.com>",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-17T20:04:48.239454108Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "cross-build-start"
                },
                {
                    "created": "2017-10-17T20:08:42.763864933Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c export DEBIAN_FRONTEND='noninteractive' &&     apt-get update -qq &&     apt-get install -qqy --no-install-recommends procps samba samba-vfs-modules                $(apt-get -s dist-upgrade|awk '/^Inst.*ecurity/ {print $2}') &&    useradd -c 'Samba User' -d /tmp -M -r smbuser &&     sed -i 's|^\\(   log file = \\).*|\\1/dev/stdout|' /etc/samba/smb.conf &&     sed -i 's|^\\(   unix password sync = \\).*|\\1no|' /etc/samba/smb.conf &&     sed -i '/Share Definitions/,$d' /etc/samba/smb.conf &&     echo '   security = user' >>/etc/samba/smb.conf &&     echo '   create mask = 0664' >>/etc/samba/smb.conf &&     echo '   force create mode = 0664' >>/etc/samba/smb.conf &&     echo '   directory mask = 0775' >>/etc/samba/smb.conf &&     echo '   force directory mode = 0775' >>/etc/samba/smb.conf &&     echo '   force user = smbuser' >>/etc/samba/smb.conf &&     echo '   force group = users' >>/etc/samba/smb.conf &&     echo '   follow symlinks = yes' >>/etc/samba/smb.conf &&     echo '   load printers = no' >>/etc/samba/smb.conf &&     echo '   printing = bsd' >>/etc/samba/smb.conf &&     echo '   printcap name = /dev/null' >>/etc/samba/smb.conf &&     echo '   disable spoolss = yes' >>/etc/samba/smb.conf &&     echo '   socket options = TCP_NODELAY' >>/etc/samba/smb.conf &&     echo '   strict locking = no' >>/etc/samba/smb.conf &&     echo '   vfs objects = recycle' >>/etc/samba/smb.conf &&     echo '   recycle:keeptree = yes' >>/etc/samba/smb.conf &&     echo '   recycle:versions = yes' >>/etc/samba/smb.conf &&     echo '   min protocol = SMB2' >>/etc/samba/smb.conf &&     echo '' >>/etc/samba/smb.conf &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/*"
                },
                {
                    "created": "2017-10-17T20:08:43.781773035Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "cross-build-end"
                },
                {
                    "created": "2017-10-17T20:08:44.25820795Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop) COPY file:fe7ca3f779c287698682943fd60546151247419f7e799c63081c2f9e23697a26 in /usr/bin/ "
                },
                {
                    "created": "2017-10-17T20:08:44.412231427Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/etc/samba]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-17T20:08:44.572103904Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  EXPOSE 137/udp 138/udp 139/tcp 445/tcp",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-17T20:08:44.729703942Z",
                    "author": "David Personette <dperson@gmail.com>",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"samba.sh\"]",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d047d16e5b74e25b25ecf69caae40b4b4ee4fca31b762ac505af7f399829271f",
                    "sha256:44ea439d3f7acd4bc9aa9e39e6db6ec0fcebb9be52035a0c900fa21a8f3b3205",
                    "sha256:aee7f97bbe7824fb9addddb8eb6c9f13d4c06ae9d40089056d12b29c04658079",
                    "sha256:3b14eb6eb5cbd31cf58244a5e78366d256b5b5d0eb11ead72cdaa136231f9e65",
                    "sha256:65d59e65c7374fca7eaba44cd9cdd67c003fc5625093ba9f87a4e78f3de33645",
                    "sha256:2c49a0e1a9517e8dedb481a7b95acf18f677e6926634288f348b0da0377bb0c2",
                    "sha256:bb3fed890b27c8a8f2ad709ac45cbe28215ed4178928691dbc1164aede6b97c8",
                    "sha256:9eb3c76677b4ea94cde19c8fff4c2dfb578bd9b3d0d93f41b14d1de1aa1d7977",
                    "sha256:acb55cfa5e261c1749ff6b81f89946907b9aa2253367ab40841a8ed0918d33ea",
                    "sha256:b41620dd1f48d9d1f35d6e6f23bfba35e7c924d9e040b28176f8a8b27b082e02",
                    "sha256:2e8e857c5a37d43f6a93a8a06ecbd1a46bda060832ab974b0437ed77c913ff0c",
                    "sha256:0aa4e5e7e7fce1f581f29bf41af89f786fb8206e2772f1866e5f853862ecab7d",
                    "sha256:42f456e54f757664a6718f548f4a25003b9ffa506e1685702882a941fdc2ec57",
                    "sha256:71cd17162892ab57e2c8f7e0934ab968368feef73f98fe6c06a655cbaba99930"
                ]
            }
        }
    }
}